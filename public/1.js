(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js ***!
  \************************************************************************************/
/*! exports provided: AxisFillCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AxisFillCircular\", function() { return AxisFillCircular; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _AxisFill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisFill */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Provides fill element functionality for circular Axes.\r\n *\r\n * @see {@link IAxisFillCircularEvents} for a list of available events\r\n * @see {@link IAxisFillCircularAdapters} for a list of available Adapters\r\n * @todo Needs description\r\n */\r\nvar AxisFillCircular = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(AxisFillCircular, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Axis\r\n     */\r\n    function AxisFillCircular(axis) {\r\n        var _this = _super.call(this, axis) || this;\r\n        _this.className = \"AxisFillCircular\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the fill element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisFillCircular.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.__disabled || this.disabled) {\r\n            return;\r\n        }\r\n        if (this.axis) {\r\n            var renderer = this.axis.renderer;\r\n            this.fillPath = renderer.getPositionRangePath(this.startPosition, this.endPosition, this.radius, _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"hasValue\"](this.innerRadius) ? this.innerRadius : renderer.innerRadius, this.cornerRadius);\r\n            this.path = this.fillPath;\r\n        }\r\n    };\r\n    Object.defineProperty(AxisFillCircular.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n         *\r\n         * @param value  Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisFillCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisFillCircular.prototype, \"cornerRadius\", {\r\n        /**\r\n         * @return Corner radius (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadius\");\r\n        },\r\n        /**\r\n         * Corner radius for the fill. In pixels.\r\n         *\r\n         * @param value  Corner radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cornerRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisFillCircular;\r\n}(_AxisFill__WEBPACK_IMPORTED_MODULE_1__[\"AxisFill\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"AxisFillCircular\"] = AxisFillCircular;\r\n//# sourceMappingURL=AxisFillCircular.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc0ZpbGxDaXJjdWxhci5qcz9kMDE0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzQztBQUNhO0FBQ0o7QUFDQTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDhCQUE4QjtBQUN2QyxTQUFTLGdDQUFnQztBQUN6QztBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1FQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZHQUE2Ryx5REFBYztBQUMzSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMsQ0FBQyxrREFBUTtBQUNrQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9heGVzL0F4aXNGaWxsQ2lyY3VsYXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEF4aXNGaWxsIH0gZnJvbSBcIi4vQXhpc0ZpbGxcIjtcclxuaW1wb3J0IHsgcGVyY2VudCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1BlcmNlbnRcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogUHJvdmlkZXMgZmlsbCBlbGVtZW50IGZ1bmN0aW9uYWxpdHkgZm9yIGNpcmN1bGFyIEF4ZXMuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElBeGlzRmlsbENpcmN1bGFyRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSUF4aXNGaWxsQ2lyY3VsYXJBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gTmVlZHMgZGVzY3JpcHRpb25cclxuICovXHJcbnZhciBBeGlzRmlsbENpcmN1bGFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEF4aXNGaWxsQ2lyY3VsYXIsIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBheGlzIEF4aXNcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQXhpc0ZpbGxDaXJjdWxhcihheGlzKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgYXhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkF4aXNGaWxsQ2lyY3VsYXJcIjtcclxuICAgICAgICBfdGhpcy5lbGVtZW50ID0gX3RoaXMucGFwZXIuYWRkKFwicGF0aFwiKTtcclxuICAgICAgICBfdGhpcy5yYWRpdXMgPSBwZXJjZW50KDEwMCk7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRHJhd3MgdGhlIGZpbGwgZWxlbWVudC5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIEF4aXNGaWxsQ2lyY3VsYXIucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kcmF3LmNhbGwodGhpcyk7XHJcbiAgICAgICAgaWYgKHRoaXMuX19kaXNhYmxlZCB8fCB0aGlzLmRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuYXhpcykge1xyXG4gICAgICAgICAgICB2YXIgcmVuZGVyZXIgPSB0aGlzLmF4aXMucmVuZGVyZXI7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsbFBhdGggPSByZW5kZXJlci5nZXRQb3NpdGlvblJhbmdlUGF0aCh0aGlzLnN0YXJ0UG9zaXRpb24sIHRoaXMuZW5kUG9zaXRpb24sIHRoaXMucmFkaXVzLCAkdHlwZS5oYXNWYWx1ZSh0aGlzLmlubmVyUmFkaXVzKSA/IHRoaXMuaW5uZXJSYWRpdXMgOiByZW5kZXJlci5pbm5lclJhZGl1cywgdGhpcy5jb3JuZXJSYWRpdXMpO1xyXG4gICAgICAgICAgICB0aGlzLnBhdGggPSB0aGlzLmZpbGxQYXRoO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc0ZpbGxDaXJjdWxhci5wcm90b3R5cGUsIFwiaW5uZXJSYWRpdXNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gSW5uZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJpbm5lclJhZGl1c1wiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElubmVyIHJhZGl1cyBvZiB0aGUgZmlsbC4gUmVsYXRpdmUgKFtbUGVyY2VudF1dKSBvciBhYnNvbHV0ZSAocGl4ZWxzKS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgSW5uZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQZXJjZW50UHJvcGVydHkoXCJpbm5lclJhZGl1c1wiLCB2YWx1ZSwgdHJ1ZSwgZmFsc2UsIDEwLCBmYWxzZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc0ZpbGxDaXJjdWxhci5wcm90b3R5cGUsIFwicmFkaXVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIE91dGVyIHJhZGl1c1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwicmFkaXVzXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogT3V0ZXIgcmFkaXVzIG9mIHRoZSBmaWxsLiBSZWxhdGl2ZSAoW1tQZXJjZW50XV0pIG9yIGFic29sdXRlIChwaXhlbHMpLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBPdXRlciByYWRpdXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBlcmNlbnRQcm9wZXJ0eShcInJhZGl1c1wiLCB2YWx1ZSwgdHJ1ZSwgZmFsc2UsIDEwLCBmYWxzZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc0ZpbGxDaXJjdWxhci5wcm90b3R5cGUsIFwiY29ybmVyUmFkaXVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIENvcm5lciByYWRpdXMgKHB4KVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiY29ybmVyUmFkaXVzXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ29ybmVyIHJhZGl1cyBmb3IgdGhlIGZpbGwuIEluIHBpeGVscy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgQ29ybmVyIHJhZGl1cyAocHgpXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiY29ybmVyUmFkaXVzXCIsIHZhbHVlLCB0cnVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIHJldHVybiBBeGlzRmlsbENpcmN1bGFyO1xyXG59KEF4aXNGaWxsKSk7XHJcbmV4cG9ydCB7IEF4aXNGaWxsQ2lyY3VsYXIgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiQXhpc0ZpbGxDaXJjdWxhclwiXSA9IEF4aXNGaWxsQ2lyY3VsYXI7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF4aXNGaWxsQ2lyY3VsYXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js ***!
  \*************************************************************************************/
/*! exports provided: AxisLabelCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AxisLabelCircular\", function() { return AxisLabelCircular; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _AxisLabel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisLabel */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Use to create labels on circular axis.\r\n *\r\n * @see {@link IAxisLabelCircularEvents} for a list of available events\r\n * @see {@link IAxisLabelCircularAdapters} for a list of available Adapters\r\n */\r\nvar AxisLabelCircular = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(AxisLabelCircular, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLabelCircular() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.fdx = 0;\r\n        /**\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.fdy = 0;\r\n        _this.className = \"AxisLabelCircular\";\r\n        _this.padding(0, 0, 0, 0);\r\n        _this.location = 0.5;\r\n        _this.locationOnPath = 0.5;\r\n        _this.radius = 0;\r\n        _this.isMeasured = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabelCircular.prototype, \"relativeRotation\", {\r\n        /**\r\n         * @return Rotation angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"relativeRotation\");\r\n        },\r\n        /**\r\n         * Relative rotation of the label.\r\n         *\r\n         * It is an angle to circle. In case 90, labels will be positioned like rays\r\n         * of light, if 0 - positioned along the circle.\r\n         *\r\n         * @param value Rotation angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"relativeRotation\", value, true);\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"hasValue\"](value)) {\r\n                this.rotation = undefined;\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidateDataItems();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabelCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Distance from axis circle to label in pixels or percent.\r\n         *\r\n         * @param value Distance (px or percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabelCircular.prototype, \"bent\", {\r\n        /**\r\n         * @return Bent?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bent\");\r\n        },\r\n        /**\r\n         * Specifies if label should be bent along the circle.\r\n         *\r\n         * IMPORTANT: Use this with caution, since it is quite CPU-greedy.\r\n         *\r\n         * @since 4.1.2\r\n         * @default false\r\n         * @param  value  Bent?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"bent\", value, true);\r\n            this.setPropertyValue(\"wrap\", false);\r\n            this.setPropertyValue(\"horizontalCenter\", \"none\");\r\n            this.setPropertyValue(\"verticalCenter\", \"none\");\r\n            if (value) {\r\n                this.setPropertyValue(\"dx\", 0);\r\n                this.setPropertyValue(\"dy\", 0);\r\n                this.setPropertyValue(\"x\", 0);\r\n                this.setPropertyValue(\"y\", 0);\r\n                this.setPropertyValue(\"rotation\", 0);\r\n                //this.setPropertyValue(\"relativeRotation\", undefined);\r\n                this.fdx = 0;\r\n                this.fdy = 0;\r\n                this.textAlign = \"middle\";\r\n            }\r\n            else {\r\n                if (this.textPathElement) {\r\n                    this.textPathElement.dispose();\r\n                    this.textPathElement = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns label radius in pixels.\r\n     *\r\n     * @param   axisRadius  Radius\r\n     * @return              Pixel radius\r\n     */\r\n    AxisLabelCircular.prototype.pixelRadius = function (axisRadius) {\r\n        var sign = 1;\r\n        if (this.inside) {\r\n            sign = -1;\r\n        }\r\n        return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeToValue\"](this.radius, axisRadius) * sign;\r\n    };\r\n    /**\r\n     * Returns label horizontal radius in pixels.\r\n     *\r\n     * @param   axisRadius   Radius\r\n     * @param   axisRadiusY  Vertical radius\r\n     * @return               Radius\r\n     */\r\n    AxisLabelCircular.prototype.pixelRadiusY = function (axisRadius, axisRadiusY) {\r\n        var sign = 1;\r\n        if (this.inside) {\r\n            sign = -1;\r\n        }\r\n        var radius = this.radius;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](radius)) {\r\n            radius *= axisRadiusY / axisRadius;\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeToValue\"](radius, axisRadius) * sign;\r\n        }\r\n        else {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeToValue\"](radius, axisRadiusY) * sign;\r\n        }\r\n    };\r\n    /**\r\n     * [fixPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param point       Label affixation point\r\n     * @param axisRadius  Distance from point (px)\r\n     */\r\n    AxisLabelCircular.prototype.fixPosition = function (angle, axisRadius, axisRadiusY, dx, dy) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](axisRadiusY)) {\r\n            axisRadiusY = axisRadius;\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](dx)) {\r\n            dx = 0;\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](dy)) {\r\n            dy = 0;\r\n        }\r\n        var point = { x: axisRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle), y: axisRadiusY * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle) };\r\n        if (this.invalid) {\r\n            this.validate(); //@todo\" check if we need this\r\n        }\r\n        var isNegative = false;\r\n        var realRadius = this.radius;\r\n        if (realRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__[\"Percent\"] && realRadius.value < 0) {\r\n            isNegative = true;\r\n        }\r\n        else if (realRadius < 0) {\r\n            isNegative = true;\r\n        }\r\n        var relativeRotation = this.relativeRotation;\r\n        var labelRadius = this.pixelRadius(axisRadius);\r\n        if (this.bent) {\r\n            var point_1 = { x: (axisRadius + labelRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle + 180), y: (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle + 180) };\r\n            this.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"moveTo\"](point_1) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"arcTo\"](angle + 180, 360, axisRadius + labelRadius, axisRadiusY + labelRadius * axisRadiusY / axisRadius);\r\n            if (this.textPathElement) {\r\n                this.textPathElement.attr({ \"startOffset\": (this.locationOnPath * 100) + \"%\" });\r\n            }\r\n            return;\r\n        }\r\n        // WHEN ROTATED\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](relativeRotation)) {\r\n            this.horizontalCenter = \"none\";\r\n            this.verticalCenter = \"none\";\r\n            angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"fitAngleToRange\"](angle, -180, 180);\r\n            var pixelWidth = this.bbox.width;\r\n            var pixelHeight = this.bbox.height;\r\n            var pixelPaddingBottom = this.pixelPaddingBottom;\r\n            var pixelPaddingTop = this.pixelPaddingTop;\r\n            var pixelPaddingLeft = this.pixelPaddingLeft;\r\n            var pixelPaddingRight = this.pixelPaddingRight;\r\n            if (angle > 90 || angle < -90) {\r\n                if (relativeRotation == -90) {\r\n                    relativeRotation = 90;\r\n                    pixelWidth = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (relativeRotation == -90) {\r\n                    pixelHeight = -pixelHeight;\r\n                }\r\n                if (relativeRotation == 90) {\r\n                    relativeRotation = -90;\r\n                    pixelWidth = -pixelPaddingLeft - pixelPaddingRight;\r\n                    pixelHeight = -pixelHeight - pixelPaddingTop - pixelPaddingBottom;\r\n                }\r\n            }\r\n            this.rotation = relativeRotation + angle + 90;\r\n            var dH = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](relativeRotation) / 2;\r\n            var dW = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](relativeRotation) / 2;\r\n            var rotation = this.rotation;\r\n            this.dx = pixelHeight * dH * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](rotation) - pixelWidth * dW * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](rotation);\r\n            this.dy = -pixelHeight * dH * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](rotation) - pixelWidth * dW * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](rotation);\r\n            if (!this.inside) {\r\n                labelRadius += (pixelHeight + pixelPaddingBottom + pixelPaddingTop) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](relativeRotation) + (pixelWidth + pixelPaddingLeft + pixelPaddingRight) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](relativeRotation);\r\n            }\r\n            else {\r\n                if (angle > 90 || angle < -90) {\r\n                    labelRadius -= (pixelPaddingBottom + pixelPaddingTop) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](relativeRotation) + (pixelPaddingLeft + pixelPaddingRight) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](relativeRotation);\r\n                }\r\n                else {\r\n                    labelRadius += (pixelPaddingBottom + this.bbox.height + pixelPaddingTop) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](relativeRotation) + (pixelPaddingLeft + pixelPaddingRight + this.bbox.width) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](relativeRotation);\r\n                }\r\n            }\r\n            point.x += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle) * labelRadius;\r\n            point.y += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle) * labelRadius * axisRadiusY / axisRadius;\r\n        }\r\n        else {\r\n            // END OF ROTATED\r\n            this.horizontalCenter = \"middle\";\r\n            this.verticalCenter = \"middle\";\r\n            if (isNegative) {\r\n                this.dx = 0;\r\n                this.dy = 0;\r\n                point.x = (axisRadius + labelRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle);\r\n                point.y = (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle);\r\n            }\r\n            else {\r\n                // we don't use valign for labels because then they would jump while animating. instead we modify dy depending on a y position\r\n                // this math makes dy to be 1 at the top of the circle, 0.5 at the middle and 1 at the bottom\r\n                // @todo with this math doesn't work well with inside = true\r\n                this.dy = this._measuredHeight / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle); //(1 - (point.y + axisRadiusY) / (2 * axisRadiusY));\r\n                // simmilar with dx\r\n                this.dx = this._measuredWidth / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle); //(1 - (point.x + axisRadius) / (2 * axisRadius));\r\n                point.x += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle) * labelRadius;\r\n                point.y += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle) * labelRadius * axisRadiusY / axisRadius;\r\n            }\r\n        }\r\n        point.x += dx;\r\n        point.y += dy;\r\n        this.fdx = this.dx;\r\n        this.fdy = this.dy;\r\n        this.moveTo(point);\r\n    };\r\n    return AxisLabelCircular;\r\n}(_AxisLabel__WEBPACK_IMPORTED_MODULE_1__[\"AxisLabel\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"AxisLabelCircular\"] = AxisLabelCircular;\r\n//# sourceMappingURL=AxisLabelCircular.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc0xhYmVsQ2lyY3VsYXIuanM/OTQzZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDTztBQUNBO0FBQ0E7QUFDSTtBQUNGO0FBQ0U7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywrQkFBK0I7QUFDeEMsU0FBUyxpQ0FBaUM7QUFDMUM7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseURBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUVBQXNCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlEQUFjO0FBQzFCO0FBQ0EsbUJBQW1CLGlFQUFzQjtBQUN6QztBQUNBO0FBQ0EsbUJBQW1CLGlFQUFzQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0EscUJBQXFCLGlCQUFpQixvREFBUywwQkFBMEIsb0RBQVM7QUFDbEY7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDJEQUFPO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUNBQWlDLG9EQUFTLDJFQUEyRSxvREFBUztBQUN6Six3QkFBd0IsMkRBQVksWUFBWSwwREFBVztBQUMzRDtBQUNBLDJDQUEyQyxtREFBbUQ7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlEQUFjO0FBQzFCO0FBQ0E7QUFDQSxvQkFBb0IsZ0VBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0RBQVM7QUFDOUIscUJBQXFCLG9EQUFTO0FBQzlCO0FBQ0EseUNBQXlDLG9EQUFTLCtCQUErQixvREFBUztBQUMxRiwwQ0FBMEMsb0RBQVMsK0JBQStCLG9EQUFTO0FBQzNGO0FBQ0Esc0ZBQXNGLG9EQUFTLDJFQUEyRSxvREFBUztBQUNuTDtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsb0RBQVMsOERBQThELG9EQUFTO0FBQzVKO0FBQ0E7QUFDQSwrRkFBK0Ysb0RBQVMsZ0ZBQWdGLG9EQUFTO0FBQ2pNO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQVM7QUFDaEMsdUJBQXVCLG9EQUFTO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsb0RBQVM7QUFDaEUsbUZBQW1GLG9EQUFTO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsb0RBQVMsUUFBUTtBQUN0RTtBQUNBLG9EQUFvRCxvREFBUyxRQUFRO0FBQ3JFLDJCQUEyQixvREFBUztBQUNwQywyQkFBMkIsb0RBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLG9EQUFTO0FBQ2tCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc0xhYmVsQ2lyY3VsYXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQXhpcyBMYWJlbCBtb2R1bGVcclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQXhpc0xhYmVsIH0gZnJvbSBcIi4vQXhpc0xhYmVsXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvTWF0aFwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbmltcG9ydCAqIGFzICRwYXRoIGZyb20gXCIuLi8uLi9jb3JlL3JlbmRlcmluZy9QYXRoXCI7XHJcbmltcG9ydCAqIGFzICR1dGlscyBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9VdGlsc1wiO1xyXG5pbXBvcnQgeyBQZXJjZW50IH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvUGVyY2VudFwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIFVzZSB0byBjcmVhdGUgbGFiZWxzIG9uIGNpcmN1bGFyIGF4aXMuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElBeGlzTGFiZWxDaXJjdWxhckV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElBeGlzTGFiZWxDaXJjdWxhckFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKi9cclxudmFyIEF4aXNMYWJlbENpcmN1bGFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEF4aXNMYWJlbENpcmN1bGFyLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBBeGlzTGFiZWxDaXJjdWxhcigpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGlnbm9yZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLmZkeCA9IDA7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaWdub3JlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMuZmR5ID0gMDtcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkF4aXNMYWJlbENpcmN1bGFyXCI7XHJcbiAgICAgICAgX3RoaXMucGFkZGluZygwLCAwLCAwLCAwKTtcclxuICAgICAgICBfdGhpcy5sb2NhdGlvbiA9IDAuNTtcclxuICAgICAgICBfdGhpcy5sb2NhdGlvbk9uUGF0aCA9IDAuNTtcclxuICAgICAgICBfdGhpcy5yYWRpdXMgPSAwO1xyXG4gICAgICAgIF90aGlzLmlzTWVhc3VyZWQgPSBmYWxzZTtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF4aXNMYWJlbENpcmN1bGFyLnByb3RvdHlwZSwgXCJyZWxhdGl2ZVJvdGF0aW9uXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIFJvdGF0aW9uIGFuZ2xlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJyZWxhdGl2ZVJvdGF0aW9uXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUmVsYXRpdmUgcm90YXRpb24gb2YgdGhlIGxhYmVsLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogSXQgaXMgYW4gYW5nbGUgdG8gY2lyY2xlLiBJbiBjYXNlIDkwLCBsYWJlbHMgd2lsbCBiZSBwb3NpdGlvbmVkIGxpa2UgcmF5c1xyXG4gICAgICAgICAqIG9mIGxpZ2h0LCBpZiAwIC0gcG9zaXRpb25lZCBhbG9uZyB0aGUgY2lyY2xlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIFJvdGF0aW9uIGFuZ2xlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwicmVsYXRpdmVSb3RhdGlvblwiLCB2YWx1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIGlmICghJHR5cGUuaGFzVmFsdWUodmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJvdGF0aW9uID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGFJdGVtID0gdGhpcy5kYXRhSXRlbTtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhSXRlbSAmJiBkYXRhSXRlbS5jb21wb25lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbS5jb21wb25lbnQuaW52YWxpZGF0ZURhdGFJdGVtcygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc0xhYmVsQ2lyY3VsYXIucHJvdG90eXBlLCBcInJhZGl1c1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBEaXN0YW5jZSAocHgpXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJyYWRpdXNcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBEaXN0YW5jZSBmcm9tIGF4aXMgY2lyY2xlIHRvIGxhYmVsIGluIHBpeGVscyBvciBwZXJjZW50LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIERpc3RhbmNlIChweCBvciBwZXJjZW50KVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UGVyY2VudFByb3BlcnR5KFwicmFkaXVzXCIsIHZhbHVlLCB0cnVlLCBmYWxzZSwgMTAsIGZhbHNlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBeGlzTGFiZWxDaXJjdWxhci5wcm90b3R5cGUsIFwiYmVudFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBCZW50P1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiYmVudFwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNwZWNpZmllcyBpZiBsYWJlbCBzaG91bGQgYmUgYmVudCBhbG9uZyB0aGUgY2lyY2xlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogSU1QT1JUQU5UOiBVc2UgdGhpcyB3aXRoIGNhdXRpb24sIHNpbmNlIGl0IGlzIHF1aXRlIENQVS1ncmVlZHkuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAc2luY2UgNC4xLjJcclxuICAgICAgICAgKiBAZGVmYXVsdCBmYWxzZVxyXG4gICAgICAgICAqIEBwYXJhbSAgdmFsdWUgIEJlbnQ/XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiYmVudFwiLCB2YWx1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcIndyYXBcIiwgZmFsc2UpO1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJob3Jpem9udGFsQ2VudGVyXCIsIFwibm9uZVwiKTtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwidmVydGljYWxDZW50ZXJcIiwgXCJub25lXCIpO1xyXG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImR4XCIsIDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiZHlcIiwgMCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJ4XCIsIDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwieVwiLCAwKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcInJvdGF0aW9uXCIsIDApO1xyXG4gICAgICAgICAgICAgICAgLy90aGlzLnNldFByb3BlcnR5VmFsdWUoXCJyZWxhdGl2ZVJvdGF0aW9uXCIsIHVuZGVmaW5lZCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZkeCA9IDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZkeSA9IDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRleHRBbGlnbiA9IFwibWlkZGxlXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50ZXh0UGF0aEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHRQYXRoRWxlbWVudC5kaXNwb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0UGF0aEVsZW1lbnQgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBsYWJlbCByYWRpdXMgaW4gcGl4ZWxzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSAgIGF4aXNSYWRpdXMgIFJhZGl1c1xyXG4gICAgICogQHJldHVybiAgICAgICAgICAgICAgUGl4ZWwgcmFkaXVzXHJcbiAgICAgKi9cclxuICAgIEF4aXNMYWJlbENpcmN1bGFyLnByb3RvdHlwZS5waXhlbFJhZGl1cyA9IGZ1bmN0aW9uIChheGlzUmFkaXVzKSB7XHJcbiAgICAgICAgdmFyIHNpZ24gPSAxO1xyXG4gICAgICAgIGlmICh0aGlzLmluc2lkZSkge1xyXG4gICAgICAgICAgICBzaWduID0gLTE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAkdXRpbHMucmVsYXRpdmVUb1ZhbHVlKHRoaXMucmFkaXVzLCBheGlzUmFkaXVzKSAqIHNpZ247XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGxhYmVsIGhvcml6b250YWwgcmFkaXVzIGluIHBpeGVscy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gICBheGlzUmFkaXVzICAgUmFkaXVzXHJcbiAgICAgKiBAcGFyYW0gICBheGlzUmFkaXVzWSAgVmVydGljYWwgcmFkaXVzXHJcbiAgICAgKiBAcmV0dXJuICAgICAgICAgICAgICAgUmFkaXVzXHJcbiAgICAgKi9cclxuICAgIEF4aXNMYWJlbENpcmN1bGFyLnByb3RvdHlwZS5waXhlbFJhZGl1c1kgPSBmdW5jdGlvbiAoYXhpc1JhZGl1cywgYXhpc1JhZGl1c1kpIHtcclxuICAgICAgICB2YXIgc2lnbiA9IDE7XHJcbiAgICAgICAgaWYgKHRoaXMuaW5zaWRlKSB7XHJcbiAgICAgICAgICAgIHNpZ24gPSAtMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHJhZGl1cyA9IHRoaXMucmFkaXVzO1xyXG4gICAgICAgIGlmICgkdHlwZS5pc051bWJlcihyYWRpdXMpKSB7XHJcbiAgICAgICAgICAgIHJhZGl1cyAqPSBheGlzUmFkaXVzWSAvIGF4aXNSYWRpdXM7XHJcbiAgICAgICAgICAgIHJldHVybiAkdXRpbHMucmVsYXRpdmVUb1ZhbHVlKHJhZGl1cywgYXhpc1JhZGl1cykgKiBzaWduO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICR1dGlscy5yZWxhdGl2ZVRvVmFsdWUocmFkaXVzLCBheGlzUmFkaXVzWSkgKiBzaWduO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFtmaXhQb3NpdGlvbiBkZXNjcmlwdGlvbl1cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICogQHBhcmFtIHBvaW50ICAgICAgIExhYmVsIGFmZml4YXRpb24gcG9pbnRcclxuICAgICAqIEBwYXJhbSBheGlzUmFkaXVzICBEaXN0YW5jZSBmcm9tIHBvaW50IChweClcclxuICAgICAqL1xyXG4gICAgQXhpc0xhYmVsQ2lyY3VsYXIucHJvdG90eXBlLmZpeFBvc2l0aW9uID0gZnVuY3Rpb24gKGFuZ2xlLCBheGlzUmFkaXVzLCBheGlzUmFkaXVzWSwgZHgsIGR5KSB7XHJcbiAgICAgICAgaWYgKCEkdHlwZS5pc051bWJlcihheGlzUmFkaXVzWSkpIHtcclxuICAgICAgICAgICAgYXhpc1JhZGl1c1kgPSBheGlzUmFkaXVzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoISR0eXBlLmlzTnVtYmVyKGR4KSkge1xyXG4gICAgICAgICAgICBkeCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIoZHkpKSB7XHJcbiAgICAgICAgICAgIGR5ID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHBvaW50ID0geyB4OiBheGlzUmFkaXVzICogJG1hdGguY29zKGFuZ2xlKSwgeTogYXhpc1JhZGl1c1kgKiAkbWF0aC5zaW4oYW5nbGUpIH07XHJcbiAgICAgICAgaWYgKHRoaXMuaW52YWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlKCk7IC8vQHRvZG9cIiBjaGVjayBpZiB3ZSBuZWVkIHRoaXNcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGlzTmVnYXRpdmUgPSBmYWxzZTtcclxuICAgICAgICB2YXIgcmVhbFJhZGl1cyA9IHRoaXMucmFkaXVzO1xyXG4gICAgICAgIGlmIChyZWFsUmFkaXVzIGluc3RhbmNlb2YgUGVyY2VudCAmJiByZWFsUmFkaXVzLnZhbHVlIDwgMCkge1xyXG4gICAgICAgICAgICBpc05lZ2F0aXZlID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAocmVhbFJhZGl1cyA8IDApIHtcclxuICAgICAgICAgICAgaXNOZWdhdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciByZWxhdGl2ZVJvdGF0aW9uID0gdGhpcy5yZWxhdGl2ZVJvdGF0aW9uO1xyXG4gICAgICAgIHZhciBsYWJlbFJhZGl1cyA9IHRoaXMucGl4ZWxSYWRpdXMoYXhpc1JhZGl1cyk7XHJcbiAgICAgICAgaWYgKHRoaXMuYmVudCkge1xyXG4gICAgICAgICAgICB2YXIgcG9pbnRfMSA9IHsgeDogKGF4aXNSYWRpdXMgKyBsYWJlbFJhZGl1cykgKiAkbWF0aC5jb3MoYW5nbGUgKyAxODApLCB5OiAoYXhpc1JhZGl1c1kgKyBsYWJlbFJhZGl1cyAqIGF4aXNSYWRpdXNZIC8gYXhpc1JhZGl1cykgKiAkbWF0aC5zaW4oYW5nbGUgKyAxODApIH07XHJcbiAgICAgICAgICAgIHRoaXMucGF0aCA9ICRwYXRoLm1vdmVUbyhwb2ludF8xKSArICRwYXRoLmFyY1RvKGFuZ2xlICsgMTgwLCAzNjAsIGF4aXNSYWRpdXMgKyBsYWJlbFJhZGl1cywgYXhpc1JhZGl1c1kgKyBsYWJlbFJhZGl1cyAqIGF4aXNSYWRpdXNZIC8gYXhpc1JhZGl1cyk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRleHRQYXRoRWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50ZXh0UGF0aEVsZW1lbnQuYXR0cih7IFwic3RhcnRPZmZzZXRcIjogKHRoaXMubG9jYXRpb25PblBhdGggKiAxMDApICsgXCIlXCIgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBXSEVOIFJPVEFURURcclxuICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIocmVsYXRpdmVSb3RhdGlvbikpIHtcclxuICAgICAgICAgICAgdGhpcy5ob3Jpem9udGFsQ2VudGVyID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgIHRoaXMudmVydGljYWxDZW50ZXIgPSBcIm5vbmVcIjtcclxuICAgICAgICAgICAgYW5nbGUgPSAkbWF0aC5maXRBbmdsZVRvUmFuZ2UoYW5nbGUsIC0xODAsIDE4MCk7XHJcbiAgICAgICAgICAgIHZhciBwaXhlbFdpZHRoID0gdGhpcy5iYm94LndpZHRoO1xyXG4gICAgICAgICAgICB2YXIgcGl4ZWxIZWlnaHQgPSB0aGlzLmJib3guaGVpZ2h0O1xyXG4gICAgICAgICAgICB2YXIgcGl4ZWxQYWRkaW5nQm90dG9tID0gdGhpcy5waXhlbFBhZGRpbmdCb3R0b207XHJcbiAgICAgICAgICAgIHZhciBwaXhlbFBhZGRpbmdUb3AgPSB0aGlzLnBpeGVsUGFkZGluZ1RvcDtcclxuICAgICAgICAgICAgdmFyIHBpeGVsUGFkZGluZ0xlZnQgPSB0aGlzLnBpeGVsUGFkZGluZ0xlZnQ7XHJcbiAgICAgICAgICAgIHZhciBwaXhlbFBhZGRpbmdSaWdodCA9IHRoaXMucGl4ZWxQYWRkaW5nUmlnaHQ7XHJcbiAgICAgICAgICAgIGlmIChhbmdsZSA+IDkwIHx8IGFuZ2xlIDwgLTkwKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVsYXRpdmVSb3RhdGlvbiA9PSAtOTApIHtcclxuICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZVJvdGF0aW9uID0gOTA7XHJcbiAgICAgICAgICAgICAgICAgICAgcGl4ZWxXaWR0aCA9IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVsYXRpdmVSb3RhdGlvbiA9PSAtOTApIHtcclxuICAgICAgICAgICAgICAgICAgICBwaXhlbEhlaWdodCA9IC1waXhlbEhlaWdodDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChyZWxhdGl2ZVJvdGF0aW9uID09IDkwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVsYXRpdmVSb3RhdGlvbiA9IC05MDtcclxuICAgICAgICAgICAgICAgICAgICBwaXhlbFdpZHRoID0gLXBpeGVsUGFkZGluZ0xlZnQgLSBwaXhlbFBhZGRpbmdSaWdodDtcclxuICAgICAgICAgICAgICAgICAgICBwaXhlbEhlaWdodCA9IC1waXhlbEhlaWdodCAtIHBpeGVsUGFkZGluZ1RvcCAtIHBpeGVsUGFkZGluZ0JvdHRvbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnJvdGF0aW9uID0gcmVsYXRpdmVSb3RhdGlvbiArIGFuZ2xlICsgOTA7XHJcbiAgICAgICAgICAgIHZhciBkSCA9ICRtYXRoLnNpbihyZWxhdGl2ZVJvdGF0aW9uKSAvIDI7XHJcbiAgICAgICAgICAgIHZhciBkVyA9ICRtYXRoLmNvcyhyZWxhdGl2ZVJvdGF0aW9uKSAvIDI7XHJcbiAgICAgICAgICAgIHZhciByb3RhdGlvbiA9IHRoaXMucm90YXRpb247XHJcbiAgICAgICAgICAgIHRoaXMuZHggPSBwaXhlbEhlaWdodCAqIGRIICogJG1hdGguc2luKHJvdGF0aW9uKSAtIHBpeGVsV2lkdGggKiBkVyAqICRtYXRoLmNvcyhyb3RhdGlvbik7XHJcbiAgICAgICAgICAgIHRoaXMuZHkgPSAtcGl4ZWxIZWlnaHQgKiBkSCAqICRtYXRoLmNvcyhyb3RhdGlvbikgLSBwaXhlbFdpZHRoICogZFcgKiAkbWF0aC5zaW4ocm90YXRpb24pO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaW5zaWRlKSB7XHJcbiAgICAgICAgICAgICAgICBsYWJlbFJhZGl1cyArPSAocGl4ZWxIZWlnaHQgKyBwaXhlbFBhZGRpbmdCb3R0b20gKyBwaXhlbFBhZGRpbmdUb3ApICogJG1hdGguY29zKHJlbGF0aXZlUm90YXRpb24pICsgKHBpeGVsV2lkdGggKyBwaXhlbFBhZGRpbmdMZWZ0ICsgcGl4ZWxQYWRkaW5nUmlnaHQpICogJG1hdGguc2luKHJlbGF0aXZlUm90YXRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKGFuZ2xlID4gOTAgfHwgYW5nbGUgPCAtOTApIHtcclxuICAgICAgICAgICAgICAgICAgICBsYWJlbFJhZGl1cyAtPSAocGl4ZWxQYWRkaW5nQm90dG9tICsgcGl4ZWxQYWRkaW5nVG9wKSAqICRtYXRoLmNvcyhyZWxhdGl2ZVJvdGF0aW9uKSArIChwaXhlbFBhZGRpbmdMZWZ0ICsgcGl4ZWxQYWRkaW5nUmlnaHQpICogJG1hdGguc2luKHJlbGF0aXZlUm90YXRpb24pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxSYWRpdXMgKz0gKHBpeGVsUGFkZGluZ0JvdHRvbSArIHRoaXMuYmJveC5oZWlnaHQgKyBwaXhlbFBhZGRpbmdUb3ApICogJG1hdGguY29zKHJlbGF0aXZlUm90YXRpb24pICsgKHBpeGVsUGFkZGluZ0xlZnQgKyBwaXhlbFBhZGRpbmdSaWdodCArIHRoaXMuYmJveC53aWR0aCkgKiAkbWF0aC5zaW4ocmVsYXRpdmVSb3RhdGlvbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcG9pbnQueCArPSAkbWF0aC5jb3MoYW5nbGUpICogbGFiZWxSYWRpdXM7XHJcbiAgICAgICAgICAgIHBvaW50LnkgKz0gJG1hdGguc2luKGFuZ2xlKSAqIGxhYmVsUmFkaXVzICogYXhpc1JhZGl1c1kgLyBheGlzUmFkaXVzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gRU5EIE9GIFJPVEFURURcclxuICAgICAgICAgICAgdGhpcy5ob3Jpem9udGFsQ2VudGVyID0gXCJtaWRkbGVcIjtcclxuICAgICAgICAgICAgdGhpcy52ZXJ0aWNhbENlbnRlciA9IFwibWlkZGxlXCI7XHJcbiAgICAgICAgICAgIGlmIChpc05lZ2F0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmR4ID0gMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuZHkgPSAwO1xyXG4gICAgICAgICAgICAgICAgcG9pbnQueCA9IChheGlzUmFkaXVzICsgbGFiZWxSYWRpdXMpICogJG1hdGguY29zKGFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHBvaW50LnkgPSAoYXhpc1JhZGl1c1kgKyBsYWJlbFJhZGl1cyAqIGF4aXNSYWRpdXNZIC8gYXhpc1JhZGl1cykgKiAkbWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gd2UgZG9uJ3QgdXNlIHZhbGlnbiBmb3IgbGFiZWxzIGJlY2F1c2UgdGhlbiB0aGV5IHdvdWxkIGp1bXAgd2hpbGUgYW5pbWF0aW5nLiBpbnN0ZWFkIHdlIG1vZGlmeSBkeSBkZXBlbmRpbmcgb24gYSB5IHBvc2l0aW9uXHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzIG1hdGggbWFrZXMgZHkgdG8gYmUgMSBhdCB0aGUgdG9wIG9mIHRoZSBjaXJjbGUsIDAuNSBhdCB0aGUgbWlkZGxlIGFuZCAxIGF0IHRoZSBib3R0b21cclxuICAgICAgICAgICAgICAgIC8vIEB0b2RvIHdpdGggdGhpcyBtYXRoIGRvZXNuJ3Qgd29yayB3ZWxsIHdpdGggaW5zaWRlID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5keSA9IHRoaXMuX21lYXN1cmVkSGVpZ2h0IC8gMiAqICRtYXRoLnNpbihhbmdsZSk7IC8vKDEgLSAocG9pbnQueSArIGF4aXNSYWRpdXNZKSAvICgyICogYXhpc1JhZGl1c1kpKTtcclxuICAgICAgICAgICAgICAgIC8vIHNpbW1pbGFyIHdpdGggZHhcclxuICAgICAgICAgICAgICAgIHRoaXMuZHggPSB0aGlzLl9tZWFzdXJlZFdpZHRoIC8gMiAqICRtYXRoLmNvcyhhbmdsZSk7IC8vKDEgLSAocG9pbnQueCArIGF4aXNSYWRpdXMpIC8gKDIgKiBheGlzUmFkaXVzKSk7XHJcbiAgICAgICAgICAgICAgICBwb2ludC54ICs9ICRtYXRoLmNvcyhhbmdsZSkgKiBsYWJlbFJhZGl1cztcclxuICAgICAgICAgICAgICAgIHBvaW50LnkgKz0gJG1hdGguc2luKGFuZ2xlKSAqIGxhYmVsUmFkaXVzICogYXhpc1JhZGl1c1kgLyBheGlzUmFkaXVzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBvaW50LnggKz0gZHg7XHJcbiAgICAgICAgcG9pbnQueSArPSBkeTtcclxuICAgICAgICB0aGlzLmZkeCA9IHRoaXMuZHg7XHJcbiAgICAgICAgdGhpcy5mZHkgPSB0aGlzLmR5O1xyXG4gICAgICAgIHRoaXMubW92ZVRvKHBvaW50KTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gQXhpc0xhYmVsQ2lyY3VsYXI7XHJcbn0oQXhpc0xhYmVsKSk7XHJcbmV4cG9ydCB7IEF4aXNMYWJlbENpcmN1bGFyIH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkF4aXNMYWJlbENpcmN1bGFyXCJdID0gQXhpc0xhYmVsQ2lyY3VsYXI7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF4aXNMYWJlbENpcmN1bGFyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js ***!
  \****************************************************************************************/
/*! exports provided: AxisRendererCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererCircular\", function() { return AxisRendererCircular; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _AxisRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRenderer */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js\");\n/* harmony import */ var _AxisFillCircular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisFillCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js\");\n/* harmony import */ var _GridCircular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GridCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js\");\n/* harmony import */ var _AxisLabelCircular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxisLabelCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _AxisBullet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AxisBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js\");\n/**\r\n * Module, defining Axis Renderer for circular axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A renderer for circular axis.\r\n */\r\nvar AxisRendererCircular = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(AxisRendererCircular, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererCircular() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.pixelRadiusReal = 0;\r\n        // axis.layout = \"none\"; // does not trigger redraw when size changes\r\n        _this.layout = \"none\";\r\n        _this.className = \"AxisRendererCircular\";\r\n        _this.isMeasured = false;\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.useChartAngles = true;\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"percent\"])(100);\r\n        _this.isMeasured = false;\r\n        _this.grid.template.location = 0;\r\n        _this.labels.template.location = 0;\r\n        _this.labels.template.radius = 15;\r\n        _this.ticks.template.location = 0;\r\n        _this.ticks.template.pixelPerfect = false;\r\n        _this.tooltipLocation = 0;\r\n        _this.line.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRendererCircular.prototype.setAxis = function (axis) {\r\n        var _this = this;\r\n        _super.prototype.setAxis.call(this, axis);\r\n        axis.isMeasured = false;\r\n        // modify x and y so that tooltip would always be on circle\r\n        var tooltip = axis.tooltip;\r\n        tooltip.adapter.add(\"dx\", function (x, target) {\r\n            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"svgPointToSprite\"]({ x: target.pixelX, y: target.pixelY }, _this);\r\n            return _this.pixelRadius * Math.cos(Math.atan2(point.y, point.x)) - point.x;\r\n        });\r\n        tooltip.adapter.add(\"dy\", function (y, target) {\r\n            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"svgPointToSprite\"]({ x: target.pixelX, y: target.pixelY }, _this);\r\n            return _this.pixelRadius * Math.sin(Math.atan2(point.y, point.x)) - point.y;\r\n        });\r\n    };\r\n    /**\r\n     * Validates Axis renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererCircular.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart && this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            return 2 * Math.PI * this.pixelRadius;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, false, false, 10, false)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Outer radius in pixels.\r\n         *\r\n         * @return Outer radius (px)\r\n         */\r\n        get: function () {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](this.radius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            var chart = this.chart;\r\n            var innerRadius = this.getPropertyValue(\"innerRadius\");\r\n            if (chart) {\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](innerRadius)) {\r\n                    innerRadius = chart.innerRadius;\r\n                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"Percent\"] && chart) {\r\n                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"percent\"])(innerRadius.value * chart.innerRadiusModifyer * 100);\r\n                    }\r\n                }\r\n                else {\r\n                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"Percent\"] && chart) {\r\n                        var mr = chart.mr;\r\n                        var value = innerRadius.value;\r\n                        value = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;\r\n                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"percent\"])(value * 100);\r\n                    }\r\n                }\r\n                return innerRadius;\r\n            }\r\n        },\r\n        /**\r\n         * Inner radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Inner radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"innerRadius\", value, false, false, 10, false)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"useChartAngles\", {\r\n        /**\r\n         * @return Use chart angles\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useChartAngles\");\r\n        },\r\n        /**\r\n         * Specifies if axis should use its own `startAngle` and `endAngle` or\r\n         * inherit them from relative properties from chart.\r\n         *\r\n         * @default false\r\n         * @param value  Use chart's angles\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useChartAngles\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * Inner radius in pixels.\r\n         *\r\n         * @return Inner radius (px)\r\n         */\r\n        get: function () {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](this.innerRadius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @param position2  Position (0-1) Position on the second axis\r\n     * @return Point\r\n     */\r\n    AxisRendererCircular.prototype.positionToPoint = function (position, position2) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](position2)) {\r\n            position2 = 1;\r\n        }\r\n        var coordinate = this.positionToCoordinate(position);\r\n        var angle = this.startAngle + (this.endAngle - this.startAngle) * coordinate / this.axisLength;\r\n        var radius = this.pixelRadius;\r\n        var innerRadius = this.pixelInnerRadius;\r\n        if (this.axisRendererY) {\r\n            var realRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](this.axisRendererY.positionToCoordinate(position2), 0, Infinity);\r\n            var point = { x: realRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: realRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) };\r\n            return point;\r\n        }\r\n        return { x: _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle) * innerRadius + (radius - innerRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle) * position2, y: _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) * innerRadius + (radius - innerRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) * position2 };\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) on axis to angle in degrees (0-360).\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Angle (0-360)\r\n     */\r\n    AxisRendererCircular.prototype.positionToAngle = function (position) {\r\n        var axis = this.axis;\r\n        var arc = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n        var angle;\r\n        if (axis.renderer.inversed) {\r\n            angle = this.startAngle + (axis.end - position) * arc;\r\n        }\r\n        else {\r\n            angle = this.startAngle + (position - axis.start) * arc;\r\n        }\r\n        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"round\"](angle, 3);\r\n    };\r\n    /**\r\n     * Converts angle on axis to relative position(0-1).\r\n     *\r\n     * @param angle Angle in degrees\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererCircular.prototype.angleToPosition = function (angle) {\r\n        var axis = this.axis;\r\n        var arc = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n        var position;\r\n        if (axis.renderer.inversed) {\r\n            position = axis.end - (angle - this.startAngle) / arc;\r\n        }\r\n        else {\r\n            position = (angle - this.startAngle) / arc + axis.start;\r\n        }\r\n        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"round\"](position, 5);\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererCircular.prototype.updateAxisLine = function () {\r\n        var radius = this.pixelRadius;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        var arc = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"min\"](360, endAngle - startAngle);\r\n        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"arcTo\"](startAngle, arc, radius, radius);\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererCircular.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](point.x) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](point.y) && grid.element) {\r\n            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"DEGREES\"] * Math.atan2(point.y, point.x);\r\n            var radius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](grid.radius) ? grid.radius : Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"percent\"])(100), this.pixelRadius);\r\n            var gridInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](grid.innerRadius, this.pixelRadius);\r\n            grid.zIndex = 0;\r\n            var innerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](gridInnerRadius) ? gridInnerRadius : this.innerRadius, this.pixelRadiusReal, true);\r\n            grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n        }\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererCircular.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        position = position + (endPosition - position) * tick.location;\r\n        var point = this.positionToPoint(position);\r\n        if (tick.element) {\r\n            var radius = this.pixelRadius;\r\n            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"DEGREES\"] * Math.atan2(point.y, point.x);\r\n            var tickLength = tick.length;\r\n            if (tick.inside) {\r\n                tickLength = -tickLength;\r\n            }\r\n            tick.zIndex = 1;\r\n            tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: (radius + tickLength) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: (radius + tickLength) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n        }\r\n        this.toggleVisibility(tick, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererCircular.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        var location = 0.5;\r\n        if (bullet instanceof _AxisBullet__WEBPACK_IMPORTED_MODULE_11__[\"AxisBullet\"]) {\r\n            location = bullet.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        var radius = this.pixelRadius;\r\n        var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"DEGREES\"] * Math.atan2(point.y, point.x);\r\n        point = { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) };\r\n        this.positionItem(bullet, point);\r\n        this.toggleVisibility(bullet, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRendererCircular.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](location)) {\r\n            location = label.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        label.fixPosition(this.positionToAngle(position), this.pixelRadius);\r\n        label.zIndex = 2;\r\n        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n    };\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point Point coordinates\r\n     * @return Fits?\r\n     */\r\n    AxisRendererCircular.prototype.fitsToBounds = function (point) {\r\n        return true;\r\n    };\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Start angle of the axis in degrees (0-360).\r\n         *\r\n         * @param value  Start angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angel here!\r\n            if (this.setPropertyValue(\"startAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the axis in degrees (0-360).\r\n         *\r\n         * @param value  End angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angel here!\r\n            if (this.setPropertyValue(\"endAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRendererCircular.prototype.getPositionRangePath = function (startPosition, endPosition, radius, innerRadius, cornerRadius) {\r\n        var path = \"\";\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](startPosition) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](endPosition)) {\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](radius)) {\r\n                radius = this.radius;\r\n            }\r\n            startPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"max\"](startPosition, this.axis.start);\r\n            endPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"min\"](endPosition, this.axis.end);\r\n            if (endPosition < startPosition) {\r\n                endPosition = startPosition;\r\n            }\r\n            var pixelRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](radius, this.pixelRadius);\r\n            var pixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](innerRadius, this.pixelRadius, true);\r\n            var startAngle = this.positionToAngle(startPosition);\r\n            var endAngle = this.positionToAngle(endPosition);\r\n            var arc = endAngle - startAngle;\r\n            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"arc\"](startAngle, arc, pixelRadius, pixelInnerRadius, pixelRadius, cornerRadius);\r\n        }\r\n        return path;\r\n    };\r\n    /**\r\n     * Returns a new grid element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Grid element\r\n     */\r\n    AxisRendererCircular.prototype.createGrid = function () {\r\n        return new _GridCircular__WEBPACK_IMPORTED_MODULE_3__[\"GridCircular\"]();\r\n    };\r\n    /**\r\n     * Returns a new fill element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Fill element\r\n     */\r\n    AxisRendererCircular.prototype.createFill = function (axis) {\r\n        return new _AxisFillCircular__WEBPACK_IMPORTED_MODULE_2__[\"AxisFillCircular\"](axis);\r\n    };\r\n    /**\r\n     * Returns a new label element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Label element\r\n     */\r\n    AxisRendererCircular.prototype.createLabel = function () {\r\n        return new _AxisLabelCircular__WEBPACK_IMPORTED_MODULE_4__[\"AxisLabelCircular\"]();\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererCircular.prototype.pointToPosition = function (point) {\r\n        var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getAngle\"](point), this.startAngle, this.endAngle);\r\n        return this.coordinateToPosition((angle - this.startAngle) / 360 * this.axisLength);\r\n    };\r\n    return AxisRendererCircular;\r\n}(_AxisRenderer__WEBPACK_IMPORTED_MODULE_1__[\"AxisRenderer\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"AxisRendererCircular\"] = AxisRendererCircular;\r\n//# sourceMappingURL=AxisRendererCircular.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js ***!
  \**************************************************************************************/
/*! exports provided: AxisRendererRadial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererRadial\", function() { return AxisRendererRadial; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _AxisRendererY__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRendererY */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js\");\n/* harmony import */ var _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony import */ var _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedCircle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedCircle.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _AxisBullet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AxisBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js\");\n/**\r\n * Module, defining Axis Renderer for radial axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A renderer for radial axis.\r\n */\r\nvar AxisRendererRadial = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(AxisRendererRadial, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererRadial() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         */\r\n        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.pixelRadiusReal = 0;\r\n        _this.className = \"AxisRendererRadial\";\r\n        _this.isMeasured = false;\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.minGridDistance = 30;\r\n        _this.gridType = \"circles\";\r\n        _this.axisAngle = -90;\r\n        _this.isMeasured = false;\r\n        _this.layout = \"none\";\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(100);\r\n        _this.line.strokeOpacity = 0;\r\n        _this.labels.template.horizontalCenter = \"middle\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates Axis renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart && this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            return this.pixelRadius - this.pixelInnerRadius;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Outer radius in pixels.\r\n         *\r\n         * @return Outer radius (px)\r\n         */\r\n        get: function () {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](this.radius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            var chart = this.chart;\r\n            var innerRadius = this.getPropertyValue(\"innerRadius\");\r\n            if (chart) {\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](innerRadius)) {\r\n                    innerRadius = chart.innerRadius;\r\n                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"Percent\"] && chart) {\r\n                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(innerRadius.value * chart.innerRadiusModifyer * 100);\r\n                    }\r\n                }\r\n                else {\r\n                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"Percent\"] && chart) {\r\n                        var mr = chart.mr;\r\n                        var value = innerRadius.value;\r\n                        value = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;\r\n                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(value * 100);\r\n                    }\r\n                }\r\n            }\r\n            return innerRadius;\r\n        },\r\n        /**\r\n         * Inner radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * Inner radius in pixels.\r\n         *\r\n         * @return Inner radius (px)\r\n         */\r\n        get: function () {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](this.innerRadius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @param position2  Position (0-1) Position on the second axis\r\n     * @return Point\r\n     */\r\n    AxisRendererRadial.prototype.positionToPoint = function (position, position2) {\r\n        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](this.positionToCoordinate(position), 0, Infinity);\r\n        return { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](this.axisAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](this.axisAngle) };\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.updateAxisLine = function () {\r\n        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: this.pixelInnerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](this.axisAngle), y: this.pixelInnerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](this.axisAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: this.pixelRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](this.axisAngle), y: this.pixelRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](this.axisAngle) });\r\n        var title = this.axis.title;\r\n        title.valign = \"none\";\r\n        title.horizontalCenter = \"middle\";\r\n        title.verticalCenter = \"bottom\";\r\n        title.y = -this.axisLength / 2;\r\n        var rotation = 90;\r\n        if (this.opposite) {\r\n            if (!this.inside) {\r\n                rotation = -90;\r\n            }\r\n        }\r\n        else {\r\n            if (this.inside) {\r\n                rotation = -90;\r\n            }\r\n        }\r\n        title.rotation = rotation;\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererRadial.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        var path;\r\n        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"](point);\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isNumber\"](radius) && grid.element) {\r\n            var chart = this.chart;\r\n            var xAxis = chart.xAxes.getIndex(0);\r\n            var count = 0;\r\n            var series = chart.series.getIndex(0);\r\n            if (series) {\r\n                count = series.dataItems.length;\r\n            }\r\n            // polygons are only possible if x axis is present\r\n            // @todo: review this\r\n            if (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__[\"CategoryAxis\"]) {\r\n                var gridLocation = xAxis.renderer.grid.template.location;\r\n                var angle = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n                for (var i = 1; i < count; i++) {\r\n                    angle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n                }\r\n                angle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n            }\r\n            else {\r\n                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"arcTo\"](startAngle, endAngle - startAngle, radius, radius);\r\n            }\r\n            grid.path = path;\r\n        }\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRendererRadial.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](location)) {\r\n            location = label.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        this.positionItem(label, point);\r\n        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.updateBaseGridElement = function () {\r\n        // @todo? zero grid for radar chart, is it needed?\r\n    };\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point Point coordinates\r\n     * @return Fits?\r\n     */\r\n    AxisRendererRadial.prototype.fitsToBounds = function (point) {\r\n        return true;\r\n    };\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Start angle of the axis in degrees. (0-360)\r\n         *\r\n         * @param value  Start angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angle here!\r\n            if (this.setPropertyValue(\"startAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the axis in degrees. (0-360)\r\n         *\r\n         * @param value  End angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angel here!\r\n            if (this.setPropertyValue(\"endAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"axisAngle\", {\r\n        /**\r\n         * @return Axis angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"axisAngle\");\r\n            //return $math.fitToRange(this.getPropertyValue(\"axisAngle\"), this.startAngle, this.endAngle); // no good, as less flexible\r\n        },\r\n        /**\r\n         * Angle of the radial axis in degrees. (0-360)\r\n         *\r\n         * @param value  Axis angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"axisAngle\", _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"normalizeAngle\"](value));\r\n            this.invalidateAxisItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"gridType\", {\r\n        /**\r\n         * Grid type\r\n         */\r\n        get: function () {\r\n            var axis = this.chart.xAxes.getIndex(0);\r\n            if (axis instanceof _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__[\"CategoryAxis\"]) {\r\n                return this.getPropertyValue(\"gridType\");\r\n            }\r\n            else {\r\n                return \"circles\";\r\n            }\r\n        },\r\n        // polygons grid type is only possible under these conditions: xAxis is available and it is CategoryAxis, also at least one series should be added to a chart\r\n        /**\r\n         * Grid type for radial axis.\r\n         *\r\n         * A grid on radia axis can either be perfect circles (\"circles\"), or\r\n         * straight lines (\"polygons\").\r\n         *\r\n         * @default \"circles\"\r\n         * @param value  Grid type\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"gridType\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRendererRadial.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        var pixelInnerRadius = this.pixelInnerRadius;\r\n        var pixelRadius = this.axisLength + pixelInnerRadius;\r\n        var innerRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](this.positionToCoordinate(startPosition), pixelInnerRadius, pixelRadius);\r\n        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](this.positionToCoordinate(endPosition), pixelInnerRadius, pixelRadius);\r\n        //let angleCount: number = this.angleCount;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        var arc = endAngle - startAngle;\r\n        var path;\r\n        var chart = this.chart;\r\n        var xAxis = chart.xAxes.getIndex(0);\r\n        var series = chart.series.getIndex(0);\r\n        var count = 0;\r\n        if (series) {\r\n            count = series.dataItems.length;\r\n        }\r\n        // polygons are only possible if x axis is present\r\n        // @todo: review this\r\n        if (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__[\"CategoryAxis\"]) {\r\n            var gridLocation = xAxis.renderer.grid.template.location;\r\n            var angle = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n            for (var i = 1; i < count; i++) {\r\n                angle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n            }\r\n            angle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n            for (var i = count - 1; i >= 0; i--) {\r\n                angle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n            }\r\n        }\r\n        else {\r\n            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"arc\"](startAngle, arc, radius, innerRadius);\r\n        }\r\n        return path;\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRendererRadial.prototype.updateBreakElement = function (axisBreak) {\r\n        // @todo: someday we might need axis break when gridType is polygons\r\n        var startLine = axisBreak.startLine;\r\n        var endLine = axisBreak.endLine;\r\n        var fillShape = axisBreak.fillShape;\r\n        var startPoint = axisBreak.startPoint;\r\n        var endPoint = axisBreak.endPoint;\r\n        startLine.radius = Math.abs(startPoint.y);\r\n        endLine.radius = Math.abs(endPoint.y);\r\n        fillShape.radius = Math.abs(endPoint.y);\r\n        fillShape.innerRadius = Math.abs(startPoint.y);\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRendererRadial.prototype.createBreakSprites = function (axisBreak) {\r\n        axisBreak.startLine = new _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__[\"WavedCircle\"]();\r\n        axisBreak.endLine = new _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__[\"WavedCircle\"]();\r\n        axisBreak.fillShape = new _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__[\"WavedCircle\"]();\r\n    };\r\n    /**\r\n     * Updates some of the Axis tooltip's visual properties, related to\r\n     * rendering of the Axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.updateTooltip = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var bigNum = 4000;\r\n            var bbx = -4000;\r\n            var bby = -4000;\r\n            var bbw = bigNum * 2;\r\n            var bbh = bigNum * 2;\r\n            var axisAngle = this.axisAngle;\r\n            if (axisAngle < 0) {\r\n                axisAngle += 360;\r\n            }\r\n            var tooltipOrientation = \"vertical\";\r\n            if ((axisAngle > 45 && axisAngle < 135) || (axisAngle > 225 && axisAngle < 315)) {\r\n                tooltipOrientation = \"horizontal\";\r\n            }\r\n            this.axis.updateTooltip(tooltipOrientation, { x: bbx, y: bby, width: bbw, height: bbh });\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick      Tick element\r\n     * @param position  Position\r\n     */\r\n    AxisRendererRadial.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        position = position + (endPosition - position) * tick.location;\r\n        var point = this.positionToPoint(position);\r\n        if (tick.element) {\r\n            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"normalizeAngle\"](this.axisAngle + 90);\r\n            if (angle / 90 != Math.round(angle / 90)) {\r\n                tick.pixelPerfect = false;\r\n            }\r\n            else {\r\n                tick.pixelPerfect = true;\r\n            }\r\n            var tickLength = -tick.length;\r\n            if (tick.inside) {\r\n                tickLength *= -1;\r\n            }\r\n            tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: tickLength * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: tickLength * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) });\r\n        }\r\n        this.positionItem(tick, point);\r\n        this.toggleVisibility(tick, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererRadial.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        var location = 0.5;\r\n        if (bullet instanceof _AxisBullet__WEBPACK_IMPORTED_MODULE_11__[\"AxisBullet\"]) {\r\n            location = bullet.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        this.positionItem(bullet, point);\r\n        this.toggleVisibility(bullet, position, 0, 1);\r\n    };\r\n    /**\r\n     * Converts a position on the axis to a coordinate in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    AxisRendererRadial.prototype.positionToCoordinate = function (position) {\r\n        var coordinate;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        var innerRadius = this.pixelInnerRadius;\r\n        if (axis.renderer.inversed) {\r\n            coordinate = (axis.end - position) * axisFullLength + innerRadius;\r\n        }\r\n        else {\r\n            coordinate = (position - axis.start) * axisFullLength + innerRadius;\r\n        }\r\n        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"round\"](coordinate, 1);\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererRadial.prototype.pointToPosition = function (point) {\r\n        var coordinate = (_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"](point) - this.pixelInnerRadius);\r\n        return this.coordinateToPosition(coordinate);\r\n    };\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart.set(value, null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisRendererRadial;\r\n}(_AxisRendererY__WEBPACK_IMPORTED_MODULE_1__[\"AxisRendererY\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_6__[\"registry\"].registeredClasses[\"AxisRendererRadial\"] = AxisRendererRadial;\r\n//# sourceMappingURL=AxisRendererRadial.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc1JlbmRlcmVyUmFkaWFsLmpzP2U2YmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDRjtBQUNnQjtBQUNHO0FBQ0w7QUFDYjtBQUNBO0FBQ0k7QUFDRjtBQUNGO0FBQ0w7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHlFQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixtRUFBTztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVFQUE0QjtBQUMvQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBEQUFjO0FBQ25DO0FBQ0EsK0NBQStDLDJEQUFPO0FBQ3RELHNDQUFzQyxtRUFBTztBQUM3QztBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsMkRBQU87QUFDdEQ7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1FQUFPO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVFQUE0QjtBQUMvQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDJEQUFnQjtBQUNyQyxnQkFBZ0IsYUFBYSxvREFBUyw4QkFBOEIsb0RBQVM7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVksRUFBRSw0QkFBNEIsb0RBQVMsNkNBQTZDLG9EQUFTLGtCQUFrQixJQUFJLDJEQUFZLEVBQUUsdUJBQXVCLG9EQUFTLHdDQUF3QyxvREFBUyxrQkFBa0I7QUFDelE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDREQUFpQjtBQUN0QztBQUNBO0FBQ0EsWUFBWSwwREFBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnR0FBZ0csMERBQVk7QUFDNUc7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxFQUFFLGFBQWEsb0RBQVMscUJBQXFCLG9EQUFTLFNBQVM7QUFDbEcsK0JBQStCLFdBQVc7QUFDMUM7QUFDQSw0QkFBNEIsMkRBQVksRUFBRSxhQUFhLG9EQUFTLHFCQUFxQixvREFBUyxTQUFTO0FBQ3ZHO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQVksRUFBRSxhQUFhLG9EQUFTLHFCQUFxQixvREFBUyxTQUFTO0FBQ25HO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQVksRUFBRSxhQUFhLG9EQUFTLDBCQUEwQixvREFBUyxjQUFjLElBQUksMERBQVc7QUFDM0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMERBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwR0FBMEc7QUFDMUcsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywrREFBb0I7QUFDbkU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMERBQVk7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsMkRBQWdCO0FBQzFDLHFCQUFxQiwyREFBZ0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRGQUE0RiwwREFBWTtBQUN4RztBQUNBO0FBQ0EsbUJBQW1CLDJEQUFZLEVBQUUsYUFBYSxvREFBUyxxQkFBcUIsb0RBQVMsU0FBUztBQUM5RiwyQkFBMkIsV0FBVztBQUN0QztBQUNBLHdCQUF3QiwyREFBWSxFQUFFLGFBQWEsb0RBQVMscUJBQXFCLG9EQUFTLFNBQVM7QUFDbkc7QUFDQTtBQUNBLG9CQUFvQiwyREFBWSxFQUFFLGFBQWEsb0RBQVMscUJBQXFCLG9EQUFTLFNBQVM7QUFDL0Ysb0JBQW9CLDJEQUFZLEVBQUUsa0JBQWtCLG9EQUFTLDBCQUEwQixvREFBUyxTQUFTO0FBQ3pHLG1DQUFtQyxRQUFRO0FBQzNDO0FBQ0Esd0JBQXdCLDJEQUFZLEVBQUUsa0JBQWtCLG9EQUFTLDBCQUEwQixvREFBUyxTQUFTO0FBQzdHO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix3REFBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxzRUFBVztBQUM3QyxnQ0FBZ0Msc0VBQVc7QUFDM0Msa0NBQWtDLHNFQUFXO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCwwQ0FBMEM7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0RBQW9CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFZLEVBQUUsYUFBYSxJQUFJLDJEQUFZLEVBQUUsaUJBQWlCLG9EQUFTLHlCQUF5QixvREFBUyxTQUFTO0FBQzFJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsdURBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0REFBaUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMsQ0FBQyw0REFBYTtBQUNlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc1JlbmRlcmVyUmFkaWFsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSwgZGVmaW5pbmcgQXhpcyBSZW5kZXJlciBmb3IgcmFkaWFsIGF4ZXMuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEF4aXNSZW5kZXJlclkgfSBmcm9tIFwiLi9BeGlzUmVuZGVyZXJZXCI7XHJcbmltcG9ydCB7IENhdGVnb3J5QXhpcyB9IGZyb20gXCIuL0NhdGVnb3J5QXhpc1wiO1xyXG5pbXBvcnQgeyBXYXZlZENpcmNsZSB9IGZyb20gXCIuLi8uLi9jb3JlL2VsZW1lbnRzL1dhdmVkQ2lyY2xlXCI7XHJcbmltcG9ydCB7IE11dGFibGVWYWx1ZURpc3Bvc2VyIH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvRGlzcG9zZXJcIjtcclxuaW1wb3J0IHsgUGVyY2VudCwgcGVyY2VudCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1BlcmNlbnRcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkbWF0aCBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9NYXRoXCI7XHJcbmltcG9ydCAqIGFzICRwYXRoIGZyb20gXCIuLi8uLi9jb3JlL3JlbmRlcmluZy9QYXRoXCI7XHJcbmltcG9ydCAqIGFzICR1dGlscyBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9VdGlsc1wiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbmltcG9ydCB7IEF4aXNCdWxsZXQgfSBmcm9tIFwiLi9BeGlzQnVsbGV0XCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQSByZW5kZXJlciBmb3IgcmFkaWFsIGF4aXMuXHJcbiAqL1xyXG52YXIgQXhpc1JlbmRlcmVyUmFkaWFsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEF4aXNSZW5kZXJlclJhZGlhbCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3IuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGF4aXMgUmVsYXRlZCBheGlzXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIEF4aXNSZW5kZXJlclJhZGlhbCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBcclxuICAgICAgICAvLyBJbml0XHJcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIHJlbGF0ZWQgY2hhcnQuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMuX2NoYXJ0ID0gbmV3IE11dGFibGVWYWx1ZURpc3Bvc2VyKCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQGlnbm9yZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLnBpeGVsUmFkaXVzUmVhbCA9IDA7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJBeGlzUmVuZGVyZXJSYWRpYWxcIjtcclxuICAgICAgICBfdGhpcy5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMuc3RhcnRBbmdsZSA9IC05MDtcclxuICAgICAgICBfdGhpcy5lbmRBbmdsZSA9IDI3MDtcclxuICAgICAgICBfdGhpcy5taW5HcmlkRGlzdGFuY2UgPSAzMDtcclxuICAgICAgICBfdGhpcy5ncmlkVHlwZSA9IFwiY2lyY2xlc1wiO1xyXG4gICAgICAgIF90aGlzLmF4aXNBbmdsZSA9IC05MDtcclxuICAgICAgICBfdGhpcy5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMubGF5b3V0ID0gXCJub25lXCI7XHJcbiAgICAgICAgX3RoaXMucmFkaXVzID0gcGVyY2VudCgxMDApO1xyXG4gICAgICAgIF90aGlzLmxpbmUuc3Ryb2tlT3BhY2l0eSA9IDA7XHJcbiAgICAgICAgX3RoaXMubGFiZWxzLnRlbXBsYXRlLmhvcml6b250YWxDZW50ZXIgPSBcIm1pZGRsZVwiO1xyXG4gICAgICAgIF90aGlzLl9kaXNwb3NlcnMucHVzaChfdGhpcy5fY2hhcnQpO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlcyBBeGlzIHJlbmRlcmVyLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqL1xyXG4gICAgQXhpc1JlbmRlcmVyUmFkaWFsLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBzbyB0aGF0IHJhZGl1cyB3b3VsZCBiZSB1cGRhdGVkXHJcbiAgICAgICAgaWYgKHRoaXMuY2hhcnQgJiYgdGhpcy5jaGFydC5pbnZhbGlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcnQudmFsaWRhdGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMpO1xyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLCBcImF4aXNMZW5ndGhcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFJldHVybnMgYWN0dWFsIGxlbmd0aCBvZiB0aGUgQXhpcywgaW4gcGl4ZWxzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHJldHVybiBMZW5ndGggKHB4KVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5waXhlbFJhZGl1cyAtIHRoaXMucGl4ZWxJbm5lclJhZGl1cztcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLCBcInJhZGl1c1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBPdXRlciByYWRpdXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcInJhZGl1c1wiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIE91dGVyIHJhZGl1cyBvZiB0aGUgYXhpcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIENhbiBiZSBhYnNvbHV0ZSAocHgpIG9yIHJlbGF0aXZlIChbW1BlcmNlbnRdXSkuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgIE91dGVyIHJhZGl1c1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UGVyY2VudFByb3BlcnR5KFwicmFkaXVzXCIsIHZhbHVlLCBmYWxzZSwgZmFsc2UsIDEwLCBmYWxzZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc1JlbmRlcmVyUmFkaWFsLnByb3RvdHlwZSwgXCJwaXhlbFJhZGl1c1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogT3V0ZXIgcmFkaXVzIGluIHBpeGVscy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEByZXR1cm4gT3V0ZXIgcmFkaXVzIChweClcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuICR1dGlscy5yZWxhdGl2ZVJhZGl1c1RvVmFsdWUodGhpcy5yYWRpdXMsIHRoaXMucGl4ZWxSYWRpdXNSZWFsKSB8fCAwO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUsIFwiaW5uZXJSYWRpdXNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gSW5uZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgICAgICAgIHZhciBpbm5lclJhZGl1cyA9IHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImlubmVyUmFkaXVzXCIpO1xyXG4gICAgICAgICAgICBpZiAoY2hhcnQpIHtcclxuICAgICAgICAgICAgICAgIGlmICghJHR5cGUuaGFzVmFsdWUoaW5uZXJSYWRpdXMpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5uZXJSYWRpdXMgPSBjaGFydC5pbm5lclJhZGl1cztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5uZXJSYWRpdXMgaW5zdGFuY2VvZiBQZXJjZW50ICYmIGNoYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlubmVyUmFkaXVzID0gcGVyY2VudChpbm5lclJhZGl1cy52YWx1ZSAqIGNoYXJ0LmlubmVyUmFkaXVzTW9kaWZ5ZXIgKiAxMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbm5lclJhZGl1cyBpbnN0YW5jZW9mIFBlcmNlbnQgJiYgY2hhcnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1yID0gY2hhcnQubXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGlubmVyUmFkaXVzLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IE1hdGgubWF4KG1yICogdmFsdWUsIG1yIC0gTWF0aC5taW4oY2hhcnQucGxvdENvbnRhaW5lci5pbm5lckhlaWdodCwgY2hhcnQucGxvdENvbnRhaW5lci5pbm5lcldpZHRoKSkgLyBtcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5uZXJSYWRpdXMgPSBwZXJjZW50KHZhbHVlICogMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGlubmVyUmFkaXVzO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSW5uZXIgcmFkaXVzIG9mIHRoZSBheGlzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQ2FuIGJlIGFic29sdXRlIChweCkgb3IgcmVsYXRpdmUgKFtbUGVyY2VudF1dKS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgT3V0ZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQZXJjZW50UHJvcGVydHkoXCJpbm5lclJhZGl1c1wiLCB2YWx1ZSwgZmFsc2UsIGZhbHNlLCAxMCwgZmFsc2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUsIFwicGl4ZWxJbm5lclJhZGl1c1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSW5uZXIgcmFkaXVzIGluIHBpeGVscy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEByZXR1cm4gSW5uZXIgcmFkaXVzIChweClcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuICR1dGlscy5yZWxhdGl2ZVJhZGl1c1RvVmFsdWUodGhpcy5pbm5lclJhZGl1cywgdGhpcy5waXhlbFJhZGl1c1JlYWwpIHx8IDA7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIHJlbGF0aXZlIHBvc2l0aW9uIG9uIGF4aXMgdG8gcG9pbnQgY29vcmRpbmF0ZXMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICBQb3NpdGlvbiAoMC0xKVxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uMiAgUG9zaXRpb24gKDAtMSkgUG9zaXRpb24gb24gdGhlIHNlY29uZCBheGlzXHJcbiAgICAgKiBAcmV0dXJuIFBvaW50XHJcbiAgICAgKi9cclxuICAgIEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUucG9zaXRpb25Ub1BvaW50ID0gZnVuY3Rpb24gKHBvc2l0aW9uLCBwb3NpdGlvbjIpIHtcclxuICAgICAgICB2YXIgcmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSh0aGlzLnBvc2l0aW9uVG9Db29yZGluYXRlKHBvc2l0aW9uKSwgMCwgSW5maW5pdHkpO1xyXG4gICAgICAgIHJldHVybiB7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyh0aGlzLmF4aXNBbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbih0aGlzLmF4aXNBbmdsZSkgfTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgYW5kIHBvc2l0aW9ucyB0aGUgYXhpcyBsaW5lIGVsZW1lbnQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLnVwZGF0ZUF4aXNMaW5lID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMubGluZS5wYXRoID0gJHBhdGgubW92ZVRvKHsgeDogdGhpcy5waXhlbElubmVyUmFkaXVzICogJG1hdGguY29zKHRoaXMuYXhpc0FuZ2xlKSwgeTogdGhpcy5waXhlbElubmVyUmFkaXVzICogJG1hdGguc2luKHRoaXMuYXhpc0FuZ2xlKSB9KSArICRwYXRoLmxpbmVUbyh7IHg6IHRoaXMucGl4ZWxSYWRpdXMgKiAkbWF0aC5jb3ModGhpcy5heGlzQW5nbGUpLCB5OiB0aGlzLnBpeGVsUmFkaXVzICogJG1hdGguc2luKHRoaXMuYXhpc0FuZ2xlKSB9KTtcclxuICAgICAgICB2YXIgdGl0bGUgPSB0aGlzLmF4aXMudGl0bGU7XHJcbiAgICAgICAgdGl0bGUudmFsaWduID0gXCJub25lXCI7XHJcbiAgICAgICAgdGl0bGUuaG9yaXpvbnRhbENlbnRlciA9IFwibWlkZGxlXCI7XHJcbiAgICAgICAgdGl0bGUudmVydGljYWxDZW50ZXIgPSBcImJvdHRvbVwiO1xyXG4gICAgICAgIHRpdGxlLnkgPSAtdGhpcy5heGlzTGVuZ3RoIC8gMjtcclxuICAgICAgICB2YXIgcm90YXRpb24gPSA5MDtcclxuICAgICAgICBpZiAodGhpcy5vcHBvc2l0ZSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaW5zaWRlKSB7XHJcbiAgICAgICAgICAgICAgICByb3RhdGlvbiA9IC05MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaW5zaWRlKSB7XHJcbiAgICAgICAgICAgICAgICByb3RhdGlvbiA9IC05MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aXRsZS5yb3RhdGlvbiA9IHJvdGF0aW9uO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBhbmQgcG9zaXRpb25zIGEgZ3JpZCBlbGVtZW50LlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBncmlkICAgICAgICAgR3JpZCBlbGVtZW50XHJcbiAgICAgKiBAcGFyYW0gcG9zaXRpb24gICAgIFN0YXJ0aW5nIHBvc2l0aW9uXHJcbiAgICAgKiBAcGFyYW0gZW5kUG9zaXRpb24gIEVuZCBwb3NpdGlvblxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLnVwZGF0ZUdyaWRFbGVtZW50ID0gZnVuY3Rpb24gKGdyaWQsIHBvc2l0aW9uLCBlbmRQb3NpdGlvbikge1xyXG4gICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gKyAoZW5kUG9zaXRpb24gLSBwb3NpdGlvbikgKiBncmlkLmxvY2F0aW9uO1xyXG4gICAgICAgIHZhciBwb2ludCA9IHRoaXMucG9zaXRpb25Ub1BvaW50KHBvc2l0aW9uKTtcclxuICAgICAgICB2YXIgcGF0aDtcclxuICAgICAgICB2YXIgcmFkaXVzID0gJG1hdGguZ2V0RGlzdGFuY2UocG9pbnQpO1xyXG4gICAgICAgIHZhciBzdGFydEFuZ2xlID0gdGhpcy5zdGFydEFuZ2xlO1xyXG4gICAgICAgIHZhciBlbmRBbmdsZSA9IHRoaXMuZW5kQW5nbGU7XHJcbiAgICAgICAgaWYgKCR0eXBlLmlzTnVtYmVyKHJhZGl1cykgJiYgZ3JpZC5lbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHZhciBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgICAgICAgIHZhciB4QXhpcyA9IGNoYXJ0LnhBeGVzLmdldEluZGV4KDApO1xyXG4gICAgICAgICAgICB2YXIgY291bnQgPSAwO1xyXG4gICAgICAgICAgICB2YXIgc2VyaWVzID0gY2hhcnQuc2VyaWVzLmdldEluZGV4KDApO1xyXG4gICAgICAgICAgICBpZiAoc2VyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICBjb3VudCA9IHNlcmllcy5kYXRhSXRlbXMubGVuZ3RoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIHBvbHlnb25zIGFyZSBvbmx5IHBvc3NpYmxlIGlmIHggYXhpcyBpcyBwcmVzZW50XHJcbiAgICAgICAgICAgIC8vIEB0b2RvOiByZXZpZXcgdGhpc1xyXG4gICAgICAgICAgICBpZiAodGhpcy5ncmlkVHlwZSA9PSBcInBvbHlnb25zXCIgJiYgY291bnQgPiAwICYmIHNlcmllcyAmJiB4QXhpcyAmJiB4QXhpcyBpbnN0YW5jZW9mIENhdGVnb3J5QXhpcykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGdyaWRMb2NhdGlvbiA9IHhBeGlzLnJlbmRlcmVyLmdyaWQudGVtcGxhdGUubG9jYXRpb247XHJcbiAgICAgICAgICAgICAgICB2YXIgYW5nbGUgPSB4QXhpcy5nZXRBbmdsZShzZXJpZXMuZGF0YUl0ZW1zLmdldEluZGV4KDApLCBcImNhdGVnb3J5WFwiLCBncmlkTG9jYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgcGF0aCA9ICRwYXRoLm1vdmVUbyh7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGNvdW50OyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBhbmdsZSA9IHhBeGlzLmdldEFuZ2xlKHNlcmllcy5kYXRhSXRlbXMuZ2V0SW5kZXgoaSksIFwiY2F0ZWdvcnlYXCIsIGdyaWRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCArPSAkcGF0aC5saW5lVG8oeyB4OiByYWRpdXMgKiAkbWF0aC5jb3MoYW5nbGUpLCB5OiByYWRpdXMgKiAkbWF0aC5zaW4oYW5nbGUpIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYW5nbGUgPSB4QXhpcy5nZXRBbmdsZShzZXJpZXMuZGF0YUl0ZW1zLmdldEluZGV4KGNvdW50IC0gMSksIFwiY2F0ZWdvcnlYXCIsIHhBeGlzLnJlbmRlcmVyLmNlbGxFbmRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmxpbmVUbyh7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwYXRoID0gJHBhdGgubW92ZVRvKHsgeDogcmFkaXVzICogJG1hdGguY29zKHN0YXJ0QW5nbGUpLCB5OiByYWRpdXMgKiAkbWF0aC5zaW4oc3RhcnRBbmdsZSkgfSkgKyAkcGF0aC5hcmNUbyhzdGFydEFuZ2xlLCBlbmRBbmdsZSAtIHN0YXJ0QW5nbGUsIHJhZGl1cywgcmFkaXVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBncmlkLnBhdGggPSBwYXRoO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnRvZ2dsZVZpc2liaWxpdHkoZ3JpZCwgcG9zaXRpb24sIDAsIDEpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBhbmQgcG9zaXRpb25zIGEgbGFiZWwgZWxlbWVudC5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gbGFiZWwgICAgICAgIExhYmVsIGVsZW1lbnRcclxuICAgICAqIEBwYXJhbSBwb3NpdGlvbiAgICAgU3RhcnRpbmcgcG9zaXRpb25cclxuICAgICAqIEBwYXJhbSBlbmRQb3NpdGlvbiAgRW5kaW5nIHBvc2l0aW9uXHJcbiAgICAgKi9cclxuICAgIEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUudXBkYXRlTGFiZWxFbGVtZW50ID0gZnVuY3Rpb24gKGxhYmVsLCBwb3NpdGlvbiwgZW5kUG9zaXRpb24sIGxvY2F0aW9uKSB7XHJcbiAgICAgICAgaWYgKCEkdHlwZS5oYXNWYWx1ZShsb2NhdGlvbikpIHtcclxuICAgICAgICAgICAgbG9jYXRpb24gPSBsYWJlbC5sb2NhdGlvbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcG9zaXRpb24gPSBwb3NpdGlvbiArIChlbmRQb3NpdGlvbiAtIHBvc2l0aW9uKSAqIGxvY2F0aW9uO1xyXG4gICAgICAgIHZhciBwb2ludCA9IHRoaXMucG9zaXRpb25Ub1BvaW50KHBvc2l0aW9uKTtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uSXRlbShsYWJlbCwgcG9pbnQpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlVmlzaWJpbGl0eShsYWJlbCwgcG9zaXRpb24sIHRoaXMubWluTGFiZWxQb3NpdGlvbiwgdGhpcy5tYXhMYWJlbFBvc2l0aW9uKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgYW5kIHBvc2l0aW9ucyB0aGUgYmFzZSBncmlkIGVsZW1lbnQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLnVwZGF0ZUJhc2VHcmlkRWxlbWVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBAdG9kbz8gemVybyBncmlkIGZvciByYWRhciBjaGFydCwgaXMgaXQgbmVlZGVkP1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIGlmIHBvaW50IGlzIHdpdGhpbiBib3VuZHMgb2YgYSBjb250YWluZXIuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIHBvaW50IFBvaW50IGNvb3JkaW5hdGVzXHJcbiAgICAgKiBAcmV0dXJuIEZpdHM/XHJcbiAgICAgKi9cclxuICAgIEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUuZml0c1RvQm91bmRzID0gZnVuY3Rpb24gKHBvaW50KSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUsIFwic3RhcnRBbmdsZVwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBTdGFydCBhbmdsZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwic3RhcnRBbmdsZVwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFN0YXJ0IGFuZ2xlIG9mIHRoZSBheGlzIGluIGRlZ3JlZXMuICgwLTM2MClcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgU3RhcnQgYW5nbGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAvLyBkbyBub3Qgbm9ybWFsaXplIGFuZ2xlIGhlcmUhXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJzdGFydEFuZ2xlXCIsIHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkYXRlQXhpc0l0ZW1zKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLCBcImVuZEFuZ2xlXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEVuZCBhbmdsZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiZW5kQW5nbGVcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBFbmQgYW5nbGUgb2YgdGhlIGF4aXMgaW4gZGVncmVlcy4gKDAtMzYwKVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBFbmQgYW5nbGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAvLyBkbyBub3Qgbm9ybWFsaXplIGFuZ2VsIGhlcmUhXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJlbmRBbmdsZVwiLCB2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZGF0ZUF4aXNJdGVtcygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc1JlbmRlcmVyUmFkaWFsLnByb3RvdHlwZSwgXCJheGlzQW5nbGVcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gQXhpcyBhbmdsZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiYXhpc0FuZ2xlXCIpO1xyXG4gICAgICAgICAgICAvL3JldHVybiAkbWF0aC5maXRUb1JhbmdlKHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImF4aXNBbmdsZVwiKSwgdGhpcy5zdGFydEFuZ2xlLCB0aGlzLmVuZEFuZ2xlKTsgLy8gbm8gZ29vZCwgYXMgbGVzcyBmbGV4aWJsZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQW5nbGUgb2YgdGhlIHJhZGlhbCBheGlzIGluIGRlZ3JlZXMuICgwLTM2MClcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgQXhpcyBhbmdsZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImF4aXNBbmdsZVwiLCAkbWF0aC5ub3JtYWxpemVBbmdsZSh2YWx1ZSkpO1xyXG4gICAgICAgICAgICB0aGlzLmludmFsaWRhdGVBeGlzSXRlbXMoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLCBcImdyaWRUeXBlXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBHcmlkIHR5cGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGF4aXMgPSB0aGlzLmNoYXJ0LnhBeGVzLmdldEluZGV4KDApO1xyXG4gICAgICAgICAgICBpZiAoYXhpcyBpbnN0YW5jZW9mIENhdGVnb3J5QXhpcykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImdyaWRUeXBlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiY2lyY2xlc1wiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvLyBwb2x5Z29ucyBncmlkIHR5cGUgaXMgb25seSBwb3NzaWJsZSB1bmRlciB0aGVzZSBjb25kaXRpb25zOiB4QXhpcyBpcyBhdmFpbGFibGUgYW5kIGl0IGlzIENhdGVnb3J5QXhpcywgYWxzbyBhdCBsZWFzdCBvbmUgc2VyaWVzIHNob3VsZCBiZSBhZGRlZCB0byBhIGNoYXJ0XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogR3JpZCB0eXBlIGZvciByYWRpYWwgYXhpcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEEgZ3JpZCBvbiByYWRpYSBheGlzIGNhbiBlaXRoZXIgYmUgcGVyZmVjdCBjaXJjbGVzIChcImNpcmNsZXNcIiksIG9yXHJcbiAgICAgICAgICogc3RyYWlnaHQgbGluZXMgKFwicG9seWdvbnNcIikuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAZGVmYXVsdCBcImNpcmNsZXNcIlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgR3JpZCB0eXBlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiZ3JpZFR5cGVcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBbZ2V0UG9zaXRpb25SYW5nZVBhdGggZGVzY3JpcHRpb25dXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqIEBwYXJhbSBzdGFydFBvc2l0aW9uICBTdGFydGluZyBwb3NpdGlvblxyXG4gICAgICogQHBhcmFtIGVuZFBvc2l0aW9uICAgIEVuZCBwb3NpdGlvblxyXG4gICAgICogQHJldHVybiBTVkcgcGF0aFxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLmdldFBvc2l0aW9uUmFuZ2VQYXRoID0gZnVuY3Rpb24gKHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7XHJcbiAgICAgICAgdmFyIHBpeGVsSW5uZXJSYWRpdXMgPSB0aGlzLnBpeGVsSW5uZXJSYWRpdXM7XHJcbiAgICAgICAgdmFyIHBpeGVsUmFkaXVzID0gdGhpcy5heGlzTGVuZ3RoICsgcGl4ZWxJbm5lclJhZGl1cztcclxuICAgICAgICB2YXIgaW5uZXJSYWRpdXMgPSAkbWF0aC5maXRUb1JhbmdlKHRoaXMucG9zaXRpb25Ub0Nvb3JkaW5hdGUoc3RhcnRQb3NpdGlvbiksIHBpeGVsSW5uZXJSYWRpdXMsIHBpeGVsUmFkaXVzKTtcclxuICAgICAgICB2YXIgcmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSh0aGlzLnBvc2l0aW9uVG9Db29yZGluYXRlKGVuZFBvc2l0aW9uKSwgcGl4ZWxJbm5lclJhZGl1cywgcGl4ZWxSYWRpdXMpO1xyXG4gICAgICAgIC8vbGV0IGFuZ2xlQ291bnQ6IG51bWJlciA9IHRoaXMuYW5nbGVDb3VudDtcclxuICAgICAgICB2YXIgc3RhcnRBbmdsZSA9IHRoaXMuc3RhcnRBbmdsZTtcclxuICAgICAgICB2YXIgZW5kQW5nbGUgPSB0aGlzLmVuZEFuZ2xlO1xyXG4gICAgICAgIHZhciBhcmMgPSBlbmRBbmdsZSAtIHN0YXJ0QW5nbGU7XHJcbiAgICAgICAgdmFyIHBhdGg7XHJcbiAgICAgICAgdmFyIGNoYXJ0ID0gdGhpcy5jaGFydDtcclxuICAgICAgICB2YXIgeEF4aXMgPSBjaGFydC54QXhlcy5nZXRJbmRleCgwKTtcclxuICAgICAgICB2YXIgc2VyaWVzID0gY2hhcnQuc2VyaWVzLmdldEluZGV4KDApO1xyXG4gICAgICAgIHZhciBjb3VudCA9IDA7XHJcbiAgICAgICAgaWYgKHNlcmllcykge1xyXG4gICAgICAgICAgICBjb3VudCA9IHNlcmllcy5kYXRhSXRlbXMubGVuZ3RoO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBwb2x5Z29ucyBhcmUgb25seSBwb3NzaWJsZSBpZiB4IGF4aXMgaXMgcHJlc2VudFxyXG4gICAgICAgIC8vIEB0b2RvOiByZXZpZXcgdGhpc1xyXG4gICAgICAgIGlmICh0aGlzLmdyaWRUeXBlID09IFwicG9seWdvbnNcIiAmJiBjb3VudCA+IDAgJiYgc2VyaWVzICYmIHhBeGlzICYmIHhBeGlzIGluc3RhbmNlb2YgQ2F0ZWdvcnlBeGlzKSB7XHJcbiAgICAgICAgICAgIHZhciBncmlkTG9jYXRpb24gPSB4QXhpcy5yZW5kZXJlci5ncmlkLnRlbXBsYXRlLmxvY2F0aW9uO1xyXG4gICAgICAgICAgICB2YXIgYW5nbGUgPSB4QXhpcy5nZXRBbmdsZShzZXJpZXMuZGF0YUl0ZW1zLmdldEluZGV4KDApLCBcImNhdGVnb3J5WFwiLCBncmlkTG9jYXRpb24pO1xyXG4gICAgICAgICAgICBwYXRoID0gJHBhdGgubW92ZVRvKHsgeDogcmFkaXVzICogJG1hdGguY29zKGFuZ2xlKSwgeTogcmFkaXVzICogJG1hdGguc2luKGFuZ2xlKSB9KTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBjb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBhbmdsZSA9IHhBeGlzLmdldEFuZ2xlKHNlcmllcy5kYXRhSXRlbXMuZ2V0SW5kZXgoaSksIFwiY2F0ZWdvcnlYXCIsIGdyaWRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmxpbmVUbyh7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYW5nbGUgPSB4QXhpcy5nZXRBbmdsZShzZXJpZXMuZGF0YUl0ZW1zLmdldEluZGV4KGNvdW50IC0gMSksIFwiY2F0ZWdvcnlYXCIsIHhBeGlzLnJlbmRlcmVyLmNlbGxFbmRMb2NhdGlvbik7XHJcbiAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubGluZVRvKHsgeDogcmFkaXVzICogJG1hdGguY29zKGFuZ2xlKSwgeTogcmFkaXVzICogJG1hdGguc2luKGFuZ2xlKSB9KTtcclxuICAgICAgICAgICAgcGF0aCArPSAkcGF0aC5tb3ZlVG8oeyB4OiBpbm5lclJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IGlubmVyUmFkaXVzICogJG1hdGguc2luKGFuZ2xlKSB9KTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IGNvdW50IC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgICAgICAgICAgIGFuZ2xlID0geEF4aXMuZ2V0QW5nbGUoc2VyaWVzLmRhdGFJdGVtcy5nZXRJbmRleChpKSwgXCJjYXRlZ29yeVhcIiwgZ3JpZExvY2F0aW9uKTtcclxuICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubGluZVRvKHsgeDogaW5uZXJSYWRpdXMgKiAkbWF0aC5jb3MoYW5nbGUpLCB5OiBpbm5lclJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHBhdGggPSAkcGF0aC5hcmMoc3RhcnRBbmdsZSwgYXJjLCByYWRpdXMsIGlubmVyUmFkaXVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBhdGg7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIGFuZCBwb3NpdGlvbnMgYW4gYXhpcyBicmVhayBlbGVtZW50LlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBheGlzQnJlYWsgQnJlYWsgZWxlbWVudFxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLnVwZGF0ZUJyZWFrRWxlbWVudCA9IGZ1bmN0aW9uIChheGlzQnJlYWspIHtcclxuICAgICAgICAvLyBAdG9kbzogc29tZWRheSB3ZSBtaWdodCBuZWVkIGF4aXMgYnJlYWsgd2hlbiBncmlkVHlwZSBpcyBwb2x5Z29uc1xyXG4gICAgICAgIHZhciBzdGFydExpbmUgPSBheGlzQnJlYWsuc3RhcnRMaW5lO1xyXG4gICAgICAgIHZhciBlbmRMaW5lID0gYXhpc0JyZWFrLmVuZExpbmU7XHJcbiAgICAgICAgdmFyIGZpbGxTaGFwZSA9IGF4aXNCcmVhay5maWxsU2hhcGU7XHJcbiAgICAgICAgdmFyIHN0YXJ0UG9pbnQgPSBheGlzQnJlYWsuc3RhcnRQb2ludDtcclxuICAgICAgICB2YXIgZW5kUG9pbnQgPSBheGlzQnJlYWsuZW5kUG9pbnQ7XHJcbiAgICAgICAgc3RhcnRMaW5lLnJhZGl1cyA9IE1hdGguYWJzKHN0YXJ0UG9pbnQueSk7XHJcbiAgICAgICAgZW5kTGluZS5yYWRpdXMgPSBNYXRoLmFicyhlbmRQb2ludC55KTtcclxuICAgICAgICBmaWxsU2hhcGUucmFkaXVzID0gTWF0aC5hYnMoZW5kUG9pbnQueSk7XHJcbiAgICAgICAgZmlsbFNoYXBlLmlubmVyUmFkaXVzID0gTWF0aC5hYnMoc3RhcnRQb2ludC55KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgdmlzdWFsIGVsZW1lbnRzIGZvciBhbmQgYXhpcyBicmVhay5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gYXhpc0JyZWFrIEF4aXMgYnJlYWtcclxuICAgICAqL1xyXG4gICAgQXhpc1JlbmRlcmVyUmFkaWFsLnByb3RvdHlwZS5jcmVhdGVCcmVha1Nwcml0ZXMgPSBmdW5jdGlvbiAoYXhpc0JyZWFrKSB7XHJcbiAgICAgICAgYXhpc0JyZWFrLnN0YXJ0TGluZSA9IG5ldyBXYXZlZENpcmNsZSgpO1xyXG4gICAgICAgIGF4aXNCcmVhay5lbmRMaW5lID0gbmV3IFdhdmVkQ2lyY2xlKCk7XHJcbiAgICAgICAgYXhpc0JyZWFrLmZpbGxTaGFwZSA9IG5ldyBXYXZlZENpcmNsZSgpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBzb21lIG9mIHRoZSBBeGlzIHRvb2x0aXAncyB2aXN1YWwgcHJvcGVydGllcywgcmVsYXRlZCB0b1xyXG4gICAgICogcmVuZGVyaW5nIG9mIHRoZSBBeGlzLlxyXG4gICAgICpcclxuICAgICAqIEB0b2RvIERlc2NyaXB0aW9uIChyZXZpZXcpXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUudXBkYXRlVG9vbHRpcCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXhpcyA9IHRoaXMuYXhpcztcclxuICAgICAgICBpZiAoYXhpcykge1xyXG4gICAgICAgICAgICB2YXIgYmlnTnVtID0gNDAwMDtcclxuICAgICAgICAgICAgdmFyIGJieCA9IC00MDAwO1xyXG4gICAgICAgICAgICB2YXIgYmJ5ID0gLTQwMDA7XHJcbiAgICAgICAgICAgIHZhciBiYncgPSBiaWdOdW0gKiAyO1xyXG4gICAgICAgICAgICB2YXIgYmJoID0gYmlnTnVtICogMjtcclxuICAgICAgICAgICAgdmFyIGF4aXNBbmdsZSA9IHRoaXMuYXhpc0FuZ2xlO1xyXG4gICAgICAgICAgICBpZiAoYXhpc0FuZ2xlIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgYXhpc0FuZ2xlICs9IDM2MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdG9vbHRpcE9yaWVudGF0aW9uID0gXCJ2ZXJ0aWNhbFwiO1xyXG4gICAgICAgICAgICBpZiAoKGF4aXNBbmdsZSA+IDQ1ICYmIGF4aXNBbmdsZSA8IDEzNSkgfHwgKGF4aXNBbmdsZSA+IDIyNSAmJiBheGlzQW5nbGUgPCAzMTUpKSB7XHJcbiAgICAgICAgICAgICAgICB0b29sdGlwT3JpZW50YXRpb24gPSBcImhvcml6b250YWxcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmF4aXMudXBkYXRlVG9vbHRpcCh0b29sdGlwT3JpZW50YXRpb24sIHsgeDogYmJ4LCB5OiBiYnksIHdpZHRoOiBiYncsIGhlaWdodDogYmJoIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgYW5kIHBvc2l0aW9ucyBhIHRpY2sgZWxlbWVudC5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gdGljayAgICAgIFRpY2sgZWxlbWVudFxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICBQb3NpdGlvblxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLnVwZGF0ZVRpY2tFbGVtZW50ID0gZnVuY3Rpb24gKHRpY2ssIHBvc2l0aW9uLCBlbmRQb3NpdGlvbikge1xyXG4gICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gKyAoZW5kUG9zaXRpb24gLSBwb3NpdGlvbikgKiB0aWNrLmxvY2F0aW9uO1xyXG4gICAgICAgIHZhciBwb2ludCA9IHRoaXMucG9zaXRpb25Ub1BvaW50KHBvc2l0aW9uKTtcclxuICAgICAgICBpZiAodGljay5lbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHZhciBhbmdsZSA9ICRtYXRoLm5vcm1hbGl6ZUFuZ2xlKHRoaXMuYXhpc0FuZ2xlICsgOTApO1xyXG4gICAgICAgICAgICBpZiAoYW5nbGUgLyA5MCAhPSBNYXRoLnJvdW5kKGFuZ2xlIC8gOTApKSB7XHJcbiAgICAgICAgICAgICAgICB0aWNrLnBpeGVsUGVyZmVjdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGljay5waXhlbFBlcmZlY3QgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciB0aWNrTGVuZ3RoID0gLXRpY2subGVuZ3RoO1xyXG4gICAgICAgICAgICBpZiAodGljay5pbnNpZGUpIHtcclxuICAgICAgICAgICAgICAgIHRpY2tMZW5ndGggKj0gLTE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGljay5wYXRoID0gJHBhdGgubW92ZVRvKHsgeDogMCwgeTogMCB9KSArICRwYXRoLmxpbmVUbyh7IHg6IHRpY2tMZW5ndGggKiAkbWF0aC5jb3MoYW5nbGUpLCB5OiB0aWNrTGVuZ3RoICogJG1hdGguc2luKGFuZ2xlKSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbkl0ZW0odGljaywgcG9pbnQpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlVmlzaWJpbGl0eSh0aWNrLCBwb3NpdGlvbiwgMCwgMSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIGFuZCBwb3NpdGlvbnMgYXhpcyBidWxsZXQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIGJ1bGxldCAgICAgICBBeGlzQnVsbGV0IGVsZW1lbnRcclxuICAgICAqIEBwYXJhbSBwb3NpdGlvbiAgICAgU3RhcnRpbmcgcG9zaXRpb25cclxuICAgICAqIEBwYXJhbSBlbmRQb3NpdGlvbiAgRW5kIHBvc2l0aW9uXHJcbiAgICAgKi9cclxuICAgIEF4aXNSZW5kZXJlclJhZGlhbC5wcm90b3R5cGUudXBkYXRlQnVsbGV0ID0gZnVuY3Rpb24gKGJ1bGxldCwgcG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7XHJcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gMC41O1xyXG4gICAgICAgIGlmIChidWxsZXQgaW5zdGFuY2VvZiBBeGlzQnVsbGV0KSB7XHJcbiAgICAgICAgICAgIGxvY2F0aW9uID0gYnVsbGV0LmxvY2F0aW9uO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uICsgKGVuZFBvc2l0aW9uIC0gcG9zaXRpb24pICogbG9jYXRpb247XHJcbiAgICAgICAgdmFyIHBvaW50ID0gdGhpcy5wb3NpdGlvblRvUG9pbnQocG9zaXRpb24pO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb25JdGVtKGJ1bGxldCwgcG9pbnQpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlVmlzaWJpbGl0eShidWxsZXQsIHBvc2l0aW9uLCAwLCAxKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIGEgcG9zaXRpb24gb24gdGhlIGF4aXMgdG8gYSBjb29yZGluYXRlIGluIHBpeGVscy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gcG9zaXRpb24gIFBvc2l0aW9uICgwLTEpXHJcbiAgICAgKiBAcmV0dXJuIENvb3JkaW5hdGUgKHB4KVxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLnBvc2l0aW9uVG9Db29yZGluYXRlID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgdmFyIGNvb3JkaW5hdGU7XHJcbiAgICAgICAgdmFyIGF4aXMgPSB0aGlzLmF4aXM7XHJcbiAgICAgICAgdmFyIGF4aXNGdWxsTGVuZ3RoID0gYXhpcy5heGlzRnVsbExlbmd0aDtcclxuICAgICAgICB2YXIgaW5uZXJSYWRpdXMgPSB0aGlzLnBpeGVsSW5uZXJSYWRpdXM7XHJcbiAgICAgICAgaWYgKGF4aXMucmVuZGVyZXIuaW52ZXJzZWQpIHtcclxuICAgICAgICAgICAgY29vcmRpbmF0ZSA9IChheGlzLmVuZCAtIHBvc2l0aW9uKSAqIGF4aXNGdWxsTGVuZ3RoICsgaW5uZXJSYWRpdXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb29yZGluYXRlID0gKHBvc2l0aW9uIC0gYXhpcy5zdGFydCkgKiBheGlzRnVsbExlbmd0aCArIGlubmVyUmFkaXVzO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gJG1hdGgucm91bmQoY29vcmRpbmF0ZSwgMSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyBhIHBvaW50IGF0IHNwZWNpZmljIGNvb3JkaW5hdGVzIHRvIGEgcmVsYXRpdmUgcG9zaXRpb24gKDAtMSlcclxuICAgICAqIG9uIHRoZSBheGlzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwb2ludCAgUG9pbnRcclxuICAgICAqIEByZXR1cm4gUG9zaXRpb24gKDAtMSlcclxuICAgICAqL1xyXG4gICAgQXhpc1JlbmRlcmVyUmFkaWFsLnByb3RvdHlwZS5wb2ludFRvUG9zaXRpb24gPSBmdW5jdGlvbiAocG9pbnQpIHtcclxuICAgICAgICB2YXIgY29vcmRpbmF0ZSA9ICgkbWF0aC5nZXREaXN0YW5jZShwb2ludCkgLSB0aGlzLnBpeGVsSW5uZXJSYWRpdXMpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvb3JkaW5hdGVUb1Bvc2l0aW9uKGNvb3JkaW5hdGUpO1xyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBeGlzUmVuZGVyZXJSYWRpYWwucHJvdG90eXBlLCBcImNoYXJ0XCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgICAgICogQHJldHVybiBDaGFydFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2hhcnQuZ2V0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIGNoYXJ0LCBhc3NvY2lhdGVkIHdpdGggdGhlIEF4aXMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBDaGFydFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NoYXJ0LnNldCh2YWx1ZSwgbnVsbCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gQXhpc1JlbmRlcmVyUmFkaWFsO1xyXG59KEF4aXNSZW5kZXJlclkpKTtcclxuZXhwb3J0IHsgQXhpc1JlbmRlcmVyUmFkaWFsIH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkF4aXNSZW5kZXJlclJhZGlhbFwiXSA9IEF4aXNSZW5kZXJlclJhZGlhbDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXhpc1JlbmRlcmVyUmFkaWFsLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js ***!
  \***********************************************************************************/
/*! exports provided: AxisRendererX3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererX3D\", function() { return AxisRendererX3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../axes/AxisRendererX */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Module, defining Axis Renderer for horizontal 3D axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Renderer for horizontal 3D axis.\r\n *\r\n * @see {@link IAxisRendererX3DEvents} for a list of available events\r\n * @see {@link IAxisRendererX3DAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererX3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(AxisRendererX3D, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererX3D() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MutableValueDisposer\"]();\r\n        _this.className = \"AxisRendererX3D\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererX3D.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if (grid.element) {\r\n            var dx = this.chart.dx3D || 0;\r\n            var dy = this.chart.dy3D || 0;\r\n            var h = this.getHeight();\r\n            grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: dx, y: h + dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: 0, y: h });\r\n        }\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererX3D.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var h = this.getHeight();\r\n        var dx = this.chart.dx3D || 0;\r\n        var dy = this.chart.dy3D || 0;\r\n        this.baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: 0, y: h });\r\n    };\r\n    Object.defineProperty(AxisRendererX3D.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * Chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Chart\r\n         */\r\n        set: function (chart) {\r\n            if (chart) {\r\n                this._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Invoked when 3D-related settings change, like depth or angle.\r\n     *\r\n     * @param event Event\r\n     */\r\n    AxisRendererX3D.prototype.handle3DChanged = function (event) {\r\n        if (event.property == \"depth\" || event.property == \"angle\") {\r\n            this.invalidate();\r\n        }\r\n    };\r\n    return AxisRendererX3D;\r\n}(_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_1__[\"AxisRendererX\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"AxisRendererX3D\"] = AxisRendererX3D;\r\n//# sourceMappingURL=AxisRendererX3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc1JlbmRlcmVyWDNELmpzPzFlMGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3NEO0FBQ1c7QUFDbEI7QUFDSTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDZCQUE2QjtBQUN0QyxTQUFTLCtCQUErQjtBQUN4QztBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5RUFBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwyREFBWSxFQUFFLGVBQWUsSUFBSSwyREFBWSxFQUFFLG1CQUFtQixJQUFJLDJEQUFZLEVBQUUsYUFBYTtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDJEQUFZLEVBQUUsZUFBZSxJQUFJLDJEQUFZLEVBQUUsYUFBYSxJQUFJLDJEQUFZLEVBQUUsYUFBYTtBQUN4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyxpRUFBYTtBQUNZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc1JlbmRlcmVyWDNELmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSwgZGVmaW5pbmcgQXhpcyBSZW5kZXJlciBmb3IgaG9yaXpvbnRhbCAzRCBheGVzLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBBeGlzUmVuZGVyZXJYIH0gZnJvbSBcIi4uL2F4ZXMvQXhpc1JlbmRlcmVyWFwiO1xyXG5pbXBvcnQgeyBNdXRhYmxlVmFsdWVEaXNwb3NlciB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0Rpc3Bvc2VyXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuaW1wb3J0ICogYXMgJHBhdGggZnJvbSBcIi4uLy4uL2NvcmUvcmVuZGVyaW5nL1BhdGhcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBSZW5kZXJlciBmb3IgaG9yaXpvbnRhbCAzRCBheGlzLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJQXhpc1JlbmRlcmVyWDNERXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSUF4aXNSZW5kZXJlclgzREFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKi9cclxudmFyIEF4aXNSZW5kZXJlclgzRCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhBeGlzUmVuZGVyZXJYM0QsIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBheGlzIFJlbGF0ZWQgYXhpc1xyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBBeGlzUmVuZGVyZXJYM0QoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIHJlbGF0ZWQgY2hhcnQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLl9jaGFydCA9IG5ldyBNdXRhYmxlVmFsdWVEaXNwb3NlcigpO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiQXhpc1JlbmRlcmVyWDNEXCI7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKF90aGlzLl9jaGFydCk7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBhbmQgcG9zaXRpb25zIGEgZ3JpZCBlbGVtZW50LlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBncmlkICAgICAgICAgR3JpZCBlbGVtZW50XHJcbiAgICAgKiBAcGFyYW0gcG9zaXRpb24gICAgIFN0YXJ0aW5nIHBvc2l0aW9uXHJcbiAgICAgKiBAcGFyYW0gZW5kUG9zaXRpb24gIEVuZCBwb3NpdGlvblxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJYM0QucHJvdG90eXBlLnVwZGF0ZUdyaWRFbGVtZW50ID0gZnVuY3Rpb24gKGdyaWQsIHBvc2l0aW9uLCBlbmRQb3NpdGlvbikge1xyXG4gICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gKyAoZW5kUG9zaXRpb24gLSBwb3NpdGlvbikgKiBncmlkLmxvY2F0aW9uO1xyXG4gICAgICAgIHZhciBwb2ludCA9IHRoaXMucG9zaXRpb25Ub1BvaW50KHBvc2l0aW9uKTtcclxuICAgICAgICBpZiAoZ3JpZC5lbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHZhciBkeCA9IHRoaXMuY2hhcnQuZHgzRCB8fCAwO1xyXG4gICAgICAgICAgICB2YXIgZHkgPSB0aGlzLmNoYXJ0LmR5M0QgfHwgMDtcclxuICAgICAgICAgICAgdmFyIGggPSB0aGlzLmdldEhlaWdodCgpO1xyXG4gICAgICAgICAgICBncmlkLnBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiBkeCwgeTogZHkgfSkgKyAkcGF0aC5saW5lVG8oeyB4OiBkeCwgeTogaCArIGR5IH0pICsgJHBhdGgubGluZVRvKHsgeDogMCwgeTogaCB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbkl0ZW0oZ3JpZCwgcG9pbnQpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlVmlzaWJpbGl0eShncmlkLCBwb3NpdGlvbiwgMCwgMSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIGFuZCBwb3NpdGlvbnMgdGhlIGJhc2UgZ3JpZCBlbGVtZW50LlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqL1xyXG4gICAgQXhpc1JlbmRlcmVyWDNELnByb3RvdHlwZS51cGRhdGVCYXNlR3JpZEVsZW1lbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS51cGRhdGVCYXNlR3JpZEVsZW1lbnQuY2FsbCh0aGlzKTtcclxuICAgICAgICB2YXIgaCA9IHRoaXMuZ2V0SGVpZ2h0KCk7XHJcbiAgICAgICAgdmFyIGR4ID0gdGhpcy5jaGFydC5keDNEIHx8IDA7XHJcbiAgICAgICAgdmFyIGR5ID0gdGhpcy5jaGFydC5keTNEIHx8IDA7XHJcbiAgICAgICAgdGhpcy5iYXNlR3JpZC5wYXRoID0gJHBhdGgubW92ZVRvKHsgeDogZHgsIHk6IGR5IH0pICsgJHBhdGgubGluZVRvKHsgeDogMCwgeTogMCB9KSArICRwYXRoLmxpbmVUbyh7IHg6IDAsIHk6IGggfSk7XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF4aXNSZW5kZXJlclgzRC5wcm90b3R5cGUsIFwiY2hhcnRcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAgICAgKiBAcmV0dXJuIENoYXJ0XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jaGFydC5nZXQoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENoYXJ0LCBhc3NvY2lhdGVkIHdpdGggdGhlIEF4aXMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIENoYXJ0XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoY2hhcnQpIHtcclxuICAgICAgICAgICAgaWYgKGNoYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jaGFydC5zZXQoY2hhcnQsIGNoYXJ0LmV2ZW50cy5vbihcInByb3BlcnR5Y2hhbmdlZFwiLCB0aGlzLmhhbmRsZTNEQ2hhbmdlZCwgdGhpcywgZmFsc2UpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbnZva2VkIHdoZW4gM0QtcmVsYXRlZCBzZXR0aW5ncyBjaGFuZ2UsIGxpa2UgZGVwdGggb3IgYW5nbGUuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGV2ZW50IEV2ZW50XHJcbiAgICAgKi9cclxuICAgIEF4aXNSZW5kZXJlclgzRC5wcm90b3R5cGUuaGFuZGxlM0RDaGFuZ2VkID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKGV2ZW50LnByb3BlcnR5ID09IFwiZGVwdGhcIiB8fCBldmVudC5wcm9wZXJ0eSA9PSBcImFuZ2xlXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5pbnZhbGlkYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiBBeGlzUmVuZGVyZXJYM0Q7XHJcbn0oQXhpc1JlbmRlcmVyWCkpO1xyXG5leHBvcnQgeyBBeGlzUmVuZGVyZXJYM0QgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiQXhpc1JlbmRlcmVyWDNEXCJdID0gQXhpc1JlbmRlcmVyWDNEO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BeGlzUmVuZGVyZXJYM0QuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js ***!
  \***********************************************************************************/
/*! exports provided: AxisRendererY3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererY3D\", function() { return AxisRendererY3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../axes/AxisRendererY */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Module, defining Axis Renderer for vertical 3D axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Renderer for vertical 3D axis.\r\n *\r\n * @see {@link IAxisRendererY3DEvents} for a list of available events\r\n * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererY3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(AxisRendererY3D, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererY3D() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MutableValueDisposer\"]();\r\n        _this.className = \"AxisRendererY3D\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererY3D.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if (grid.element) {\r\n            var dx = this.chart.dx3D || 0;\r\n            var dy = this.chart.dy3D || 0;\r\n            var w = this.getWidth();\r\n            grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"]({ x: w + dx, y: dy });\r\n        }\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY3D.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var dx = this.chart.dx3D || 0;\r\n        var dy = this.chart.dy3D || 0;\r\n        var w = this.getWidth();\r\n        this.baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"]({ x: 0, y: 0 })\r\n            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"]({ x: w, y: 0 })\r\n            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"]({ x: w + dx, y: dy });\r\n    };\r\n    Object.defineProperty(AxisRendererY3D.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * Chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (chart) {\r\n                this._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Invoked when 3D-related settings change, like depth or angle.\r\n     *\r\n     * @param event Event\r\n     */\r\n    AxisRendererY3D.prototype.handle3DChanged = function (event) {\r\n        if (event.property == \"depth\" || event.property == \"angle\") {\r\n            this.invalidate();\r\n        }\r\n    };\r\n    return AxisRendererY3D;\r\n}(_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_1__[\"AxisRendererY\"]));\r\n\r\n//# sourceMappingURL=AxisRendererY3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvQXhpc1JlbmRlcmVyWTNELmpzPzgzYjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzRDtBQUNXO0FBQ2Q7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2QkFBNkI7QUFDdEMsU0FBUywrQkFBK0I7QUFDeEM7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseUVBQW9CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQVksRUFBRSxhQUFhLElBQUksMkRBQVksRUFBRSxlQUFlLElBQUksMkRBQVksRUFBRSxtQkFBbUI7QUFDekg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwyREFBWSxFQUFFLGFBQWE7QUFDeEQsY0FBYywyREFBWSxFQUFFLGFBQWE7QUFDekMsY0FBYywyREFBWSxFQUFFLG1CQUFtQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyxpRUFBYTtBQUNZO0FBQzNCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9heGVzL0F4aXNSZW5kZXJlclkzRC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNb2R1bGUsIGRlZmluaW5nIEF4aXMgUmVuZGVyZXIgZm9yIHZlcnRpY2FsIDNEIGF4ZXMuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEF4aXNSZW5kZXJlclkgfSBmcm9tIFwiLi4vYXhlcy9BeGlzUmVuZGVyZXJZXCI7XHJcbmltcG9ydCB7IE11dGFibGVWYWx1ZURpc3Bvc2VyIH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvRGlzcG9zZXJcIjtcclxuaW1wb3J0ICogYXMgJHBhdGggZnJvbSBcIi4uLy4uL2NvcmUvcmVuZGVyaW5nL1BhdGhcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBSZW5kZXJlciBmb3IgdmVydGljYWwgM0QgYXhpcy5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSUF4aXNSZW5kZXJlclkzREV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElBeGlzUmVuZGVyZXJZM0RBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICovXHJcbnZhciBBeGlzUmVuZGVyZXJZM0QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoQXhpc1JlbmRlcmVyWTNELCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3Rvci5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gYXhpcyBSZWxhdGVkIGF4aXNcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQXhpc1JlbmRlcmVyWTNEKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSByZWxhdGVkIGNoYXJ0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5fY2hhcnQgPSBuZXcgTXV0YWJsZVZhbHVlRGlzcG9zZXIoKTtcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkF4aXNSZW5kZXJlclkzRFwiO1xyXG4gICAgICAgIF90aGlzLl9kaXNwb3NlcnMucHVzaChfdGhpcy5fY2hhcnQpO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgYW5kIHBvc2l0aW9ucyBhIGdyaWQgZWxlbWVudC5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gZ3JpZCAgICAgICAgIEdyaWQgZWxlbWVudFxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICAgICBTdGFydGluZyBwb3NpdGlvblxyXG4gICAgICogQHBhcmFtIGVuZFBvc2l0aW9uICBFbmQgcG9zaXRpb25cclxuICAgICAqL1xyXG4gICAgQXhpc1JlbmRlcmVyWTNELnByb3RvdHlwZS51cGRhdGVHcmlkRWxlbWVudCA9IGZ1bmN0aW9uIChncmlkLCBwb3NpdGlvbiwgZW5kUG9zaXRpb24pIHtcclxuICAgICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uICsgKGVuZFBvc2l0aW9uIC0gcG9zaXRpb24pICogZ3JpZC5sb2NhdGlvbjtcclxuICAgICAgICB2YXIgcG9pbnQgPSB0aGlzLnBvc2l0aW9uVG9Qb2ludChwb3NpdGlvbik7XHJcbiAgICAgICAgaWYgKGdyaWQuZWxlbWVudCkge1xyXG4gICAgICAgICAgICB2YXIgZHggPSB0aGlzLmNoYXJ0LmR4M0QgfHwgMDtcclxuICAgICAgICAgICAgdmFyIGR5ID0gdGhpcy5jaGFydC5keTNEIHx8IDA7XHJcbiAgICAgICAgICAgIHZhciB3ID0gdGhpcy5nZXRXaWR0aCgpO1xyXG4gICAgICAgICAgICBncmlkLnBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiAwLCB5OiAwIH0pICsgJHBhdGgubGluZVRvKHsgeDogZHgsIHk6IGR5IH0pICsgJHBhdGgubGluZVRvKHsgeDogdyArIGR4LCB5OiBkeSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbkl0ZW0oZ3JpZCwgcG9pbnQpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlVmlzaWJpbGl0eShncmlkLCBwb3NpdGlvbiwgMCwgMSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIGFuZCBwb3NpdGlvbnMgdGhlIGJhc2UgZ3JpZCBlbGVtZW50LlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqL1xyXG4gICAgQXhpc1JlbmRlcmVyWTNELnByb3RvdHlwZS51cGRhdGVCYXNlR3JpZEVsZW1lbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS51cGRhdGVCYXNlR3JpZEVsZW1lbnQuY2FsbCh0aGlzKTtcclxuICAgICAgICB2YXIgZHggPSB0aGlzLmNoYXJ0LmR4M0QgfHwgMDtcclxuICAgICAgICB2YXIgZHkgPSB0aGlzLmNoYXJ0LmR5M0QgfHwgMDtcclxuICAgICAgICB2YXIgdyA9IHRoaXMuZ2V0V2lkdGgoKTtcclxuICAgICAgICB0aGlzLmJhc2VHcmlkLnBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiAwLCB5OiAwIH0pXHJcbiAgICAgICAgICAgICsgJHBhdGgubGluZVRvKHsgeDogdywgeTogMCB9KVxyXG4gICAgICAgICAgICArICRwYXRoLmxpbmVUbyh7IHg6IHcgKyBkeCwgeTogZHkgfSk7XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF4aXNSZW5kZXJlclkzRC5wcm90b3R5cGUsIFwiY2hhcnRcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAgICAgKiBAcmV0dXJuIENoYXJ0XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jaGFydC5nZXQoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENoYXJ0LCBhc3NvY2lhdGVkIHdpdGggdGhlIEF4aXMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBDaGFydFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGNoYXJ0KSB7XHJcbiAgICAgICAgICAgIGlmIChjaGFydCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2hhcnQuc2V0KGNoYXJ0LCBjaGFydC5ldmVudHMub24oXCJwcm9wZXJ0eWNoYW5nZWRcIiwgdGhpcy5oYW5kbGUzRENoYW5nZWQsIHRoaXMsIGZhbHNlKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIC8qKlxyXG4gICAgICogSW52b2tlZCB3aGVuIDNELXJlbGF0ZWQgc2V0dGluZ3MgY2hhbmdlLCBsaWtlIGRlcHRoIG9yIGFuZ2xlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBldmVudCBFdmVudFxyXG4gICAgICovXHJcbiAgICBBeGlzUmVuZGVyZXJZM0QucHJvdG90eXBlLmhhbmRsZTNEQ2hhbmdlZCA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGlmIChldmVudC5wcm9wZXJ0eSA9PSBcImRlcHRoXCIgfHwgZXZlbnQucHJvcGVydHkgPT0gXCJhbmdsZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaW52YWxpZGF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gQXhpc1JlbmRlcmVyWTNEO1xyXG59KEF4aXNSZW5kZXJlclkpKTtcclxuZXhwb3J0IHsgQXhpc1JlbmRlcmVyWTNEIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF4aXNSZW5kZXJlclkzRC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js ***!
  \********************************************************************************/
/*! exports provided: CategoryAxisDataItem, CategoryAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CategoryAxisDataItem\", function() { return CategoryAxisDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CategoryAxis\", function() { return CategoryAxis; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Axis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js\");\n/* harmony import */ var _AxisRendererX__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisRendererX */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js\");\n/* harmony import */ var _AxisRendererY__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AxisRendererY */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Dictionary */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js\");\n/* harmony import */ var _CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CategoryAxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/**\r\n * Category axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[CategoryAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar CategoryAxisDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CategoryAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CategoryAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.seriesDataItems = {};\r\n        _this.className = \"CategoryAxisDataItem\";\r\n        _this.text = \"{category}\";\r\n        _this.locations.category = 0;\r\n        _this.locations.endCategory = 1;\r\n        _this.deltaPosition = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CategoryAxisDataItem.prototype, \"category\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"category\")) {\r\n                    return this._adapterO.apply(\"category\", this.properties.category);\r\n                }\r\n            }\r\n            return this.properties.category;\r\n        },\r\n        /**\r\n         * Category.\r\n         *\r\n         * @param value  Category\r\n         */\r\n        set: function (value) {\r\n            var oldCategory = this.properties.category;\r\n            this.setProperty(\"category\", value);\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](oldCategory) && oldCategory != value) {\r\n                if (this.component) {\r\n                    this.component.validateDataElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisDataItem.prototype, \"endCategory\", {\r\n        /**\r\n         * @return End category\r\n         */\r\n        get: function () {\r\n            return this.properties.endCategory;\r\n        },\r\n        /**\r\n         * End category.\r\n         *\r\n         * Used for items that span several categories, like [[CategoryAxisBreak]].\r\n         *\r\n         * @param value  End category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"endCategory\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisDataItem.prototype, \"deltaPosition\", {\r\n        get: function () {\r\n            return this.properties.deltaCoordinate;\r\n        },\r\n        set: function (value) {\r\n            if (value != this.properties.deltaCoordinate) {\r\n                this.setProperty(\"deltaCoordinate\", value);\r\n                if (this.component) {\r\n                    this.component.invalidateDataItems();\r\n                    this.component.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CategoryAxisDataItem;\r\n}(_Axis__WEBPACK_IMPORTED_MODULE_1__[\"AxisDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create a category-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"CategoryAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Clients\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link ICategoryAxisEvents} for a list of available Events\r\n * @see {@link ICategoryAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar CategoryAxis = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CategoryAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CategoryAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A collection that holds Axis' data items sorted by each category.\r\n         */\r\n        _this.dataItemsByCategory = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__[\"Dictionary\"]();\r\n        _this.className = \"CategoryAxis\";\r\n        // Set field name\r\n        _this.axisFieldName = \"category\";\r\n        _this._lastDataItem = _this.createDataItem();\r\n        _this._lastDataItem.component = _this;\r\n        _this._disposers.push(_this._lastDataItem);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        var dataItemsByCategory = _this.dataItemsByCategory;\r\n        _this.addDisposer(_this.mainDataSet.events.on(\"removed\", function (event) {\r\n            dataItemsByCategory.removeKey(event.oldValue.category);\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    CategoryAxis.prototype.createDataItem = function () {\r\n        return new CategoryAxisDataItem();\r\n    };\r\n    /**\r\n     * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    CategoryAxis.prototype.createAxisBreak = function () {\r\n        return new _CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_6__[\"CategoryAxisBreak\"]();\r\n    };\r\n    /**\r\n     * Processes a related series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    CategoryAxis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n        _super.prototype.processSeriesDataItem.call(this, dataItem, axisLetter);\r\n        var category = dataItem[\"category\" + this.axisLetter];\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](category)) {\r\n            var categoryAxisDataItem = this.dataItemsByCategory.getKey(category);\r\n            if (categoryAxisDataItem) {\r\n                var seriesId = dataItem.component.uid;\r\n                var seriesDataItems = categoryAxisDataItem.seriesDataItems[seriesId];\r\n                if (!seriesDataItems) {\r\n                    seriesDataItems = [];\r\n                    categoryAxisDataItem.seriesDataItems[seriesId] = seriesDataItems;\r\n                }\r\n                seriesDataItems.push(dataItem);\r\n            }\r\n        }\r\n        else {\r\n            dataItem.component.dataItems.remove(dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Validates the data range.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    CategoryAxis.prototype.validateDataRange = function () {\r\n        var _this = this;\r\n        _super.prototype.validateDataRange.call(this);\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__[\"each\"](this._series.iterator(), function (series) {\r\n            if ((series.xAxis instanceof CategoryAxis) && (series.yAxis instanceof CategoryAxis)) {\r\n                series.invalidateDataRange();\r\n            }\r\n            else {\r\n                var startIndex = _this.positionToIndex(_this.start);\r\n                var endIndex = _this.positionToIndex(_this.end);\r\n                if (endIndex >= _this.dataItems.length) {\r\n                    endIndex--;\r\n                }\r\n                var seriesId = series.uid;\r\n                var minIndex = void 0;\r\n                var maxIndex = void 0;\r\n                for (var i = startIndex; i <= endIndex; i++) {\r\n                    var axisDataItem = _this.dataItems.getIndex(i);\r\n                    if (axisDataItem) {\r\n                        var seriesDataItems = axisDataItem.seriesDataItems[seriesId];\r\n                        if (seriesDataItems) {\r\n                            for (var i_1 = 0; i_1 < seriesDataItems.length; i_1++) {\r\n                                var seriesDataItem = seriesDataItems[i_1];\r\n                                if (seriesDataItem) {\r\n                                    var index = seriesDataItem.index;\r\n                                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](minIndex) || index < minIndex) {\r\n                                        minIndex = index;\r\n                                    }\r\n                                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](maxIndex) || index > maxIndex) {\r\n                                        maxIndex = index;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](minIndex)) {\r\n                    series.startIndex = minIndex;\r\n                }\r\n                else {\r\n                    series.start = _this.start;\r\n                }\r\n                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](maxIndex)) {\r\n                    series.endIndex = maxIndex + 1;\r\n                }\r\n                else {\r\n                    series.end = _this.end;\r\n                }\r\n                // range might not change, but axis breaks might.\r\n                if (_this._axisBreaks && _this._axisBreaks.length > 0) {\r\n                    series.invalidateDataRange();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Validates the whole axis. Causes it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    CategoryAxis.prototype.validate = function () {\r\n        var _this = this;\r\n        _super.prototype.validate.call(this);\r\n        var dataCount = this.dataItems.length;\r\n        var startIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](Math.floor(this.start * dataCount - 1), 0, dataCount);\r\n        var endIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](Math.ceil(this.end * dataCount), 0, dataCount);\r\n        if (this.renderer.invalid) {\r\n            this.renderer.validate();\r\n        }\r\n        // find frequency at which we'll show items\r\n        var maxCount = this.renderer.axisLength / Math.max(this.renderer.minGridDistance, 1 / Number.MAX_SAFE_INTEGER);\r\n        var frequency = Math.min(this.dataItems.length, Math.ceil((endIndex - startIndex) / maxCount));\r\n        this._startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._endIndex = Math.ceil(this.end * dataCount);\r\n        this.fixAxisBreaks();\r\n        if (this._startIndex == this._endIndex) {\r\n            this._endIndex++;\r\n        }\r\n        this._frequency = frequency;\r\n        if (this.axisLength <= 0) {\r\n            return;\r\n        }\r\n        this.maxZoomFactor = this.dataItems.length;\r\n        if (this.dataItems.length <= 0) {\r\n            this.maxZoomFactor = 1;\r\n        }\r\n        this.resetIterators();\r\n        // it's important to use protected variables here, as getters will return 0 - length\r\n        // TODO use iterator instead\r\n        // @ todo: not solved cat axis item fading\r\n        startIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"max\"](0, this._startIndex - this._frequency);\r\n        endIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"min\"](this.dataItems.length, this._endIndex + this._frequency);\r\n        var itemIndex = 0;\r\n        for (var i = 0; i < startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.__disabled = true;\r\n        }\r\n        for (var i = endIndex, len = this.dataItems.length; i < len; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.__disabled = true;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            if (i < this.dataItems.length) {\r\n                var dataItem = this.dataItems.getIndex(i);\r\n                if (i / this._frequency == Math.round(i / this._frequency)) {\r\n                    var axisBreak = this.isInBreak(i);\r\n                    if (!axisBreak) {\r\n                        this.appendDataItem(dataItem);\r\n                        this.validateDataElement(dataItem, itemIndex);\r\n                    }\r\n                    itemIndex++;\r\n                }\r\n                else {\r\n                    //previously we disabled all before, but this is better for cpu\r\n                    //this.validateDataElement(dataItem, itemIndex); // helps to solve shrinking // not good - creates all items\r\n                    dataItem.__disabled = true;\r\n                }\r\n            }\r\n        }\r\n        this.appendDataItem(this._lastDataItem);\r\n        this.validateDataElement(this._lastDataItem, itemIndex + 1, this.dataItems.length);\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            axisBreaks.each(function (axisBreak) {\r\n                var adjustedStartValue = axisBreak.adjustedStartValue;\r\n                var adjustedEndValue = axisBreak.adjustedEndValue;\r\n                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"intersect\"]({ start: adjustedStartValue, end: adjustedEndValue }, { start: _this._startIndex, end: _this._endIndex })) {\r\n                    for (var b = adjustedStartValue; b <= adjustedEndValue; b++) {\r\n                        var dataItem = _this.dataItems.getIndex(b);\r\n                        dataItem.__disabled = true;\r\n                    }\r\n                    var frequency_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](Math.ceil(_this._frequency / axisBreak.breakSize), 1, adjustedEndValue - adjustedStartValue);\r\n                    var itemIndex_1 = 0;\r\n                    if (axisBreak.breakSize > 0) {\r\n                        // TODO use iterator instead\r\n                        for (var b = adjustedStartValue; b <= adjustedEndValue; b = b + frequency_1) {\r\n                            var dataItem = _this.dataItems.getIndex(b);\r\n                            dataItem.__disabled = false;\r\n                            _this.appendDataItem(dataItem);\r\n                            _this.validateDataElement(dataItem, itemIndex_1);\r\n                            itemIndex_1++;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this.validateBreaks();\r\n        this.validateAxisRanges();\r\n        this.ghostLabel.invalidate(); // solves font issue\r\n        this.renderer.invalidateLayout();\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem   [description]\r\n     * @param itemIndex  [description]\r\n     */\r\n    CategoryAxis.prototype.validateDataElement = function (dataItem, itemIndex, index) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        dataItem.itemIndex = this._axisItemCount;\r\n        this._axisItemCount++;\r\n        //dataItem.__disabled = false;\r\n        var renderer = this.renderer;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](index)) {\r\n            index = this.categoryToIndex(dataItem.category);\r\n        }\r\n        var endIndex = this.categoryToIndex(dataItem.endCategory);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](endIndex)) {\r\n            endIndex = index;\r\n        }\r\n        var position = this.indexToPosition(index, dataItem.locations.category);\r\n        var endPosition = this.indexToPosition(endIndex, dataItem.locations.endCategory);\r\n        dataItem.position = position;\r\n        var fillEndIndex;\r\n        var fillPosition;\r\n        var fillEndPosition;\r\n        if (dataItem.isRange) {\r\n            fillEndIndex = endIndex;\r\n            fillPosition = this.indexToPosition(index, dataItem.locations.category);\r\n            fillEndPosition = this.indexToPosition(fillEndIndex, dataItem.locations.endCategory);\r\n        }\r\n        dataItem.point = renderer.positionToPoint(position);\r\n        var tick = dataItem.tick;\r\n        if (tick && !tick.disabled) {\r\n            renderer.updateTickElement(tick, position, endPosition);\r\n        }\r\n        var grid = dataItem.grid;\r\n        if (grid && !grid.disabled) {\r\n            renderer.updateGridElement(grid, position, endPosition);\r\n        }\r\n        var label = dataItem.label;\r\n        if (label && !label.disabled) {\r\n            // theorethically this might result problems if category text changes, the range text won't change. But otherwise range.label.text = \"custom text\" wont' work, which is not intuitive.\r\n            if (!dataItem.isRange || label.text == undefined) {\r\n                dataItem.text = dataItem.text;\r\n            }\r\n            renderer.updateLabelElement(label, position, endPosition);\r\n            if ((renderer instanceof _AxisRendererY__WEBPACK_IMPORTED_MODULE_3__[\"AxisRendererY\"] && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (renderer instanceof _AxisRendererX__WEBPACK_IMPORTED_MODULE_2__[\"AxisRendererX\"] && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n                if (dataItem.label.html) {\r\n                    this.ghostLabel.html = dataItem.label.currentText;\r\n                }\r\n                else {\r\n                    this.ghostLabel.text = dataItem.label.currentText;\r\n                }\r\n            }\r\n        }\r\n        var fill = dataItem.axisFill;\r\n        if (fill && !fill.disabled) {\r\n            if (!dataItem.isRange) {\r\n                fillEndIndex = index + this._frequency;\r\n                fillPosition = this.indexToPosition(index, fill.location);\r\n                fillEndPosition = this.indexToPosition(fillEndIndex, fill.location);\r\n            }\r\n            renderer.updateFillElement(fill, fillPosition, fillEndPosition);\r\n            if (!dataItem.isRange) {\r\n                this.fillRule(dataItem, itemIndex);\r\n            }\r\n        }\r\n        if (dataItem.bullet) {\r\n            renderer.updateBullet(dataItem.bullet, position, endPosition);\r\n        }\r\n        var mask = dataItem.mask;\r\n        if (mask) {\r\n            renderer.updateFillElement(mask, fillPosition, fillEndPosition);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    CategoryAxis.prototype.disposeData = function () {\r\n        this.dataItemsByCategory.clear();\r\n        _super.prototype.disposeData.call(this);\r\n    };\r\n    /**\r\n     * Processes the axis data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem     Data item\r\n     * @param dataContext  The raw data that corresponds to this data item\r\n     */\r\n    CategoryAxis.prototype.processDataItem = function (dataItem, dataContext) {\r\n        if (dataItem) {\r\n            // creat a collection for fast access\r\n            _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n            // check if such category already exists\r\n            //let existingDataItem: CategoryAxisDataItem = this.dataItemsByCategory.getKey(dataItem.category);\r\n            //if (existingDataItem && existingDataItem != dataItem) {\r\n            //\tthis.dataItems.remove(existingDataItem);\r\n            //}\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](dataItem.category)) {\r\n                this.dataItemsByCategory.setKey(dataItem.category, dataItem);\r\n            }\r\n        }\r\n    };\r\n    CategoryAxis.prototype.getDataItem = function (dataContext) {\r\n        var category = (dataContext[this.dataFields.category]);\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](category)) {\r\n            var dataItem = this.dataItemsByCategory.getKey(category);\r\n            if (dataItem) {\r\n                return dataItem;\r\n            }\r\n            else {\r\n                return this.dataItems.create();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Converts a category index to an actual screen coordinate on the axis.\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     *\r\n     * @param index     Index\r\n     * @param location  Location (0-1)\r\n     * @return Position (px)\r\n     */\r\n    CategoryAxis.prototype.indexToPosition = function (index, location) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](location)) {\r\n            location = 0.5;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var difference = this.adjustDifference(startIndex, endIndex);\r\n        var startLocation = this.startLocation;\r\n        var endLocation = this.endLocation;\r\n        difference -= startLocation;\r\n        difference -= (1 - endLocation);\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__[\"eachContinue\"](axisBreaks.iterator(), function (axisBreak) {\r\n                var breakStartIndex = axisBreak.adjustedStartValue;\r\n                var breakEndIndex = axisBreak.adjustedEndValue;\r\n                if (index < startIndex || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](breakStartIndex) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](breakEndIndex)) {\r\n                    return false;\r\n                }\r\n                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"intersect\"]({ start: breakStartIndex, end: breakEndIndex }, { start: startIndex, end: endIndex })) {\r\n                    breakStartIndex = Math.max(startIndex, breakStartIndex);\r\n                    breakEndIndex = Math.min(endIndex, breakEndIndex);\r\n                    var breakSize = axisBreak.breakSize;\r\n                    // value to the right of break end\r\n                    if (index > breakEndIndex) {\r\n                        startIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n                    }\r\n                    // value to the left of break start\r\n                    else if (index < breakStartIndex) {\r\n                    }\r\n                    // value within break\r\n                    else {\r\n                        index = breakStartIndex + (index - breakStartIndex) * breakSize;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        var deltaPosition = 0;\r\n        var dataItem = this.dataItems.getIndex(index);\r\n        if (dataItem) {\r\n            deltaPosition = dataItem.deltaPosition;\r\n        }\r\n        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"round\"](deltaPosition + (index + location - startLocation - startIndex) / difference, 5);\r\n    };\r\n    /**\r\n     * Converts a string category name to relative position on axis.\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     *\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Position\r\n     */\r\n    CategoryAxis.prototype.categoryToPosition = function (category, location) {\r\n        var index = this.categoryToIndex(category);\r\n        return this.indexToPosition(index, location);\r\n    };\r\n    /**\r\n     * Converts a string category name to a orientation point (x, y, angle) on axis\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Orientation point\r\n     */\r\n    CategoryAxis.prototype.categoryToPoint = function (category, location) {\r\n        var position = this.categoryToPosition(category, location);\r\n        var point = this.renderer.positionToPoint(position);\r\n        var angle = this.renderer.positionToAngle(position);\r\n        return { x: point.x, y: point.y, angle: angle };\r\n    };\r\n    /**\r\n     * Converts a string category name to a orientation point (x, y, angle) on axis\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Orientation point\r\n     */\r\n    CategoryAxis.prototype.anyToPoint = function (category, location) {\r\n        return this.categoryToPoint(category, location);\r\n    };\r\n    /**\r\n     * Converts a string category name to relative position on axis.\r\n     *\r\n     * An alias to `categoryToPosition()`.\r\n     *\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Relative position\r\n     */\r\n    CategoryAxis.prototype.anyToPosition = function (category, location) {\r\n        return this.categoryToPosition(category, location);\r\n    };\r\n    /**\r\n     * Converts named category to an index of data item it corresponds to.\r\n     *\r\n     * @param category  Category\r\n     * @return Data item index\r\n     */\r\n    CategoryAxis.prototype.categoryToIndex = function (category) {\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](category)) {\r\n            var dataItem = this.dataItemsByCategory.getKey(category);\r\n            if (dataItem) {\r\n                return dataItem.index;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Zooms the axis to specific named ctaegories.\r\n     *\r\n     * @param startCategory  Start category\r\n     * @param endCategory    End category\r\n     */\r\n    CategoryAxis.prototype.zoomToCategories = function (startCategory, endCategory) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1);\r\n    };\r\n    /**\r\n     * [getAnyRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param start         [description]\r\n     * @param end           [description]\r\n     * @param startLocation [description]\r\n     * @param endLocation   [description]\r\n     * @return [description]\r\n     */\r\n    CategoryAxis.prototype.getAnyRangePath = function (start, end, startLocation, endLocation) {\r\n        var startPos = this.categoryToPosition(start, startLocation);\r\n        var endPos = this.categoryToPosition(end, endLocation);\r\n        return this.getPositionRangePath(startPos, endPos); // Base class (Axis) gets range shape from AxisRenderer\r\n    };\r\n    /**\r\n     * Takes an absolute position (px) within axis and adjust it to a specific\r\n     * `location` within category it corresponds to.\r\n     *\r\n     * @param position  Source position (px)\r\n     * @param location  Location within category (0-1)\r\n     * @return Adjusted position (px)\r\n     */\r\n    CategoryAxis.prototype.roundPosition = function (position, location) {\r\n        var index = this.positionToIndex(position);\r\n        return this.indexToPosition(index, location);\r\n    };\r\n    /**\r\n     * Finds and returns first series data item with specific category\r\n     * @param series    Target series\r\n     * @param category  Category\r\n     * @return XYSeriesDataItem data item\r\n     */\r\n    CategoryAxis.prototype.getFirstSeriesDataItem = function (series, category) {\r\n        for (var i = 0; i < series.dataItems.length; i++) {\r\n            var dataItem = series.dataItems.getIndex(i);\r\n            if (series.xAxis == this) {\r\n                if (dataItem.categoryX == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n            if (series.yAxis == this) {\r\n                if (dataItem.categoryY == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Finds and returns last series data item with specific category.\r\n     * @param series    Target series\r\n     * @param category  Category\r\n     * @return XYSeriesDataItem data item\r\n     */\r\n    CategoryAxis.prototype.getLastSeriesDataItem = function (series, category) {\r\n        for (var i = series.dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = series.dataItems.getIndex(i);\r\n            if (series.xAxis == this) {\r\n                if (dataItem.categoryX == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n            if (series.yAxis == this) {\r\n                if (dataItem.categoryY == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // todo: optimize\r\n    CategoryAxis.prototype.getSeriesDataItemByCategory = function (category, series) {\r\n        var _this = this;\r\n        var seriesDataItem;\r\n        series.dataItems.each(function (dataItem) {\r\n            if (series.xAxis == _this) {\r\n                if (dataItem.categoryX == category) {\r\n                    seriesDataItem = dataItem;\r\n                }\r\n            }\r\n            else if (series.yAxis == _this) {\r\n                if (dataItem.categoryY == category) {\r\n                    seriesDataItem = dataItem;\r\n                }\r\n            }\r\n        });\r\n        return seriesDataItem;\r\n    };\r\n    /**\r\n     * Returns a data item from Series that corresponds to a specific absolute\r\n     * position on the Axis.\r\n     *\r\n     * @param series    Target series\r\n     * @param position  Position (px)\r\n     * @return XYSeriesDataItem data item\r\n     */\r\n    CategoryAxis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        var _this = this;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](position)) {\r\n            var index_1 = this.positionToIndex(position);\r\n            if (index_1 >= this.dataItems.length) {\r\n                index_1--;\r\n            }\r\n            var dataItem = this.dataItems.getIndex(index_1);\r\n            if (dataItem) {\r\n                var category_1 = dataItem.category;\r\n                var sdi_1;\r\n                var seriesDataItem = series.dataItems.getIndex(index_1);\r\n                if (seriesDataItem) {\r\n                    if (series.xAxis == this) {\r\n                        if (seriesDataItem.categoryX == category_1) {\r\n                            return seriesDataItem;\r\n                        }\r\n                    }\r\n                    if (series.yAxis == this) {\r\n                        if (seriesDataItem.categoryY == category_1) {\r\n                            return seriesDataItem;\r\n                        }\r\n                    }\r\n                }\r\n                series.dataItems.each(function (dataItem) {\r\n                    if (series.xAxis == _this) {\r\n                        if (dataItem.categoryX == category_1) {\r\n                            if (!sdi_1) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                            if (Math.abs(index_1 - sdi_1.index) > Math.abs(index_1 - dataItem.index)) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (series.yAxis == _this) {\r\n                        if (dataItem.categoryY == category_1) {\r\n                            if (!sdi_1) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                            if (Math.abs(index_1 - sdi_1.index) > Math.abs(index_1 - dataItem.index)) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                //@todo\r\n                if (findNearest) {\r\n                }\r\n                return sdi_1;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the X coordinate for series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Category\r\n     * @param location  Location (0-1)\r\n     * @return X coordinate (px)\r\n     */\r\n    CategoryAxis.prototype.getX = function (dataItem, key, location, stackKey, range) {\r\n        var position = this.getPositionX(dataItem, key, location, stackKey, range);\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNaN\"](position)) {\r\n            return this.basePoint.x;\r\n        }\r\n        else {\r\n            return this.renderer.positionToPoint(position).x;\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Category\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    CategoryAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        var position;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](key)) {\r\n            position = this.categoryToPosition(dataItem.categories[key], location);\r\n        }\r\n        if (range) {\r\n            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns the Y coordinate for series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Category\r\n     * @param location  Location (0-1)\r\n     * @return Y coordinate (px)\r\n     */\r\n    CategoryAxis.prototype.getY = function (dataItem, key, location, stackKey, range) {\r\n        var position = this.getPositionY(dataItem, key, location, stackKey, range);\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNaN\"](position)) {\r\n            return this.basePoint.y;\r\n        }\r\n        else {\r\n            return this.renderer.positionToPoint(position).y;\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Category\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    CategoryAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        var position;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](key)) {\r\n            position = this.categoryToPosition(dataItem.categories[key], location);\r\n        }\r\n        if (range) {\r\n            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns an angle for series data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Category\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  Stack key (?)\r\n     * @param range Range to fit in\r\n     * @return Angle\r\n     */\r\n    CategoryAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        var position = this.categoryToPosition(dataItem.categories[key], location);\r\n        if (range) {\r\n            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](position, range.start, range.end);\r\n        }\r\n        return this.positionToAngle(position);\r\n    };\r\n    /**\r\n     * Returns an absolute pixel coordinate of the start of the cell (category),\r\n     * that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Position (px)\r\n     * @return Cell start position (px)\r\n     */\r\n    CategoryAxis.prototype.getCellStartPosition = function (position) {\r\n        return this.roundPosition(position, 0);\r\n    };\r\n    /**\r\n     * Returns an absolute pixel coordinate of the end of the cell (category),\r\n     * that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Position (px)\r\n     * @return Cell end position (px)\r\n     */\r\n    CategoryAxis.prototype.getCellEndPosition = function (position) {\r\n        return this.roundPosition(position, 1);\r\n    };\r\n    /**\r\n     * Returns text to show in a category tooltip, based on specific position\r\n     * within axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (px)\r\n     * @return Label (category)\r\n     */\r\n    CategoryAxis.prototype.getTooltipText = function (position) {\r\n        var dataItem = this.dataItems.getIndex(this.positionToIndex(position));\r\n        if (dataItem) {\r\n            this.tooltipDataItem = dataItem;\r\n            this.tooltip.dataItem = dataItem;\r\n            if (this.tooltipText) {\r\n                return this.tooltipText;\r\n            }\r\n            if (!this._adapterO) {\r\n                return dataItem.category;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"getTooltipText\", dataItem.category);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    CategoryAxis.prototype.positionToIndex = function (position) {\r\n        position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"round\"](position, 10);\r\n        if (position < 0) {\r\n            position = 0;\r\n        }\r\n        if (position > 1) {\r\n            position = 1;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var difference = endIndex - startIndex - this.startLocation - (1 - this.endLocation);\r\n        position += 1 / difference * this.startLocation;\r\n        var index = null;\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            // in case we have some axis breaks\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__[\"eachContinue\"](axisBreaks.iterator(), function (axisBreak) {\r\n                var breakStartPosition = axisBreak.startPosition;\r\n                var breakEndPosition = axisBreak.endPosition;\r\n                var breakStartIndex = axisBreak.adjustedStartValue;\r\n                var breakEndIndex = axisBreak.adjustedEndValue;\r\n                breakStartIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"max\"](breakStartIndex, startIndex);\r\n                breakEndIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"min\"](breakEndIndex, endIndex);\r\n                var breakSize = axisBreak.breakSize;\r\n                difference -= (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n                // position to the right of break end\r\n                if (position > breakEndPosition) {\r\n                    startIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n                }\r\n                // position to the left of break start\r\n                else if (position < breakStartPosition) {\r\n                }\r\n                // value within break\r\n                else {\r\n                    var breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n                    index = breakStartIndex + Math.round(breakPosition * (breakEndIndex - breakStartIndex));\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](index)) {\r\n            index = Math.floor(position * difference + startIndex);\r\n        }\r\n        if (index >= this.dataItems.length) {\r\n            index = this.dataItems.length - 1;\r\n        }\r\n        // not good, when panning out of bounds, each time one less item gets selected\r\n        //if (index >= endIndex) {\r\n        //\tindex--;\r\n        //}\r\n        return index;\r\n    };\r\n    /**\r\n     * Returns category based on position.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * This is a synonim of `getPositionLabel()` implemented here for consistentcy.\r\n     *\r\n     * @since 4.3.8\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    CategoryAxis.prototype.positionToCategory = function (position) {\r\n        return this.getPositionLabel(position);\r\n    };\r\n    /**\r\n     * Returns category based on position.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    CategoryAxis.prototype.getPositionLabel = function (position) {\r\n        var dataItem = this.dataItems.getIndex(this.positionToIndex(position));\r\n        if (dataItem) {\r\n            return dataItem.category;\r\n        }\r\n    };\r\n    Object.defineProperty(CategoryAxis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point\r\n         */\r\n        get: function () {\r\n            // This makes base grid to be drawn at the end of the axis and adds extra\r\n            // grid which we need to nicely close the chart.\r\n            return this.renderer.positionToPoint(1);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initializes Axis' renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    CategoryAxis.prototype.initRenderer = function () {\r\n        _super.prototype.initRenderer.call(this);\r\n        var renderer = this.renderer;\r\n        renderer.baseGrid.disabled = true;\r\n    };\r\n    Object.defineProperty(CategoryAxis.prototype, \"frequency\", {\r\n        /**\r\n         * Current frequency of labels of the axis.\r\n         *\r\n         * Normally it would be 1, but when labels start to be hidden due\r\n         * to `minGridDistance` this read-only property will increase.\r\n         *\r\n         * @readonly\r\n         * @since 4.2.0\r\n         * @return Label frequency\r\n         */\r\n        get: function () {\r\n            return this._frequency;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"sortBySeries\", {\r\n        /**\r\n         * @return Sort categories?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"sortBySeries\");\r\n        },\r\n        /**\r\n         * If set to a reference of [[ColumnSeries]] the categories will be sorted\r\n         * by actual values.\r\n         *\r\n         * The categories are ordered in descending order (from highest values to\r\n         * lowest). To reverse the order, use axis renderer's `inversed` setting.\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.sortBySeries = series;\r\n         * categoryAxis.renderer.inversed = true;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.sortBySeries = series;\r\n         * categoryAxis.renderer.inversed = true;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"sortBySeries\": \"s1\",\r\n         *     \"renderer\": {\r\n         *       // ...\r\n         *       \"inversed\": true\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.8.7\r\n         * @param  value  Sort categories?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"sortBySeries\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    CategoryAxis.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](config.sortBySeries) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isString\"](config.sortBySeries)) {\r\n                if (this.map.hasKey(config.sortBySeries)) {\r\n                    config.sortBySeries = this.map.getKey(config.sortBySeries);\r\n                }\r\n                else {\r\n                    this.addDelayedMap(\"sortBySeries\", config.sortBySeries);\r\n                    delete config.sortBySeries;\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return CategoryAxis;\r\n}(_Axis__WEBPACK_IMPORTED_MODULE_1__[\"Axis\"]));\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"CategoryAxis\"] = CategoryAxis;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"CategoryAxisDataItem\"] = CategoryAxisDataItem;\r\n//# sourceMappingURL=CategoryAxis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js ***!
  \*************************************************************************************/
/*! exports provided: CategoryAxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CategoryAxisBreak\", function() { return CategoryAxisBreak; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _AxisBreak__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nvar CategoryAxisBreak = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CategoryAxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CategoryAxisBreak() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CategoryAxisBreak\";\r\n        _this.properties.startLocation = 0.5;\r\n        _this.properties.endLocation = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startPosition\", {\r\n        /**\r\n         * Pixel position of the break's start.\r\n         *\r\n         * @return Position (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                return this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endPosition\", {\r\n        /**\r\n         * Pixel position of the break's end.\r\n         *\r\n         * @return Position (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                return this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startCategory\", {\r\n        /**\r\n         * @return Start category\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startCategory\");\r\n        },\r\n        /**\r\n         * A category break starts on.\r\n         *\r\n         * @param value Start category\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startCategory\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endCategory\", {\r\n        /**\r\n         * @return End category\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endCategory\");\r\n        },\r\n        /**\r\n         * A category break ends on.\r\n         *\r\n         * @param value  End category\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endCategory\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var category = this.getPropertyValue(\"startCategory\");\r\n            if (category) {\r\n                return this.axis.categoryToIndex(category);\r\n            }\r\n            else {\r\n                return this.getPropertyValue(\"startValue\");\r\n            }\r\n        },\r\n        /**\r\n         * An index of start category.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startValue\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var category = this.getPropertyValue(\"endCategory\");\r\n            if (category) {\r\n                return this.axis.categoryToIndex(category);\r\n            }\r\n            else {\r\n                return this.getPropertyValue(\"endValue\");\r\n            }\r\n        },\r\n        /**\r\n         * An index of end category or a end value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endValue\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startLocation\", {\r\n        /**\r\n         * @return Break start location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * Indicates where within starting category break should begin.\r\n         *\r\n         * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n         *\r\n         * E.g. if you want to a break to fully encompass start and end categories,\r\n         * you should set `startLocation = 0` and `endLocation = 1`.\r\n         *\r\n         * @since 4.9.17\r\n         * @default 0.5\r\n         * @param  value  Break start location\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endLocation\", {\r\n        /**\r\n         * @return Break end location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Indicates where within ending category break should end.\r\n         *\r\n         * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n         *\r\n         * E.g. if you want to a break to fully encompass start and end categories,\r\n         * you should set `startLocation = 0` and `endLocation = 1`.\r\n         *\r\n         * @since 4.9.17\r\n         * @default 0.5\r\n         * @param  value  Break end location\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CategoryAxisBreak;\r\n}(_AxisBreak__WEBPACK_IMPORTED_MODULE_1__[\"AxisBreak\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n//# sourceMappingURL=CategoryAxisBreak.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js ***!
  \****************************************************************************/
/*! exports provided: DateAxisDataItem, DateAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DateAxisDataItem\", function() { return DateAxisDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DateAxis\", function() { return DateAxis; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ValueAxis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Dictionary */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js\");\n/* harmony import */ var _DateAxisBreak__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DateAxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Time */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/SortedList */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js\");\n/**\r\n * DateAxis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines data item for [[DateAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar DateAxisDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(DateAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DateAxisDataItem\";\r\n        _this.applyTheme();\r\n        _this.values.date = {};\r\n        _this.values.endDate = {};\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateAxisDataItem.prototype, \"date\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.dates[\"date\"];\r\n        },\r\n        /**\r\n         * Date position of the data item.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"date\", date);\r\n            this.value = date.getTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxisDataItem.prototype, \"endDate\", {\r\n        /**\r\n         * @return End date\r\n         */\r\n        get: function () {\r\n            return this.dates[\"endDate\"];\r\n        },\r\n        /**\r\n         * End date for data item.\r\n         *\r\n         * @param date End date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"endDate\", date);\r\n            this.endValue = date.getTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxisDataItem;\r\n}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__[\"ValueAxisDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create a date/time-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DateAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IDateAxisEvents} for a list of available Events\r\n * @see {@link IDateAxisAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/} got `DateAxis` documention\r\n * @important\r\n */\r\nvar DateAxis = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(DateAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this._gapBreaks = false;\r\n        /**\r\n         * A list of date/time intervals for Date axis.\r\n         *\r\n         * This define various granularities available for the axis. For example\r\n         * if you have an axis spanning an hour, and space for 6 grid lines / labels\r\n         * the axis will choose the granularity of 10 minutes, displaying a label\r\n         * every 10 minutes.\r\n         *\r\n         * Default intervals:\r\n         *\r\n         * ```JSON\r\n         * [\r\n         *  { timeUnit: \"millisecond\", count: 1 },\r\n         *  { timeUnit: \"millisecond\", count: 5 },\r\n         *  { timeUnit: \"millisecond\", count: 10 },\r\n         *  { timeUnit: \"millisecond\", count: 50 },\r\n         *  { timeUnit: \"millisecond\", count: 100 },\r\n         *  { timeUnit: \"millisecond\", count: 500 },\r\n         *  { timeUnit: \"second\", count: 1 },\r\n         *  { timeUnit: \"second\", count: 5 },\r\n         *  { timeUnit: \"second\", count: 10 },\r\n         *  { timeUnit: \"second\", count: 30 },\r\n         *  { timeUnit: \"minute\", count: 1 },\r\n         *  { timeUnit: \"minute\", count: 5 },\r\n         *  { timeUnit: \"minute\", count: 10 },\r\n         *  { timeUnit: \"minute\", count: 30 },\r\n         *  { timeUnit: \"hour\", count: 1 },\r\n         *  { timeUnit: \"hour\", count: 3 },\r\n         *  { timeUnit: \"hour\", count: 6 },\r\n         *  { timeUnit: \"hour\", count: 12 },\r\n         *  { timeUnit: \"day\", count: 1 },\r\n         *  { timeUnit: \"day\", count: 2 },\r\n         *  { timeUnit: \"day\", count: 3 },\r\n         *  { timeUnit: \"day\", count: 4 },\r\n         *  { timeUnit: \"day\", count: 5 },\r\n         *  { timeUnit: \"week\", count: 1 },\r\n         *  { timeUnit: \"month\", count: 1 },\r\n         *  { timeUnit: \"month\", count: 2 },\r\n         *  { timeUnit: \"month\", count: 3 },\r\n         *  { timeUnit: \"month\", count: 6 },\r\n         *  { timeUnit: \"year\", count: 1 },\r\n         *  { timeUnit: \"year\", count: 2 },\r\n         *  { timeUnit: \"year\", count: 5 },\r\n         *  { timeUnit: \"year\", count: 10 },\r\n         *  { timeUnit: \"year\", count: 50 },\r\n         *  { timeUnit: \"year\", count: 100 }\r\n         * ]\r\n         * ```\r\n         */\r\n        _this.gridIntervals = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__[\"List\"]();\r\n        /**\r\n         * If data aggregation is enabled by setting Axis' `groupData = true`, the\r\n         * chart will try to aggregate data items into grouped data items.\r\n         *\r\n         * If there are more data items in selected period than `groupCount`, it will\r\n         * group data items into bigger period.\r\n         *\r\n         * For example seconds might be grouped into 10-second aggregate data items.\r\n         *\r\n         * This setting indicates what group intervals can the chart group to.\r\n         *\r\n         * Default intervals:\r\n         *\r\n         * ```JSON\r\n         * [\r\n         *   { timeUnit: \"millisecond\", count: 1},\r\n         *   { timeUnit: \"millisecond\", count: 10 },\r\n         *   { timeUnit: \"millisecond\", count: 100 },\r\n         *   { timeUnit: \"second\", count: 1 },\r\n         *   { timeUnit: \"second\", count: 10 },\r\n         *   { timeUnit: \"minute\", count: 1 },\r\n         *   { timeUnit: \"minute\", count: 10 },\r\n         *   { timeUnit: \"hour\", count: 1 },\r\n         *   { timeUnit: \"day\", count: 1 },\r\n         *   { timeUnit: \"week\", count: 1 },\r\n         *   { timeUnit: \"month\", count: 1 },\r\n         *   { timeUnit: \"year\", count: 1 }\r\n         * ]\r\n         * ```\r\n         * `groupData = true` does not work in combination with `skipEmptyPeriods = true`.\r\n         *\r\n         * @since 4.7.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         */\r\n        _this.groupIntervals = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__[\"List\"]();\r\n        /**\r\n         * A collection of date formats to use when formatting different time units\r\n         * on Date/time axis.\r\n         *\r\n         * Actual defaults will depend on the language locale set for the chart.\r\n         *\r\n         * To override format for a specific time unit, say days, you need to set\r\n         * the appropriate key to a format string. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n         * ```\r\n         * ```JavaScript\r\n         * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n         * ```\r\n         * ```JSON\r\n         * \"xAxes\": [{\r\n         *   \"type\": \"DateAxis\",\r\n         *   \"dateFormats\": {\r\n         *     \"day\": \"MMMM d, yyyy\"\r\n         *   }\r\n         * }]\r\n         * ```\r\n         *\r\n         * @see {@link DateFormatter}\r\n         */\r\n        _this.dateFormats = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__[\"Dictionary\"]();\r\n        /**\r\n         * These formats are applied to labels that are first in a larger unit.\r\n         *\r\n         * For example, if we have a DateAxis with days on it, the first day of month\r\n         * indicates a break in month - a start of the bigger period.\r\n         *\r\n         * For those labels, `periodChangeDateFormats` are applied instead of\r\n         * `dateFormats`.\r\n         *\r\n         * This allows us implement convenient structures, like instead of:\r\n         *\r\n         * `Jan 1 - Jan 2 - Jan 3 - ...`\r\n         *\r\n         * We can have:\r\n         *\r\n         * `Jan - 1 - 2 - 3 - ...`\r\n         *\r\n         * This can be disabled by setting `markUnitChange = false`.\r\n         */\r\n        _this.periodChangeDateFormats = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__[\"Dictionary\"]();\r\n        /**\r\n         * Actual interval (granularity) derived from the actual data.\r\n         */\r\n        _this._baseIntervalReal = { timeUnit: \"day\", count: 1 };\r\n        /**\r\n         */\r\n        _this._prevSeriesTime = {};\r\n        /**\r\n         * [_minDifference description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._minDifference = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._firstWeekDay = 1;\r\n        /**\r\n         * A collection of start timestamps to use as axis' min timestamp for\r\n         * particular data item item periods.\r\n         *\r\n         * @since 4.7.0\r\n         * @readonly\r\n         */\r\n        _this.groupMin = {};\r\n        /**\r\n         * A collection of start timestamps to use as axis' max timestamp for\r\n         * particular data item item periods.\r\n         *\r\n         * @since 4.7.0\r\n         * @readonly\r\n         */\r\n        _this.groupMax = {};\r\n        _this.className = \"DateAxis\";\r\n        _this.setPropertyValue(\"markUnitChange\", true);\r\n        _this.snapTooltip = true;\r\n        _this.tooltipPosition = \"pointer\";\r\n        _this.setPropertyValue(\"groupData\", false);\r\n        _this.groupCount = 200;\r\n        _this.events.on(\"parentset\", _this.getDFFormatter, _this, false);\r\n        // Translatable defaults are applied in `applyInternalDefaults()`\r\n        // ...\r\n        // Define default intervals\r\n        _this.gridIntervals.pushAll([\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ]);\r\n        _this.groupIntervals.pushAll([\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"year\", count: 1 }\r\n        ]);\r\n        // Set field name\r\n        _this.axisFieldName = \"date\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * A function which applies fills to axis cells.\r\n     *\r\n     * Default function fills every second fill. You can set this to a function\r\n     * that follows some other logic.\r\n     *\r\n     * Function should accept a [[DateAxisDataItem]] and modify its `axisFill`\r\n     * property accordingly.\r\n     */\r\n    DateAxis.prototype.fillRule = function (dataItem) {\r\n        var value = dataItem.value;\r\n        var axis = dataItem.component;\r\n        var gridInterval = axis._gridInterval;\r\n        var gridDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](gridInterval.timeUnit, gridInterval.count);\r\n        if (Math.round((value - axis.min) / gridDuration) / 2 == Math.round(Math.round((value - axis.min) / gridDuration) / 2)) {\r\n            dataItem.axisFill.__disabled = true;\r\n        }\r\n        else {\r\n            dataItem.axisFill.__disabled = false;\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    DateAxis.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Set default date formats\r\n        if (!this.dateFormats.hasKey(\"millisecond\")) {\r\n            this.dateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"second\")) {\r\n            this.dateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"minute\")) {\r\n            this.dateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"hour\")) {\r\n            this.dateFormats.setKey(\"hour\", this.language.translate(\"_date_hour\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"day\")) {\r\n            this.dateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"week\")) {\r\n            this.dateFormats.setKey(\"week\", this.language.translate(\"_date_day\")); // not a mistake\r\n        }\r\n        if (!this.dateFormats.hasKey(\"month\")) {\r\n            this.dateFormats.setKey(\"month\", this.language.translate(\"_date_month\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"year\")) {\r\n            this.dateFormats.setKey(\"year\", this.language.translate(\"_date_year\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"millisecond\")) {\r\n            this.periodChangeDateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"second\")) {\r\n            this.periodChangeDateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"minute\")) {\r\n            this.periodChangeDateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"hour\")) {\r\n            this.periodChangeDateFormats.setKey(\"hour\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"day\")) {\r\n            this.periodChangeDateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"week\")) {\r\n            this.periodChangeDateFormats.setKey(\"week\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"month\")) {\r\n            this.periodChangeDateFormats.setKey(\"month\", this.language.translate(\"_date_month\") + \" \" + this.language.translate(\"_date_year\"));\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    DateAxis.prototype.createDataItem = function () {\r\n        return new DateAxisDataItem();\r\n    };\r\n    /**\r\n     * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    DateAxis.prototype.createAxisBreak = function () {\r\n        return new _DateAxisBreak__WEBPACK_IMPORTED_MODULE_4__[\"DateAxisBreak\"]();\r\n    };\r\n    /**\r\n     * Validates Axis' data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.validateDataItems = function () {\r\n        // allows to keep selection of the same size\r\n        var start = this.start;\r\n        var end = this.end;\r\n        var baseDuration = this.baseDuration;\r\n        var periodCount = (this.max - this.min) / baseDuration;\r\n        this._firstWeekDay = this.getFirstWeekDay();\r\n        this.getDFFormatter();\r\n        _super.prototype.validateDataItems.call(this);\r\n        var mainBaseDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](this.mainBaseInterval.timeUnit, this.mainBaseInterval.count);\r\n        this.maxZoomFactor = (this.max - this.min) / mainBaseDuration;\r\n        this._deltaMinMax = this.baseDuration / 2;\r\n        // allows to keep selection of the same size\r\n        var newPeriodCount = (this.max - this.min) / baseDuration;\r\n        start = start + (end - start) * (1 - periodCount / newPeriodCount);\r\n        this.zoom({ start: start, end: end }, false, true); // added instantlyto solve zoomout problem when we have axes gaps. @todo: check how this affects maxZoomFactor\r\n    };\r\n    /**\r\n     * Handles process after zoom.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Does nothing?\r\n     */\r\n    DateAxis.prototype.handleSelectionExtremesChange = function () {\r\n    };\r\n    /**\r\n     * Calculates all positions, related to axis as per current zoom.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.calculateZoom = function () {\r\n        var _this = this;\r\n        _super.prototype.calculateZoom.call(this);\r\n        var difference = this.adjustDifference(this._minZoomed, this._maxZoomed);\r\n        var dataSetChanged = false;\r\n        // if data has to be grouped, choose interval and set dataset\r\n        if (this.groupData && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](difference)) {\r\n            var mainBaseInterval = this.mainBaseInterval;\r\n            var modifiedDifference = difference + this.startLocation + (1 - this.endLocation) * this.baseDuration;\r\n            var groupInterval = void 0;\r\n            if (this.groupInterval) {\r\n                groupInterval = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, this.groupInterval);\r\n            }\r\n            else {\r\n                groupInterval = this.chooseInterval(0, modifiedDifference, this.groupCount, this.groupIntervals);\r\n                if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](groupInterval.timeUnit, groupInterval.count) < _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](mainBaseInterval.timeUnit, mainBaseInterval.count)) {\r\n                    groupInterval = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, mainBaseInterval);\r\n                }\r\n            }\r\n            this._groupInterval = groupInterval;\r\n            var newId = groupInterval.timeUnit + groupInterval.count;\r\n            if (this._currentDataSetId != newId) {\r\n                this._currentDataSetId = newId;\r\n                this.dispatch(\"groupperiodchanged\");\r\n            }\r\n            this.series.each(function (series) {\r\n                if (series.baseAxis == _this) {\r\n                    if (series.setDataSet(_this._currentDataSetId)) {\r\n                        dataSetChanged = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        var gridInterval = this.chooseInterval(0, difference, this._gridCount);\r\n        if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](gridInterval.timeUnit, gridInterval.count) < this.baseDuration) {\r\n            gridInterval = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, this.baseInterval);\r\n        }\r\n        this._gridInterval = gridInterval;\r\n        this._nextGridUnit = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getNextUnit\"](gridInterval.timeUnit);\r\n        // the following is needed to avoid grid flickering while scrolling\r\n        this._intervalDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](gridInterval.timeUnit, gridInterval.count);\r\n        this._gridDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(this.minZoomed - _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](gridInterval.timeUnit, gridInterval.count)), gridInterval.timeUnit, gridInterval.count, this._firstWeekDay, this._df.utc, new Date(this.min));\r\n        // tell series start/end\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.series.iterator(), function (series) {\r\n            if (series.baseAxis == _this) {\r\n                var field_1 = series.getAxisField(_this);\r\n                var minZoomed = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(_this._minZoomed + _this.baseDuration * 0.05), _this.baseInterval.timeUnit, _this.baseInterval.count, _this._firstWeekDay, _this._df.utc).getTime();\r\n                var minZoomedStr = minZoomed.toString();\r\n                var startDataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(minZoomedStr + series.currentDataSetId);\r\n                var startIndex = 0;\r\n                if (_this.start != 0) {\r\n                    if (startDataItem) {\r\n                        startDataItem = _this.findFirst(startDataItem, minZoomed, field_1);\r\n                        startIndex = startDataItem.index;\r\n                    }\r\n                    else {\r\n                        startIndex = series.dataItems.findClosestIndex(_this._minZoomed, function (x) { return x[field_1]; }, \"left\");\r\n                    }\r\n                }\r\n                // 1 millisecond is removed so that if only first item is selected, it would not count in the second.\r\n                var baseInterval = _this.baseInterval;\r\n                var maxZoomed = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(_this._maxZoomed), baseInterval.timeUnit, baseInterval.count, _this._firstWeekDay, _this._df.utc), baseInterval.timeUnit, baseInterval.count, _this._df.utc).getTime();\r\n                var maxZoomedStr = maxZoomed.toString();\r\n                var endDataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(maxZoomedStr + series.currentDataSetId);\r\n                var endIndex = series.dataItems.length;\r\n                if (_this.end != 1) {\r\n                    if (endDataItem) {\r\n                        endIndex = endDataItem.index;\r\n                    }\r\n                    else {\r\n                        maxZoomed -= 1;\r\n                        endIndex = series.dataItems.findClosestIndex(maxZoomed, function (x) { return x[field_1]; }, \"right\");\r\n                        // not good - if end is in the gap, indexes go like 5,4,3,4,2,1\r\n                        //if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                        //}\r\n                    }\r\n                }\r\n                series.startIndex = startIndex;\r\n                series.endIndex = endIndex;\r\n                if (!dataSetChanged && series.dataRangeInvalid) {\r\n                    series.validateDataRange();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    DateAxis.prototype.findFirst = function (dataItem, time, key) {\r\n        var index = dataItem.index;\r\n        if (index > 0) {\r\n            var series = dataItem.component;\r\n            var previousDataItem = series.dataItems.getIndex(index - 1);\r\n            var previousDate = previousDataItem[key];\r\n            if (!previousDate || previousDate.getTime() < time) {\r\n                return dataItem;\r\n            }\r\n            else {\r\n                return this.findFirst(previousDataItem, time, key);\r\n            }\r\n        }\r\n        else {\r\n            return dataItem;\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.baseInterval.count)) {\r\n            this.baseInterval.count = 1;\r\n        }\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"minDifference\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            var minDifference = Number.MAX_VALUE;\r\n            this.series.each(function (series) {\r\n                if (minDifference > _this._minDifference[series.uid]) {\r\n                    minDifference = _this._minDifference[series.uid];\r\n                }\r\n            });\r\n            if (minDifference == Number.MAX_VALUE || minDifference == 0) {\r\n                minDifference = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"day\");\r\n            }\r\n            return minDifference;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    DateAxis.prototype.seriesDataChangeUpdate = function (series) {\r\n        this._minDifference[series.uid] = Number.MAX_VALUE;\r\n    };\r\n    /**\r\n     * [postProcessSeriesDataItems description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    DateAxis.prototype.postProcessSeriesDataItems = function (series) {\r\n        var _this = this;\r\n        if (series) {\r\n            this.seriesGroupUpdate(series);\r\n        }\r\n        else {\r\n            this.series.each(function (series) {\r\n                _this.seriesGroupUpdate(series);\r\n            });\r\n        }\r\n        this.addEmptyUnitsBreaks();\r\n    };\r\n    DateAxis.prototype.seriesGroupUpdate = function (series) {\r\n        var _this = this;\r\n        if (JSON.stringify(series._baseInterval[this.uid]) != JSON.stringify(this.mainBaseInterval)) {\r\n            series._baseInterval[this.uid] = this.mainBaseInterval;\r\n            series.mainDataSet.each(function (dataItem) {\r\n                _this.postProcessSeriesDataItem(dataItem);\r\n            });\r\n            if (this.groupData) {\r\n                this.groupSeriesData(series);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calculates series group data.\r\n     *\r\n     * @param  series  Series\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.groupSeriesData = function (series) {\r\n        var _this = this;\r\n        if (series.baseAxis == this && series.dataItems.length > 0 && !series.dataGrouped) {\r\n            series.bulletsContainer.disposeChildren();\r\n            // make array of intervals which will be used;\r\n            var intervals_1 = [];\r\n            var mainBaseInterval = this.mainBaseInterval;\r\n            var mainIntervalDuration_1 = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](mainBaseInterval.timeUnit, mainBaseInterval.count);\r\n            this.groupIntervals.each(function (interval) {\r\n                var intervalDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](interval.timeUnit, interval.count);\r\n                if ((intervalDuration > mainIntervalDuration_1 && intervalDuration < (_this.max - _this.min)) || _this.groupInterval) {\r\n                    intervals_1.push(interval);\r\n                }\r\n            });\r\n            if (series._dataSets) {\r\n                series._dataSets.each(function (key, dataItems) {\r\n                    dataItems.each(function (dataItem) {\r\n                        dataItem.dispose();\r\n                    });\r\n                    dataItems.clear();\r\n                });\r\n                series._dataSets.clear();\r\n            }\r\n            _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__[\"each\"](intervals_1, function (interval) {\r\n                //let mainBaseInterval = this._mainBaseInterval;\r\n                var key = \"date\" + _this.axisLetter;\r\n                // create data set\r\n                var dataSetId = interval.timeUnit + interval.count;\r\n                // todo: check where this clone goes\r\n                var dataSet = new _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_13__[\"OrderedListTemplate\"](series.mainDataSet.template.clone());\r\n                series.dataSets.setKey(dataSetId, dataSet);\r\n                series.dataGrouped = true;\r\n                var dataItems = series.mainDataSet;\r\n                var previousTime = Number.NEGATIVE_INFINITY;\r\n                var i = 0;\r\n                var newDataItem;\r\n                var dataFields = [];\r\n                _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__[\"each\"](series.dataFields, function (dfkey, df) {\r\n                    var dfk = dfkey;\r\n                    if (dfk != key && dfk.indexOf(\"Show\") == -1) {\r\n                        dataFields.push(dfk);\r\n                    }\r\n                });\r\n                var roundedDate;\r\n                dataItems.each(function (dataItem) {\r\n                    var date = dataItem.getDate(key);\r\n                    if (date) {\r\n                        var time = date.getTime();\r\n                        roundedDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(time), interval.timeUnit, interval.count, _this._df.firstDayOfWeek, _this._df.utc);\r\n                        var currentTime = roundedDate.getTime();\r\n                        // changed period\t\t\t\t\t\t\t\t\r\n                        if (previousTime < currentTime) {\r\n                            if (newDataItem && series._adapterO) {\r\n                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__[\"each\"](dataFields, function (vkey) {\r\n                                    newDataItem.values[vkey].value = series._adapterO.apply(\"groupDataItem\", {\r\n                                        dataItem: newDataItem,\r\n                                        interval: interval,\r\n                                        dataField: vkey,\r\n                                        date: roundedDate,\r\n                                        value: newDataItem.values[vkey].value\r\n                                    }).value;\r\n                                });\r\n                            }\r\n                            newDataItem = dataSet.create();\r\n                            newDataItem.dataContext = {};\r\n                            newDataItem.setWorkingLocation(\"dateX\", series.dataItems.template.locations.dateX, 0);\r\n                            newDataItem.setWorkingLocation(\"openDateX\", series.dataItems.template.locations.openDateX, 0);\r\n                            newDataItem.setWorkingLocation(\"dateY\", series.dataItems.template.locations.dateY, 0);\r\n                            newDataItem.setWorkingLocation(\"openDateY\", series.dataItems.template.locations.openDateY, 0);\r\n                            newDataItem.component = series;\r\n                            // other Dates?\r\n                            newDataItem.setDate(key, roundedDate);\r\n                            newDataItem._index = i;\r\n                            i++;\r\n                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__[\"each\"](dataFields, function (vkey) {\r\n                                //let groupFieldName = vkey + \"Group\";\r\n                                var dvalues = dataItem.values[vkey];\r\n                                if (dvalues) {\r\n                                    var value = dvalues.value;\r\n                                    if (series._adapterO) {\r\n                                        value = series._adapterO.apply(\"groupValue\", {\r\n                                            dataItem: dataItem,\r\n                                            interval: interval,\r\n                                            dataField: vkey,\r\n                                            date: roundedDate,\r\n                                            value: value\r\n                                        }).value;\r\n                                    }\r\n                                    var values = newDataItem.values[vkey];\r\n                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](value)) {\r\n                                        values.value = value;\r\n                                        values.workingValue = value;\r\n                                        values.open = value;\r\n                                        values.close = value;\r\n                                        values.low = value;\r\n                                        values.high = value;\r\n                                        values.sum = value;\r\n                                        values.average = value;\r\n                                        values.count = 1;\r\n                                    }\r\n                                    else {\r\n                                        values.count = 0;\r\n                                    }\r\n                                }\r\n                            });\r\n                            _this.postProcessSeriesDataItem(newDataItem, interval);\r\n                            _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__[\"each\"](series.propertyFields, function (key, fieldValue) {\r\n                                var f = key;\r\n                                var value = dataItem.properties[key];\r\n                                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](value)) {\r\n                                    newDataItem.hasProperties = true;\r\n                                    newDataItem.setProperty(f, value);\r\n                                }\r\n                            });\r\n                            newDataItem.groupDataItems = [dataItem];\r\n                            previousTime = currentTime;\r\n                        }\r\n                        else {\r\n                            if (newDataItem) {\r\n                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__[\"each\"](dataFields, function (vkey) {\r\n                                    var groupFieldName = series.groupFields[vkey];\r\n                                    var dvalues = dataItem.values[vkey];\r\n                                    if (dvalues) {\r\n                                        var value = dvalues.value;\r\n                                        if (series._adapterO) {\r\n                                            value = series._adapterO.apply(\"groupValue\", {\r\n                                                dataItem: dataItem,\r\n                                                interval: interval,\r\n                                                dataField: vkey,\r\n                                                date: roundedDate,\r\n                                                value: value\r\n                                            }).value;\r\n                                        }\r\n                                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](value)) {\r\n                                            var values = newDataItem.values[vkey];\r\n                                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](values.open)) {\r\n                                                values.open = value;\r\n                                            }\r\n                                            values.close = value;\r\n                                            if (values.low > value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](values.low)) {\r\n                                                values.low = value;\r\n                                            }\r\n                                            if (values.high < value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](values.high)) {\r\n                                                values.high = value;\r\n                                            }\r\n                                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](values.sum)) {\r\n                                                values.sum += value;\r\n                                            }\r\n                                            else {\r\n                                                values.sum = value;\r\n                                            }\r\n                                            values.count++;\r\n                                            values.average = values.sum / values.count;\r\n                                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](values[groupFieldName])) {\r\n                                                values.value = values[groupFieldName];\r\n                                                values.workingValue = values.value;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"copyProperties\"](dataItem.properties, newDataItem.properties);\r\n                                _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__[\"each\"](series.propertyFields, function (key, fieldValue) {\r\n                                    var f = key;\r\n                                    var value = dataItem.properties[key];\r\n                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](value)) {\r\n                                        newDataItem.hasProperties = true;\r\n                                        newDataItem.setProperty(f, value);\r\n                                    }\r\n                                });\r\n                                newDataItem.groupDataItems.push(dataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (newDataItem) {\r\n                        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"copyProperties\"](dataItem.dataContext, newDataItem.dataContext);\r\n                    }\r\n                });\r\n                if (newDataItem && series._adapterO) {\r\n                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__[\"each\"](dataFields, function (vkey) {\r\n                        newDataItem.values[vkey].value = series._adapterO.apply(\"groupDataItem\", {\r\n                            dataItem: newDataItem,\r\n                            interval: interval,\r\n                            dataField: vkey,\r\n                            date: roundedDate,\r\n                            value: newDataItem.values[vkey].value\r\n                        }).value;\r\n                    });\r\n                }\r\n            });\r\n            this.calculateZoom();\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.getDFFormatter = function () {\r\n        this._df = this.dateFormatter;\r\n    };\r\n    /**\r\n     * [postProcessSeriesDataItem description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem Data item\r\n     */\r\n    DateAxis.prototype.postProcessSeriesDataItem = function (dataItem, interval) {\r\n        var _this = this;\r\n        // we need to do this for all series data items not only added recently, as baseInterval might change\r\n        var intervalID = \"\";\r\n        if (interval) {\r\n            intervalID = interval.timeUnit + interval.count;\r\n        }\r\n        else {\r\n            interval = this.mainBaseInterval;\r\n        }\r\n        var series = dataItem.component;\r\n        var dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__[\"each\"](dataItem.dates, function (key) {\r\n            var date = dataItem.getDate(key);\r\n            var time = date.getTime();\r\n            var startDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(time), interval.timeUnit, interval.count, _this._firstWeekDay, _this._df.utc);\r\n            var startTime = startDate.getTime();\r\n            var endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](new Date(startTime), interval.timeUnit, interval.count, _this._df.utc);\r\n            dataItem.setCalculatedValue(key, startTime, \"open\");\r\n            dataItem.setCalculatedValue(key, endDate.getTime(), \"close\");\r\n            dataItemsByAxis.setKey(startTime + intervalID, dataItem);\r\n        });\r\n    };\r\n    /**\r\n     * Collapses empty stretches of date/time scale by creating [[AxisBreak]]\r\n     * elements for them.\r\n     *\r\n     * Can be used to automatically remove strethes without data, like weekends.\r\n     *\r\n     * No, need to call this manually. It will automatically be done if\r\n     * `skipEmptyPeriods = true`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.addEmptyUnitsBreaks = function () {\r\n        var _this = this;\r\n        if (this.skipEmptyPeriods && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.max)) {\r\n            var timeUnit = this.baseInterval.timeUnit;\r\n            var count = this.baseInterval.count;\r\n            if (this._axisBreaks) {\r\n                this._axisBreaks.clear(); // TODO: what about breaks added by user?\r\n            }\r\n            var date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(this.min), timeUnit, count, this._firstWeekDay, this._df.utc);\r\n            var axisBreak = void 0;\r\n            var _loop_1 = function () {\r\n                _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](date, timeUnit, count, this_1._df.utc);\r\n                var startTime = date.getTime();\r\n                var startTimeStr = startTime.toString();\r\n                var hasData = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"contains\"](this_1.series.iterator(), function (series) {\r\n                    return !!series.dataItemsByAxis.getKey(_this.uid).getKey(startTimeStr + series.currentDataSetId);\r\n                });\r\n                // open break if not yet opened\r\n                if (!hasData) {\r\n                    if (!axisBreak) {\r\n                        axisBreak = this_1.axisBreaks.create();\r\n                        axisBreak.startDate = new Date(startTime);\r\n                        this_1._gapBreaks = true;\r\n                    }\r\n                }\r\n                else {\r\n                    // close if already opened\r\n                    if (axisBreak) {\r\n                        // close at end time minus one millisecond\r\n                        axisBreak.endDate = new Date(startTime - 1);\r\n                        axisBreak = undefined;\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            while (date.getTime() < this.max - this.baseDuration) {\r\n                _loop_1();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates positioning of Axis breaks after something changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.fixAxisBreaks = function () {\r\n        var _this = this;\r\n        _super.prototype.fixAxisBreaks.call(this);\r\n        var axisBreaks = this._axisBreaks;\r\n        if (axisBreaks) {\r\n            if (axisBreaks.length > 0) {\r\n                // process breaks\r\n                axisBreaks.each(function (axisBreak) {\r\n                    var breakGridCount = Math.ceil(_this._gridCount * (Math.min(_this.end, axisBreak.endPosition) - Math.max(_this.start, axisBreak.startPosition)) / (_this.end - _this.start));\r\n                    axisBreak.gridInterval = _this.chooseInterval(0, axisBreak.adjustedEndValue - axisBreak.adjustedStartValue, breakGridCount);\r\n                    var gridDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(axisBreak.adjustedStartValue), axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, _this._firstWeekDay, _this._df.utc);\r\n                    if (gridDate.getTime() > axisBreak.startDate.getTime()) {\r\n                        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](gridDate, axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, _this._df.utc);\r\n                    }\r\n                    axisBreak.gridDate = gridDate;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.getFirstWeekDay = function () {\r\n        if (this._df) {\r\n            return this._df.firstDayOfWeek;\r\n        }\r\n        return 1;\r\n    };\r\n    /**\r\n     * [getGridDate description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param date           [description]\r\n     * @param intervalCount  [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.getGridDate = function (date, intervalCount) {\r\n        var timeUnit = this._gridInterval.timeUnit;\r\n        var realIntervalCount = this._gridInterval.count;\r\n        // round date\r\n        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](date, timeUnit, 1, this._firstWeekDay, this._df.utc);\r\n        var prevTimestamp = date.getTime();\r\n        var newDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"copy\"](date);\r\n        // modify date by adding intervalcount\r\n        var timestamp = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](newDate, timeUnit, intervalCount, this._df.utc).getTime();\r\n        // if it's axis break, get first rounded date which is not in a break\r\n        var axisBreak = this.isInBreak(timestamp);\r\n        if (axisBreak && axisBreak.endDate) {\r\n            newDate = new Date(axisBreak.endDate.getTime());\r\n            _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](newDate, timeUnit, realIntervalCount, this._firstWeekDay, this._df.utc);\r\n            if (newDate.getTime() < axisBreak.endDate.getTime()) {\r\n                _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](newDate, timeUnit, realIntervalCount, this._df.utc);\r\n            }\r\n            timestamp = newDate.getTime();\r\n        }\r\n        // get duration between grid lines with break duration removed\r\n        var durationBreaksRemoved = this.adjustDifference(prevTimestamp, timestamp);\r\n        // calculate how many time units fit to this duration\r\n        var countBreaksRemoved = Math.round(durationBreaksRemoved / _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](timeUnit));\r\n        // if less units fit, add one and repeat\r\n        if (countBreaksRemoved < realIntervalCount) {\r\n            return this.getGridDate(date, intervalCount + realIntervalCount);\r\n        }\r\n        return newDate;\r\n    };\r\n    /**\r\n     * [getBreaklessDate description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param axisBreak  [description]\r\n     * @param timeUnit   [description]\r\n     * @param count      [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.getBreaklessDate = function (axisBreak, timeUnit, count) {\r\n        var date = new Date(axisBreak.endValue);\r\n        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](date, timeUnit, count, this._firstWeekDay, this._df.utc);\r\n        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](date, timeUnit, count, this._df.utc);\r\n        var timestamp = date.getTime();\r\n        axisBreak = this.isInBreak(timestamp);\r\n        if (axisBreak) {\r\n            return this.getBreaklessDate(axisBreak, timeUnit, count);\r\n        }\r\n        return date;\r\n    };\r\n    /**\r\n     * (Re)validates all Axis elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    DateAxis.prototype.validateAxisElements = function () {\r\n        var _this = this;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.min)) {\r\n            this.calculateZoom();\r\n            // first regular items\r\n            var timestamp = this._gridDate.getTime();\r\n            var timeUnit = this._gridInterval.timeUnit;\r\n            var intervalCount = this._gridInterval.count;\r\n            var prevGridDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"copy\"](this._gridDate);\r\n            var dataItemsIterator_1 = this._dataItemsIterator;\r\n            this.resetIterators();\r\n            var _loop_2 = function () {\r\n                var date = this_2.getGridDate(_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"copy\"](prevGridDate), intervalCount);\r\n                timestamp = date.getTime();\r\n                var endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"copy\"](date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n                endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](endDate, timeUnit, intervalCount, this_2._df.utc);\r\n                var format = this_2.dateFormats.getKey(timeUnit);\r\n                if (this_2.markUnitChange && prevGridDate) {\r\n                    if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"checkChange\"](date, prevGridDate, this_2._nextGridUnit, this_2._df.utc)) {\r\n                        if (timeUnit !== \"year\") {\r\n                            format = this_2.periodChangeDateFormats.getKey(timeUnit);\r\n                        }\r\n                    }\r\n                }\r\n                var text = this_2._df.format(date, format);\r\n                var dataItem = dataItemsIterator_1.find(function (x) { return x.text === text; });\r\n                if (dataItem.__disabled) {\r\n                    dataItem.__disabled = false;\r\n                }\r\n                this_2.appendDataItem(dataItem);\r\n                dataItem.axisBreak = undefined;\r\n                dataItem.date = date;\r\n                dataItem.endDate = endDate;\r\n                dataItem.text = text;\r\n                this_2.validateDataElement(dataItem);\r\n                prevGridDate = date;\r\n            };\r\n            var this_2 = this;\r\n            while (timestamp <= this._maxZoomed) {\r\n                _loop_2();\r\n            }\r\n            // breaks later\r\n            var renderer_1 = this.renderer;\r\n            if (this._axisBreaks) {\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this._axisBreaks.iterator(), function (axisBreak) {\r\n                    if (axisBreak.breakSize > 0) {\r\n                        var timeUnit_1 = axisBreak.gridInterval.timeUnit;\r\n                        var intervalCount_1 = axisBreak.gridInterval.count;\r\n                        // only add grid if gap is bigger then minGridDistance\r\n                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"getDistance\"](axisBreak.startPoint, axisBreak.endPoint) > renderer_1.minGridDistance * 4) {\r\n                            var timestamp_1 = axisBreak.gridDate.getTime();\r\n                            var prevGridDate_1;\r\n                            var count = 0;\r\n                            var _loop_3 = function () {\r\n                                var date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"copy\"](axisBreak.gridDate);\r\n                                timestamp_1 = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](date, timeUnit_1, intervalCount_1 * count, _this._df.utc).getTime();\r\n                                count++;\r\n                                if (timestamp_1 > axisBreak.adjustedStartValue && timestamp_1 < axisBreak.adjustedEndValue) {\r\n                                    var endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"copy\"](date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n                                    endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](endDate, timeUnit_1, intervalCount_1, _this._df.utc);\r\n                                    var format = _this.dateFormats.getKey(timeUnit_1);\r\n                                    if (_this.markUnitChange && prevGridDate_1) {\r\n                                        if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"checkChange\"](date, prevGridDate_1, _this._nextGridUnit, _this._df.utc)) {\r\n                                            if (timeUnit_1 !== \"year\") {\r\n                                                format = _this.periodChangeDateFormats.getKey(timeUnit_1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    var text_1 = _this._df.format(date, format);\r\n                                    var dataItem = dataItemsIterator_1.find(function (x) { return x.text === text_1; });\r\n                                    if (dataItem.__disabled) {\r\n                                        dataItem.__disabled = false;\r\n                                    }\r\n                                    //this.processDataItem(dataItem);\r\n                                    _this.appendDataItem(dataItem);\r\n                                    dataItem.axisBreak = axisBreak;\r\n                                    axisBreak.dataItems.moveValue(dataItem);\r\n                                    dataItem.date = date;\r\n                                    dataItem.endDate = endDate;\r\n                                    dataItem.text = text_1;\r\n                                    prevGridDate_1 = date;\r\n                                    _this.validateDataElement(dataItem);\r\n                                }\r\n                            };\r\n                            while (timestamp_1 <= axisBreak.adjustedMax) {\r\n                                _loop_3();\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates Axis data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    DateAxis.prototype.validateDataElement = function (dataItem) {\r\n        dataItem.itemIndex = this._axisItemCount;\r\n        this._axisItemCount++;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.min)) {\r\n            var renderer = this.renderer;\r\n            var timestamp = dataItem.value;\r\n            var endTimestamp = dataItem.endValue;\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](endTimestamp)) {\r\n                endTimestamp = timestamp;\r\n            }\r\n            var position = this.valueToPosition(timestamp);\r\n            var endPosition = this.valueToPosition(endTimestamp);\r\n            var fillEndPosition = endPosition;\r\n            if (!dataItem.isRange && this._gridInterval.count > this.baseInterval.count) {\r\n                endPosition = position + (endPosition - position) / (this._gridInterval.count / this.baseInterval.count);\r\n            }\r\n            dataItem.position = position;\r\n            var tick = dataItem.tick;\r\n            if (tick && !tick.disabled) {\r\n                renderer.updateTickElement(tick, position, endPosition);\r\n            }\r\n            var grid = dataItem.grid;\r\n            if (grid && !grid.disabled) {\r\n                renderer.updateGridElement(grid, position, endPosition);\r\n            }\r\n            var fill = dataItem.axisFill;\r\n            if (fill && !fill.disabled) {\r\n                renderer.updateFillElement(fill, position, fillEndPosition);\r\n                if (!dataItem.isRange) {\r\n                    this.fillRule(dataItem);\r\n                }\r\n            }\r\n            var mask = dataItem.mask;\r\n            if (mask) {\r\n                renderer.updateFillElement(mask, position, endPosition);\r\n            }\r\n            if (dataItem.bullet) {\r\n                renderer.updateBullet(dataItem.bullet, position, endPosition);\r\n            }\r\n            var label = dataItem.label;\r\n            if (label && !label.disabled) {\r\n                var location_1 = label.location;\r\n                if (location_1 == 0) {\r\n                    if (this._gridInterval.count == 1 && this._gridInterval.timeUnit != \"week\" && !dataItem.isRange) {\r\n                        location_1 = 0.5;\r\n                    }\r\n                    else {\r\n                        location_1 = 0;\r\n                    }\r\n                }\r\n                renderer.updateLabelElement(label, position, endPosition, location_1);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"baseDuration\", {\r\n        /**\r\n         * A duration in milliseconds of the `baseInterval`.\r\n         *\r\n         * @return Duration (ms)\r\n         */\r\n        get: function () {\r\n            return _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](this.baseInterval.timeUnit, this.baseInterval.count);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adjusts min/max values.\r\n     *\r\n     * @ignore Exclude from docs.\r\n     * @todo Description (review)\r\n     * @param min  Min timestamp\r\n     * @param max  Max timestamp\r\n     * @return Adjusted min/max step\r\n     */\r\n    DateAxis.prototype.adjustMinMax = function (min, max) {\r\n        return { min: min, max: max, step: this.baseDuration };\r\n    };\r\n    /**\r\n     * Adjusts the minimum timestamp as per cell start location.\r\n     *\r\n     * @param value  Value\r\n     * @return Adjusted value\r\n     */\r\n    DateAxis.prototype.fixMin = function (value) {\r\n        // like this because months are not equal\r\n        var interval = this.baseInterval;\r\n        var startTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(value), interval.timeUnit, interval.count, this._firstWeekDay, this._df.utc).getTime();\r\n        var endTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n        return startTime + (endTime - startTime) * this.startLocation;\r\n    };\r\n    /**\r\n     * Adjusts the maximum timestamp as per cell start location.\r\n     *\r\n     * @param value  Value\r\n     * @return Adjusted value\r\n     */\r\n    DateAxis.prototype.fixMax = function (value) {\r\n        // like this because months are not equal\r\n        var interval = this.baseInterval;\r\n        var startTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(value), interval.timeUnit, interval.count, this._firstWeekDay, this._df.utc).getTime();\r\n        var endTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n        return startTime + (endTime - startTime) * this.endLocation;\r\n    };\r\n    /**\r\n     * [chooseInterval description]\r\n     *\r\n     * @ignore Exclude from docs.\r\n     * @todo Description\r\n     * @param index      [description]\r\n     * @param duration   [description]\r\n     * @param gridCount  [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.chooseInterval = function (index, duration, gridCount, intervals) {\r\n        if (!intervals) {\r\n            intervals = this.gridIntervals;\r\n        }\r\n        var gridInterval = intervals.getIndex(index);\r\n        var intervalDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](gridInterval.timeUnit, gridInterval.count);\r\n        var lastIndex = intervals.length - 1;\r\n        if (index >= lastIndex) {\r\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, intervals.getIndex(lastIndex));\r\n        }\r\n        var count = Math.ceil(duration / intervalDuration);\r\n        if (duration < intervalDuration && index > 0) {\r\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, intervals.getIndex(index - 1));\r\n        }\r\n        if (count <= gridCount) {\r\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, intervals.getIndex(index));\r\n        }\r\n        else {\r\n            if (index + 1 < intervals.length) {\r\n                return this.chooseInterval(index + 1, duration, gridCount, intervals);\r\n            }\r\n            else {\r\n                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, intervals.getIndex(index));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Formats the value according to axis' own [[DateFormatter]].\r\n     *\r\n     * @param value  Source value\r\n     * @return Formatted value\r\n     */\r\n    DateAxis.prototype.formatLabel = function (value) {\r\n        return this._df.format(value);\r\n    };\r\n    /**\r\n     * Converts a Date to an asbolute pixel position within Axis.\r\n     *\r\n     * @param date  Date\r\n     * @return Position (px)\r\n     */\r\n    DateAxis.prototype.dateToPosition = function (date) {\r\n        return this.valueToPosition(date.getTime());\r\n    };\r\n    /**\r\n     * Converts a numeric timestamp or a `Date` to a relative position on axis.\r\n     *\r\n     * @param date  Date or a timestamp\r\n     * @return Relative position\r\n     */\r\n    DateAxis.prototype.anyToPosition = function (date) {\r\n        if (date instanceof Date) {\r\n            return this.dateToPosition(date);\r\n        }\r\n        else {\r\n            return this.valueToPosition(date);\r\n        }\r\n    };\r\n    /**\r\n     * Converts date to orientation point (x, y, angle) on axis\r\n     *\r\n     * @param date Date\r\n     * @return IOrientationPoint\r\n     */\r\n    DateAxis.prototype.dateToPoint = function (date) {\r\n        var position = this.dateToPosition(date);\r\n        var point = this.renderer.positionToPoint(position);\r\n        var angle = this.renderer.positionToAngle(position);\r\n        return { x: point.x, y: point.y, angle: angle };\r\n    };\r\n    /**\r\n     * Converts a numeric value to orientation (x, y, angle) point on axis\r\n     *\r\n     * @param value  Value\r\n     * @return Orientation point\r\n     */\r\n    DateAxis.prototype.anyToPoint = function (date) {\r\n        if (date instanceof Date) {\r\n            return this.dateToPoint(date);\r\n        }\r\n        else {\r\n            return this.valueToPoint(date);\r\n        }\r\n    };\r\n    /**\r\n     * Converts pixel position within Axis to a corresponding Date.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Date\r\n     */\r\n    DateAxis.prototype.positionToDate = function (position) {\r\n        return new Date(this.positionToValue(position));\r\n    };\r\n    /**\r\n     * Returns the relative position on axis for series' data item's value.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Data field to get value from\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    DateAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        var value = this.getTimeByLocation(dataItem, key, location);\r\n        //let stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value);\r\n        if (range) {\r\n            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item's value.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Data field to get value from\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    DateAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        var value = this.getTimeByLocation(dataItem, key, location);\r\n        var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns an angle for series data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Data field to get value from\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  Stack ID\r\n     * @param range Range to fit in\r\n     * @return Angle\r\n     */\r\n    DateAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        var value = this.getTimeByLocation(dataItem, key, location);\r\n        var stack = dataItem.getValue(stackKey, \"stack\");\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](position, range.start, range.end);\r\n        }\r\n        return this.positionToAngle(position);\r\n    };\r\n    /**\r\n     * [getTimeByLocation description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  [description]\r\n     * @param key       [description]\r\n     * @param location  [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.getTimeByLocation = function (dataItem, key, location) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](key)) {\r\n            return;\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](location)) {\r\n            location = dataItem.workingLocations[key];\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](location)) {\r\n                location = 0;\r\n            }\r\n        }\r\n        var startTime = dataItem.values[key][\"open\"];\r\n        var endTime = dataItem.values[key][\"close\"];\r\n        var workingValue = dataItem.values[key].workingValue;\r\n        var value = dataItem.values[key].value;\r\n        var difference = value - workingValue;\r\n        startTime -= difference;\r\n        endTime -= difference;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](startTime) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](endTime)) {\r\n            return startTime + (endTime - startTime) * location;\r\n        }\r\n    };\r\n    /**\r\n     * Processes a related series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    DateAxis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n        var series = dataItem.component;\r\n        var time;\r\n        var date = dataItem[\"date\" + axisLetter];\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](this.timezoneOffset)) {\r\n            date.setTime(date.getTime() + (date.getTimezoneOffset() - this.timezoneOffset) * 60000);\r\n            dataItem.setValue(\"date\" + axisLetter, date.getTime(), 0);\r\n        }\r\n        if (date) {\r\n            time = date.getTime();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        var openDate = dataItem[\"openDate\" + axisLetter];\r\n        var prevSeriesTime = this._prevSeriesTime[series.uid];\r\n        var openTime;\r\n        if (openDate) {\r\n            openTime = openDate.getTime();\r\n        }\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](openTime)) {\r\n            var difference = Math.abs(time - openTime);\r\n            if (this._minDifference[series.uid] > difference) {\r\n                this._minDifference[series.uid] = difference;\r\n            }\r\n        }\r\n        var differece = time - prevSeriesTime;\r\n        if (differece > 0) {\r\n            if (this._minDifference[series.uid] > differece) {\r\n                this._minDifference[series.uid] = differece;\r\n            }\r\n        }\r\n        this._prevSeriesTime[series.uid] = time;\r\n        if (series._baseInterval[this.uid]) {\r\n            this.postProcessSeriesDataItem(dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * [updateAxisBySeries description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    DateAxis.prototype.updateAxisBySeries = function () {\r\n        _super.prototype.updateAxisBySeries.call(this);\r\n        var baseInterval = this.chooseInterval(0, this.minDifference, 1);\r\n        // handle short months\r\n        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"day\", 27) && baseInterval.timeUnit == \"week\") {\r\n            baseInterval.timeUnit = \"month\";\r\n            baseInterval.count = 1;\r\n        }\r\n        if (baseInterval.timeUnit == \"month\") {\r\n            if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"day\", 29 * 2) && baseInterval.count == 1) {\r\n                baseInterval.count = 2;\r\n            }\r\n            if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"day\", 29 * 3) && baseInterval.count == 2) {\r\n                baseInterval.count = 3;\r\n            }\r\n            if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"day\", 29 * 6) && baseInterval.count == 5) {\r\n                baseInterval.count = 6;\r\n            }\r\n        }\r\n        // handle daylight saving\r\n        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"hour\", 23) && baseInterval.timeUnit == \"hour\") {\r\n            baseInterval.timeUnit = \"day\";\r\n            baseInterval.count = 1;\r\n        }\r\n        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"week\", 1) - _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"hour\", 1) && baseInterval.timeUnit == \"day\") {\r\n            baseInterval.timeUnit = \"week\";\r\n            baseInterval.count = 1;\r\n        }\r\n        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"year\", 1) - _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](\"day\", 1.01) && baseInterval.timeUnit == \"month\") {\r\n            baseInterval.timeUnit = \"year\";\r\n            baseInterval.count = 1;\r\n        }\r\n        this._baseIntervalReal = baseInterval;\r\n        this._mainBaseInterval = baseInterval;\r\n        // no need to invalidate\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"baseInterval\", {\r\n        /**\r\n         * @return Base interval\r\n         */\r\n        get: function () {\r\n            if (this._groupInterval) {\r\n                return this._groupInterval;\r\n            }\r\n            else if (this._baseInterval) {\r\n                return this._baseInterval;\r\n            }\r\n            else {\r\n                return this._baseIntervalReal;\r\n            }\r\n        },\r\n        /**\r\n         * A base interval (granularity) of data.\r\n         *\r\n         * Used to indicate what are the base units of your data.\r\n         *\r\n         * For example, if you have a data set that has a data point every 5 minutes,\r\n         * you may want to set this to `{ timeUnit: \"minute\", count: 5 }`.\r\n         *\r\n         * If not set, the Axis will try to determine the setting by its own, looking\r\n         * at actual data.\r\n         *\r\n         * For best results, try to follow these values for `count`:\r\n         *\r\n         * When unit is \"month\", use 12 / count = round number\r\n         * When unit is \"hour\", use 24 / count = round number\r\n         * When unit is \"second\" and \"minute\", use 60 / count = round number\r\n         *\r\n         * @param timeInterval base interval\r\n         */\r\n        set: function (timeInterval) {\r\n            if (JSON.stringify(this._baseInterval) != JSON.stringify(timeInterval)) {\r\n                this._baseInterval = timeInterval;\r\n                this._mainBaseInterval = timeInterval;\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](timeInterval.count)) {\r\n                    timeInterval.count = 1;\r\n                }\r\n                this.invalidate();\r\n                this.postProcessSeriesDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"mainBaseInterval\", {\r\n        /**\r\n         * Indicates granularity of the data of source (unaggregated) data.\r\n         *\r\n         * @since 4.7.0\r\n         * @return Granularity of the main data set\r\n         */\r\n        get: function () {\r\n            if (this._baseInterval) {\r\n                return this._baseInterval;\r\n            }\r\n            else if (this._mainBaseInterval) {\r\n                return this._mainBaseInterval;\r\n            }\r\n            else {\r\n                return this._baseIntervalReal;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"skipEmptyPeriods\", {\r\n        /**\r\n         * @return Remove empty stretches of time?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"skipEmptyPeriods\");\r\n        },\r\n        /**\r\n         * If enabled, axis will automatically collapse empty (without data points)\r\n         * periods of time, i.e. weekends.\r\n         *\r\n         * An \"empty\" period is considered a stretch of time in the length of current\r\n         * `baseInterval` without a single data point in it.\r\n         *\r\n         * For each such empty period, axis will automatically create an\r\n         * [[AxisBreak]]. By default they will be invisible. You can still configure\r\n         * them by accessing `axis.breaks.template`.\r\n         *\r\n         * [More info about breaks](https://www.amcharts.com/docs/v4/concepts/axes/#Breaks).\r\n         *\r\n         * Important notes:\r\n         * * If you set this property to `true`, you can not add your custom axis breaks to this axis anymore.\r\n         * * Using this feature affects performance. Use only if you need it.\r\n         * * Setting this to `true` will reset appearance of breaks. If you want to modify appearance, do it *after* you set `skipEmptyPeriods`.\r\n         * * Some axis label overlapping might happen.\r\n         * * This setting is not compatible with `groupData = true`.\r\n         *\r\n         * @default false\r\n         * @param value  Remove empty stretches of time?\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                var breakTemplate = this.axisBreaks.template;\r\n                breakTemplate.startLine.disabled = true;\r\n                breakTemplate.endLine.disabled = true;\r\n                breakTemplate.fillShape.disabled = true;\r\n                breakTemplate.breakSize = 0;\r\n            }\r\n            else {\r\n                if (this._gapBreaks) {\r\n                    this.axisBreaks.clear();\r\n                    this._gapBreaks = false;\r\n                }\r\n            }\r\n            if (this.setPropertyValue(\"skipEmptyPeriods\", value)) {\r\n                this.invalidate();\r\n                this.postProcessSeriesDataItems();\r\n                this.invalidateSeries();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"tooltipDateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipDateFormat\");\r\n        },\r\n        /**\r\n         * A special date format to apply axis tooltips.\r\n         *\r\n         * Will use same format as for labels, if not set.\r\n         *\r\n         * @param value  Date format\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipDateFormat\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"markUnitChange\", {\r\n        /**\r\n         * @return Use different format for period beginning?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"markUnitChange\");\r\n        },\r\n        /**\r\n         * Use `periodChangeDateFormats` to apply different formats to the first\r\n         * label in bigger time unit.\r\n         *\r\n         * @default true\r\n         * @param value  Use different format for period beginning?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"markUnitChange\", value)) {\r\n                this.invalidateData();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns text to show in a tooltip, based on specific relative position\r\n     * within axis.\r\n     *\r\n     * The label will be formatted as per [[DateFormatter]] set for the whole\r\n     * chart, or explicitly for this Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position\r\n     * @return Label (formatted date)\r\n     */\r\n    DateAxis.prototype.getTooltipText = function (position) {\r\n        var text;\r\n        var date = this.positionToDate(position);\r\n        date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](date, this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc, new Date(this.min));\r\n        this.tooltipDate = date;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](this.tooltipDateFormat)) {\r\n            text = this._df.format(date, this.tooltipDateFormat);\r\n        }\r\n        else {\r\n            var dateFormat = this.dateFormats.getKey(this.baseInterval.timeUnit);\r\n            if (dateFormat) {\r\n                text = this._df.format(date, dateFormat);\r\n            }\r\n            else {\r\n                text = this.getPositionLabel(position);\r\n            }\r\n        }\r\n        if (!this._adapterO) {\r\n            return text;\r\n        }\r\n        else {\r\n            return this._adapterO.apply(\"getTooltipText\", text);\r\n        }\r\n    };\r\n    /**\r\n     * Takes an absolute position within axis and adjust it to a specific position within base interval. (cell)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position Source position\r\n     * @param location  Location in the cell\r\n     * @return Adjusted position\r\n     */\r\n    DateAxis.prototype.roundPosition = function (position, location, axisLocation) {\r\n        var baseInterval = this.baseInterval;\r\n        var timeUnit = baseInterval.timeUnit;\r\n        var count = baseInterval.count;\r\n        var date = this.positionToDate(position);\r\n        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](date, timeUnit, count, this._firstWeekDay, this._df.utc);\r\n        if (location > 0) {\r\n            _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](date, timeUnit, location * count, this._df.utc);\r\n        }\r\n        if (axisLocation > 0 && axisLocation < 1) {\r\n            date.setTime(date.getTime() + this.baseDuration * axisLocation);\r\n        }\r\n        if (this.isInBreak(date.getTime())) {\r\n            while (date.getTime() < this.max) {\r\n                _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](date, timeUnit, count, this._df.utc);\r\n                if (!this.isInBreak(date.getTime())) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return this.dateToPosition(date);\r\n    };\r\n    /**\r\n     * Returns an relative position of the start of the cell (period), that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Relative position\r\n     * @return Cell start relative position\r\n     */\r\n    DateAxis.prototype.getCellStartPosition = function (position) {\r\n        return this.roundPosition(position, 0);\r\n    };\r\n    /**\r\n     * Returns an relative position of the end of the cell (period), that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Relative position\r\n     * @return Cell end relative position\r\n     */\r\n    DateAxis.prototype.getCellEndPosition = function (position) {\r\n        return this.roundPosition(position, 1);\r\n        //return this.dateToPosition($time.add(this.positionToDate(this.roundPosition(position, 1)), this.baseInterval.timeUnit, this.baseInterval.count));\r\n    };\r\n    /**\r\n     * Returns a Series data item that corresponds to the specific pixel position\r\n     * of the Axis.\r\n     *\r\n     * If `findNearest` (third parameter) is set to `true`, the method will try\r\n     * to locate nearest available data item if none is found directly under\r\n     * `position`.\r\n     *\r\n     * @param series       Series\r\n     * @param position     Position (px)\r\n     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n     * @return Data item\r\n     */\r\n    DateAxis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        var value = this.positionToValue(position);\r\n        var location = 0.5;\r\n        if (this.axisLetter == \"Y\") {\r\n            location = series.dataItems.template.locations.dateY;\r\n        }\r\n        else {\r\n            location = series.dataItems.template.locations.dateX;\r\n        }\r\n        var deltaValue = value - location * this.baseDuration;\r\n        var date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(value), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc);\r\n        var nextDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(value + this.baseDuration), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc);\r\n        if (nextDate.getTime() > date.getTime()) {\r\n            if (Math.abs(nextDate.getTime() - deltaValue) < Math.abs(deltaValue - date.getTime())) {\r\n                date = nextDate;\r\n            }\r\n        }\r\n        var dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n        var dataItem = dataItemsByAxis.getKey(date.getTime().toString());\r\n        // todo:  alternatively we can find closiest here\r\n        if (!dataItem && findNearest) {\r\n            var key_1;\r\n            if (this.axisLetter == \"Y\") {\r\n                key_1 = \"dateY\";\r\n            }\r\n            else {\r\n                key_1 = \"dateX\";\r\n            }\r\n            dataItem = series.dataItems.getIndex(series.dataItems.findClosestIndex(date.getTime(), function (x) {\r\n                if (x[key_1]) {\r\n                    return x[key_1].getTime();\r\n                }\r\n                else {\r\n                    return -Infinity;\r\n                }\r\n            }, \"any\"));\r\n        }\r\n        return dataItem;\r\n    };\r\n    /**\r\n     * Returns a formatted date based on position in axis scale.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    DateAxis.prototype.getPositionLabel = function (position) {\r\n        // @todo Better format recognition\r\n        var date = this.positionToDate(position);\r\n        return this._df.format(date, this.getCurrentLabelFormat());\r\n    };\r\n    /**\r\n     * Returns label date format based on currently used time units\r\n     *\r\n     * @return Format\r\n     */\r\n    DateAxis.prototype.getCurrentLabelFormat = function () {\r\n        return this.dateFormats.getKey(this._gridInterval ? this._gridInterval.timeUnit : \"day\");\r\n    };\r\n    /**\r\n     * Initializes an Axis renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.initRenderer = function () {\r\n        _super.prototype.initRenderer.call(this);\r\n        var renderer = this.renderer;\r\n        if (renderer) {\r\n            // Set defaults\r\n            renderer.ticks.template.location = 0;\r\n            renderer.grid.template.location = 0;\r\n            renderer.labels.template.location = 0;\r\n            renderer.baseGrid.disabled = true;\r\n        }\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point\r\n         */\r\n        get: function () {\r\n            return { x: 0, y: 0 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.animateMinMax = function (min, max) {\r\n        var _this = this;\r\n        var animation = this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n        animation.events.on(\"animationprogress\", function () {\r\n            _this.dispatch(\"extremeschanged\");\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Invalidates axis data items when series extremes change\r\n     */\r\n    DateAxis.prototype.handleExtremesChange = function () {\r\n        _super.prototype.handleExtremesChange.call(this);\r\n        if (this.groupData) {\r\n            var id = this.baseInterval.timeUnit + this.baseInterval.count;\r\n            this.groupMin[id] = this._finalMin;\r\n            this.groupMax[id] = this._finalMax;\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axis to specific Dates.\r\n     *\r\n     * @param startDate       Start date\r\n     * @param endValue        End date\r\n     * @param skipRangeEvent  Do not invoke events\r\n     * @param instantly       Do not play zoom animations\r\n     */\r\n    DateAxis.prototype.zoomToDates = function (startDate, endDate, skipRangeEvent, instantly, adjust) {\r\n        startDate = this._df.parse(startDate);\r\n        endDate = this._df.parse(endDate);\r\n        this.zoomToValues(startDate.getTime(), endDate.getTime(), skipRangeEvent, instantly, adjust);\r\n    };\r\n    /**\r\n     * Zooms axis to specific values.\r\n     *\r\n     * @param startValue      Start value\r\n     * @param endValue        End value\r\n     * @param skipRangeEvent  Do not invoke events\r\n     * @param instantly       Do not play zoom animations\r\n     */\r\n    DateAxis.prototype.zoomToValues = function (startValue, endValue, skipRangeEvent, instantly, adjust) {\r\n        var _this = this;\r\n        if (!this.groupData) {\r\n            var start = (startValue - this.min) / (this.max - this.min);\r\n            var end = (endValue - this.min) / (this.max - this.min);\r\n            this.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n        }\r\n        else {\r\n            var difference = this.adjustDifference(startValue, endValue);\r\n            var isEnd = false;\r\n            if (endValue == this.max) {\r\n                isEnd = true;\r\n            }\r\n            var isStart = false;\r\n            if (startValue == this.min) {\r\n                isStart = true;\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](difference)) {\r\n                var mainBaseInterval = this.mainBaseInterval;\r\n                var groupInterval_1 = this.chooseInterval(0, difference, this.groupCount, this.groupIntervals);\r\n                if ((groupInterval_1.timeUnit == mainBaseInterval.timeUnit && groupInterval_1.count < mainBaseInterval.count) || _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](groupInterval_1.timeUnit, 1) < _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"getDuration\"](mainBaseInterval.timeUnit, 1)) {\r\n                    groupInterval_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, mainBaseInterval);\r\n                }\r\n                var id = groupInterval_1.timeUnit + groupInterval_1.count;\r\n                var min_1 = this.groupMin[id];\r\n                var max_1 = this.groupMax[id];\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](min_1) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](max_1)) {\r\n                    min_1 = Number.POSITIVE_INFINITY;\r\n                    max_1 = Number.NEGATIVE_INFINITY;\r\n                    this.series.each(function (series) {\r\n                        var seriesMin = series.min(_this);\r\n                        var seriesMax = series.max(_this);\r\n                        if (series._dataSets) {\r\n                            var ds = series._dataSets.getKey(groupInterval_1.timeUnit + groupInterval_1.count);\r\n                            if (ds) {\r\n                                var mindi = ds.getIndex(0);\r\n                                var maxdi = ds.getIndex(ds.length - 1);\r\n                                if (mindi) {\r\n                                    if (series.xAxis == _this) {\r\n                                        seriesMin = mindi.dateX.getTime();\r\n                                    }\r\n                                    else if (series.yAxis == _this) {\r\n                                        seriesMin = mindi.dateY.getTime();\r\n                                    }\r\n                                }\r\n                                if (maxdi) {\r\n                                    if (series.xAxis == _this) {\r\n                                        seriesMax = maxdi.dateX.getTime();\r\n                                    }\r\n                                    else if (series.yAxis == _this) {\r\n                                        seriesMax = maxdi.dateY.getTime();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        seriesMax = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"add\"](new Date(seriesMax), groupInterval_1.timeUnit, 1, _this._df.utc), groupInterval_1.timeUnit, 1, _this._df.firstDayOfWeek, _this._df.utc).getTime();\r\n                        if (seriesMin < min_1) {\r\n                            min_1 = seriesMin;\r\n                        }\r\n                        if (seriesMax > max_1) {\r\n                            max_1 = seriesMax;\r\n                        }\r\n                    });\r\n                    this.groupMin[id] = min_1;\r\n                    this.groupMax[id] = max_1;\r\n                }\r\n                startValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](startValue, min_1, max_1);\r\n                endValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](endValue, min_1, max_1);\r\n                if (adjust) {\r\n                    if (isEnd) {\r\n                        startValue = endValue - difference;\r\n                        startValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](startValue, min_1, max_1);\r\n                    }\r\n                    if (isStart) {\r\n                        endValue = startValue + difference;\r\n                        endValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"fitToRange\"](endValue, min_1, max_1);\r\n                    }\r\n                }\r\n                var start = (startValue - min_1) / (max_1 - min_1);\r\n                var end = (endValue - min_1) / (max_1 - min_1);\r\n                this.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds `baseInterval` to \"as is\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as is?\r\n     */\r\n    DateAxis.prototype.asIs = function (field) {\r\n        return field == \"baseInterval\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    DateAxis.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.dateFormats = source.dateFormats;\r\n        this.periodChangeDateFormats = source.periodChangeDateFormats;\r\n        this.groupIntervals.clear();\r\n        source.groupIntervals.each(function (interval) {\r\n            _this.groupIntervals.push(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, interval));\r\n        });\r\n        this.gridIntervals.clear();\r\n        source.gridIntervals.each(function (interval) {\r\n            _this.gridIntervals.push(Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"])({}, interval));\r\n        });\r\n        if (source._baseInterval) {\r\n            this.baseInterval = source._baseInterval;\r\n        }\r\n    };\r\n    /**\r\n     * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @param local or global position\r\n     */\r\n    DateAxis.prototype.showTooltipAtPosition = function (position, local) {\r\n        var _this = this;\r\n        if (!local) {\r\n            position = this.toAxisPosition(position);\r\n        }\r\n        if (this.snapTooltip) {\r\n            // rounding is not good, pen/aac4e7f66f019d36b2447f050c600c13 (no last tootltip shown)\r\n            var actualDate = this.positionToDate(position); //$time.round(this.positionToDate(position), this.baseInterval.timeUnit, 1, this.getFirstWeekDay(), this.dateFormatter.utc);\r\n            var actualTime_1 = actualDate.getTime();\r\n            var closestDate_1;\r\n            this.series.each(function (series) {\r\n                if (series.baseAxis == _this) {\r\n                    var dataItem = _this.getSeriesDataItem(series, position, true);\r\n                    if (dataItem) {\r\n                        var date = void 0;\r\n                        if (series.xAxis == _this) {\r\n                            date = dataItem.dateX;\r\n                        }\r\n                        if (series.yAxis == _this) {\r\n                            date = dataItem.dateY;\r\n                        }\r\n                        if (!closestDate_1) {\r\n                            closestDate_1 = date;\r\n                        }\r\n                        else {\r\n                            if (Math.abs(closestDate_1.getTime() - actualTime_1) > Math.abs(date.getTime() - actualTime_1)) {\r\n                                closestDate_1 = date;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (closestDate_1) {\r\n                var closestTime_1 = closestDate_1.getTime();\r\n                closestDate_1 = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__[\"round\"](new Date(closestTime_1), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc);\r\n                closestTime_1 = closestDate_1.getTime();\r\n                var tooltipLocation = this.renderer.tooltipLocation;\r\n                if (tooltipLocation == 0) {\r\n                    tooltipLocation = 0.0001;\r\n                }\r\n                closestDate_1 = new Date(closestDate_1.getTime() + this.baseDuration * tooltipLocation);\r\n                position = this.dateToPosition(closestDate_1);\r\n                if (this.chart.cursor && this.chart.cursor.snapToSeries) {\r\n                    //void\r\n                }\r\n                else {\r\n                    this.series.each(function (series) {\r\n                        var dataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(closestTime_1 + series.currentDataSetId);\r\n                        var point = series.showTooltipAtDataItem(dataItem);\r\n                        if (point) {\r\n                            _this.chart._seriesPoints.push({ series: series, point: point });\r\n                        }\r\n                        else {\r\n                            // check, otherwise column tooltip will be hidden\r\n                            if (series.tooltipText || series.tooltipHTML) {\r\n                                series.hideTooltip();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                //this.chart.sortSeriesTooltips(seriesPoints);\r\n            }\r\n        }\r\n        _super.prototype.showTooltipAtPosition.call(this, position, true);\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"snapTooltip\", {\r\n        /**\r\n         * @return Should snap?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapTooltip\");\r\n        },\r\n        /**\r\n         * Should the nearest tooltip be shown if no data item is found on the\r\n         * current cursor position.\r\n         *\r\n         * @default true\r\n         * @param value  Should snap?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"groupData\", {\r\n        /**\r\n         * @return Group data points?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"groupData\");\r\n        },\r\n        /**\r\n         * Indicates if data should be aggregated to composide data items if there\r\n         * are more data items in selected range than `groupCount`.\r\n         *\r\n         * Grouping will occur automatically, based on current selection range, and\r\n         * will change dynamically when user zooms in/out the chart.\r\n         *\r\n         * NOTE: This works only if [[DateAxis]] is base axis of an [[XYSeries]].\r\n         *\r\n         * The related [[XYSeries]] also needs to be set up to take advantage of, by\r\n         * setting its [`groupFields`](https://www.amcharts.com/docs/v4/reference/xyseries/#groupFields_property).\r\n         *\r\n         * The group intervals to aggregate data to is defined by `groupIntervals`\r\n         * property.\r\n         *\r\n         * ```TypeScript\r\n         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * let series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * var series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     \"groupData\": true\r\n         *   }],\r\n         *   \"yAxes\": [{\r\n         *     \"type\": \"ValueAxis\"\r\n         *   }],\r\n         *   \"series\": [{\r\n         *     \"type\": \"LineSeries\",\r\n         *     \"dataFields\": {\r\n         *       \"dateX\": \"date\",\r\n         *       \"valueY\": \"value\"\r\n         *     },\r\n         *     \"groupFields\": {\r\n         *       \"valueY\": \"average\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default false\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         * @since 4.7.0\r\n         * @param  value  Group data points?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"groupData\", value)) {\r\n                this.series.each(function (series) {\r\n                    series.setDataSet(\"\");\r\n                    if (value && !series.dataGrouped && series.inited) {\r\n                        series._baseInterval[_this.uid] = _this.mainBaseInterval;\r\n                        _this.groupSeriesData(series);\r\n                    }\r\n                });\r\n                this._currentDataSetId = \"\";\r\n                this._groupInterval = undefined;\r\n                this.invalidate();\r\n                this.invalidateSeries();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"groupInterval\", {\r\n        /**\r\n         * @return Interval\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"groupInterval\");\r\n        },\r\n        /**\r\n         * Disables automatic selection of data grouping intervals and always uses\r\n         * `groupInterval` if set. Works only if `groupData = true`.\r\n         *\r\n         * @since 4.9.24\r\n         * @param  value  Interval\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"groupInterval\", value)) {\r\n                this.invalidate();\r\n                this.invalidateSeries();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"groupCount\", {\r\n        /**\r\n         * @return Number of data items\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"groupCount\");\r\n        },\r\n        /**\r\n         * Indicates threshold of data items in selected range at which to start\r\n         * aggregating data items if `groupData = true`.\r\n         *\r\n         * @default 200\r\n         * @since 4.7.0\r\n         * @param  value  Number of data items\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"groupCount\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"timezoneOffset\", {\r\n        /**\r\n         * @todo Timezone offset in minutes\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"timezoneOffset\");\r\n        },\r\n        /**\r\n         *\r\n         * Indicates by how many minutes the timestamps in your data are offset from GMT.\r\n         * This is useful when you have timestamps as your data and you want all the users to see\r\n         * the same result and not the time which was at users's location at the given timestamp.\r\n         * Note, you do not need to set timezoneOffset both here and on DateFormatter, as this will\r\n         * distort the result.\r\n         *\r\n         * @default undefined\r\n         * @since 4.8.5\r\n         * @param  value Time zone offset in minutes\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"timezoneOffset\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"gridInterval\", {\r\n        /**\r\n         * Current grid interval.\r\n         *\r\n         * @return Grid interval\r\n         */\r\n        get: function () {\r\n            return this._gridInterval;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.makeGap = function (dataItem, previous) {\r\n        var series = dataItem.component;\r\n        if (dataItem && previous) {\r\n            if (!series.connect && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](series.autoGapCount)) {\r\n                if (series.baseAxis == this) {\r\n                    var date = dataItem.dates[\"date\" + this.axisLetter];\r\n                    var prevDate = previous.dates[\"date\" + this.axisLetter];\r\n                    if (date && prevDate) {\r\n                        var time = date.getTime();\r\n                        var prevTime = prevDate.getTime();\r\n                        if (time - prevTime > series.autoGapCount * this.baseDuration) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"baseValue\", {\r\n        /**\r\n         * @return base value\r\n         */\r\n        get: function () {\r\n            return this.min;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxis;\r\n}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__[\"ValueAxis\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"DateAxis\"] = DateAxis;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"DateAxisDataItem\"] = DateAxisDataItem;\r\n//# sourceMappingURL=DateAxis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvRGF0ZUF4aXMuanM/MGM4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQzRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMyRDtBQUNkO0FBQ1k7QUFDVDtBQUNEO0FBQ0E7QUFDQTtBQUNJO0FBQ0o7QUFDRTtBQUNFO0FBQ0Y7QUFDaUI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMsQ0FBQyw0REFBaUI7QUFDUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxTQUFTLHNCQUFzQjtBQUMvQixTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLGdFQUFnRTtBQUN6RTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0NBQW9DO0FBQ2pELGFBQWEsb0NBQW9DO0FBQ2pELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MscURBQUk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQ0FBbUM7QUFDakQsY0FBYyxxQ0FBcUM7QUFDbkQsY0FBYyxzQ0FBc0M7QUFDcEQsY0FBYywrQkFBK0I7QUFDN0MsY0FBYyxnQ0FBZ0M7QUFDOUMsY0FBYywrQkFBK0I7QUFDN0MsY0FBYyxnQ0FBZ0M7QUFDOUMsY0FBYyw2QkFBNkI7QUFDM0MsY0FBYyw0QkFBNEI7QUFDMUMsY0FBYyw2QkFBNkI7QUFDM0MsY0FBYyw4QkFBOEI7QUFDNUMsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMkZBQTJGO0FBQzVHO0FBQ0EsbUNBQW1DLHFEQUFJO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsZ0NBQWdDLGlFQUFVO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGlFQUFVO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0NBQW9DO0FBQ2pELGFBQWEsb0NBQW9DO0FBQ2pELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNEJBQTRCO0FBQ3pDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsK0JBQStCO0FBQzVDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsZ0NBQWdDO0FBQzdDLGFBQWEsaUNBQWlDO0FBQzlDLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSxvQ0FBb0M7QUFDakQsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSxzQ0FBc0M7QUFDbkQsYUFBYSwrQkFBK0I7QUFDNUMsYUFBYSxnQ0FBZ0M7QUFDN0MsYUFBYSwrQkFBK0I7QUFDNUMsYUFBYSxnQ0FBZ0M7QUFDN0MsYUFBYSw2QkFBNkI7QUFDMUMsYUFBYSw0QkFBNEI7QUFDekMsYUFBYSw2QkFBNkI7QUFDMUMsYUFBYSw4QkFBOEI7QUFDM0MsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsNERBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtGQUFrRjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDREQUFpQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlCQUF5QixlQUFlO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseURBQWM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msc0RBQVEsR0FBRztBQUMzQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNERBQWlCLGdEQUFnRCw0REFBaUI7QUFDdEcsb0NBQW9DLHNEQUFRLEdBQUc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsWUFBWSw0REFBaUI7QUFDN0IsMkJBQTJCLHNEQUFRLEdBQUc7QUFDdEM7QUFDQTtBQUNBLDZCQUE2Qiw0REFBaUI7QUFDOUM7QUFDQSxpQ0FBaUMsNERBQWlCO0FBQ2xELHlCQUF5QixzREFBVywyQkFBMkIsNERBQWlCO0FBQ2hGO0FBQ0EsUUFBUSx5REFBVTtBQUNsQjtBQUNBO0FBQ0EsZ0NBQWdDLHNEQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVHQUF1RyxtQkFBbUIsRUFBRTtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxvREFBUyxDQUFDLHNEQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhGQUE4RixtQkFBbUIsRUFBRTtBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxnQ0FBZ0MsNERBQWlCO0FBQ2pEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyw0REFBaUI7QUFDMUQ7QUFDQSx1Q0FBdUMsNERBQWlCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsWUFBWSx1REFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDJFQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3REFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHNEQUFXO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHVEQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVEQUFXO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBLHdDQUF3Qyx5REFBYztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLHdEQUFZO0FBQ3hDO0FBQ0E7QUFDQSxvQ0FBb0MseURBQWM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsdURBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDRDQUE0Qyx5REFBYztBQUMxRDtBQUNBLGlEQUFpRCx5REFBYztBQUMvRDtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUseURBQWM7QUFDckY7QUFDQTtBQUNBLHdFQUF3RSx5REFBYztBQUN0RjtBQUNBO0FBQ0EsZ0RBQWdELHlEQUFjO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELHlEQUFjO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsZ0NBQWdDLGlFQUFxQjtBQUNyRCxnQ0FBZ0Msd0RBQVk7QUFDNUM7QUFDQTtBQUNBLHdDQUF3Qyx5REFBYztBQUN0RDtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpRUFBcUI7QUFDN0M7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxvQkFBb0IsdURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0RBQVk7QUFDcEI7QUFDQTtBQUNBLDRCQUE0QixzREFBVztBQUN2QztBQUNBLDBCQUEwQixvREFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx5REFBYyxjQUFjLHlEQUFjO0FBQy9FO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBLHVCQUF1QixzREFBVztBQUNsQztBQUNBO0FBQ0EsZ0JBQWdCLG9EQUFTO0FBQ3pCO0FBQ0E7QUFDQSw4QkFBOEIsNkRBQWM7QUFDNUM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxzREFBVztBQUM5QztBQUNBLHdCQUF3QixvREFBUztBQUNqQztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBVztBQUNuQjtBQUNBLHNCQUFzQixxREFBVTtBQUNoQztBQUNBLHdCQUF3QixvREFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksc0RBQVc7QUFDdkI7QUFDQSxnQkFBZ0Isb0RBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLDREQUFpQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFXO0FBQ25CLFFBQVEsb0RBQVM7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx5REFBYyxjQUFjLHlEQUFjO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IscURBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHFEQUFVO0FBQ3hEO0FBQ0EsOEJBQThCLHFEQUFVLE9BQU87QUFDL0MsMEJBQTBCLG9EQUFTO0FBQ25DO0FBQ0E7QUFDQSx3QkFBd0IsNERBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSx3QkFBd0IsRUFBRTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseURBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNERBQWlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFVO0FBQ3JELDhDQUE4QyxvREFBUztBQUN2RDtBQUNBO0FBQ0Esa0RBQWtELHFEQUFVLE9BQU87QUFDbkUsOENBQThDLG9EQUFTO0FBQ3ZEO0FBQ0E7QUFDQSw0Q0FBNEMsNERBQWlCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBGQUEwRiwwQkFBMEIsRUFBRTtBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlEQUFjLGNBQWMseURBQWM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlEQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQWlCO0FBQ3BDLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNEQUFXO0FBQ25DLHNCQUFzQixvREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNEQUFXO0FBQ25DLHNCQUFzQixvREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDREQUFpQjtBQUNoRDtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFRLEdBQUc7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFRLEdBQUc7QUFDOUI7QUFDQTtBQUNBLG1CQUFtQixzREFBUSxHQUFHO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBUSxHQUFHO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDJEQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDJEQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDJEQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBLGlCQUFpQix5REFBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseURBQWMsZUFBZSx5REFBYztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx5REFBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlEQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsNERBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDREQUFpQjtBQUN2RDtBQUNBO0FBQ0Esc0NBQXNDLDREQUFpQjtBQUN2RDtBQUNBO0FBQ0Esc0NBQXNDLDREQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw0REFBaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDREQUFpQixjQUFjLDREQUFpQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsNERBQWlCLGNBQWMsNERBQWlCO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsK0JBQStCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHlEQUFjO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFXO0FBQzFCO0FBQ0EsWUFBWSx5REFBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQVc7QUFDbkI7QUFDQSxZQUFZLG9EQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvREFBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFXO0FBQzlCLHVCQUF1QixzREFBVztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLCtHQUErRztBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQixTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDZEQUE2RCxHQUFHLDZEQUE2RDtBQUNwSztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix5QkFBeUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5REFBYztBQUM5QjtBQUNBO0FBQ0EsaUlBQWlJLDREQUFpQixnQ0FBZ0MsNERBQWlCO0FBQ25NLHNDQUFzQyxzREFBUSxHQUFHO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHlEQUFjLFlBQVkseURBQWM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msc0RBQVcsQ0FBQyxvREFBUztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDJEQUFnQjtBQUM3QywyQkFBMkIsMkRBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQywyREFBZ0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJEQUFnQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5QkFBeUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHNEQUFRLEdBQUc7QUFDakQsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQ0FBcUMsc0RBQVEsR0FBRztBQUNoRCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxnQ0FBZ0Msc0RBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELCtCQUErQjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMkZBQTJGO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx5REFBYztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMsQ0FBQyxvREFBUztBQUNTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvYXhlcy9EYXRlQXhpcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBEYXRlQXhpcyBtb2R1bGVcclxuICovXHJcbmltcG9ydCB7IF9fYXNzaWduLCBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IFZhbHVlQXhpcywgVmFsdWVBeGlzRGF0YUl0ZW0gfSBmcm9tIFwiLi9WYWx1ZUF4aXNcIjtcclxuaW1wb3J0IHsgTGlzdCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0xpc3RcIjtcclxuaW1wb3J0IHsgRGljdGlvbmFyeSB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0RpY3Rpb25hcnlcIjtcclxuaW1wb3J0IHsgRGF0ZUF4aXNCcmVhayB9IGZyb20gXCIuL0RhdGVBeGlzQnJlYWtcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkdGltZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UaW1lXCI7XHJcbmltcG9ydCAqIGFzICR0eXBlIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1R5cGVcIjtcclxuaW1wb3J0ICogYXMgJGl0ZXIgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvSXRlcmF0b3JcIjtcclxuaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvTWF0aFwiO1xyXG5pbXBvcnQgKiBhcyAkYXJyYXkgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvQXJyYXlcIjtcclxuaW1wb3J0ICogYXMgJG9iamVjdCBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9PYmplY3RcIjtcclxuaW1wb3J0ICogYXMgJHV0aWxzIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1V0aWxzXCI7XHJcbmltcG9ydCB7IE9yZGVyZWRMaXN0VGVtcGxhdGUgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9Tb3J0ZWRMaXN0XCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIERBVEEgSVRFTVxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGRhdGEgaXRlbSBmb3IgW1tEYXRlQXhpc11dLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBEYXRhSXRlbX1cclxuICovXHJcbnZhciBEYXRlQXhpc0RhdGFJdGVtID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKERhdGVBeGlzRGF0YUl0ZW0sIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIERhdGVBeGlzRGF0YUl0ZW0oKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkRhdGVBeGlzRGF0YUl0ZW1cIjtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgX3RoaXMudmFsdWVzLmRhdGUgPSB7fTtcclxuICAgICAgICBfdGhpcy52YWx1ZXMuZW5kRGF0ZSA9IHt9O1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpc0RhdGFJdGVtLnByb3RvdHlwZSwgXCJkYXRlXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIERhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZXNbXCJkYXRlXCJdO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogRGF0ZSBwb3NpdGlvbiBvZiB0aGUgZGF0YSBpdGVtLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIGRhdGUgIERhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChkYXRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0ZShcImRhdGVcIiwgZGF0ZSk7XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBkYXRlLmdldFRpbWUoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpc0RhdGFJdGVtLnByb3RvdHlwZSwgXCJlbmREYXRlXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEVuZCBkYXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGVzW1wiZW5kRGF0ZVwiXTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEVuZCBkYXRlIGZvciBkYXRhIGl0ZW0uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gZGF0ZSBFbmQgZGF0ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGRhdGUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXREYXRlKFwiZW5kRGF0ZVwiLCBkYXRlKTtcclxuICAgICAgICAgICAgdGhpcy5lbmRWYWx1ZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIERhdGVBeGlzRGF0YUl0ZW07XHJcbn0oVmFsdWVBeGlzRGF0YUl0ZW0pKTtcclxuZXhwb3J0IHsgRGF0ZUF4aXNEYXRhSXRlbSB9O1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIFVzZWQgdG8gY3JlYXRlIGEgZGF0ZS90aW1lLWJhc2VkIGF4aXMgZm9yIHRoZSBjaGFydC5cclxuICpcclxuICogYGBgVHlwZVNjcmlwdFxyXG4gKiAvLyBDcmVhdGUgdGhlIGF4aXNcclxuICogbGV0IHhBeGlzID0gY2hhcnQueEF4ZXMucHVzaChuZXcgYW00Y2hhcnRzLkRhdGVBeGlzKCkpO1xyXG4gKlxyXG4gKiAvLyBTZXQgc2V0dGluZ3NcclxuICogeEF4aXMudGl0bGUudGV4dCA9IFwiVGltZVwiO1xyXG4gKiBgYGBcclxuICogYGBgSmF2YVNjcmlwdFxyXG4gKiAvLyBDcmVhdGUgdGhlIGF4aXNcclxuICogdmFyIHZhbHVlQXhpcyA9IGNoYXJ0LnhBeGVzLnB1c2gobmV3IGFtNGNoYXJ0cy5EYXRlQXhpcygpKTtcclxuICpcclxuICogLy8gU2V0IHNldHRpbmdzXHJcbiAqIHZhbHVlQXhpcy50aXRsZS50ZXh0ID0gXCJUaW1lXCI7XHJcbiAqIGBgYFxyXG4gKiBgYGBKU09OXHJcbiAqIFwieEF4ZXNcIjogW3tcclxuICogICBcInR5cGVcIjogXCJEYXRlQXhpc1wiLFxyXG4gKiAgIFwidGl0bGVcIjoge1xyXG4gKiAgICAgXCJ0ZXh0XCI6IFwiVGltZVwiXHJcbiAqICAgfVxyXG4gKiB9XVxyXG4gKiBgYGBcclxuICpcclxuICogQHNlZSB7QGxpbmsgSURhdGVBeGlzRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBFdmVudHNcclxuICogQHNlZSB7QGxpbmsgSURhdGVBeGlzQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y0L2NvbmNlcHRzL2F4ZXMvZGF0ZS1heGlzL30gZ290IGBEYXRlQXhpc2AgZG9jdW1lbnRpb25cclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIERhdGVBeGlzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKERhdGVBeGlzLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBEYXRlQXhpcygpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBcclxuICAgICAgICAvLyBJbml0XHJcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5fZ2FwQnJlYWtzID0gZmFsc2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBsaXN0IG9mIGRhdGUvdGltZSBpbnRlcnZhbHMgZm9yIERhdGUgYXhpcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFRoaXMgZGVmaW5lIHZhcmlvdXMgZ3JhbnVsYXJpdGllcyBhdmFpbGFibGUgZm9yIHRoZSBheGlzLiBGb3IgZXhhbXBsZVxyXG4gICAgICAgICAqIGlmIHlvdSBoYXZlIGFuIGF4aXMgc3Bhbm5pbmcgYW4gaG91ciwgYW5kIHNwYWNlIGZvciA2IGdyaWQgbGluZXMgLyBsYWJlbHNcclxuICAgICAgICAgKiB0aGUgYXhpcyB3aWxsIGNob29zZSB0aGUgZ3JhbnVsYXJpdHkgb2YgMTAgbWludXRlcywgZGlzcGxheWluZyBhIGxhYmVsXHJcbiAgICAgICAgICogZXZlcnkgMTAgbWludXRlcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIERlZmF1bHQgaW50ZXJ2YWxzOlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogYGBgSlNPTlxyXG4gICAgICAgICAqIFtcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJtaWxsaXNlY29uZFwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiA1IH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwibWlsbGlzZWNvbmRcIiwgY291bnQ6IDEwIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwibWlsbGlzZWNvbmRcIiwgY291bnQ6IDUwIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwibWlsbGlzZWNvbmRcIiwgY291bnQ6IDEwMCB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiA1MDAgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJzZWNvbmRcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJzZWNvbmRcIiwgY291bnQ6IDUgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJzZWNvbmRcIiwgY291bnQ6IDEwIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiAzMCB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogNSB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogMTAgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJtaW51dGVcIiwgY291bnQ6IDMwIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwiaG91clwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcImhvdXJcIiwgY291bnQ6IDMgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJob3VyXCIsIGNvdW50OiA2IH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwiaG91clwiLCBjb3VudDogMTIgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDIgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDMgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDQgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDUgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJ3ZWVrXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwibW9udGhcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJtb250aFwiLCBjb3VudDogMiB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcIm1vbnRoXCIsIGNvdW50OiAzIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwibW9udGhcIiwgY291bnQ6IDYgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwieWVhclwiLCBjb3VudDogMiB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcInllYXJcIiwgY291bnQ6IDUgfSxcclxuICAgICAgICAgKiAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAxMCB9LFxyXG4gICAgICAgICAqICB7IHRpbWVVbml0OiBcInllYXJcIiwgY291bnQ6IDUwIH0sXHJcbiAgICAgICAgICogIHsgdGltZVVuaXQ6IFwieWVhclwiLCBjb3VudDogMTAwIH1cclxuICAgICAgICAgKiBdXHJcbiAgICAgICAgICogYGBgXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMuZ3JpZEludGVydmFscyA9IG5ldyBMaXN0KCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSWYgZGF0YSBhZ2dyZWdhdGlvbiBpcyBlbmFibGVkIGJ5IHNldHRpbmcgQXhpcycgYGdyb3VwRGF0YSA9IHRydWVgLCB0aGVcclxuICAgICAgICAgKiBjaGFydCB3aWxsIHRyeSB0byBhZ2dyZWdhdGUgZGF0YSBpdGVtcyBpbnRvIGdyb3VwZWQgZGF0YSBpdGVtcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIElmIHRoZXJlIGFyZSBtb3JlIGRhdGEgaXRlbXMgaW4gc2VsZWN0ZWQgcGVyaW9kIHRoYW4gYGdyb3VwQ291bnRgLCBpdCB3aWxsXHJcbiAgICAgICAgICogZ3JvdXAgZGF0YSBpdGVtcyBpbnRvIGJpZ2dlciBwZXJpb2QuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBGb3IgZXhhbXBsZSBzZWNvbmRzIG1pZ2h0IGJlIGdyb3VwZWQgaW50byAxMC1zZWNvbmQgYWdncmVnYXRlIGRhdGEgaXRlbXMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIHNldHRpbmcgaW5kaWNhdGVzIHdoYXQgZ3JvdXAgaW50ZXJ2YWxzIGNhbiB0aGUgY2hhcnQgZ3JvdXAgdG8uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBEZWZhdWx0IGludGVydmFsczpcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIGBgYEpTT05cclxuICAgICAgICAgKiBbXHJcbiAgICAgICAgICogICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiAxfSxcclxuICAgICAgICAgKiAgIHsgdGltZVVuaXQ6IFwibWlsbGlzZWNvbmRcIiwgY291bnQ6IDEwIH0sXHJcbiAgICAgICAgICogICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiAxMDAgfSxcclxuICAgICAgICAgKiAgIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICogICB7IHRpbWVVbml0OiBcInNlY29uZFwiLCBjb3VudDogMTAgfSxcclxuICAgICAgICAgKiAgIHsgdGltZVVuaXQ6IFwibWludXRlXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICogICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogMTAgfSxcclxuICAgICAgICAgKiAgIHsgdGltZVVuaXQ6IFwiaG91clwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAqICAgeyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgKiAgIHsgdGltZVVuaXQ6IFwid2Vla1wiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAqICAgeyB0aW1lVW5pdDogXCJtb250aFwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAqICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAxIH1cclxuICAgICAgICAgKiBdXHJcbiAgICAgICAgICogYGBgXHJcbiAgICAgICAgICogYGdyb3VwRGF0YSA9IHRydWVgIGRvZXMgbm90IHdvcmsgaW4gY29tYmluYXRpb24gd2l0aCBgc2tpcEVtcHR5UGVyaW9kcyA9IHRydWVgLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHNpbmNlIDQuNy4wXHJcbiAgICAgICAgICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjQvY29uY2VwdHMvYXhlcy9kYXRlLWF4aXMvI0R5bmFtaWNfZGF0YV9pdGVtX2dyb3VwaW5nfSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBkeW5hbWljIGRhdGEgaXRlbSBncm91cGluZy5cclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5ncm91cEludGVydmFscyA9IG5ldyBMaXN0KCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBjb2xsZWN0aW9uIG9mIGRhdGUgZm9ybWF0cyB0byB1c2Ugd2hlbiBmb3JtYXR0aW5nIGRpZmZlcmVudCB0aW1lIHVuaXRzXHJcbiAgICAgICAgICogb24gRGF0ZS90aW1lIGF4aXMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBBY3R1YWwgZGVmYXVsdHMgd2lsbCBkZXBlbmQgb24gdGhlIGxhbmd1YWdlIGxvY2FsZSBzZXQgZm9yIHRoZSBjaGFydC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFRvIG92ZXJyaWRlIGZvcm1hdCBmb3IgYSBzcGVjaWZpYyB0aW1lIHVuaXQsIHNheSBkYXlzLCB5b3UgbmVlZCB0byBzZXRcclxuICAgICAgICAgKiB0aGUgYXBwcm9wcmlhdGUga2V5IHRvIGEgZm9ybWF0IHN0cmluZy4gRS5nLjpcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIGBgYFR5cGVTY3JpcHRcclxuICAgICAgICAgKiBheGlzLmRhdGVGb3JtYXRzLnNldEtleShcImRheVwiLCBcIk1NTU0gZCwgeXl5eVwiKTtcclxuICAgICAgICAgKiBgYGBcclxuICAgICAgICAgKiBgYGBKYXZhU2NyaXB0XHJcbiAgICAgICAgICogYXhpcy5kYXRlRm9ybWF0cy5zZXRLZXkoXCJkYXlcIiwgXCJNTU1NIGQsIHl5eXlcIik7XHJcbiAgICAgICAgICogYGBgXHJcbiAgICAgICAgICogYGBgSlNPTlxyXG4gICAgICAgICAqIFwieEF4ZXNcIjogW3tcclxuICAgICAgICAgKiAgIFwidHlwZVwiOiBcIkRhdGVBeGlzXCIsXHJcbiAgICAgICAgICogICBcImRhdGVGb3JtYXRzXCI6IHtcclxuICAgICAgICAgKiAgICAgXCJkYXlcIjogXCJNTU1NIGQsIHl5eXlcIlxyXG4gICAgICAgICAqICAgfVxyXG4gICAgICAgICAqIH1dXHJcbiAgICAgICAgICogYGBgXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAc2VlIHtAbGluayBEYXRlRm9ybWF0dGVyfVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLmRhdGVGb3JtYXRzID0gbmV3IERpY3Rpb25hcnkoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGVzZSBmb3JtYXRzIGFyZSBhcHBsaWVkIHRvIGxhYmVscyB0aGF0IGFyZSBmaXJzdCBpbiBhIGxhcmdlciB1bml0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRm9yIGV4YW1wbGUsIGlmIHdlIGhhdmUgYSBEYXRlQXhpcyB3aXRoIGRheXMgb24gaXQsIHRoZSBmaXJzdCBkYXkgb2YgbW9udGhcclxuICAgICAgICAgKiBpbmRpY2F0ZXMgYSBicmVhayBpbiBtb250aCAtIGEgc3RhcnQgb2YgdGhlIGJpZ2dlciBwZXJpb2QuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBGb3IgdGhvc2UgbGFiZWxzLCBgcGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHNgIGFyZSBhcHBsaWVkIGluc3RlYWQgb2ZcclxuICAgICAgICAgKiBgZGF0ZUZvcm1hdHNgLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhpcyBhbGxvd3MgdXMgaW1wbGVtZW50IGNvbnZlbmllbnQgc3RydWN0dXJlcywgbGlrZSBpbnN0ZWFkIG9mOlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogYEphbiAxIC0gSmFuIDIgLSBKYW4gMyAtIC4uLmBcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFdlIGNhbiBoYXZlOlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogYEphbiAtIDEgLSAyIC0gMyAtIC4uLmBcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFRoaXMgY2FuIGJlIGRpc2FibGVkIGJ5IHNldHRpbmcgYG1hcmtVbml0Q2hhbmdlID0gZmFsc2VgLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzID0gbmV3IERpY3Rpb25hcnkoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBY3R1YWwgaW50ZXJ2YWwgKGdyYW51bGFyaXR5KSBkZXJpdmVkIGZyb20gdGhlIGFjdHVhbCBkYXRhLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLl9iYXNlSW50ZXJ2YWxSZWFsID0geyB0aW1lVW5pdDogXCJkYXlcIiwgY291bnQ6IDEgfTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5fcHJldlNlcmllc1RpbWUgPSB7fTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBbX21pbkRpZmZlcmVuY2UgZGVzY3JpcHRpb25dXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLl9taW5EaWZmZXJlbmNlID0ge307XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQGlnbm9yZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLl9maXJzdFdlZWtEYXkgPSAxO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgY29sbGVjdGlvbiBvZiBzdGFydCB0aW1lc3RhbXBzIHRvIHVzZSBhcyBheGlzJyBtaW4gdGltZXN0YW1wIGZvclxyXG4gICAgICAgICAqIHBhcnRpY3VsYXIgZGF0YSBpdGVtIGl0ZW0gcGVyaW9kcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBzaW5jZSA0LjcuMFxyXG4gICAgICAgICAqIEByZWFkb25seVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLmdyb3VwTWluID0ge307XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBjb2xsZWN0aW9uIG9mIHN0YXJ0IHRpbWVzdGFtcHMgdG8gdXNlIGFzIGF4aXMnIG1heCB0aW1lc3RhbXAgZm9yXHJcbiAgICAgICAgICogcGFydGljdWxhciBkYXRhIGl0ZW0gaXRlbSBwZXJpb2RzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHNpbmNlIDQuNy4wXHJcbiAgICAgICAgICogQHJlYWRvbmx5XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMuZ3JvdXBNYXggPSB7fTtcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkRhdGVBeGlzXCI7XHJcbiAgICAgICAgX3RoaXMuc2V0UHJvcGVydHlWYWx1ZShcIm1hcmtVbml0Q2hhbmdlXCIsIHRydWUpO1xyXG4gICAgICAgIF90aGlzLnNuYXBUb29sdGlwID0gdHJ1ZTtcclxuICAgICAgICBfdGhpcy50b29sdGlwUG9zaXRpb24gPSBcInBvaW50ZXJcIjtcclxuICAgICAgICBfdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiZ3JvdXBEYXRhXCIsIGZhbHNlKTtcclxuICAgICAgICBfdGhpcy5ncm91cENvdW50ID0gMjAwO1xyXG4gICAgICAgIF90aGlzLmV2ZW50cy5vbihcInBhcmVudHNldFwiLCBfdGhpcy5nZXRERkZvcm1hdHRlciwgX3RoaXMsIGZhbHNlKTtcclxuICAgICAgICAvLyBUcmFuc2xhdGFibGUgZGVmYXVsdHMgYXJlIGFwcGxpZWQgaW4gYGFwcGx5SW50ZXJuYWxEZWZhdWx0cygpYFxyXG4gICAgICAgIC8vIC4uLlxyXG4gICAgICAgIC8vIERlZmluZSBkZWZhdWx0IGludGVydmFsc1xyXG4gICAgICAgIF90aGlzLmdyaWRJbnRlcnZhbHMucHVzaEFsbChbXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwibWlsbGlzZWNvbmRcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaWxsaXNlY29uZFwiLCBjb3VudDogNSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiAxMCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiA1MCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1pbGxpc2Vjb25kXCIsIGNvdW50OiAxMDAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaWxsaXNlY29uZFwiLCBjb3VudDogNTAwIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiA1IH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiAxMCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcInNlY29uZFwiLCBjb3VudDogMzAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaW51dGVcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaW51dGVcIiwgY291bnQ6IDUgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaW51dGVcIiwgY291bnQ6IDEwIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwibWludXRlXCIsIGNvdW50OiAxNSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogMzAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJob3VyXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwiaG91clwiLCBjb3VudDogMyB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcImhvdXJcIiwgY291bnQ6IDYgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJob3VyXCIsIGNvdW50OiAxMiB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcImRheVwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcImRheVwiLCBjb3VudDogMiB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcImRheVwiLCBjb3VudDogMyB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcImRheVwiLCBjb3VudDogNCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcImRheVwiLCBjb3VudDogNSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIndlZWtcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtb250aFwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1vbnRoXCIsIGNvdW50OiAyIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwibW9udGhcIiwgY291bnQ6IDMgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtb250aFwiLCBjb3VudDogNiB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcInllYXJcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAyIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwieWVhclwiLCBjb3VudDogNSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcInllYXJcIiwgY291bnQ6IDEwIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwieWVhclwiLCBjb3VudDogNTAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAxMDAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAyMDAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiA1MDAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAxMDAwIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwieWVhclwiLCBjb3VudDogMjAwMCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcInllYXJcIiwgY291bnQ6IDUwMDAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJ5ZWFyXCIsIGNvdW50OiAxMDAwMCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcInllYXJcIiwgY291bnQ6IDEwMDAwMCB9XHJcbiAgICAgICAgXSk7XHJcbiAgICAgICAgX3RoaXMuZ3JvdXBJbnRlcnZhbHMucHVzaEFsbChbXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwibWlsbGlzZWNvbmRcIiwgY291bnQ6IDEgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaWxsaXNlY29uZFwiLCBjb3VudDogMTAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJtaWxsaXNlY29uZFwiLCBjb3VudDogMTAwIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwic2Vjb25kXCIsIGNvdW50OiAxMCB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1pbnV0ZVwiLCBjb3VudDogMTAgfSxcclxuICAgICAgICAgICAgeyB0aW1lVW5pdDogXCJob3VyXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwiZGF5XCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwid2Vla1wiLCBjb3VudDogMSB9LFxyXG4gICAgICAgICAgICB7IHRpbWVVbml0OiBcIm1vbnRoXCIsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgdGltZVVuaXQ6IFwieWVhclwiLCBjb3VudDogMSB9XHJcbiAgICAgICAgXSk7XHJcbiAgICAgICAgLy8gU2V0IGZpZWxkIG5hbWVcclxuICAgICAgICBfdGhpcy5heGlzRmllbGROYW1lID0gXCJkYXRlXCI7XHJcbiAgICAgICAgLy8gQXBwbHkgdGhlbWVcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBIGZ1bmN0aW9uIHdoaWNoIGFwcGxpZXMgZmlsbHMgdG8gYXhpcyBjZWxscy5cclxuICAgICAqXHJcbiAgICAgKiBEZWZhdWx0IGZ1bmN0aW9uIGZpbGxzIGV2ZXJ5IHNlY29uZCBmaWxsLiBZb3UgY2FuIHNldCB0aGlzIHRvIGEgZnVuY3Rpb25cclxuICAgICAqIHRoYXQgZm9sbG93cyBzb21lIG90aGVyIGxvZ2ljLlxyXG4gICAgICpcclxuICAgICAqIEZ1bmN0aW9uIHNob3VsZCBhY2NlcHQgYSBbW0RhdGVBeGlzRGF0YUl0ZW1dXSBhbmQgbW9kaWZ5IGl0cyBgYXhpc0ZpbGxgXHJcbiAgICAgKiBwcm9wZXJ0eSBhY2NvcmRpbmdseS5cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmZpbGxSdWxlID0gZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgdmFyIHZhbHVlID0gZGF0YUl0ZW0udmFsdWU7XHJcbiAgICAgICAgdmFyIGF4aXMgPSBkYXRhSXRlbS5jb21wb25lbnQ7XHJcbiAgICAgICAgdmFyIGdyaWRJbnRlcnZhbCA9IGF4aXMuX2dyaWRJbnRlcnZhbDtcclxuICAgICAgICB2YXIgZ3JpZER1cmF0aW9uID0gJHRpbWUuZ2V0RHVyYXRpb24oZ3JpZEludGVydmFsLnRpbWVVbml0LCBncmlkSW50ZXJ2YWwuY291bnQpO1xyXG4gICAgICAgIGlmIChNYXRoLnJvdW5kKCh2YWx1ZSAtIGF4aXMubWluKSAvIGdyaWREdXJhdGlvbikgLyAyID09IE1hdGgucm91bmQoTWF0aC5yb3VuZCgodmFsdWUgLSBheGlzLm1pbikgLyBncmlkRHVyYXRpb24pIC8gMikpIHtcclxuICAgICAgICAgICAgZGF0YUl0ZW0uYXhpc0ZpbGwuX19kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBkYXRhSXRlbS5heGlzRmlsbC5fX2Rpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU2V0cyBkZWZhdWx0cyB0aGF0IGluc3RhbnRpYXRlIHNvbWUgb2JqZWN0cyB0aGF0IHJlbHkgb24gcGFyZW50LCBzbyB0aGV5XHJcbiAgICAgKiBjYW5ub3QgYmUgc2V0IGluIGNvbnN0cnVjdG9yLlxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuYXBwbHlJbnRlcm5hbERlZmF1bHRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuYXBwbHlJbnRlcm5hbERlZmF1bHRzLmNhbGwodGhpcyk7XHJcbiAgICAgICAgLy8gU2V0IGRlZmF1bHQgZGF0ZSBmb3JtYXRzXHJcbiAgICAgICAgaWYgKCF0aGlzLmRhdGVGb3JtYXRzLmhhc0tleShcIm1pbGxpc2Vjb25kXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGF0ZUZvcm1hdHMuc2V0S2V5KFwibWlsbGlzZWNvbmRcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV9taWxsaXNlY29uZFwiKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5kYXRlRm9ybWF0cy5oYXNLZXkoXCJzZWNvbmRcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRlRm9ybWF0cy5zZXRLZXkoXCJzZWNvbmRcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV9zZWNvbmRcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuZGF0ZUZvcm1hdHMuaGFzS2V5KFwibWludXRlXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGF0ZUZvcm1hdHMuc2V0S2V5KFwibWludXRlXCIsIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfbWludXRlXCIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmRhdGVGb3JtYXRzLmhhc0tleShcImhvdXJcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRlRm9ybWF0cy5zZXRLZXkoXCJob3VyXCIsIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfaG91clwiKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5kYXRlRm9ybWF0cy5oYXNLZXkoXCJkYXlcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRlRm9ybWF0cy5zZXRLZXkoXCJkYXlcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV9kYXlcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuZGF0ZUZvcm1hdHMuaGFzS2V5KFwid2Vla1wiKSkge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGVGb3JtYXRzLnNldEtleShcIndlZWtcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV9kYXlcIikpOyAvLyBub3QgYSBtaXN0YWtlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5kYXRlRm9ybWF0cy5oYXNLZXkoXCJtb250aFwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGVGb3JtYXRzLnNldEtleShcIm1vbnRoXCIsIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfbW9udGhcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuZGF0ZUZvcm1hdHMuaGFzS2V5KFwieWVhclwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGVGb3JtYXRzLnNldEtleShcInllYXJcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV95ZWFyXCIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzLmhhc0tleShcIm1pbGxpc2Vjb25kXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHMuc2V0S2V5KFwibWlsbGlzZWNvbmRcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV9taWxsaXNlY29uZFwiKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cy5oYXNLZXkoXCJzZWNvbmRcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cy5zZXRLZXkoXCJzZWNvbmRcIiwgdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJfZGF0ZV9zZWNvbmRcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMucGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHMuaGFzS2V5KFwibWludXRlXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHMuc2V0S2V5KFwibWludXRlXCIsIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfbWludXRlXCIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzLmhhc0tleShcImhvdXJcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cy5zZXRLZXkoXCJob3VyXCIsIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfZGF5XCIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzLmhhc0tleShcImRheVwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzLnNldEtleShcImRheVwiLCB0aGlzLmxhbmd1YWdlLnRyYW5zbGF0ZShcIl9kYXRlX2RheVwiKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cy5oYXNLZXkoXCJ3ZWVrXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHMuc2V0S2V5KFwid2Vla1wiLCB0aGlzLmxhbmd1YWdlLnRyYW5zbGF0ZShcIl9kYXRlX2RheVwiKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cy5oYXNLZXkoXCJtb250aFwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzLnNldEtleShcIm1vbnRoXCIsIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfbW9udGhcIikgKyBcIiBcIiArIHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiX2RhdGVfeWVhclwiKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIG5ldy9lbXB0eSBbW0RhdGFJdGVtXV0gb2YgdGhlIHR5cGUgYXBwcm9wcmlhdGUgZm9yIHRoaXMgb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBzZWUge0BsaW5rIERhdGFJdGVtfVxyXG4gICAgICogQHJldHVybiBEYXRhIEl0ZW1cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmNyZWF0ZURhdGFJdGVtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgRGF0ZUF4aXNEYXRhSXRlbSgpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIG5ldy9lbXB0eSBbW0F4aXNCcmVha11dIG9mIHRoZSBhcHByb3ByaWF0ZSB0eXBlLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm4gQXhpcyBicmVha1xyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuY3JlYXRlQXhpc0JyZWFrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgRGF0ZUF4aXNCcmVhaygpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogVmFsaWRhdGVzIEF4aXMnIGRhdGEgaXRlbXMuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUudmFsaWRhdGVEYXRhSXRlbXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gYWxsb3dzIHRvIGtlZXAgc2VsZWN0aW9uIG9mIHRoZSBzYW1lIHNpemVcclxuICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLnN0YXJ0O1xyXG4gICAgICAgIHZhciBlbmQgPSB0aGlzLmVuZDtcclxuICAgICAgICB2YXIgYmFzZUR1cmF0aW9uID0gdGhpcy5iYXNlRHVyYXRpb247XHJcbiAgICAgICAgdmFyIHBlcmlvZENvdW50ID0gKHRoaXMubWF4IC0gdGhpcy5taW4pIC8gYmFzZUR1cmF0aW9uO1xyXG4gICAgICAgIHRoaXMuX2ZpcnN0V2Vla0RheSA9IHRoaXMuZ2V0Rmlyc3RXZWVrRGF5KCk7XHJcbiAgICAgICAgdGhpcy5nZXRERkZvcm1hdHRlcigpO1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGVEYXRhSXRlbXMuY2FsbCh0aGlzKTtcclxuICAgICAgICB2YXIgbWFpbkJhc2VEdXJhdGlvbiA9ICR0aW1lLmdldER1cmF0aW9uKHRoaXMubWFpbkJhc2VJbnRlcnZhbC50aW1lVW5pdCwgdGhpcy5tYWluQmFzZUludGVydmFsLmNvdW50KTtcclxuICAgICAgICB0aGlzLm1heFpvb21GYWN0b3IgPSAodGhpcy5tYXggLSB0aGlzLm1pbikgLyBtYWluQmFzZUR1cmF0aW9uO1xyXG4gICAgICAgIHRoaXMuX2RlbHRhTWluTWF4ID0gdGhpcy5iYXNlRHVyYXRpb24gLyAyO1xyXG4gICAgICAgIC8vIGFsbG93cyB0byBrZWVwIHNlbGVjdGlvbiBvZiB0aGUgc2FtZSBzaXplXHJcbiAgICAgICAgdmFyIG5ld1BlcmlvZENvdW50ID0gKHRoaXMubWF4IC0gdGhpcy5taW4pIC8gYmFzZUR1cmF0aW9uO1xyXG4gICAgICAgIHN0YXJ0ID0gc3RhcnQgKyAoZW5kIC0gc3RhcnQpICogKDEgLSBwZXJpb2RDb3VudCAvIG5ld1BlcmlvZENvdW50KTtcclxuICAgICAgICB0aGlzLnpvb20oeyBzdGFydDogc3RhcnQsIGVuZDogZW5kIH0sIGZhbHNlLCB0cnVlKTsgLy8gYWRkZWQgaW5zdGFudGx5dG8gc29sdmUgem9vbW91dCBwcm9ibGVtIHdoZW4gd2UgaGF2ZSBheGVzIGdhcHMuIEB0b2RvOiBjaGVjayBob3cgdGhpcyBhZmZlY3RzIG1heFpvb21GYWN0b3JcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZXMgcHJvY2VzcyBhZnRlciB6b29tLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEB0b2RvIERvZXMgbm90aGluZz9cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmhhbmRsZVNlbGVjdGlvbkV4dHJlbWVzQ2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ2FsY3VsYXRlcyBhbGwgcG9zaXRpb25zLCByZWxhdGVkIHRvIGF4aXMgYXMgcGVyIGN1cnJlbnQgem9vbS5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5jYWxjdWxhdGVab29tID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5jYWxjdWxhdGVab29tLmNhbGwodGhpcyk7XHJcbiAgICAgICAgdmFyIGRpZmZlcmVuY2UgPSB0aGlzLmFkanVzdERpZmZlcmVuY2UodGhpcy5fbWluWm9vbWVkLCB0aGlzLl9tYXhab29tZWQpO1xyXG4gICAgICAgIHZhciBkYXRhU2V0Q2hhbmdlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8vIGlmIGRhdGEgaGFzIHRvIGJlIGdyb3VwZWQsIGNob29zZSBpbnRlcnZhbCBhbmQgc2V0IGRhdGFzZXRcclxuICAgICAgICBpZiAodGhpcy5ncm91cERhdGEgJiYgJHR5cGUuaGFzVmFsdWUoZGlmZmVyZW5jZSkpIHtcclxuICAgICAgICAgICAgdmFyIG1haW5CYXNlSW50ZXJ2YWwgPSB0aGlzLm1haW5CYXNlSW50ZXJ2YWw7XHJcbiAgICAgICAgICAgIHZhciBtb2RpZmllZERpZmZlcmVuY2UgPSBkaWZmZXJlbmNlICsgdGhpcy5zdGFydExvY2F0aW9uICsgKDEgLSB0aGlzLmVuZExvY2F0aW9uKSAqIHRoaXMuYmFzZUR1cmF0aW9uO1xyXG4gICAgICAgICAgICB2YXIgZ3JvdXBJbnRlcnZhbCA9IHZvaWQgMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZ3JvdXBJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBJbnRlcnZhbCA9IF9fYXNzaWduKHt9LCB0aGlzLmdyb3VwSW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBJbnRlcnZhbCA9IHRoaXMuY2hvb3NlSW50ZXJ2YWwoMCwgbW9kaWZpZWREaWZmZXJlbmNlLCB0aGlzLmdyb3VwQ291bnQsIHRoaXMuZ3JvdXBJbnRlcnZhbHMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCR0aW1lLmdldER1cmF0aW9uKGdyb3VwSW50ZXJ2YWwudGltZVVuaXQsIGdyb3VwSW50ZXJ2YWwuY291bnQpIDwgJHRpbWUuZ2V0RHVyYXRpb24obWFpbkJhc2VJbnRlcnZhbC50aW1lVW5pdCwgbWFpbkJhc2VJbnRlcnZhbC5jb3VudCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBncm91cEludGVydmFsID0gX19hc3NpZ24oe30sIG1haW5CYXNlSW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX2dyb3VwSW50ZXJ2YWwgPSBncm91cEludGVydmFsO1xyXG4gICAgICAgICAgICB2YXIgbmV3SWQgPSBncm91cEludGVydmFsLnRpbWVVbml0ICsgZ3JvdXBJbnRlcnZhbC5jb3VudDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnREYXRhU2V0SWQgIT0gbmV3SWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnREYXRhU2V0SWQgPSBuZXdJZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGlzcGF0Y2goXCJncm91cHBlcmlvZGNoYW5nZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5zZXJpZXMuZWFjaChmdW5jdGlvbiAoc2VyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2VyaWVzLmJhc2VBeGlzID09IF90aGlzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcmllcy5zZXREYXRhU2V0KF90aGlzLl9jdXJyZW50RGF0YVNldElkKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhU2V0Q2hhbmdlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGdyaWRJbnRlcnZhbCA9IHRoaXMuY2hvb3NlSW50ZXJ2YWwoMCwgZGlmZmVyZW5jZSwgdGhpcy5fZ3JpZENvdW50KTtcclxuICAgICAgICBpZiAoJHRpbWUuZ2V0RHVyYXRpb24oZ3JpZEludGVydmFsLnRpbWVVbml0LCBncmlkSW50ZXJ2YWwuY291bnQpIDwgdGhpcy5iYXNlRHVyYXRpb24pIHtcclxuICAgICAgICAgICAgZ3JpZEludGVydmFsID0gX19hc3NpZ24oe30sIHRoaXMuYmFzZUludGVydmFsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fZ3JpZEludGVydmFsID0gZ3JpZEludGVydmFsO1xyXG4gICAgICAgIHRoaXMuX25leHRHcmlkVW5pdCA9ICR0aW1lLmdldE5leHRVbml0KGdyaWRJbnRlcnZhbC50aW1lVW5pdCk7XHJcbiAgICAgICAgLy8gdGhlIGZvbGxvd2luZyBpcyBuZWVkZWQgdG8gYXZvaWQgZ3JpZCBmbGlja2VyaW5nIHdoaWxlIHNjcm9sbGluZ1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsRHVyYXRpb24gPSAkdGltZS5nZXREdXJhdGlvbihncmlkSW50ZXJ2YWwudGltZVVuaXQsIGdyaWRJbnRlcnZhbC5jb3VudCk7XHJcbiAgICAgICAgdGhpcy5fZ3JpZERhdGUgPSAkdGltZS5yb3VuZChuZXcgRGF0ZSh0aGlzLm1pblpvb21lZCAtICR0aW1lLmdldER1cmF0aW9uKGdyaWRJbnRlcnZhbC50aW1lVW5pdCwgZ3JpZEludGVydmFsLmNvdW50KSksIGdyaWRJbnRlcnZhbC50aW1lVW5pdCwgZ3JpZEludGVydmFsLmNvdW50LCB0aGlzLl9maXJzdFdlZWtEYXksIHRoaXMuX2RmLnV0YywgbmV3IERhdGUodGhpcy5taW4pKTtcclxuICAgICAgICAvLyB0ZWxsIHNlcmllcyBzdGFydC9lbmRcclxuICAgICAgICAkaXRlci5lYWNoKHRoaXMuc2VyaWVzLml0ZXJhdG9yKCksIGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgaWYgKHNlcmllcy5iYXNlQXhpcyA9PSBfdGhpcykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGZpZWxkXzEgPSBzZXJpZXMuZ2V0QXhpc0ZpZWxkKF90aGlzKTtcclxuICAgICAgICAgICAgICAgIHZhciBtaW5ab29tZWQgPSAkdGltZS5yb3VuZChuZXcgRGF0ZShfdGhpcy5fbWluWm9vbWVkICsgX3RoaXMuYmFzZUR1cmF0aW9uICogMC4wNSksIF90aGlzLmJhc2VJbnRlcnZhbC50aW1lVW5pdCwgX3RoaXMuYmFzZUludGVydmFsLmNvdW50LCBfdGhpcy5fZmlyc3RXZWVrRGF5LCBfdGhpcy5fZGYudXRjKS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWluWm9vbWVkU3RyID0gbWluWm9vbWVkLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnREYXRhSXRlbSA9IHNlcmllcy5kYXRhSXRlbXNCeUF4aXMuZ2V0S2V5KF90aGlzLnVpZCkuZ2V0S2V5KG1pblpvb21lZFN0ciArIHNlcmllcy5jdXJyZW50RGF0YVNldElkKTtcclxuICAgICAgICAgICAgICAgIHZhciBzdGFydEluZGV4ID0gMDtcclxuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5zdGFydCAhPSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0RGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnREYXRhSXRlbSA9IF90aGlzLmZpbmRGaXJzdChzdGFydERhdGFJdGVtLCBtaW5ab29tZWQsIGZpZWxkXzEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydEluZGV4ID0gc3RhcnREYXRhSXRlbS5pbmRleDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0SW5kZXggPSBzZXJpZXMuZGF0YUl0ZW1zLmZpbmRDbG9zZXN0SW5kZXgoX3RoaXMuX21pblpvb21lZCwgZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHhbZmllbGRfMV07IH0sIFwibGVmdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAxIG1pbGxpc2Vjb25kIGlzIHJlbW92ZWQgc28gdGhhdCBpZiBvbmx5IGZpcnN0IGl0ZW0gaXMgc2VsZWN0ZWQsIGl0IHdvdWxkIG5vdCBjb3VudCBpbiB0aGUgc2Vjb25kLlxyXG4gICAgICAgICAgICAgICAgdmFyIGJhc2VJbnRlcnZhbCA9IF90aGlzLmJhc2VJbnRlcnZhbDtcclxuICAgICAgICAgICAgICAgIHZhciBtYXhab29tZWQgPSAkdGltZS5hZGQoJHRpbWUucm91bmQobmV3IERhdGUoX3RoaXMuX21heFpvb21lZCksIGJhc2VJbnRlcnZhbC50aW1lVW5pdCwgYmFzZUludGVydmFsLmNvdW50LCBfdGhpcy5fZmlyc3RXZWVrRGF5LCBfdGhpcy5fZGYudXRjKSwgYmFzZUludGVydmFsLnRpbWVVbml0LCBiYXNlSW50ZXJ2YWwuY291bnQsIF90aGlzLl9kZi51dGMpLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgIHZhciBtYXhab29tZWRTdHIgPSBtYXhab29tZWQudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgICAgIHZhciBlbmREYXRhSXRlbSA9IHNlcmllcy5kYXRhSXRlbXNCeUF4aXMuZ2V0S2V5KF90aGlzLnVpZCkuZ2V0S2V5KG1heFpvb21lZFN0ciArIHNlcmllcy5jdXJyZW50RGF0YVNldElkKTtcclxuICAgICAgICAgICAgICAgIHZhciBlbmRJbmRleCA9IHNlcmllcy5kYXRhSXRlbXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLmVuZCAhPSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVuZERhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZEluZGV4ID0gZW5kRGF0YUl0ZW0uaW5kZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhab29tZWQgLT0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kSW5kZXggPSBzZXJpZXMuZGF0YUl0ZW1zLmZpbmRDbG9zZXN0SW5kZXgobWF4Wm9vbWVkLCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geFtmaWVsZF8xXTsgfSwgXCJyaWdodFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbm90IGdvb2QgLSBpZiBlbmQgaXMgaW4gdGhlIGdhcCwgaW5kZXhlcyBnbyBsaWtlIDUsNCwzLDQsMiwxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgKGVuZEluZGV4IDwgc2VyaWVzLmRhdGFJdGVtcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kSW5kZXgrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgc2VyaWVzLnN0YXJ0SW5kZXggPSBzdGFydEluZGV4O1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzLmVuZEluZGV4ID0gZW5kSW5kZXg7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWRhdGFTZXRDaGFuZ2VkICYmIHNlcmllcy5kYXRhUmFuZ2VJbnZhbGlkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VyaWVzLnZhbGlkYXRlRGF0YVJhbmdlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZmluZEZpcnN0ID0gZnVuY3Rpb24gKGRhdGFJdGVtLCB0aW1lLCBrZXkpIHtcclxuICAgICAgICB2YXIgaW5kZXggPSBkYXRhSXRlbS5pbmRleDtcclxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciBzZXJpZXMgPSBkYXRhSXRlbS5jb21wb25lbnQ7XHJcbiAgICAgICAgICAgIHZhciBwcmV2aW91c0RhdGFJdGVtID0gc2VyaWVzLmRhdGFJdGVtcy5nZXRJbmRleChpbmRleCAtIDEpO1xyXG4gICAgICAgICAgICB2YXIgcHJldmlvdXNEYXRlID0gcHJldmlvdXNEYXRhSXRlbVtrZXldO1xyXG4gICAgICAgICAgICBpZiAoIXByZXZpb3VzRGF0ZSB8fCBwcmV2aW91c0RhdGUuZ2V0VGltZSgpIDwgdGltZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFJdGVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluZEZpcnN0KHByZXZpb3VzRGF0YUl0ZW0sIHRpbWUsIGtleSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBkYXRhSXRlbTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiAoUmUpdmFsaWRhdGVzIGRhdGEuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUudmFsaWRhdGVEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGVEYXRhLmNhbGwodGhpcyk7XHJcbiAgICAgICAgaWYgKCEkdHlwZS5pc051bWJlcih0aGlzLmJhc2VJbnRlcnZhbC5jb3VudCkpIHtcclxuICAgICAgICAgICAgdGhpcy5iYXNlSW50ZXJ2YWwuY291bnQgPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0ZUF4aXMucHJvdG90eXBlLCBcIm1pbkRpZmZlcmVuY2VcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBpZ25vcmVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgdmFyIG1pbkRpZmZlcmVuY2UgPSBOdW1iZXIuTUFYX1ZBTFVFO1xyXG4gICAgICAgICAgICB0aGlzLnNlcmllcy5lYWNoKGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChtaW5EaWZmZXJlbmNlID4gX3RoaXMuX21pbkRpZmZlcmVuY2Vbc2VyaWVzLnVpZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICBtaW5EaWZmZXJlbmNlID0gX3RoaXMuX21pbkRpZmZlcmVuY2Vbc2VyaWVzLnVpZF07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAobWluRGlmZmVyZW5jZSA9PSBOdW1iZXIuTUFYX1ZBTFVFIHx8IG1pbkRpZmZlcmVuY2UgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgbWluRGlmZmVyZW5jZSA9ICR0aW1lLmdldER1cmF0aW9uKFwiZGF5XCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBtaW5EaWZmZXJlbmNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBbZGF0YUNoYW5nZVVwZGF0ZSBkZXNjcmlwdGlvbl1cclxuICAgICAqXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLnNlcmllc0RhdGFDaGFuZ2VVcGRhdGUgPSBmdW5jdGlvbiAoc2VyaWVzKSB7XHJcbiAgICAgICAgdGhpcy5fbWluRGlmZmVyZW5jZVtzZXJpZXMudWlkXSA9IE51bWJlci5NQVhfVkFMVUU7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBbcG9zdFByb2Nlc3NTZXJpZXNEYXRhSXRlbXMgZGVzY3JpcHRpb25dXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLnBvc3RQcm9jZXNzU2VyaWVzRGF0YUl0ZW1zID0gZnVuY3Rpb24gKHNlcmllcykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHNlcmllcykge1xyXG4gICAgICAgICAgICB0aGlzLnNlcmllc0dyb3VwVXBkYXRlKHNlcmllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNlcmllcy5lYWNoKGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLnNlcmllc0dyb3VwVXBkYXRlKHNlcmllcyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFkZEVtcHR5VW5pdHNCcmVha3MoKTtcclxuICAgIH07XHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuc2VyaWVzR3JvdXBVcGRhdGUgPSBmdW5jdGlvbiAoc2VyaWVzKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICBpZiAoSlNPTi5zdHJpbmdpZnkoc2VyaWVzLl9iYXNlSW50ZXJ2YWxbdGhpcy51aWRdKSAhPSBKU09OLnN0cmluZ2lmeSh0aGlzLm1haW5CYXNlSW50ZXJ2YWwpKSB7XHJcbiAgICAgICAgICAgIHNlcmllcy5fYmFzZUludGVydmFsW3RoaXMudWlkXSA9IHRoaXMubWFpbkJhc2VJbnRlcnZhbDtcclxuICAgICAgICAgICAgc2VyaWVzLm1haW5EYXRhU2V0LmVhY2goZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5wb3N0UHJvY2Vzc1Nlcmllc0RhdGFJdGVtKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdyb3VwRGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ncm91cFNlcmllc0RhdGEoc2VyaWVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENhbGN1bGF0ZXMgc2VyaWVzIGdyb3VwIGRhdGEuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtICBzZXJpZXMgIFNlcmllc1xyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZ3JvdXBTZXJpZXNEYXRhID0gZnVuY3Rpb24gKHNlcmllcykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHNlcmllcy5iYXNlQXhpcyA9PSB0aGlzICYmIHNlcmllcy5kYXRhSXRlbXMubGVuZ3RoID4gMCAmJiAhc2VyaWVzLmRhdGFHcm91cGVkKSB7XHJcbiAgICAgICAgICAgIHNlcmllcy5idWxsZXRzQ29udGFpbmVyLmRpc3Bvc2VDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICAvLyBtYWtlIGFycmF5IG9mIGludGVydmFscyB3aGljaCB3aWxsIGJlIHVzZWQ7XHJcbiAgICAgICAgICAgIHZhciBpbnRlcnZhbHNfMSA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgbWFpbkJhc2VJbnRlcnZhbCA9IHRoaXMubWFpbkJhc2VJbnRlcnZhbDtcclxuICAgICAgICAgICAgdmFyIG1haW5JbnRlcnZhbER1cmF0aW9uXzEgPSAkdGltZS5nZXREdXJhdGlvbihtYWluQmFzZUludGVydmFsLnRpbWVVbml0LCBtYWluQmFzZUludGVydmFsLmNvdW50KTtcclxuICAgICAgICAgICAgdGhpcy5ncm91cEludGVydmFscy5lYWNoKGZ1bmN0aW9uIChpbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGludGVydmFsRHVyYXRpb24gPSAkdGltZS5nZXREdXJhdGlvbihpbnRlcnZhbC50aW1lVW5pdCwgaW50ZXJ2YWwuY291bnQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKChpbnRlcnZhbER1cmF0aW9uID4gbWFpbkludGVydmFsRHVyYXRpb25fMSAmJiBpbnRlcnZhbER1cmF0aW9uIDwgKF90aGlzLm1heCAtIF90aGlzLm1pbikpIHx8IF90aGlzLmdyb3VwSW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbHNfMS5wdXNoKGludGVydmFsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmIChzZXJpZXMuX2RhdGFTZXRzKSB7XHJcbiAgICAgICAgICAgICAgICBzZXJpZXMuX2RhdGFTZXRzLmVhY2goZnVuY3Rpb24gKGtleSwgZGF0YUl0ZW1zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW1zLmVhY2goZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtLmRpc3Bvc2UoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbXMuY2xlYXIoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzLl9kYXRhU2V0cy5jbGVhcigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICRhcnJheS5lYWNoKGludGVydmFsc18xLCBmdW5jdGlvbiAoaW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgICAgIC8vbGV0IG1haW5CYXNlSW50ZXJ2YWwgPSB0aGlzLl9tYWluQmFzZUludGVydmFsO1xyXG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IFwiZGF0ZVwiICsgX3RoaXMuYXhpc0xldHRlcjtcclxuICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBkYXRhIHNldFxyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGFTZXRJZCA9IGludGVydmFsLnRpbWVVbml0ICsgaW50ZXJ2YWwuY291bnQ7XHJcbiAgICAgICAgICAgICAgICAvLyB0b2RvOiBjaGVjayB3aGVyZSB0aGlzIGNsb25lIGdvZXNcclxuICAgICAgICAgICAgICAgIHZhciBkYXRhU2V0ID0gbmV3IE9yZGVyZWRMaXN0VGVtcGxhdGUoc2VyaWVzLm1haW5EYXRhU2V0LnRlbXBsYXRlLmNsb25lKCkpO1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzLmRhdGFTZXRzLnNldEtleShkYXRhU2V0SWQsIGRhdGFTZXQpO1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzLmRhdGFHcm91cGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHZhciBkYXRhSXRlbXMgPSBzZXJpZXMubWFpbkRhdGFTZXQ7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJldmlvdXNUaW1lID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZO1xyXG4gICAgICAgICAgICAgICAgdmFyIGkgPSAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIG5ld0RhdGFJdGVtO1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGFGaWVsZHMgPSBbXTtcclxuICAgICAgICAgICAgICAgICRvYmplY3QuZWFjaChzZXJpZXMuZGF0YUZpZWxkcywgZnVuY3Rpb24gKGRma2V5LCBkZikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkZmsgPSBkZmtleTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGZrICE9IGtleSAmJiBkZmsuaW5kZXhPZihcIlNob3dcIikgPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUZpZWxkcy5wdXNoKGRmayk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgcm91bmRlZERhdGU7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbXMuZWFjaChmdW5jdGlvbiAoZGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9IGRhdGFJdGVtLmdldERhdGUoa2V5KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGltZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb3VuZGVkRGF0ZSA9ICR0aW1lLnJvdW5kKG5ldyBEYXRlKHRpbWUpLCBpbnRlcnZhbC50aW1lVW5pdCwgaW50ZXJ2YWwuY291bnQsIF90aGlzLl9kZi5maXJzdERheU9mV2VlaywgX3RoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50VGltZSA9IHJvdW5kZWREYXRlLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2hhbmdlZCBwZXJpb2RcdFx0XHRcdFx0XHRcdFx0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c1RpbWUgPCBjdXJyZW50VGltZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0RhdGFJdGVtICYmIHNlcmllcy5fYWRhcHRlck8pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChkYXRhRmllbGRzLCBmdW5jdGlvbiAodmtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbS52YWx1ZXNbdmtleV0udmFsdWUgPSBzZXJpZXMuX2FkYXB0ZXJPLmFwcGx5KFwiZ3JvdXBEYXRhSXRlbVwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbTogbmV3RGF0YUl0ZW0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogaW50ZXJ2YWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhRmllbGQ6IHZrZXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlOiByb3VuZGVkRGF0ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBuZXdEYXRhSXRlbS52YWx1ZXNbdmtleV0udmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkudmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbSA9IGRhdGFTZXQuY3JlYXRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbS5kYXRhQ29udGV4dCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uc2V0V29ya2luZ0xvY2F0aW9uKFwiZGF0ZVhcIiwgc2VyaWVzLmRhdGFJdGVtcy50ZW1wbGF0ZS5sb2NhdGlvbnMuZGF0ZVgsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uc2V0V29ya2luZ0xvY2F0aW9uKFwib3BlbkRhdGVYXCIsIHNlcmllcy5kYXRhSXRlbXMudGVtcGxhdGUubG9jYXRpb25zLm9wZW5EYXRlWCwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbS5zZXRXb3JraW5nTG9jYXRpb24oXCJkYXRlWVwiLCBzZXJpZXMuZGF0YUl0ZW1zLnRlbXBsYXRlLmxvY2F0aW9ucy5kYXRlWSwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbS5zZXRXb3JraW5nTG9jYXRpb24oXCJvcGVuRGF0ZVlcIiwgc2VyaWVzLmRhdGFJdGVtcy50ZW1wbGF0ZS5sb2NhdGlvbnMub3BlbkRhdGVZLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0RhdGFJdGVtLmNvbXBvbmVudCA9IHNlcmllcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG90aGVyIERhdGVzP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uc2V0RGF0ZShrZXksIHJvdW5kZWREYXRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0RhdGFJdGVtLl9pbmRleCA9IGk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChkYXRhRmllbGRzLCBmdW5jdGlvbiAodmtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vbGV0IGdyb3VwRmllbGROYW1lID0gdmtleSArIFwiR3JvdXBcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZHZhbHVlcyA9IGRhdGFJdGVtLnZhbHVlc1t2a2V5XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZHZhbHVlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBkdmFsdWVzLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VyaWVzLl9hZGFwdGVyTykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBzZXJpZXMuX2FkYXB0ZXJPLmFwcGx5KFwiZ3JvdXBWYWx1ZVwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW06IGRhdGFJdGVtLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsOiBpbnRlcnZhbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhRmllbGQ6IHZrZXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogcm91bmRlZERhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWVzID0gbmV3RGF0YUl0ZW0udmFsdWVzW3ZrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIodmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMudmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy53b3JraW5nVmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5vcGVuID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMuY2xvc2UgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5sb3cgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5oaWdoID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMuc3VtID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMuYXZlcmFnZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzLmNvdW50ID0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5jb3VudCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnBvc3RQcm9jZXNzU2VyaWVzRGF0YUl0ZW0obmV3RGF0YUl0ZW0sIGludGVydmFsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmplY3QuZWFjaChzZXJpZXMucHJvcGVydHlGaWVsZHMsIGZ1bmN0aW9uIChrZXksIGZpZWxkVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZiA9IGtleTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBkYXRhSXRlbS5wcm9wZXJ0aWVzW2tleV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0eXBlLmhhc1ZhbHVlKHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbS5oYXNQcm9wZXJ0aWVzID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uc2V0UHJvcGVydHkoZiwgdmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uZ3JvdXBEYXRhSXRlbXMgPSBbZGF0YUl0ZW1dO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNUaW1lID0gY3VycmVudFRpbWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3RGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChkYXRhRmllbGRzLCBmdW5jdGlvbiAodmtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZ3JvdXBGaWVsZE5hbWUgPSBzZXJpZXMuZ3JvdXBGaWVsZHNbdmtleV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkdmFsdWVzID0gZGF0YUl0ZW0udmFsdWVzW3ZrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZHZhbHVlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gZHZhbHVlcy52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuX2FkYXB0ZXJPKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBzZXJpZXMuX2FkYXB0ZXJPLmFwcGx5KFwiZ3JvdXBWYWx1ZVwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtOiBkYXRhSXRlbSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWw6IGludGVydmFsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhRmllbGQ6IHZrZXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGU6IHJvdW5kZWREYXRlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdHlwZS5pc051bWJlcih2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWVzID0gbmV3RGF0YUl0ZW0udmFsdWVzW3ZrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIodmFsdWVzLm9wZW4pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5vcGVuID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5jbG9zZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZXMubG93ID4gdmFsdWUgfHwgISR0eXBlLmlzTnVtYmVyKHZhbHVlcy5sb3cpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5sb3cgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlcy5oaWdoIDwgdmFsdWUgfHwgISR0eXBlLmlzTnVtYmVyKHZhbHVlcy5oaWdoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMuaGlnaCA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIodmFsdWVzLnN1bSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzLnN1bSArPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5zdW0gPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzLmNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzLmF2ZXJhZ2UgPSB2YWx1ZXMuc3VtIC8gdmFsdWVzLmNvdW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdHlwZS5pc051bWJlcih2YWx1ZXNbZ3JvdXBGaWVsZE5hbWVdKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMudmFsdWUgPSB2YWx1ZXNbZ3JvdXBGaWVsZE5hbWVdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMud29ya2luZ1ZhbHVlID0gdmFsdWVzLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1dGlscy5jb3B5UHJvcGVydGllcyhkYXRhSXRlbS5wcm9wZXJ0aWVzLCBuZXdEYXRhSXRlbS5wcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqZWN0LmVhY2goc2VyaWVzLnByb3BlcnR5RmllbGRzLCBmdW5jdGlvbiAoa2V5LCBmaWVsZFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmID0ga2V5O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBkYXRhSXRlbS5wcm9wZXJ0aWVzW2tleV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdHlwZS5oYXNWYWx1ZSh2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0RhdGFJdGVtLmhhc1Byb3BlcnRpZXMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uc2V0UHJvcGVydHkoZiwgdmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YUl0ZW0uZ3JvdXBEYXRhSXRlbXMucHVzaChkYXRhSXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0RhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICR1dGlscy5jb3B5UHJvcGVydGllcyhkYXRhSXRlbS5kYXRhQ29udGV4dCwgbmV3RGF0YUl0ZW0uZGF0YUNvbnRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld0RhdGFJdGVtICYmIHNlcmllcy5fYWRhcHRlck8pIHtcclxuICAgICAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChkYXRhRmllbGRzLCBmdW5jdGlvbiAodmtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhSXRlbS52YWx1ZXNbdmtleV0udmFsdWUgPSBzZXJpZXMuX2FkYXB0ZXJPLmFwcGx5KFwiZ3JvdXBEYXRhSXRlbVwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbTogbmV3RGF0YUl0ZW0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogaW50ZXJ2YWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhRmllbGQ6IHZrZXksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlOiByb3VuZGVkRGF0ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBuZXdEYXRhSXRlbS52YWx1ZXNbdmtleV0udmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSkudmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZVpvb20oKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRERkZvcm1hdHRlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLl9kZiA9IHRoaXMuZGF0ZUZvcm1hdHRlcjtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFtwb3N0UHJvY2Vzc1Nlcmllc0RhdGFJdGVtIGRlc2NyaXB0aW9uXVxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEB0b2RvIERlc2NyaXB0aW9uXHJcbiAgICAgKiBAcGFyYW0gZGF0YUl0ZW0gRGF0YSBpdGVtXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5wb3N0UHJvY2Vzc1Nlcmllc0RhdGFJdGVtID0gZnVuY3Rpb24gKGRhdGFJdGVtLCBpbnRlcnZhbCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgLy8gd2UgbmVlZCB0byBkbyB0aGlzIGZvciBhbGwgc2VyaWVzIGRhdGEgaXRlbXMgbm90IG9ubHkgYWRkZWQgcmVjZW50bHksIGFzIGJhc2VJbnRlcnZhbCBtaWdodCBjaGFuZ2VcclxuICAgICAgICB2YXIgaW50ZXJ2YWxJRCA9IFwiXCI7XHJcbiAgICAgICAgaWYgKGludGVydmFsKSB7XHJcbiAgICAgICAgICAgIGludGVydmFsSUQgPSBpbnRlcnZhbC50aW1lVW5pdCArIGludGVydmFsLmNvdW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaW50ZXJ2YWwgPSB0aGlzLm1haW5CYXNlSW50ZXJ2YWw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBzZXJpZXMgPSBkYXRhSXRlbS5jb21wb25lbnQ7XHJcbiAgICAgICAgdmFyIGRhdGFJdGVtc0J5QXhpcyA9IHNlcmllcy5kYXRhSXRlbXNCeUF4aXMuZ2V0S2V5KHRoaXMudWlkKTtcclxuICAgICAgICAkb2JqZWN0LmVhY2goZGF0YUl0ZW0uZGF0ZXMsIGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgdmFyIGRhdGUgPSBkYXRhSXRlbS5nZXREYXRlKGtleSk7XHJcbiAgICAgICAgICAgIHZhciB0aW1lID0gZGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgIHZhciBzdGFydERhdGUgPSAkdGltZS5yb3VuZChuZXcgRGF0ZSh0aW1lKSwgaW50ZXJ2YWwudGltZVVuaXQsIGludGVydmFsLmNvdW50LCBfdGhpcy5fZmlyc3RXZWVrRGF5LCBfdGhpcy5fZGYudXRjKTtcclxuICAgICAgICAgICAgdmFyIHN0YXJ0VGltZSA9IHN0YXJ0RGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgIHZhciBlbmREYXRlID0gJHRpbWUuYWRkKG5ldyBEYXRlKHN0YXJ0VGltZSksIGludGVydmFsLnRpbWVVbml0LCBpbnRlcnZhbC5jb3VudCwgX3RoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgIGRhdGFJdGVtLnNldENhbGN1bGF0ZWRWYWx1ZShrZXksIHN0YXJ0VGltZSwgXCJvcGVuXCIpO1xyXG4gICAgICAgICAgICBkYXRhSXRlbS5zZXRDYWxjdWxhdGVkVmFsdWUoa2V5LCBlbmREYXRlLmdldFRpbWUoKSwgXCJjbG9zZVwiKTtcclxuICAgICAgICAgICAgZGF0YUl0ZW1zQnlBeGlzLnNldEtleShzdGFydFRpbWUgKyBpbnRlcnZhbElELCBkYXRhSXRlbSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb2xsYXBzZXMgZW1wdHkgc3RyZXRjaGVzIG9mIGRhdGUvdGltZSBzY2FsZSBieSBjcmVhdGluZyBbW0F4aXNCcmVha11dXHJcbiAgICAgKiBlbGVtZW50cyBmb3IgdGhlbS5cclxuICAgICAqXHJcbiAgICAgKiBDYW4gYmUgdXNlZCB0byBhdXRvbWF0aWNhbGx5IHJlbW92ZSBzdHJldGhlcyB3aXRob3V0IGRhdGEsIGxpa2Ugd2Vla2VuZHMuXHJcbiAgICAgKlxyXG4gICAgICogTm8sIG5lZWQgdG8gY2FsbCB0aGlzIG1hbnVhbGx5LiBJdCB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgZG9uZSBpZlxyXG4gICAgICogYHNraXBFbXB0eVBlcmlvZHMgPSB0cnVlYC5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5hZGRFbXB0eVVuaXRzQnJlYWtzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHRoaXMuc2tpcEVtcHR5UGVyaW9kcyAmJiAkdHlwZS5pc051bWJlcih0aGlzLm1pbikgJiYgJHR5cGUuaXNOdW1iZXIodGhpcy5tYXgpKSB7XHJcbiAgICAgICAgICAgIHZhciB0aW1lVW5pdCA9IHRoaXMuYmFzZUludGVydmFsLnRpbWVVbml0O1xyXG4gICAgICAgICAgICB2YXIgY291bnQgPSB0aGlzLmJhc2VJbnRlcnZhbC5jb3VudDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2F4aXNCcmVha3MpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F4aXNCcmVha3MuY2xlYXIoKTsgLy8gVE9ETzogd2hhdCBhYm91dCBicmVha3MgYWRkZWQgYnkgdXNlcj9cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgZGF0ZSA9ICR0aW1lLnJvdW5kKG5ldyBEYXRlKHRoaXMubWluKSwgdGltZVVuaXQsIGNvdW50LCB0aGlzLl9maXJzdFdlZWtEYXksIHRoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgIHZhciBheGlzQnJlYWsgPSB2b2lkIDA7XHJcbiAgICAgICAgICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJHRpbWUuYWRkKGRhdGUsIHRpbWVVbml0LCBjb3VudCwgdGhpc18xLl9kZi51dGMpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0VGltZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0VGltZVN0ciA9IHN0YXJ0VGltZS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGhhc0RhdGEgPSAkaXRlci5jb250YWlucyh0aGlzXzEuc2VyaWVzLml0ZXJhdG9yKCksIGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gISFzZXJpZXMuZGF0YUl0ZW1zQnlBeGlzLmdldEtleShfdGhpcy51aWQpLmdldEtleShzdGFydFRpbWVTdHIgKyBzZXJpZXMuY3VycmVudERhdGFTZXRJZCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIC8vIG9wZW4gYnJlYWsgaWYgbm90IHlldCBvcGVuZWRcclxuICAgICAgICAgICAgICAgIGlmICghaGFzRGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghYXhpc0JyZWFrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNCcmVhayA9IHRoaXNfMS5heGlzQnJlYWtzLmNyZWF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBheGlzQnJlYWsuc3RhcnREYXRlID0gbmV3IERhdGUoc3RhcnRUaW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc18xLl9nYXBCcmVha3MgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGNsb3NlIGlmIGFscmVhZHkgb3BlbmVkXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF4aXNCcmVhaykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjbG9zZSBhdCBlbmQgdGltZSBtaW51cyBvbmUgbWlsbGlzZWNvbmRcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0JyZWFrLmVuZERhdGUgPSBuZXcgRGF0ZShzdGFydFRpbWUgLSAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0JyZWFrID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdmFyIHRoaXNfMSA9IHRoaXM7XHJcbiAgICAgICAgICAgIHdoaWxlIChkYXRlLmdldFRpbWUoKSA8IHRoaXMubWF4IC0gdGhpcy5iYXNlRHVyYXRpb24pIHtcclxuICAgICAgICAgICAgICAgIF9sb29wXzEoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgcG9zaXRpb25pbmcgb2YgQXhpcyBicmVha3MgYWZ0ZXIgc29tZXRoaW5nIGNoYW5nZXMuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZml4QXhpc0JyZWFrcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuZml4QXhpc0JyZWFrcy5jYWxsKHRoaXMpO1xyXG4gICAgICAgIHZhciBheGlzQnJlYWtzID0gdGhpcy5fYXhpc0JyZWFrcztcclxuICAgICAgICBpZiAoYXhpc0JyZWFrcykge1xyXG4gICAgICAgICAgICBpZiAoYXhpc0JyZWFrcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBwcm9jZXNzIGJyZWFrc1xyXG4gICAgICAgICAgICAgICAgYXhpc0JyZWFrcy5lYWNoKGZ1bmN0aW9uIChheGlzQnJlYWspIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYnJlYWtHcmlkQ291bnQgPSBNYXRoLmNlaWwoX3RoaXMuX2dyaWRDb3VudCAqIChNYXRoLm1pbihfdGhpcy5lbmQsIGF4aXNCcmVhay5lbmRQb3NpdGlvbikgLSBNYXRoLm1heChfdGhpcy5zdGFydCwgYXhpc0JyZWFrLnN0YXJ0UG9zaXRpb24pKSAvIChfdGhpcy5lbmQgLSBfdGhpcy5zdGFydCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGF4aXNCcmVhay5ncmlkSW50ZXJ2YWwgPSBfdGhpcy5jaG9vc2VJbnRlcnZhbCgwLCBheGlzQnJlYWsuYWRqdXN0ZWRFbmRWYWx1ZSAtIGF4aXNCcmVhay5hZGp1c3RlZFN0YXJ0VmFsdWUsIGJyZWFrR3JpZENvdW50KTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZ3JpZERhdGUgPSAkdGltZS5yb3VuZChuZXcgRGF0ZShheGlzQnJlYWsuYWRqdXN0ZWRTdGFydFZhbHVlKSwgYXhpc0JyZWFrLmdyaWRJbnRlcnZhbC50aW1lVW5pdCwgYXhpc0JyZWFrLmdyaWRJbnRlcnZhbC5jb3VudCwgX3RoaXMuX2ZpcnN0V2Vla0RheSwgX3RoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGdyaWREYXRlLmdldFRpbWUoKSA+IGF4aXNCcmVhay5zdGFydERhdGUuZ2V0VGltZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICR0aW1lLmFkZChncmlkRGF0ZSwgYXhpc0JyZWFrLmdyaWRJbnRlcnZhbC50aW1lVW5pdCwgYXhpc0JyZWFrLmdyaWRJbnRlcnZhbC5jb3VudCwgX3RoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGF4aXNCcmVhay5ncmlkRGF0ZSA9IGdyaWREYXRlO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRGaXJzdFdlZWtEYXkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2RmKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kZi5maXJzdERheU9mV2VlaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIDE7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBbZ2V0R3JpZERhdGUgZGVzY3JpcHRpb25dXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqIEBwYXJhbSBkYXRlICAgICAgICAgICBbZGVzY3JpcHRpb25dXHJcbiAgICAgKiBAcGFyYW0gaW50ZXJ2YWxDb3VudCAgW2Rlc2NyaXB0aW9uXVxyXG4gICAgICogQHJldHVybiBbZGVzY3JpcHRpb25dXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRHcmlkRGF0ZSA9IGZ1bmN0aW9uIChkYXRlLCBpbnRlcnZhbENvdW50KSB7XHJcbiAgICAgICAgdmFyIHRpbWVVbml0ID0gdGhpcy5fZ3JpZEludGVydmFsLnRpbWVVbml0O1xyXG4gICAgICAgIHZhciByZWFsSW50ZXJ2YWxDb3VudCA9IHRoaXMuX2dyaWRJbnRlcnZhbC5jb3VudDtcclxuICAgICAgICAvLyByb3VuZCBkYXRlXHJcbiAgICAgICAgJHRpbWUucm91bmQoZGF0ZSwgdGltZVVuaXQsIDEsIHRoaXMuX2ZpcnN0V2Vla0RheSwgdGhpcy5fZGYudXRjKTtcclxuICAgICAgICB2YXIgcHJldlRpbWVzdGFtcCA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgIHZhciBuZXdEYXRlID0gJHRpbWUuY29weShkYXRlKTtcclxuICAgICAgICAvLyBtb2RpZnkgZGF0ZSBieSBhZGRpbmcgaW50ZXJ2YWxjb3VudFxyXG4gICAgICAgIHZhciB0aW1lc3RhbXAgPSAkdGltZS5hZGQobmV3RGF0ZSwgdGltZVVuaXQsIGludGVydmFsQ291bnQsIHRoaXMuX2RmLnV0YykuZ2V0VGltZSgpO1xyXG4gICAgICAgIC8vIGlmIGl0J3MgYXhpcyBicmVhaywgZ2V0IGZpcnN0IHJvdW5kZWQgZGF0ZSB3aGljaCBpcyBub3QgaW4gYSBicmVha1xyXG4gICAgICAgIHZhciBheGlzQnJlYWsgPSB0aGlzLmlzSW5CcmVhayh0aW1lc3RhbXApO1xyXG4gICAgICAgIGlmIChheGlzQnJlYWsgJiYgYXhpc0JyZWFrLmVuZERhdGUpIHtcclxuICAgICAgICAgICAgbmV3RGF0ZSA9IG5ldyBEYXRlKGF4aXNCcmVhay5lbmREYXRlLmdldFRpbWUoKSk7XHJcbiAgICAgICAgICAgICR0aW1lLnJvdW5kKG5ld0RhdGUsIHRpbWVVbml0LCByZWFsSW50ZXJ2YWxDb3VudCwgdGhpcy5fZmlyc3RXZWVrRGF5LCB0aGlzLl9kZi51dGMpO1xyXG4gICAgICAgICAgICBpZiAobmV3RGF0ZS5nZXRUaW1lKCkgPCBheGlzQnJlYWsuZW5kRGF0ZS5nZXRUaW1lKCkpIHtcclxuICAgICAgICAgICAgICAgICR0aW1lLmFkZChuZXdEYXRlLCB0aW1lVW5pdCwgcmVhbEludGVydmFsQ291bnQsIHRoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGltZXN0YW1wID0gbmV3RGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGdldCBkdXJhdGlvbiBiZXR3ZWVuIGdyaWQgbGluZXMgd2l0aCBicmVhayBkdXJhdGlvbiByZW1vdmVkXHJcbiAgICAgICAgdmFyIGR1cmF0aW9uQnJlYWtzUmVtb3ZlZCA9IHRoaXMuYWRqdXN0RGlmZmVyZW5jZShwcmV2VGltZXN0YW1wLCB0aW1lc3RhbXApO1xyXG4gICAgICAgIC8vIGNhbGN1bGF0ZSBob3cgbWFueSB0aW1lIHVuaXRzIGZpdCB0byB0aGlzIGR1cmF0aW9uXHJcbiAgICAgICAgdmFyIGNvdW50QnJlYWtzUmVtb3ZlZCA9IE1hdGgucm91bmQoZHVyYXRpb25CcmVha3NSZW1vdmVkIC8gJHRpbWUuZ2V0RHVyYXRpb24odGltZVVuaXQpKTtcclxuICAgICAgICAvLyBpZiBsZXNzIHVuaXRzIGZpdCwgYWRkIG9uZSBhbmQgcmVwZWF0XHJcbiAgICAgICAgaWYgKGNvdW50QnJlYWtzUmVtb3ZlZCA8IHJlYWxJbnRlcnZhbENvdW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEdyaWREYXRlKGRhdGUsIGludGVydmFsQ291bnQgKyByZWFsSW50ZXJ2YWxDb3VudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXdEYXRlO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogW2dldEJyZWFrbGVzc0RhdGUgZGVzY3JpcHRpb25dXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqIEBwYXJhbSBheGlzQnJlYWsgIFtkZXNjcmlwdGlvbl1cclxuICAgICAqIEBwYXJhbSB0aW1lVW5pdCAgIFtkZXNjcmlwdGlvbl1cclxuICAgICAqIEBwYXJhbSBjb3VudCAgICAgIFtkZXNjcmlwdGlvbl1cclxuICAgICAqIEByZXR1cm4gW2Rlc2NyaXB0aW9uXVxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZ2V0QnJlYWtsZXNzRGF0ZSA9IGZ1bmN0aW9uIChheGlzQnJlYWssIHRpbWVVbml0LCBjb3VudCkge1xyXG4gICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoYXhpc0JyZWFrLmVuZFZhbHVlKTtcclxuICAgICAgICAkdGltZS5yb3VuZChkYXRlLCB0aW1lVW5pdCwgY291bnQsIHRoaXMuX2ZpcnN0V2Vla0RheSwgdGhpcy5fZGYudXRjKTtcclxuICAgICAgICAkdGltZS5hZGQoZGF0ZSwgdGltZVVuaXQsIGNvdW50LCB0aGlzLl9kZi51dGMpO1xyXG4gICAgICAgIHZhciB0aW1lc3RhbXAgPSBkYXRlLmdldFRpbWUoKTtcclxuICAgICAgICBheGlzQnJlYWsgPSB0aGlzLmlzSW5CcmVhayh0aW1lc3RhbXApO1xyXG4gICAgICAgIGlmIChheGlzQnJlYWspIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnJlYWtsZXNzRGF0ZShheGlzQnJlYWssIHRpbWVVbml0LCBjb3VudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBkYXRlO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogKFJlKXZhbGlkYXRlcyBhbGwgQXhpcyBlbGVtZW50cy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvbiAocmV2aWV3KVxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUudmFsaWRhdGVBeGlzRWxlbWVudHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIodGhpcy5tYXgpICYmICR0eXBlLmlzTnVtYmVyKHRoaXMubWluKSkge1xyXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZVpvb20oKTtcclxuICAgICAgICAgICAgLy8gZmlyc3QgcmVndWxhciBpdGVtc1xyXG4gICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gdGhpcy5fZ3JpZERhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICB2YXIgdGltZVVuaXQgPSB0aGlzLl9ncmlkSW50ZXJ2YWwudGltZVVuaXQ7XHJcbiAgICAgICAgICAgIHZhciBpbnRlcnZhbENvdW50ID0gdGhpcy5fZ3JpZEludGVydmFsLmNvdW50O1xyXG4gICAgICAgICAgICB2YXIgcHJldkdyaWREYXRlID0gJHRpbWUuY29weSh0aGlzLl9ncmlkRGF0ZSk7XHJcbiAgICAgICAgICAgIHZhciBkYXRhSXRlbXNJdGVyYXRvcl8xID0gdGhpcy5fZGF0YUl0ZW1zSXRlcmF0b3I7XHJcbiAgICAgICAgICAgIHRoaXMucmVzZXRJdGVyYXRvcnMoKTtcclxuICAgICAgICAgICAgdmFyIF9sb29wXzIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9IHRoaXNfMi5nZXRHcmlkRGF0ZSgkdGltZS5jb3B5KHByZXZHcmlkRGF0ZSksIGludGVydmFsQ291bnQpO1xyXG4gICAgICAgICAgICAgICAgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW5kRGF0ZSA9ICR0aW1lLmNvcHkoZGF0ZSk7IC8vIHlvdSBtaWdodCB0aGluayBpdCdzIGVhc2llciB0byBhZGQgaW50ZXJ2YWxkdXJhdGlvbiB0byB0aW1lc3RhbXAsIGhvd2V2ZXIgaXQgd29uJ3Qgd29yayBmb3IgbW9udGhzIG9yIHllYXJzIHdoaWNoIGFyZSBub3Qgb2YgdGhlIHNhbWUgbGVuZ3RoXHJcbiAgICAgICAgICAgICAgICBlbmREYXRlID0gJHRpbWUuYWRkKGVuZERhdGUsIHRpbWVVbml0LCBpbnRlcnZhbENvdW50LCB0aGlzXzIuX2RmLnV0Yyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9ybWF0ID0gdGhpc18yLmRhdGVGb3JtYXRzLmdldEtleSh0aW1lVW5pdCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpc18yLm1hcmtVbml0Q2hhbmdlICYmIHByZXZHcmlkRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkdGltZS5jaGVja0NoYW5nZShkYXRlLCBwcmV2R3JpZERhdGUsIHRoaXNfMi5fbmV4dEdyaWRVbml0LCB0aGlzXzIuX2RmLnV0YykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVVbml0ICE9PSBcInllYXJcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0ID0gdGhpc18yLnBlcmlvZENoYW5nZURhdGVGb3JtYXRzLmdldEtleSh0aW1lVW5pdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YXIgdGV4dCA9IHRoaXNfMi5fZGYuZm9ybWF0KGRhdGUsIGZvcm1hdCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGF0YUl0ZW0gPSBkYXRhSXRlbXNJdGVyYXRvcl8xLmZpbmQoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgudGV4dCA9PT0gdGV4dDsgfSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YUl0ZW0uX19kaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtLl9fZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXNfMi5hcHBlbmREYXRhSXRlbShkYXRhSXRlbSk7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5heGlzQnJlYWsgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5kYXRlID0gZGF0ZTtcclxuICAgICAgICAgICAgICAgIGRhdGFJdGVtLmVuZERhdGUgPSBlbmREYXRlO1xyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0udGV4dCA9IHRleHQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzXzIudmFsaWRhdGVEYXRhRWxlbWVudChkYXRhSXRlbSk7XHJcbiAgICAgICAgICAgICAgICBwcmV2R3JpZERhdGUgPSBkYXRlO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB2YXIgdGhpc18yID0gdGhpcztcclxuICAgICAgICAgICAgd2hpbGUgKHRpbWVzdGFtcCA8PSB0aGlzLl9tYXhab29tZWQpIHtcclxuICAgICAgICAgICAgICAgIF9sb29wXzIoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBicmVha3MgbGF0ZXJcclxuICAgICAgICAgICAgdmFyIHJlbmRlcmVyXzEgPSB0aGlzLnJlbmRlcmVyO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fYXhpc0JyZWFrcykge1xyXG4gICAgICAgICAgICAgICAgJGl0ZXIuZWFjaCh0aGlzLl9heGlzQnJlYWtzLml0ZXJhdG9yKCksIGZ1bmN0aW9uIChheGlzQnJlYWspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYXhpc0JyZWFrLmJyZWFrU2l6ZSA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRpbWVVbml0XzEgPSBheGlzQnJlYWsuZ3JpZEludGVydmFsLnRpbWVVbml0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW50ZXJ2YWxDb3VudF8xID0gYXhpc0JyZWFrLmdyaWRJbnRlcnZhbC5jb3VudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gb25seSBhZGQgZ3JpZCBpZiBnYXAgaXMgYmlnZ2VyIHRoZW4gbWluR3JpZERpc3RhbmNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkbWF0aC5nZXREaXN0YW5jZShheGlzQnJlYWsuc3RhcnRQb2ludCwgYXhpc0JyZWFrLmVuZFBvaW50KSA+IHJlbmRlcmVyXzEubWluR3JpZERpc3RhbmNlICogNCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRpbWVzdGFtcF8xID0gYXhpc0JyZWFrLmdyaWREYXRlLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmV2R3JpZERhdGVfMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb3VudCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2xvb3BfMyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9ICR0aW1lLmNvcHkoYXhpc0JyZWFrLmdyaWREYXRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXBfMSA9ICR0aW1lLmFkZChkYXRlLCB0aW1lVW5pdF8xLCBpbnRlcnZhbENvdW50XzEgKiBjb3VudCwgX3RoaXMuX2RmLnV0YykuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVzdGFtcF8xID4gYXhpc0JyZWFrLmFkanVzdGVkU3RhcnRWYWx1ZSAmJiB0aW1lc3RhbXBfMSA8IGF4aXNCcmVhay5hZGp1c3RlZEVuZFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbmREYXRlID0gJHRpbWUuY29weShkYXRlKTsgLy8geW91IG1pZ2h0IHRoaW5rIGl0J3MgZWFzaWVyIHRvIGFkZCBpbnRlcnZhbGR1cmF0aW9uIHRvIHRpbWVzdGFtcCwgaG93ZXZlciBpdCB3b24ndCB3b3JrIGZvciBtb250aHMgb3IgeWVhcnMgd2hpY2ggYXJlIG5vdCBvZiB0aGUgc2FtZSBsZW5ndGhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kRGF0ZSA9ICR0aW1lLmFkZChlbmREYXRlLCB0aW1lVW5pdF8xLCBpbnRlcnZhbENvdW50XzEsIF90aGlzLl9kZi51dGMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZm9ybWF0ID0gX3RoaXMuZGF0ZUZvcm1hdHMuZ2V0S2V5KHRpbWVVbml0XzEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMubWFya1VuaXRDaGFuZ2UgJiYgcHJldkdyaWREYXRlXzEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdGltZS5jaGVja0NoYW5nZShkYXRlLCBwcmV2R3JpZERhdGVfMSwgX3RoaXMuX25leHRHcmlkVW5pdCwgX3RoaXMuX2RmLnV0YykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGltZVVuaXRfMSAhPT0gXCJ5ZWFyXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0ID0gX3RoaXMucGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHMuZ2V0S2V5KHRpbWVVbml0XzEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGV4dF8xID0gX3RoaXMuX2RmLmZvcm1hdChkYXRlLCBmb3JtYXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YUl0ZW0gPSBkYXRhSXRlbXNJdGVyYXRvcl8xLmZpbmQoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgudGV4dCA9PT0gdGV4dF8xOyB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFJdGVtLl9fZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtLl9fZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMucHJvY2Vzc0RhdGFJdGVtKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYXBwZW5kRGF0YUl0ZW0oZGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbS5heGlzQnJlYWsgPSBheGlzQnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNCcmVhay5kYXRhSXRlbXMubW92ZVZhbHVlKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW0uZGF0ZSA9IGRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtLmVuZERhdGUgPSBlbmREYXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbS50ZXh0ID0gdGV4dF8xO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2R3JpZERhdGVfMSA9IGRhdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnZhbGlkYXRlRGF0YUVsZW1lbnQoZGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAodGltZXN0YW1wXzEgPD0gYXhpc0JyZWFrLmFkanVzdGVkTWF4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2xvb3BfMygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBWYWxpZGF0ZXMgQXhpcyBkYXRhIGl0ZW0uXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIGRhdGFJdGVtIERhdGEgaXRlbVxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUudmFsaWRhdGVEYXRhRWxlbWVudCA9IGZ1bmN0aW9uIChkYXRhSXRlbSkge1xyXG4gICAgICAgIGRhdGFJdGVtLml0ZW1JbmRleCA9IHRoaXMuX2F4aXNJdGVtQ291bnQ7XHJcbiAgICAgICAgdGhpcy5fYXhpc0l0ZW1Db3VudCsrO1xyXG4gICAgICAgIGlmICgkdHlwZS5pc051bWJlcih0aGlzLm1heCkgJiYgJHR5cGUuaXNOdW1iZXIodGhpcy5taW4pKSB7XHJcbiAgICAgICAgICAgIHZhciByZW5kZXJlciA9IHRoaXMucmVuZGVyZXI7XHJcbiAgICAgICAgICAgIHZhciB0aW1lc3RhbXAgPSBkYXRhSXRlbS52YWx1ZTtcclxuICAgICAgICAgICAgdmFyIGVuZFRpbWVzdGFtcCA9IGRhdGFJdGVtLmVuZFZhbHVlO1xyXG4gICAgICAgICAgICBpZiAoISR0eXBlLmlzTnVtYmVyKGVuZFRpbWVzdGFtcCkpIHtcclxuICAgICAgICAgICAgICAgIGVuZFRpbWVzdGFtcCA9IHRpbWVzdGFtcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLnZhbHVlVG9Qb3NpdGlvbih0aW1lc3RhbXApO1xyXG4gICAgICAgICAgICB2YXIgZW5kUG9zaXRpb24gPSB0aGlzLnZhbHVlVG9Qb3NpdGlvbihlbmRUaW1lc3RhbXApO1xyXG4gICAgICAgICAgICB2YXIgZmlsbEVuZFBvc2l0aW9uID0gZW5kUG9zaXRpb247XHJcbiAgICAgICAgICAgIGlmICghZGF0YUl0ZW0uaXNSYW5nZSAmJiB0aGlzLl9ncmlkSW50ZXJ2YWwuY291bnQgPiB0aGlzLmJhc2VJbnRlcnZhbC5jb3VudCkge1xyXG4gICAgICAgICAgICAgICAgZW5kUG9zaXRpb24gPSBwb3NpdGlvbiArIChlbmRQb3NpdGlvbiAtIHBvc2l0aW9uKSAvICh0aGlzLl9ncmlkSW50ZXJ2YWwuY291bnQgLyB0aGlzLmJhc2VJbnRlcnZhbC5jb3VudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGF0YUl0ZW0ucG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgICAgICAgICAgdmFyIHRpY2sgPSBkYXRhSXRlbS50aWNrO1xyXG4gICAgICAgICAgICBpZiAodGljayAmJiAhdGljay5kaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyZXIudXBkYXRlVGlja0VsZW1lbnQodGljaywgcG9zaXRpb24sIGVuZFBvc2l0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgZ3JpZCA9IGRhdGFJdGVtLmdyaWQ7XHJcbiAgICAgICAgICAgIGlmIChncmlkICYmICFncmlkLmRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJlci51cGRhdGVHcmlkRWxlbWVudChncmlkLCBwb3NpdGlvbiwgZW5kUG9zaXRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBmaWxsID0gZGF0YUl0ZW0uYXhpc0ZpbGw7XHJcbiAgICAgICAgICAgIGlmIChmaWxsICYmICFmaWxsLmRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJlci51cGRhdGVGaWxsRWxlbWVudChmaWxsLCBwb3NpdGlvbiwgZmlsbEVuZFBvc2l0aW9uKTtcclxuICAgICAgICAgICAgICAgIGlmICghZGF0YUl0ZW0uaXNSYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsbFJ1bGUoZGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBtYXNrID0gZGF0YUl0ZW0ubWFzaztcclxuICAgICAgICAgICAgaWYgKG1hc2spIHtcclxuICAgICAgICAgICAgICAgIHJlbmRlcmVyLnVwZGF0ZUZpbGxFbGVtZW50KG1hc2ssIHBvc2l0aW9uLCBlbmRQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGRhdGFJdGVtLmJ1bGxldCkge1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyZXIudXBkYXRlQnVsbGV0KGRhdGFJdGVtLmJ1bGxldCwgcG9zaXRpb24sIGVuZFBvc2l0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgbGFiZWwgPSBkYXRhSXRlbS5sYWJlbDtcclxuICAgICAgICAgICAgaWYgKGxhYmVsICYmICFsYWJlbC5kaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGxvY2F0aW9uXzEgPSBsYWJlbC5sb2NhdGlvbjtcclxuICAgICAgICAgICAgICAgIGlmIChsb2NhdGlvbl8xID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fZ3JpZEludGVydmFsLmNvdW50ID09IDEgJiYgdGhpcy5fZ3JpZEludGVydmFsLnRpbWVVbml0ICE9IFwid2Vla1wiICYmICFkYXRhSXRlbS5pc1JhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uXzEgPSAwLjU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbl8xID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZW5kZXJlci51cGRhdGVMYWJlbEVsZW1lbnQobGFiZWwsIHBvc2l0aW9uLCBlbmRQb3NpdGlvbiwgbG9jYXRpb25fMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERhdGVBeGlzLnByb3RvdHlwZSwgXCJiYXNlRHVyYXRpb25cIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgZHVyYXRpb24gaW4gbWlsbGlzZWNvbmRzIG9mIHRoZSBgYmFzZUludGVydmFsYC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEByZXR1cm4gRHVyYXRpb24gKG1zKVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJHRpbWUuZ2V0RHVyYXRpb24odGhpcy5iYXNlSW50ZXJ2YWwudGltZVVuaXQsIHRoaXMuYmFzZUludGVydmFsLmNvdW50KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIC8qKlxyXG4gICAgICogQWRqdXN0cyBtaW4vbWF4IHZhbHVlcy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzLlxyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb24gKHJldmlldylcclxuICAgICAqIEBwYXJhbSBtaW4gIE1pbiB0aW1lc3RhbXBcclxuICAgICAqIEBwYXJhbSBtYXggIE1heCB0aW1lc3RhbXBcclxuICAgICAqIEByZXR1cm4gQWRqdXN0ZWQgbWluL21heCBzdGVwXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5hZGp1c3RNaW5NYXggPSBmdW5jdGlvbiAobWluLCBtYXgpIHtcclxuICAgICAgICByZXR1cm4geyBtaW46IG1pbiwgbWF4OiBtYXgsIHN0ZXA6IHRoaXMuYmFzZUR1cmF0aW9uIH07XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBBZGp1c3RzIHRoZSBtaW5pbXVtIHRpbWVzdGFtcCBhcyBwZXIgY2VsbCBzdGFydCBsb2NhdGlvbi5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUgIFZhbHVlXHJcbiAgICAgKiBAcmV0dXJuIEFkanVzdGVkIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5maXhNaW4gPSBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAvLyBsaWtlIHRoaXMgYmVjYXVzZSBtb250aHMgYXJlIG5vdCBlcXVhbFxyXG4gICAgICAgIHZhciBpbnRlcnZhbCA9IHRoaXMuYmFzZUludGVydmFsO1xyXG4gICAgICAgIHZhciBzdGFydFRpbWUgPSAkdGltZS5yb3VuZChuZXcgRGF0ZSh2YWx1ZSksIGludGVydmFsLnRpbWVVbml0LCBpbnRlcnZhbC5jb3VudCwgdGhpcy5fZmlyc3RXZWVrRGF5LCB0aGlzLl9kZi51dGMpLmdldFRpbWUoKTtcclxuICAgICAgICB2YXIgZW5kVGltZSA9ICR0aW1lLmFkZChuZXcgRGF0ZShzdGFydFRpbWUpLCBpbnRlcnZhbC50aW1lVW5pdCwgaW50ZXJ2YWwuY291bnQsIHRoaXMuX2RmLnV0YykuZ2V0VGltZSgpO1xyXG4gICAgICAgIHJldHVybiBzdGFydFRpbWUgKyAoZW5kVGltZSAtIHN0YXJ0VGltZSkgKiB0aGlzLnN0YXJ0TG9jYXRpb247XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBBZGp1c3RzIHRoZSBtYXhpbXVtIHRpbWVzdGFtcCBhcyBwZXIgY2VsbCBzdGFydCBsb2NhdGlvbi5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUgIFZhbHVlXHJcbiAgICAgKiBAcmV0dXJuIEFkanVzdGVkIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5maXhNYXggPSBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAvLyBsaWtlIHRoaXMgYmVjYXVzZSBtb250aHMgYXJlIG5vdCBlcXVhbFxyXG4gICAgICAgIHZhciBpbnRlcnZhbCA9IHRoaXMuYmFzZUludGVydmFsO1xyXG4gICAgICAgIHZhciBzdGFydFRpbWUgPSAkdGltZS5yb3VuZChuZXcgRGF0ZSh2YWx1ZSksIGludGVydmFsLnRpbWVVbml0LCBpbnRlcnZhbC5jb3VudCwgdGhpcy5fZmlyc3RXZWVrRGF5LCB0aGlzLl9kZi51dGMpLmdldFRpbWUoKTtcclxuICAgICAgICB2YXIgZW5kVGltZSA9ICR0aW1lLmFkZChuZXcgRGF0ZShzdGFydFRpbWUpLCBpbnRlcnZhbC50aW1lVW5pdCwgaW50ZXJ2YWwuY291bnQsIHRoaXMuX2RmLnV0YykuZ2V0VGltZSgpO1xyXG4gICAgICAgIHJldHVybiBzdGFydFRpbWUgKyAoZW5kVGltZSAtIHN0YXJ0VGltZSkgKiB0aGlzLmVuZExvY2F0aW9uO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogW2Nob29zZUludGVydmFsIGRlc2NyaXB0aW9uXVxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3MuXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICogQHBhcmFtIGluZGV4ICAgICAgW2Rlc2NyaXB0aW9uXVxyXG4gICAgICogQHBhcmFtIGR1cmF0aW9uICAgW2Rlc2NyaXB0aW9uXVxyXG4gICAgICogQHBhcmFtIGdyaWRDb3VudCAgW2Rlc2NyaXB0aW9uXVxyXG4gICAgICogQHJldHVybiBbZGVzY3JpcHRpb25dXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5jaG9vc2VJbnRlcnZhbCA9IGZ1bmN0aW9uIChpbmRleCwgZHVyYXRpb24sIGdyaWRDb3VudCwgaW50ZXJ2YWxzKSB7XHJcbiAgICAgICAgaWYgKCFpbnRlcnZhbHMpIHtcclxuICAgICAgICAgICAgaW50ZXJ2YWxzID0gdGhpcy5ncmlkSW50ZXJ2YWxzO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgZ3JpZEludGVydmFsID0gaW50ZXJ2YWxzLmdldEluZGV4KGluZGV4KTtcclxuICAgICAgICB2YXIgaW50ZXJ2YWxEdXJhdGlvbiA9ICR0aW1lLmdldER1cmF0aW9uKGdyaWRJbnRlcnZhbC50aW1lVW5pdCwgZ3JpZEludGVydmFsLmNvdW50KTtcclxuICAgICAgICB2YXIgbGFzdEluZGV4ID0gaW50ZXJ2YWxzLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgaWYgKGluZGV4ID49IGxhc3RJbmRleCkge1xyXG4gICAgICAgICAgICByZXR1cm4gX19hc3NpZ24oe30sIGludGVydmFscy5nZXRJbmRleChsYXN0SW5kZXgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGNvdW50ID0gTWF0aC5jZWlsKGR1cmF0aW9uIC8gaW50ZXJ2YWxEdXJhdGlvbik7XHJcbiAgICAgICAgaWYgKGR1cmF0aW9uIDwgaW50ZXJ2YWxEdXJhdGlvbiAmJiBpbmRleCA+IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCBpbnRlcnZhbHMuZ2V0SW5kZXgoaW5kZXggLSAxKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjb3VudCA8PSBncmlkQ291bnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIF9fYXNzaWduKHt9LCBpbnRlcnZhbHMuZ2V0SW5kZXgoaW5kZXgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCArIDEgPCBpbnRlcnZhbHMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaG9vc2VJbnRlcnZhbChpbmRleCArIDEsIGR1cmF0aW9uLCBncmlkQ291bnQsIGludGVydmFscyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gX19hc3NpZ24oe30sIGludGVydmFscy5nZXRJbmRleChpbmRleCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogRm9ybWF0cyB0aGUgdmFsdWUgYWNjb3JkaW5nIHRvIGF4aXMnIG93biBbW0RhdGVGb3JtYXR0ZXJdXS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUgIFNvdXJjZSB2YWx1ZVxyXG4gICAgICogQHJldHVybiBGb3JtYXR0ZWQgdmFsdWVcclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmZvcm1hdExhYmVsID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RmLmZvcm1hdCh2YWx1ZSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyBhIERhdGUgdG8gYW4gYXNib2x1dGUgcGl4ZWwgcG9zaXRpb24gd2l0aGluIEF4aXMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGRhdGUgIERhdGVcclxuICAgICAqIEByZXR1cm4gUG9zaXRpb24gKHB4KVxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZGF0ZVRvUG9zaXRpb24gPSBmdW5jdGlvbiAoZGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlVG9Qb3NpdGlvbihkYXRlLmdldFRpbWUoKSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyBhIG51bWVyaWMgdGltZXN0YW1wIG9yIGEgYERhdGVgIHRvIGEgcmVsYXRpdmUgcG9zaXRpb24gb24gYXhpcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZGF0ZSAgRGF0ZSBvciBhIHRpbWVzdGFtcFxyXG4gICAgICogQHJldHVybiBSZWxhdGl2ZSBwb3NpdGlvblxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuYW55VG9Qb3NpdGlvbiA9IGZ1bmN0aW9uIChkYXRlKSB7XHJcbiAgICAgICAgaWYgKGRhdGUgaW5zdGFuY2VvZiBEYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGVUb1Bvc2l0aW9uKGRhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVUb1Bvc2l0aW9uKGRhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIGRhdGUgdG8gb3JpZW50YXRpb24gcG9pbnQgKHgsIHksIGFuZ2xlKSBvbiBheGlzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGRhdGUgRGF0ZVxyXG4gICAgICogQHJldHVybiBJT3JpZW50YXRpb25Qb2ludFxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZGF0ZVRvUG9pbnQgPSBmdW5jdGlvbiAoZGF0ZSkge1xyXG4gICAgICAgIHZhciBwb3NpdGlvbiA9IHRoaXMuZGF0ZVRvUG9zaXRpb24oZGF0ZSk7XHJcbiAgICAgICAgdmFyIHBvaW50ID0gdGhpcy5yZW5kZXJlci5wb3NpdGlvblRvUG9pbnQocG9zaXRpb24pO1xyXG4gICAgICAgIHZhciBhbmdsZSA9IHRoaXMucmVuZGVyZXIucG9zaXRpb25Ub0FuZ2xlKHBvc2l0aW9uKTtcclxuICAgICAgICByZXR1cm4geyB4OiBwb2ludC54LCB5OiBwb2ludC55LCBhbmdsZTogYW5nbGUgfTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIGEgbnVtZXJpYyB2YWx1ZSB0byBvcmllbnRhdGlvbiAoeCwgeSwgYW5nbGUpIHBvaW50IG9uIGF4aXNcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUgIFZhbHVlXHJcbiAgICAgKiBAcmV0dXJuIE9yaWVudGF0aW9uIHBvaW50XHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5hbnlUb1BvaW50ID0gZnVuY3Rpb24gKGRhdGUpIHtcclxuICAgICAgICBpZiAoZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZVRvUG9pbnQoZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy52YWx1ZVRvUG9pbnQoZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ29udmVydHMgcGl4ZWwgcG9zaXRpb24gd2l0aGluIEF4aXMgdG8gYSBjb3JyZXNwb25kaW5nIERhdGUuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICBQb3NpdGlvbiAocHgpXHJcbiAgICAgKiBAcmV0dXJuIERhdGVcclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLnBvc2l0aW9uVG9EYXRlID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMucG9zaXRpb25Ub1ZhbHVlKHBvc2l0aW9uKSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSByZWxhdGl2ZSBwb3NpdGlvbiBvbiBheGlzIGZvciBzZXJpZXMnIGRhdGEgaXRlbSdzIHZhbHVlLlxyXG4gICAgICpcclxuICAgICAqIEBzaW5jZSA0LjUuMTRcclxuICAgICAqIEBwYXJhbSAgZGF0YUl0ZW0gIERhdGEgaXRlbVxyXG4gICAgICogQHBhcmFtICBrZXkgICAgICAgRGF0YSBmaWVsZCB0byBnZXQgdmFsdWUgZnJvbVxyXG4gICAgICogQHBhcmFtICBsb2NhdGlvbiAgTG9jYXRpb24gKDAtMSlcclxuICAgICAqIEByZXR1cm4gICAgICAgICAgIFJlbGF0aXZlIHBvc2l0aW9uXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRQb3NpdGlvblggPSBmdW5jdGlvbiAoZGF0YUl0ZW0sIGtleSwgbG9jYXRpb24sIHN0YWNrS2V5LCByYW5nZSkge1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZ2V0VGltZUJ5TG9jYXRpb24oZGF0YUl0ZW0sIGtleSwgbG9jYXRpb24pO1xyXG4gICAgICAgIC8vbGV0IHN0YWNrOiBudW1iZXIgPSBkYXRhSXRlbS5nZXRWYWx1ZShcInZhbHVlWFwiLCBcInN0YWNrXCIpO1xyXG4gICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIodmFsdWUpKSB7XHJcbiAgICAgICAgICAgIHZhbHVlID0gdGhpcy5iYXNlVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBwb3NpdGlvbiA9IHRoaXMudmFsdWVUb1Bvc2l0aW9uKHZhbHVlKTtcclxuICAgICAgICBpZiAocmFuZ2UpIHtcclxuICAgICAgICAgICAgcG9zaXRpb24gPSAkbWF0aC5maXRUb1JhbmdlKHBvc2l0aW9uLCByYW5nZS5zdGFydCwgcmFuZ2UuZW5kKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyByZWxhdGl2ZSBwb3NpdGlvbiBvbiBheGlzIGZvciBzZXJpZXMnIGRhdGEgaXRlbSdzIHZhbHVlLlxyXG4gICAgICpcclxuICAgICAqIEBzaW5jZSA0LjUuMTRcclxuICAgICAqIEBwYXJhbSAgZGF0YUl0ZW0gIERhdGEgaXRlbVxyXG4gICAgICogQHBhcmFtICBrZXkgICAgICAgRGF0YSBmaWVsZCB0byBnZXQgdmFsdWUgZnJvbVxyXG4gICAgICogQHBhcmFtICBsb2NhdGlvbiAgTG9jYXRpb24gKDAtMSlcclxuICAgICAqIEByZXR1cm4gICAgICAgICAgIFJlbGF0aXZlIHBvc2l0aW9uXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRQb3NpdGlvblkgPSBmdW5jdGlvbiAoZGF0YUl0ZW0sIGtleSwgbG9jYXRpb24sIHN0YWNrS2V5LCByYW5nZSkge1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZ2V0VGltZUJ5TG9jYXRpb24oZGF0YUl0ZW0sIGtleSwgbG9jYXRpb24pO1xyXG4gICAgICAgIHZhciBzdGFjayA9IGRhdGFJdGVtLmdldFZhbHVlKFwidmFsdWVYXCIsIFwic3RhY2tcIik7XHJcbiAgICAgICAgaWYgKCEkdHlwZS5pc051bWJlcih2YWx1ZSkpIHtcclxuICAgICAgICAgICAgdmFsdWUgPSB0aGlzLmJhc2VWYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gdGhpcy52YWx1ZVRvUG9zaXRpb24odmFsdWUgKyBzdGFjayk7XHJcbiAgICAgICAgaWYgKHJhbmdlKSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uID0gJG1hdGguZml0VG9SYW5nZShwb3NpdGlvbiwgcmFuZ2Uuc3RhcnQsIHJhbmdlLmVuZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwb3NpdGlvbjtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gYW5nbGUgZm9yIHNlcmllcyBkYXRhIGl0ZW0uXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb24gKHJldmlldylcclxuICAgICAqIEBwYXJhbSBkYXRhSXRlbSAgRGF0YSBpdGVtXHJcbiAgICAgKiBAcGFyYW0ga2V5ICAgICAgIERhdGEgZmllbGQgdG8gZ2V0IHZhbHVlIGZyb21cclxuICAgICAqIEBwYXJhbSBsb2NhdGlvbiAgTG9jYXRpb24gKDAtMSlcclxuICAgICAqIEBwYXJhbSBzdGFja0tleSAgU3RhY2sgSURcclxuICAgICAqIEBwYXJhbSByYW5nZSBSYW5nZSB0byBmaXQgaW5cclxuICAgICAqIEByZXR1cm4gQW5nbGVcclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmdldEFuZ2xlID0gZnVuY3Rpb24gKGRhdGFJdGVtLCBrZXksIGxvY2F0aW9uLCBzdGFja0tleSwgcmFuZ2UpIHtcclxuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLmdldFRpbWVCeUxvY2F0aW9uKGRhdGFJdGVtLCBrZXksIGxvY2F0aW9uKTtcclxuICAgICAgICB2YXIgc3RhY2sgPSBkYXRhSXRlbS5nZXRWYWx1ZShzdGFja0tleSwgXCJzdGFja1wiKTtcclxuICAgICAgICBpZiAoISR0eXBlLmlzTnVtYmVyKHZhbHVlKSkge1xyXG4gICAgICAgICAgICB2YWx1ZSA9IHRoaXMuYmFzZVZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLnZhbHVlVG9Qb3NpdGlvbih2YWx1ZSArIHN0YWNrKTtcclxuICAgICAgICBpZiAocmFuZ2UpIHtcclxuICAgICAgICAgICAgcG9zaXRpb24gPSAkbWF0aC5maXRUb1JhbmdlKHBvc2l0aW9uLCByYW5nZS5zdGFydCwgcmFuZ2UuZW5kKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zaXRpb25Ub0FuZ2xlKHBvc2l0aW9uKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFtnZXRUaW1lQnlMb2NhdGlvbiBkZXNjcmlwdGlvbl1cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICogQHBhcmFtIGRhdGFJdGVtICBbZGVzY3JpcHRpb25dXHJcbiAgICAgKiBAcGFyYW0ga2V5ICAgICAgIFtkZXNjcmlwdGlvbl1cclxuICAgICAqIEBwYXJhbSBsb2NhdGlvbiAgW2Rlc2NyaXB0aW9uXVxyXG4gICAgICogQHJldHVybiBbZGVzY3JpcHRpb25dXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRUaW1lQnlMb2NhdGlvbiA9IGZ1bmN0aW9uIChkYXRhSXRlbSwga2V5LCBsb2NhdGlvbikge1xyXG4gICAgICAgIGlmICghJHR5cGUuaGFzVmFsdWUoa2V5KSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIobG9jYXRpb24pKSB7XHJcbiAgICAgICAgICAgIGxvY2F0aW9uID0gZGF0YUl0ZW0ud29ya2luZ0xvY2F0aW9uc1trZXldO1xyXG4gICAgICAgICAgICBpZiAoISR0eXBlLmlzTnVtYmVyKGxvY2F0aW9uKSkge1xyXG4gICAgICAgICAgICAgICAgbG9jYXRpb24gPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBzdGFydFRpbWUgPSBkYXRhSXRlbS52YWx1ZXNba2V5XVtcIm9wZW5cIl07XHJcbiAgICAgICAgdmFyIGVuZFRpbWUgPSBkYXRhSXRlbS52YWx1ZXNba2V5XVtcImNsb3NlXCJdO1xyXG4gICAgICAgIHZhciB3b3JraW5nVmFsdWUgPSBkYXRhSXRlbS52YWx1ZXNba2V5XS53b3JraW5nVmFsdWU7XHJcbiAgICAgICAgdmFyIHZhbHVlID0gZGF0YUl0ZW0udmFsdWVzW2tleV0udmFsdWU7XHJcbiAgICAgICAgdmFyIGRpZmZlcmVuY2UgPSB2YWx1ZSAtIHdvcmtpbmdWYWx1ZTtcclxuICAgICAgICBzdGFydFRpbWUgLT0gZGlmZmVyZW5jZTtcclxuICAgICAgICBlbmRUaW1lIC09IGRpZmZlcmVuY2U7XHJcbiAgICAgICAgaWYgKCR0eXBlLmlzTnVtYmVyKHN0YXJ0VGltZSkgJiYgJHR5cGUuaXNOdW1iZXIoZW5kVGltZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHN0YXJ0VGltZSArIChlbmRUaW1lIC0gc3RhcnRUaW1lKSAqIGxvY2F0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFByb2Nlc3NlcyBhIHJlbGF0ZWQgc2VyaWVzJyBkYXRhIGl0ZW0uXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqIEBwYXJhbSBkYXRhSXRlbSAgRGF0YSBpdGVtXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5wcm9jZXNzU2VyaWVzRGF0YUl0ZW0gPSBmdW5jdGlvbiAoZGF0YUl0ZW0sIGF4aXNMZXR0ZXIpIHtcclxuICAgICAgICB2YXIgc2VyaWVzID0gZGF0YUl0ZW0uY29tcG9uZW50O1xyXG4gICAgICAgIHZhciB0aW1lO1xyXG4gICAgICAgIHZhciBkYXRlID0gZGF0YUl0ZW1bXCJkYXRlXCIgKyBheGlzTGV0dGVyXTtcclxuICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIodGhpcy50aW1lem9uZU9mZnNldCkpIHtcclxuICAgICAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgKGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHRoaXMudGltZXpvbmVPZmZzZXQpICogNjAwMDApO1xyXG4gICAgICAgICAgICBkYXRhSXRlbS5zZXRWYWx1ZShcImRhdGVcIiArIGF4aXNMZXR0ZXIsIGRhdGUuZ2V0VGltZSgpLCAwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGRhdGUpIHtcclxuICAgICAgICAgICAgdGltZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgb3BlbkRhdGUgPSBkYXRhSXRlbVtcIm9wZW5EYXRlXCIgKyBheGlzTGV0dGVyXTtcclxuICAgICAgICB2YXIgcHJldlNlcmllc1RpbWUgPSB0aGlzLl9wcmV2U2VyaWVzVGltZVtzZXJpZXMudWlkXTtcclxuICAgICAgICB2YXIgb3BlblRpbWU7XHJcbiAgICAgICAgaWYgKG9wZW5EYXRlKSB7XHJcbiAgICAgICAgICAgIG9wZW5UaW1lID0gb3BlbkRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIob3BlblRpbWUpKSB7XHJcbiAgICAgICAgICAgIHZhciBkaWZmZXJlbmNlID0gTWF0aC5hYnModGltZSAtIG9wZW5UaW1lKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX21pbkRpZmZlcmVuY2Vbc2VyaWVzLnVpZF0gPiBkaWZmZXJlbmNlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9taW5EaWZmZXJlbmNlW3Nlcmllcy51aWRdID0gZGlmZmVyZW5jZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgZGlmZmVyZWNlID0gdGltZSAtIHByZXZTZXJpZXNUaW1lO1xyXG4gICAgICAgIGlmIChkaWZmZXJlY2UgPiAwKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9taW5EaWZmZXJlbmNlW3Nlcmllcy51aWRdID4gZGlmZmVyZWNlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9taW5EaWZmZXJlbmNlW3Nlcmllcy51aWRdID0gZGlmZmVyZWNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3ByZXZTZXJpZXNUaW1lW3Nlcmllcy51aWRdID0gdGltZTtcclxuICAgICAgICBpZiAoc2VyaWVzLl9iYXNlSW50ZXJ2YWxbdGhpcy51aWRdKSB7XHJcbiAgICAgICAgICAgIHRoaXMucG9zdFByb2Nlc3NTZXJpZXNEYXRhSXRlbShkYXRhSXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogW3VwZGF0ZUF4aXNCeVNlcmllcyBkZXNjcmlwdGlvbl1cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUudXBkYXRlQXhpc0J5U2VyaWVzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudXBkYXRlQXhpc0J5U2VyaWVzLmNhbGwodGhpcyk7XHJcbiAgICAgICAgdmFyIGJhc2VJbnRlcnZhbCA9IHRoaXMuY2hvb3NlSW50ZXJ2YWwoMCwgdGhpcy5taW5EaWZmZXJlbmNlLCAxKTtcclxuICAgICAgICAvLyBoYW5kbGUgc2hvcnQgbW9udGhzXHJcbiAgICAgICAgaWYgKHRoaXMubWluRGlmZmVyZW5jZSA+PSAkdGltZS5nZXREdXJhdGlvbihcImRheVwiLCAyNykgJiYgYmFzZUludGVydmFsLnRpbWVVbml0ID09IFwid2Vla1wiKSB7XHJcbiAgICAgICAgICAgIGJhc2VJbnRlcnZhbC50aW1lVW5pdCA9IFwibW9udGhcIjtcclxuICAgICAgICAgICAgYmFzZUludGVydmFsLmNvdW50ID0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGJhc2VJbnRlcnZhbC50aW1lVW5pdCA9PSBcIm1vbnRoXCIpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMubWluRGlmZmVyZW5jZSA+PSAkdGltZS5nZXREdXJhdGlvbihcImRheVwiLCAyOSAqIDIpICYmIGJhc2VJbnRlcnZhbC5jb3VudCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBiYXNlSW50ZXJ2YWwuY291bnQgPSAyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm1pbkRpZmZlcmVuY2UgPj0gJHRpbWUuZ2V0RHVyYXRpb24oXCJkYXlcIiwgMjkgKiAzKSAmJiBiYXNlSW50ZXJ2YWwuY291bnQgPT0gMikge1xyXG4gICAgICAgICAgICAgICAgYmFzZUludGVydmFsLmNvdW50ID0gMztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5taW5EaWZmZXJlbmNlID49ICR0aW1lLmdldER1cmF0aW9uKFwiZGF5XCIsIDI5ICogNikgJiYgYmFzZUludGVydmFsLmNvdW50ID09IDUpIHtcclxuICAgICAgICAgICAgICAgIGJhc2VJbnRlcnZhbC5jb3VudCA9IDY7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaGFuZGxlIGRheWxpZ2h0IHNhdmluZ1xyXG4gICAgICAgIGlmICh0aGlzLm1pbkRpZmZlcmVuY2UgPj0gJHRpbWUuZ2V0RHVyYXRpb24oXCJob3VyXCIsIDIzKSAmJiBiYXNlSW50ZXJ2YWwudGltZVVuaXQgPT0gXCJob3VyXCIpIHtcclxuICAgICAgICAgICAgYmFzZUludGVydmFsLnRpbWVVbml0ID0gXCJkYXlcIjtcclxuICAgICAgICAgICAgYmFzZUludGVydmFsLmNvdW50ID0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMubWluRGlmZmVyZW5jZSA+PSAkdGltZS5nZXREdXJhdGlvbihcIndlZWtcIiwgMSkgLSAkdGltZS5nZXREdXJhdGlvbihcImhvdXJcIiwgMSkgJiYgYmFzZUludGVydmFsLnRpbWVVbml0ID09IFwiZGF5XCIpIHtcclxuICAgICAgICAgICAgYmFzZUludGVydmFsLnRpbWVVbml0ID0gXCJ3ZWVrXCI7XHJcbiAgICAgICAgICAgIGJhc2VJbnRlcnZhbC5jb3VudCA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm1pbkRpZmZlcmVuY2UgPj0gJHRpbWUuZ2V0RHVyYXRpb24oXCJ5ZWFyXCIsIDEpIC0gJHRpbWUuZ2V0RHVyYXRpb24oXCJkYXlcIiwgMS4wMSkgJiYgYmFzZUludGVydmFsLnRpbWVVbml0ID09IFwibW9udGhcIikge1xyXG4gICAgICAgICAgICBiYXNlSW50ZXJ2YWwudGltZVVuaXQgPSBcInllYXJcIjtcclxuICAgICAgICAgICAgYmFzZUludGVydmFsLmNvdW50ID0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fYmFzZUludGVydmFsUmVhbCA9IGJhc2VJbnRlcnZhbDtcclxuICAgICAgICB0aGlzLl9tYWluQmFzZUludGVydmFsID0gYmFzZUludGVydmFsO1xyXG4gICAgICAgIC8vIG5vIG5lZWQgdG8gaW52YWxpZGF0ZVxyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpcy5wcm90b3R5cGUsIFwiYmFzZUludGVydmFsXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEJhc2UgaW50ZXJ2YWxcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2dyb3VwSW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9ncm91cEludGVydmFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuX2Jhc2VJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Jhc2VJbnRlcnZhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9iYXNlSW50ZXJ2YWxSZWFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIGJhc2UgaW50ZXJ2YWwgKGdyYW51bGFyaXR5KSBvZiBkYXRhLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVXNlZCB0byBpbmRpY2F0ZSB3aGF0IGFyZSB0aGUgYmFzZSB1bml0cyBvZiB5b3VyIGRhdGEuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBGb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgYSBkYXRhIHNldCB0aGF0IGhhcyBhIGRhdGEgcG9pbnQgZXZlcnkgNSBtaW51dGVzLFxyXG4gICAgICAgICAqIHlvdSBtYXkgd2FudCB0byBzZXQgdGhpcyB0byBgeyB0aW1lVW5pdDogXCJtaW51dGVcIiwgY291bnQ6IDUgfWAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBJZiBub3Qgc2V0LCB0aGUgQXhpcyB3aWxsIHRyeSB0byBkZXRlcm1pbmUgdGhlIHNldHRpbmcgYnkgaXRzIG93biwgbG9va2luZ1xyXG4gICAgICAgICAqIGF0IGFjdHVhbCBkYXRhLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRm9yIGJlc3QgcmVzdWx0cywgdHJ5IHRvIGZvbGxvdyB0aGVzZSB2YWx1ZXMgZm9yIGBjb3VudGA6XHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBXaGVuIHVuaXQgaXMgXCJtb250aFwiLCB1c2UgMTIgLyBjb3VudCA9IHJvdW5kIG51bWJlclxyXG4gICAgICAgICAqIFdoZW4gdW5pdCBpcyBcImhvdXJcIiwgdXNlIDI0IC8gY291bnQgPSByb3VuZCBudW1iZXJcclxuICAgICAgICAgKiBXaGVuIHVuaXQgaXMgXCJzZWNvbmRcIiBhbmQgXCJtaW51dGVcIiwgdXNlIDYwIC8gY291bnQgPSByb3VuZCBudW1iZXJcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB0aW1lSW50ZXJ2YWwgYmFzZSBpbnRlcnZhbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHRpbWVJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICBpZiAoSlNPTi5zdHJpbmdpZnkodGhpcy5fYmFzZUludGVydmFsKSAhPSBKU09OLnN0cmluZ2lmeSh0aW1lSW50ZXJ2YWwpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9iYXNlSW50ZXJ2YWwgPSB0aW1lSW50ZXJ2YWw7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9tYWluQmFzZUludGVydmFsID0gdGltZUludGVydmFsO1xyXG4gICAgICAgICAgICAgICAgaWYgKCEkdHlwZS5pc051bWJlcih0aW1lSW50ZXJ2YWwuY291bnQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGltZUludGVydmFsLmNvdW50ID0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3N0UHJvY2Vzc1Nlcmllc0RhdGFJdGVtcygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0ZUF4aXMucHJvdG90eXBlLCBcIm1haW5CYXNlSW50ZXJ2YWxcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEluZGljYXRlcyBncmFudWxhcml0eSBvZiB0aGUgZGF0YSBvZiBzb3VyY2UgKHVuYWdncmVnYXRlZCkgZGF0YS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBzaW5jZSA0LjcuMFxyXG4gICAgICAgICAqIEByZXR1cm4gR3JhbnVsYXJpdHkgb2YgdGhlIG1haW4gZGF0YSBzZXRcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2Jhc2VJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Jhc2VJbnRlcnZhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLl9tYWluQmFzZUludGVydmFsKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fbWFpbkJhc2VJbnRlcnZhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9iYXNlSW50ZXJ2YWxSZWFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0ZUF4aXMucHJvdG90eXBlLCBcInNraXBFbXB0eVBlcmlvZHNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gUmVtb3ZlIGVtcHR5IHN0cmV0Y2hlcyBvZiB0aW1lP1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwic2tpcEVtcHR5UGVyaW9kc1wiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElmIGVuYWJsZWQsIGF4aXMgd2lsbCBhdXRvbWF0aWNhbGx5IGNvbGxhcHNlIGVtcHR5ICh3aXRob3V0IGRhdGEgcG9pbnRzKVxyXG4gICAgICAgICAqIHBlcmlvZHMgb2YgdGltZSwgaS5lLiB3ZWVrZW5kcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEFuIFwiZW1wdHlcIiBwZXJpb2QgaXMgY29uc2lkZXJlZCBhIHN0cmV0Y2ggb2YgdGltZSBpbiB0aGUgbGVuZ3RoIG9mIGN1cnJlbnRcclxuICAgICAgICAgKiBgYmFzZUludGVydmFsYCB3aXRob3V0IGEgc2luZ2xlIGRhdGEgcG9pbnQgaW4gaXQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBGb3IgZWFjaCBzdWNoIGVtcHR5IHBlcmlvZCwgYXhpcyB3aWxsIGF1dG9tYXRpY2FsbHkgY3JlYXRlIGFuXHJcbiAgICAgICAgICogW1tBeGlzQnJlYWtdXS4gQnkgZGVmYXVsdCB0aGV5IHdpbGwgYmUgaW52aXNpYmxlLiBZb3UgY2FuIHN0aWxsIGNvbmZpZ3VyZVxyXG4gICAgICAgICAqIHRoZW0gYnkgYWNjZXNzaW5nIGBheGlzLmJyZWFrcy50ZW1wbGF0ZWAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBbTW9yZSBpbmZvIGFib3V0IGJyZWFrc10oaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjQvY29uY2VwdHMvYXhlcy8jQnJlYWtzKS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEltcG9ydGFudCBub3RlczpcclxuICAgICAgICAgKiAqIElmIHlvdSBzZXQgdGhpcyBwcm9wZXJ0eSB0byBgdHJ1ZWAsIHlvdSBjYW4gbm90IGFkZCB5b3VyIGN1c3RvbSBheGlzIGJyZWFrcyB0byB0aGlzIGF4aXMgYW55bW9yZS5cclxuICAgICAgICAgKiAqIFVzaW5nIHRoaXMgZmVhdHVyZSBhZmZlY3RzIHBlcmZvcm1hbmNlLiBVc2Ugb25seSBpZiB5b3UgbmVlZCBpdC5cclxuICAgICAgICAgKiAqIFNldHRpbmcgdGhpcyB0byBgdHJ1ZWAgd2lsbCByZXNldCBhcHBlYXJhbmNlIG9mIGJyZWFrcy4gSWYgeW91IHdhbnQgdG8gbW9kaWZ5IGFwcGVhcmFuY2UsIGRvIGl0ICphZnRlciogeW91IHNldCBgc2tpcEVtcHR5UGVyaW9kc2AuXHJcbiAgICAgICAgICogKiBTb21lIGF4aXMgbGFiZWwgb3ZlcmxhcHBpbmcgbWlnaHQgaGFwcGVuLlxyXG4gICAgICAgICAqICogVGhpcyBzZXR0aW5nIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggYGdyb3VwRGF0YSA9IHRydWVgLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGRlZmF1bHQgZmFsc2VcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgIFJlbW92ZSBlbXB0eSBzdHJldGNoZXMgb2YgdGltZT9cclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBicmVha1RlbXBsYXRlID0gdGhpcy5heGlzQnJlYWtzLnRlbXBsYXRlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWtUZW1wbGF0ZS5zdGFydExpbmUuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWtUZW1wbGF0ZS5lbmRMaW5lLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrVGVtcGxhdGUuZmlsbFNoYXBlLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrVGVtcGxhdGUuYnJlYWtTaXplID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9nYXBCcmVha3MpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmF4aXNCcmVha3MuY2xlYXIoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9nYXBCcmVha3MgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwic2tpcEVtcHR5UGVyaW9kc1wiLCB2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3N0UHJvY2Vzc1Nlcmllc0RhdGFJdGVtcygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkYXRlU2VyaWVzKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpcy5wcm90b3R5cGUsIFwidG9vbHRpcERhdGVGb3JtYXRcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gRGF0ZSBmb3JtYXRcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcInRvb2x0aXBEYXRlRm9ybWF0XCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBzcGVjaWFsIGRhdGUgZm9ybWF0IHRvIGFwcGx5IGF4aXMgdG9vbHRpcHMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBXaWxsIHVzZSBzYW1lIGZvcm1hdCBhcyBmb3IgbGFiZWxzLCBpZiBub3Qgc2V0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBEYXRlIGZvcm1hdFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcInRvb2x0aXBEYXRlRm9ybWF0XCIsIHZhbHVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpcy5wcm90b3R5cGUsIFwibWFya1VuaXRDaGFuZ2VcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gVXNlIGRpZmZlcmVudCBmb3JtYXQgZm9yIHBlcmlvZCBiZWdpbm5pbmc/XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJtYXJrVW5pdENoYW5nZVwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFVzZSBgcGVyaW9kQ2hhbmdlRGF0ZUZvcm1hdHNgIHRvIGFwcGx5IGRpZmZlcmVudCBmb3JtYXRzIHRvIHRoZSBmaXJzdFxyXG4gICAgICAgICAqIGxhYmVsIGluIGJpZ2dlciB0aW1lIHVuaXQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAZGVmYXVsdCB0cnVlXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBVc2UgZGlmZmVyZW50IGZvcm1hdCBmb3IgcGVyaW9kIGJlZ2lubmluZz9cclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwibWFya1VuaXRDaGFuZ2VcIiwgdmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmludmFsaWRhdGVEYXRhKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0ZXh0IHRvIHNob3cgaW4gYSB0b29sdGlwLCBiYXNlZCBvbiBzcGVjaWZpYyByZWxhdGl2ZSBwb3NpdGlvblxyXG4gICAgICogd2l0aGluIGF4aXMuXHJcbiAgICAgKlxyXG4gICAgICogVGhlIGxhYmVsIHdpbGwgYmUgZm9ybWF0dGVkIGFzIHBlciBbW0RhdGVGb3JtYXR0ZXJdXSBzZXQgZm9yIHRoZSB3aG9sZVxyXG4gICAgICogY2hhcnQsIG9yIGV4cGxpY2l0bHkgZm9yIHRoaXMgQXhpcy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gcG9zaXRpb24gIFBvc2l0aW9uXHJcbiAgICAgKiBAcmV0dXJuIExhYmVsIChmb3JtYXR0ZWQgZGF0ZSlcclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmdldFRvb2x0aXBUZXh0ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgdmFyIHRleHQ7XHJcbiAgICAgICAgdmFyIGRhdGUgPSB0aGlzLnBvc2l0aW9uVG9EYXRlKHBvc2l0aW9uKTtcclxuICAgICAgICBkYXRlID0gJHRpbWUucm91bmQoZGF0ZSwgdGhpcy5iYXNlSW50ZXJ2YWwudGltZVVuaXQsIHRoaXMuYmFzZUludGVydmFsLmNvdW50LCB0aGlzLl9maXJzdFdlZWtEYXksIHRoaXMuX2RmLnV0YywgbmV3IERhdGUodGhpcy5taW4pKTtcclxuICAgICAgICB0aGlzLnRvb2x0aXBEYXRlID0gZGF0ZTtcclxuICAgICAgICBpZiAoJHR5cGUuaGFzVmFsdWUodGhpcy50b29sdGlwRGF0ZUZvcm1hdCkpIHtcclxuICAgICAgICAgICAgdGV4dCA9IHRoaXMuX2RmLmZvcm1hdChkYXRlLCB0aGlzLnRvb2x0aXBEYXRlRm9ybWF0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBkYXRlRm9ybWF0ID0gdGhpcy5kYXRlRm9ybWF0cy5nZXRLZXkodGhpcy5iYXNlSW50ZXJ2YWwudGltZVVuaXQpO1xyXG4gICAgICAgICAgICBpZiAoZGF0ZUZvcm1hdCkge1xyXG4gICAgICAgICAgICAgICAgdGV4dCA9IHRoaXMuX2RmLmZvcm1hdChkYXRlLCBkYXRlRm9ybWF0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRleHQgPSB0aGlzLmdldFBvc2l0aW9uTGFiZWwocG9zaXRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5fYWRhcHRlck8pIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRleHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYWRhcHRlck8uYXBwbHkoXCJnZXRUb29sdGlwVGV4dFwiLCB0ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBUYWtlcyBhbiBhYnNvbHV0ZSBwb3NpdGlvbiB3aXRoaW4gYXhpcyBhbmQgYWRqdXN0IGl0IHRvIGEgc3BlY2lmaWMgcG9zaXRpb24gd2l0aGluIGJhc2UgaW50ZXJ2YWwuIChjZWxsKVxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBwb3NpdGlvbiBTb3VyY2UgcG9zaXRpb25cclxuICAgICAqIEBwYXJhbSBsb2NhdGlvbiAgTG9jYXRpb24gaW4gdGhlIGNlbGxcclxuICAgICAqIEByZXR1cm4gQWRqdXN0ZWQgcG9zaXRpb25cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLnJvdW5kUG9zaXRpb24gPSBmdW5jdGlvbiAocG9zaXRpb24sIGxvY2F0aW9uLCBheGlzTG9jYXRpb24pIHtcclxuICAgICAgICB2YXIgYmFzZUludGVydmFsID0gdGhpcy5iYXNlSW50ZXJ2YWw7XHJcbiAgICAgICAgdmFyIHRpbWVVbml0ID0gYmFzZUludGVydmFsLnRpbWVVbml0O1xyXG4gICAgICAgIHZhciBjb3VudCA9IGJhc2VJbnRlcnZhbC5jb3VudDtcclxuICAgICAgICB2YXIgZGF0ZSA9IHRoaXMucG9zaXRpb25Ub0RhdGUocG9zaXRpb24pO1xyXG4gICAgICAgICR0aW1lLnJvdW5kKGRhdGUsIHRpbWVVbml0LCBjb3VudCwgdGhpcy5fZmlyc3RXZWVrRGF5LCB0aGlzLl9kZi51dGMpO1xyXG4gICAgICAgIGlmIChsb2NhdGlvbiA+IDApIHtcclxuICAgICAgICAgICAgJHRpbWUuYWRkKGRhdGUsIHRpbWVVbml0LCBsb2NhdGlvbiAqIGNvdW50LCB0aGlzLl9kZi51dGMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYXhpc0xvY2F0aW9uID4gMCAmJiBheGlzTG9jYXRpb24gPCAxKSB7XHJcbiAgICAgICAgICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIHRoaXMuYmFzZUR1cmF0aW9uICogYXhpc0xvY2F0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuaXNJbkJyZWFrKGRhdGUuZ2V0VGltZSgpKSkge1xyXG4gICAgICAgICAgICB3aGlsZSAoZGF0ZS5nZXRUaW1lKCkgPCB0aGlzLm1heCkge1xyXG4gICAgICAgICAgICAgICAgJHRpbWUuYWRkKGRhdGUsIHRpbWVVbml0LCBjb3VudCwgdGhpcy5fZGYudXRjKTtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0luQnJlYWsoZGF0ZS5nZXRUaW1lKCkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZVRvUG9zaXRpb24oZGF0ZSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGFuIHJlbGF0aXZlIHBvc2l0aW9uIG9mIHRoZSBzdGFydCBvZiB0aGUgY2VsbCAocGVyaW9kKSwgdGhhdCBzcGVjaWZpYyBwb3NpdGlvbiB2YWx1ZSBmYWxscyBpbnRvLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEB0b2RvIERlc2NyaXB0aW9uIChyZXZpZXcpXHJcbiAgICAgKiBAcGFyYW0gcG9zaXRpb24gIFJlbGF0aXZlIHBvc2l0aW9uXHJcbiAgICAgKiBAcmV0dXJuIENlbGwgc3RhcnQgcmVsYXRpdmUgcG9zaXRpb25cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmdldENlbGxTdGFydFBvc2l0aW9uID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm91bmRQb3NpdGlvbihwb3NpdGlvbiwgMCk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGFuIHJlbGF0aXZlIHBvc2l0aW9uIG9mIHRoZSBlbmQgb2YgdGhlIGNlbGwgKHBlcmlvZCksIHRoYXQgc3BlY2lmaWMgcG9zaXRpb24gdmFsdWUgZmFsbHMgaW50by5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvbiAocmV2aWV3KVxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICBSZWxhdGl2ZSBwb3NpdGlvblxyXG4gICAgICogQHJldHVybiBDZWxsIGVuZCByZWxhdGl2ZSBwb3NpdGlvblxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZ2V0Q2VsbEVuZFBvc2l0aW9uID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm91bmRQb3NpdGlvbihwb3NpdGlvbiwgMSk7XHJcbiAgICAgICAgLy9yZXR1cm4gdGhpcy5kYXRlVG9Qb3NpdGlvbigkdGltZS5hZGQodGhpcy5wb3NpdGlvblRvRGF0ZSh0aGlzLnJvdW5kUG9zaXRpb24ocG9zaXRpb24sIDEpKSwgdGhpcy5iYXNlSW50ZXJ2YWwudGltZVVuaXQsIHRoaXMuYmFzZUludGVydmFsLmNvdW50KSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgU2VyaWVzIGRhdGEgaXRlbSB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoZSBzcGVjaWZpYyBwaXhlbCBwb3NpdGlvblxyXG4gICAgICogb2YgdGhlIEF4aXMuXHJcbiAgICAgKlxyXG4gICAgICogSWYgYGZpbmROZWFyZXN0YCAodGhpcmQgcGFyYW1ldGVyKSBpcyBzZXQgdG8gYHRydWVgLCB0aGUgbWV0aG9kIHdpbGwgdHJ5XHJcbiAgICAgKiB0byBsb2NhdGUgbmVhcmVzdCBhdmFpbGFibGUgZGF0YSBpdGVtIGlmIG5vbmUgaXMgZm91bmQgZGlyZWN0bHkgdW5kZXJcclxuICAgICAqIGBwb3NpdGlvbmAuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHNlcmllcyAgICAgICBTZXJpZXNcclxuICAgICAqIEBwYXJhbSBwb3NpdGlvbiAgICAgUG9zaXRpb24gKHB4KVxyXG4gICAgICogQHBhcmFtIGZpbmROZWFyZXN0ICBTaG91bGQgYXhpcyB0cnkgdG8gZmluZCBuZWFyZXN0IHRvb2x0aXAgaWYgdGhlcmUgaXMgbm8gZGF0YSBpdGVtIGF0IGV4YWN0IHBvc2l0aW9uXHJcbiAgICAgKiBAcmV0dXJuIERhdGEgaXRlbVxyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuZ2V0U2VyaWVzRGF0YUl0ZW0gPSBmdW5jdGlvbiAoc2VyaWVzLCBwb3NpdGlvbiwgZmluZE5lYXJlc3QpIHtcclxuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLnBvc2l0aW9uVG9WYWx1ZShwb3NpdGlvbik7XHJcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gMC41O1xyXG4gICAgICAgIGlmICh0aGlzLmF4aXNMZXR0ZXIgPT0gXCJZXCIpIHtcclxuICAgICAgICAgICAgbG9jYXRpb24gPSBzZXJpZXMuZGF0YUl0ZW1zLnRlbXBsYXRlLmxvY2F0aW9ucy5kYXRlWTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGxvY2F0aW9uID0gc2VyaWVzLmRhdGFJdGVtcy50ZW1wbGF0ZS5sb2NhdGlvbnMuZGF0ZVg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBkZWx0YVZhbHVlID0gdmFsdWUgLSBsb2NhdGlvbiAqIHRoaXMuYmFzZUR1cmF0aW9uO1xyXG4gICAgICAgIHZhciBkYXRlID0gJHRpbWUucm91bmQobmV3IERhdGUodmFsdWUpLCB0aGlzLmJhc2VJbnRlcnZhbC50aW1lVW5pdCwgdGhpcy5iYXNlSW50ZXJ2YWwuY291bnQsIHRoaXMuX2ZpcnN0V2Vla0RheSwgdGhpcy5fZGYudXRjKTtcclxuICAgICAgICB2YXIgbmV4dERhdGUgPSAkdGltZS5yb3VuZChuZXcgRGF0ZSh2YWx1ZSArIHRoaXMuYmFzZUR1cmF0aW9uKSwgdGhpcy5iYXNlSW50ZXJ2YWwudGltZVVuaXQsIHRoaXMuYmFzZUludGVydmFsLmNvdW50LCB0aGlzLl9maXJzdFdlZWtEYXksIHRoaXMuX2RmLnV0Yyk7XHJcbiAgICAgICAgaWYgKG5leHREYXRlLmdldFRpbWUoKSA+IGRhdGUuZ2V0VGltZSgpKSB7XHJcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhuZXh0RGF0ZS5nZXRUaW1lKCkgLSBkZWx0YVZhbHVlKSA8IE1hdGguYWJzKGRlbHRhVmFsdWUgLSBkYXRlLmdldFRpbWUoKSkpIHtcclxuICAgICAgICAgICAgICAgIGRhdGUgPSBuZXh0RGF0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgZGF0YUl0ZW1zQnlBeGlzID0gc2VyaWVzLmRhdGFJdGVtc0J5QXhpcy5nZXRLZXkodGhpcy51aWQpO1xyXG4gICAgICAgIHZhciBkYXRhSXRlbSA9IGRhdGFJdGVtc0J5QXhpcy5nZXRLZXkoZGF0ZS5nZXRUaW1lKCkudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgLy8gdG9kbzogIGFsdGVybmF0aXZlbHkgd2UgY2FuIGZpbmQgY2xvc2llc3QgaGVyZVxyXG4gICAgICAgIGlmICghZGF0YUl0ZW0gJiYgZmluZE5lYXJlc3QpIHtcclxuICAgICAgICAgICAgdmFyIGtleV8xO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5heGlzTGV0dGVyID09IFwiWVwiKSB7XHJcbiAgICAgICAgICAgICAgICBrZXlfMSA9IFwiZGF0ZVlcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGtleV8xID0gXCJkYXRlWFwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRhdGFJdGVtID0gc2VyaWVzLmRhdGFJdGVtcy5nZXRJbmRleChzZXJpZXMuZGF0YUl0ZW1zLmZpbmRDbG9zZXN0SW5kZXgoZGF0ZS5nZXRUaW1lKCksIGZ1bmN0aW9uICh4KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoeFtrZXlfMV0pIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geFtrZXlfMV0uZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC1JbmZpbml0eTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgXCJhbnlcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGF0YUl0ZW07XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgZm9ybWF0dGVkIGRhdGUgYmFzZWQgb24gcG9zaXRpb24gaW4gYXhpcyBzY2FsZS5cclxuICAgICAqXHJcbiAgICAgKiBQbGVhc2Ugbm90ZSB0aGF0IGBwb3NpdGlvbmAgcmVwcmVzZW50cyBwb3NpdGlvbiB3aXRoaW4gYXhpcyB3aGljaCBtYXkgYmVcclxuICAgICAqIHpvb21lZCBhbmQgbm90IGNvcnJlc3BvbmQgdG8gQ3Vyc29yJ3MgYHBvc2l0aW9uYC5cclxuICAgICAqXHJcbiAgICAgKiBUbyBjb252ZXJ0IEN1cnNvcidzIGBwb3NpdGlvbmAgdG8gQXhpcycgYHBvc2l0aW9uYCB1c2UgYHRvQXhpc1Bvc2l0aW9uKClgIG1ldGhvZC5cclxuICAgICAqXHJcbiAgICAgKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NC90dXRvcmlhbHMvdHJhY2tpbmctY3Vyc29ycy1wb3NpdGlvbi12aWEtYXBpLyNUcmFja2luZ19DdXJzb3Jfc19wb3NpdGlvbn0gRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgY3Vyc29yIHRyYWNraW5nLlxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICBSZWxhdGl2ZSBwb3NpdGlvbiBvbiBheGlzICgwLTEpXHJcbiAgICAgKiBAcmV0dXJuIFBvc2l0aW9uIGxhYmVsXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRQb3NpdGlvbkxhYmVsID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgLy8gQHRvZG8gQmV0dGVyIGZvcm1hdCByZWNvZ25pdGlvblxyXG4gICAgICAgIHZhciBkYXRlID0gdGhpcy5wb3NpdGlvblRvRGF0ZShwb3NpdGlvbik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RmLmZvcm1hdChkYXRlLCB0aGlzLmdldEN1cnJlbnRMYWJlbEZvcm1hdCgpKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgbGFiZWwgZGF0ZSBmb3JtYXQgYmFzZWQgb24gY3VycmVudGx5IHVzZWQgdGltZSB1bml0c1xyXG4gICAgICpcclxuICAgICAqIEByZXR1cm4gRm9ybWF0XHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5nZXRDdXJyZW50TGFiZWxGb3JtYXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZUZvcm1hdHMuZ2V0S2V5KHRoaXMuX2dyaWRJbnRlcnZhbCA/IHRoaXMuX2dyaWRJbnRlcnZhbC50aW1lVW5pdCA6IFwiZGF5XCIpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogSW5pdGlhbGl6ZXMgYW4gQXhpcyByZW5kZXJlci5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5pbml0UmVuZGVyZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5pbml0UmVuZGVyZXIuY2FsbCh0aGlzKTtcclxuICAgICAgICB2YXIgcmVuZGVyZXIgPSB0aGlzLnJlbmRlcmVyO1xyXG4gICAgICAgIGlmIChyZW5kZXJlcikge1xyXG4gICAgICAgICAgICAvLyBTZXQgZGVmYXVsdHNcclxuICAgICAgICAgICAgcmVuZGVyZXIudGlja3MudGVtcGxhdGUubG9jYXRpb24gPSAwO1xyXG4gICAgICAgICAgICByZW5kZXJlci5ncmlkLnRlbXBsYXRlLmxvY2F0aW9uID0gMDtcclxuICAgICAgICAgICAgcmVuZGVyZXIubGFiZWxzLnRlbXBsYXRlLmxvY2F0aW9uID0gMDtcclxuICAgICAgICAgICAgcmVuZGVyZXIuYmFzZUdyaWQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0ZUF4aXMucHJvdG90eXBlLCBcImJhc2VQb2ludFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ29vcmRpbmF0ZXMgb2YgdGhlIGFjdHVhbCBheGlzIHN0YXJ0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICAgICAqIEByZXR1cm4gQmFzZSBwb2ludFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4geyB4OiAwLCB5OiAwIH07XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLmFuaW1hdGVNaW5NYXggPSBmdW5jdGlvbiAobWluLCBtYXgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBhbmltYXRpb24gPSB0aGlzLmFuaW1hdGUoW3sgcHJvcGVydHk6IFwiX21pbkFkanVzdGVkXCIsIGZyb206IHRoaXMuX21pbkFkanVzdGVkLCB0bzogbWluIH0sIHsgcHJvcGVydHk6IFwiX21heEFkanVzdGVkXCIsIGZyb206IHRoaXMuX21heEFkanVzdGVkLCB0bzogbWF4IH1dLCB0aGlzLnJhbmdlQ2hhbmdlRHVyYXRpb24sIHRoaXMucmFuZ2VDaGFuZ2VFYXNpbmcpO1xyXG4gICAgICAgIGFuaW1hdGlvbi5ldmVudHMub24oXCJhbmltYXRpb25wcm9ncmVzc1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIF90aGlzLmRpc3BhdGNoKFwiZXh0cmVtZXNjaGFuZ2VkXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBhbmltYXRpb247XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbnZhbGlkYXRlcyBheGlzIGRhdGEgaXRlbXMgd2hlbiBzZXJpZXMgZXh0cmVtZXMgY2hhbmdlXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5oYW5kbGVFeHRyZW1lc0NoYW5nZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmhhbmRsZUV4dHJlbWVzQ2hhbmdlLmNhbGwodGhpcyk7XHJcbiAgICAgICAgaWYgKHRoaXMuZ3JvdXBEYXRhKSB7XHJcbiAgICAgICAgICAgIHZhciBpZCA9IHRoaXMuYmFzZUludGVydmFsLnRpbWVVbml0ICsgdGhpcy5iYXNlSW50ZXJ2YWwuY291bnQ7XHJcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBNaW5baWRdID0gdGhpcy5fZmluYWxNaW47XHJcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBNYXhbaWRdID0gdGhpcy5fZmluYWxNYXg7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogWm9vbXMgYXhpcyB0byBzcGVjaWZpYyBEYXRlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc3RhcnREYXRlICAgICAgIFN0YXJ0IGRhdGVcclxuICAgICAqIEBwYXJhbSBlbmRWYWx1ZSAgICAgICAgRW5kIGRhdGVcclxuICAgICAqIEBwYXJhbSBza2lwUmFuZ2VFdmVudCAgRG8gbm90IGludm9rZSBldmVudHNcclxuICAgICAqIEBwYXJhbSBpbnN0YW50bHkgICAgICAgRG8gbm90IHBsYXkgem9vbSBhbmltYXRpb25zXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS56b29tVG9EYXRlcyA9IGZ1bmN0aW9uIChzdGFydERhdGUsIGVuZERhdGUsIHNraXBSYW5nZUV2ZW50LCBpbnN0YW50bHksIGFkanVzdCkge1xyXG4gICAgICAgIHN0YXJ0RGF0ZSA9IHRoaXMuX2RmLnBhcnNlKHN0YXJ0RGF0ZSk7XHJcbiAgICAgICAgZW5kRGF0ZSA9IHRoaXMuX2RmLnBhcnNlKGVuZERhdGUpO1xyXG4gICAgICAgIHRoaXMuem9vbVRvVmFsdWVzKHN0YXJ0RGF0ZS5nZXRUaW1lKCksIGVuZERhdGUuZ2V0VGltZSgpLCBza2lwUmFuZ2VFdmVudCwgaW5zdGFudGx5LCBhZGp1c3QpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogWm9vbXMgYXhpcyB0byBzcGVjaWZpYyB2YWx1ZXMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHN0YXJ0VmFsdWUgICAgICBTdGFydCB2YWx1ZVxyXG4gICAgICogQHBhcmFtIGVuZFZhbHVlICAgICAgICBFbmQgdmFsdWVcclxuICAgICAqIEBwYXJhbSBza2lwUmFuZ2VFdmVudCAgRG8gbm90IGludm9rZSBldmVudHNcclxuICAgICAqIEBwYXJhbSBpbnN0YW50bHkgICAgICAgRG8gbm90IHBsYXkgem9vbSBhbmltYXRpb25zXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS56b29tVG9WYWx1ZXMgPSBmdW5jdGlvbiAoc3RhcnRWYWx1ZSwgZW5kVmFsdWUsIHNraXBSYW5nZUV2ZW50LCBpbnN0YW50bHksIGFkanVzdCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKCF0aGlzLmdyb3VwRGF0YSkge1xyXG4gICAgICAgICAgICB2YXIgc3RhcnQgPSAoc3RhcnRWYWx1ZSAtIHRoaXMubWluKSAvICh0aGlzLm1heCAtIHRoaXMubWluKTtcclxuICAgICAgICAgICAgdmFyIGVuZCA9IChlbmRWYWx1ZSAtIHRoaXMubWluKSAvICh0aGlzLm1heCAtIHRoaXMubWluKTtcclxuICAgICAgICAgICAgdGhpcy56b29tKHsgc3RhcnQ6IHN0YXJ0LCBlbmQ6IGVuZCB9LCBza2lwUmFuZ2VFdmVudCwgaW5zdGFudGx5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBkaWZmZXJlbmNlID0gdGhpcy5hZGp1c3REaWZmZXJlbmNlKHN0YXJ0VmFsdWUsIGVuZFZhbHVlKTtcclxuICAgICAgICAgICAgdmFyIGlzRW5kID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmIChlbmRWYWx1ZSA9PSB0aGlzLm1heCkge1xyXG4gICAgICAgICAgICAgICAgaXNFbmQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBpc1N0YXJ0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmIChzdGFydFZhbHVlID09IHRoaXMubWluKSB7XHJcbiAgICAgICAgICAgICAgICBpc1N0YXJ0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoJHR5cGUuaGFzVmFsdWUoZGlmZmVyZW5jZSkpIHtcclxuICAgICAgICAgICAgICAgIHZhciBtYWluQmFzZUludGVydmFsID0gdGhpcy5tYWluQmFzZUludGVydmFsO1xyXG4gICAgICAgICAgICAgICAgdmFyIGdyb3VwSW50ZXJ2YWxfMSA9IHRoaXMuY2hvb3NlSW50ZXJ2YWwoMCwgZGlmZmVyZW5jZSwgdGhpcy5ncm91cENvdW50LCB0aGlzLmdyb3VwSW50ZXJ2YWxzKTtcclxuICAgICAgICAgICAgICAgIGlmICgoZ3JvdXBJbnRlcnZhbF8xLnRpbWVVbml0ID09IG1haW5CYXNlSW50ZXJ2YWwudGltZVVuaXQgJiYgZ3JvdXBJbnRlcnZhbF8xLmNvdW50IDwgbWFpbkJhc2VJbnRlcnZhbC5jb3VudCkgfHwgJHRpbWUuZ2V0RHVyYXRpb24oZ3JvdXBJbnRlcnZhbF8xLnRpbWVVbml0LCAxKSA8ICR0aW1lLmdldER1cmF0aW9uKG1haW5CYXNlSW50ZXJ2YWwudGltZVVuaXQsIDEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXBJbnRlcnZhbF8xID0gX19hc3NpZ24oe30sIG1haW5CYXNlSW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gZ3JvdXBJbnRlcnZhbF8xLnRpbWVVbml0ICsgZ3JvdXBJbnRlcnZhbF8xLmNvdW50O1xyXG4gICAgICAgICAgICAgICAgdmFyIG1pbl8xID0gdGhpcy5ncm91cE1pbltpZF07XHJcbiAgICAgICAgICAgICAgICB2YXIgbWF4XzEgPSB0aGlzLmdyb3VwTWF4W2lkXTtcclxuICAgICAgICAgICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIobWluXzEpIHx8ICEkdHlwZS5pc051bWJlcihtYXhfMSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBtaW5fMSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcclxuICAgICAgICAgICAgICAgICAgICBtYXhfMSA9IE51bWJlci5ORUdBVElWRV9JTkZJTklUWTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlcmllcy5lYWNoKGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNlcmllc01pbiA9IHNlcmllcy5taW4oX3RoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2VyaWVzTWF4ID0gc2VyaWVzLm1heChfdGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuX2RhdGFTZXRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZHMgPSBzZXJpZXMuX2RhdGFTZXRzLmdldEtleShncm91cEludGVydmFsXzEudGltZVVuaXQgKyBncm91cEludGVydmFsXzEuY291bnQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1pbmRpID0gZHMuZ2V0SW5kZXgoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1heGRpID0gZHMuZ2V0SW5kZXgoZHMubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1pbmRpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJpZXMueEF4aXMgPT0gX3RoaXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcmllc01pbiA9IG1pbmRpLmRhdGVYLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzZXJpZXMueUF4aXMgPT0gX3RoaXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcmllc01pbiA9IG1pbmRpLmRhdGVZLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF4ZGkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlcmllcy54QXhpcyA9PSBfdGhpcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWVzTWF4ID0gbWF4ZGkuZGF0ZVguZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlcmllcy55QXhpcyA9PSBfdGhpcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWVzTWF4ID0gbWF4ZGkuZGF0ZVkuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcmllc01heCA9ICR0aW1lLnJvdW5kKCR0aW1lLmFkZChuZXcgRGF0ZShzZXJpZXNNYXgpLCBncm91cEludGVydmFsXzEudGltZVVuaXQsIDEsIF90aGlzLl9kZi51dGMpLCBncm91cEludGVydmFsXzEudGltZVVuaXQsIDEsIF90aGlzLl9kZi5maXJzdERheU9mV2VlaywgX3RoaXMuX2RmLnV0YykuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VyaWVzTWluIDwgbWluXzEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbl8xID0gc2VyaWVzTWluO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJpZXNNYXggPiBtYXhfMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4XzEgPSBzZXJpZXNNYXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdyb3VwTWluW2lkXSA9IG1pbl8xO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ3JvdXBNYXhbaWRdID0gbWF4XzE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzdGFydFZhbHVlID0gJG1hdGguZml0VG9SYW5nZShzdGFydFZhbHVlLCBtaW5fMSwgbWF4XzEpO1xyXG4gICAgICAgICAgICAgICAgZW5kVmFsdWUgPSAkbWF0aC5maXRUb1JhbmdlKGVuZFZhbHVlLCBtaW5fMSwgbWF4XzEpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGFkanVzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0VuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFZhbHVlID0gZW5kVmFsdWUgLSBkaWZmZXJlbmNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFZhbHVlID0gJG1hdGguZml0VG9SYW5nZShzdGFydFZhbHVlLCBtaW5fMSwgbWF4XzEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNTdGFydCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRWYWx1ZSA9IHN0YXJ0VmFsdWUgKyBkaWZmZXJlbmNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRWYWx1ZSA9ICRtYXRoLmZpdFRvUmFuZ2UoZW5kVmFsdWUsIG1pbl8xLCBtYXhfMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gKHN0YXJ0VmFsdWUgLSBtaW5fMSkgLyAobWF4XzEgLSBtaW5fMSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW5kID0gKGVuZFZhbHVlIC0gbWluXzEpIC8gKG1heF8xIC0gbWluXzEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy56b29tKHsgc3RhcnQ6IHN0YXJ0LCBlbmQ6IGVuZCB9LCBza2lwUmFuZ2VFdmVudCwgaW5zdGFudGx5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgYGJhc2VJbnRlcnZhbGAgdG8gXCJhcyBpc1wiIGZpZWxkcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZmllbGQgIEZpZWxkIG5hbWVcclxuICAgICAqIEByZXR1cm4gQXNzaWduIGFzIGlzP1xyXG4gICAgICovXHJcbiAgICBEYXRlQXhpcy5wcm90b3R5cGUuYXNJcyA9IGZ1bmN0aW9uIChmaWVsZCkge1xyXG4gICAgICAgIHJldHVybiBmaWVsZCA9PSBcImJhc2VJbnRlcnZhbFwiIHx8IF9zdXBlci5wcm90b3R5cGUuYXNJcy5jYWxsKHRoaXMsIGZpZWxkKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvcGllcyBhbGwgcHJvcGVydGllcyBhbmQgcmVsYXRlZCBkYXRhIGZyb20gYSBkaWZmZXJlbnQgaW5zdGFuY2Ugb2YgQXhpcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc291cmNlIFNvdXJjZSBBeGlzXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5jb3B5RnJvbSA9IGZ1bmN0aW9uIChzb3VyY2UpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuY29weUZyb20uY2FsbCh0aGlzLCBzb3VyY2UpO1xyXG4gICAgICAgIHRoaXMuZGF0ZUZvcm1hdHMgPSBzb3VyY2UuZGF0ZUZvcm1hdHM7XHJcbiAgICAgICAgdGhpcy5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cyA9IHNvdXJjZS5wZXJpb2RDaGFuZ2VEYXRlRm9ybWF0cztcclxuICAgICAgICB0aGlzLmdyb3VwSW50ZXJ2YWxzLmNsZWFyKCk7XHJcbiAgICAgICAgc291cmNlLmdyb3VwSW50ZXJ2YWxzLmVhY2goZnVuY3Rpb24gKGludGVydmFsKSB7XHJcbiAgICAgICAgICAgIF90aGlzLmdyb3VwSW50ZXJ2YWxzLnB1c2goX19hc3NpZ24oe30sIGludGVydmFsKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5ncmlkSW50ZXJ2YWxzLmNsZWFyKCk7XHJcbiAgICAgICAgc291cmNlLmdyaWRJbnRlcnZhbHMuZWFjaChmdW5jdGlvbiAoaW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgX3RoaXMuZ3JpZEludGVydmFscy5wdXNoKF9fYXNzaWduKHt9LCBpbnRlcnZhbCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChzb3VyY2UuX2Jhc2VJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLmJhc2VJbnRlcnZhbCA9IHNvdXJjZS5fYmFzZUludGVydmFsO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFNob3dzIEF4aXMgdG9vbHRpcCBhdCBzcGVjaWZpYyByZWxhdGl2ZSBwb3NpdGlvbiB3aXRoaW4gQXhpcy4gKDAtMSlcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcG9zaXRpb24gUG9zaXRpb24gKDAtMSlcclxuICAgICAqIEBwYXJhbSBsb2NhbCBvciBnbG9iYWwgcG9zaXRpb25cclxuICAgICAqL1xyXG4gICAgRGF0ZUF4aXMucHJvdG90eXBlLnNob3dUb29sdGlwQXRQb3NpdGlvbiA9IGZ1bmN0aW9uIChwb3NpdGlvbiwgbG9jYWwpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIGlmICghbG9jYWwpIHtcclxuICAgICAgICAgICAgcG9zaXRpb24gPSB0aGlzLnRvQXhpc1Bvc2l0aW9uKHBvc2l0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuc25hcFRvb2x0aXApIHtcclxuICAgICAgICAgICAgLy8gcm91bmRpbmcgaXMgbm90IGdvb2QsIHBlbi9hYWM0ZTdmNjZmMDE5ZDM2YjI0NDdmMDUwYzYwMGMxMyAobm8gbGFzdCB0b290bHRpcCBzaG93bilcclxuICAgICAgICAgICAgdmFyIGFjdHVhbERhdGUgPSB0aGlzLnBvc2l0aW9uVG9EYXRlKHBvc2l0aW9uKTsgLy8kdGltZS5yb3VuZCh0aGlzLnBvc2l0aW9uVG9EYXRlKHBvc2l0aW9uKSwgdGhpcy5iYXNlSW50ZXJ2YWwudGltZVVuaXQsIDEsIHRoaXMuZ2V0Rmlyc3RXZWVrRGF5KCksIHRoaXMuZGF0ZUZvcm1hdHRlci51dGMpO1xyXG4gICAgICAgICAgICB2YXIgYWN0dWFsVGltZV8xID0gYWN0dWFsRGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgIHZhciBjbG9zZXN0RGF0ZV8xO1xyXG4gICAgICAgICAgICB0aGlzLnNlcmllcy5lYWNoKGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuYmFzZUF4aXMgPT0gX3RoaXMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YUl0ZW0gPSBfdGhpcy5nZXRTZXJpZXNEYXRhSXRlbShzZXJpZXMsIHBvc2l0aW9uLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGUgPSB2b2lkIDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJpZXMueEF4aXMgPT0gX3RoaXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGUgPSBkYXRhSXRlbS5kYXRlWDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VyaWVzLnlBeGlzID09IF90aGlzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlID0gZGF0YUl0ZW0uZGF0ZVk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjbG9zZXN0RGF0ZV8xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZXN0RGF0ZV8xID0gZGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhjbG9zZXN0RGF0ZV8xLmdldFRpbWUoKSAtIGFjdHVhbFRpbWVfMSkgPiBNYXRoLmFicyhkYXRlLmdldFRpbWUoKSAtIGFjdHVhbFRpbWVfMSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZXN0RGF0ZV8xID0gZGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmIChjbG9zZXN0RGF0ZV8xKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY2xvc2VzdFRpbWVfMSA9IGNsb3Nlc3REYXRlXzEuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgY2xvc2VzdERhdGVfMSA9ICR0aW1lLnJvdW5kKG5ldyBEYXRlKGNsb3Nlc3RUaW1lXzEpLCB0aGlzLmJhc2VJbnRlcnZhbC50aW1lVW5pdCwgdGhpcy5iYXNlSW50ZXJ2YWwuY291bnQsIHRoaXMuX2ZpcnN0V2Vla0RheSwgdGhpcy5fZGYudXRjKTtcclxuICAgICAgICAgICAgICAgIGNsb3Nlc3RUaW1lXzEgPSBjbG9zZXN0RGF0ZV8xLmdldFRpbWUoKTtcclxuICAgICAgICAgICAgICAgIHZhciB0b29sdGlwTG9jYXRpb24gPSB0aGlzLnJlbmRlcmVyLnRvb2x0aXBMb2NhdGlvbjtcclxuICAgICAgICAgICAgICAgIGlmICh0b29sdGlwTG9jYXRpb24gPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXBMb2NhdGlvbiA9IDAuMDAwMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNsb3Nlc3REYXRlXzEgPSBuZXcgRGF0ZShjbG9zZXN0RGF0ZV8xLmdldFRpbWUoKSArIHRoaXMuYmFzZUR1cmF0aW9uICogdG9vbHRpcExvY2F0aW9uKTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gdGhpcy5kYXRlVG9Qb3NpdGlvbihjbG9zZXN0RGF0ZV8xKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoYXJ0LmN1cnNvciAmJiB0aGlzLmNoYXJ0LmN1cnNvci5zbmFwVG9TZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL3ZvaWRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VyaWVzLmVhY2goZnVuY3Rpb24gKHNlcmllcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YUl0ZW0gPSBzZXJpZXMuZGF0YUl0ZW1zQnlBeGlzLmdldEtleShfdGhpcy51aWQpLmdldEtleShjbG9zZXN0VGltZV8xICsgc2VyaWVzLmN1cnJlbnREYXRhU2V0SWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnQgPSBzZXJpZXMuc2hvd1Rvb2x0aXBBdERhdGFJdGVtKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBvaW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5jaGFydC5fc2VyaWVzUG9pbnRzLnB1c2goeyBzZXJpZXM6IHNlcmllcywgcG9pbnQ6IHBvaW50IH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2ssIG90aGVyd2lzZSBjb2x1bW4gdG9vbHRpcCB3aWxsIGJlIGhpZGRlblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlcmllcy50b29sdGlwVGV4dCB8fCBzZXJpZXMudG9vbHRpcEhUTUwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJpZXMuaGlkZVRvb2x0aXAoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy90aGlzLmNoYXJ0LnNvcnRTZXJpZXNUb29sdGlwcyhzZXJpZXNQb2ludHMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuc2hvd1Rvb2x0aXBBdFBvc2l0aW9uLmNhbGwodGhpcywgcG9zaXRpb24sIHRydWUpO1xyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpcy5wcm90b3R5cGUsIFwic25hcFRvb2x0aXBcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gU2hvdWxkIHNuYXA/XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJzbmFwVG9vbHRpcFwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNob3VsZCB0aGUgbmVhcmVzdCB0b29sdGlwIGJlIHNob3duIGlmIG5vIGRhdGEgaXRlbSBpcyBmb3VuZCBvbiB0aGVcclxuICAgICAgICAgKiBjdXJyZW50IGN1cnNvciBwb3NpdGlvbi5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBkZWZhdWx0IHRydWVcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgIFNob3VsZCBzbmFwP1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcInNuYXBUb29sdGlwXCIsIHZhbHVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpcy5wcm90b3R5cGUsIFwiZ3JvdXBEYXRhXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEdyb3VwIGRhdGEgcG9pbnRzP1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiZ3JvdXBEYXRhXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSW5kaWNhdGVzIGlmIGRhdGEgc2hvdWxkIGJlIGFnZ3JlZ2F0ZWQgdG8gY29tcG9zaWRlIGRhdGEgaXRlbXMgaWYgdGhlcmVcclxuICAgICAgICAgKiBhcmUgbW9yZSBkYXRhIGl0ZW1zIGluIHNlbGVjdGVkIHJhbmdlIHRoYW4gYGdyb3VwQ291bnRgLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogR3JvdXBpbmcgd2lsbCBvY2N1ciBhdXRvbWF0aWNhbGx5LCBiYXNlZCBvbiBjdXJyZW50IHNlbGVjdGlvbiByYW5nZSwgYW5kXHJcbiAgICAgICAgICogd2lsbCBjaGFuZ2UgZHluYW1pY2FsbHkgd2hlbiB1c2VyIHpvb21zIGluL291dCB0aGUgY2hhcnQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBOT1RFOiBUaGlzIHdvcmtzIG9ubHkgaWYgW1tEYXRlQXhpc11dIGlzIGJhc2UgYXhpcyBvZiBhbiBbW1hZU2VyaWVzXV0uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGUgcmVsYXRlZCBbW1hZU2VyaWVzXV0gYWxzbyBuZWVkcyB0byBiZSBzZXQgdXAgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YsIGJ5XHJcbiAgICAgICAgICogc2V0dGluZyBpdHMgW2Bncm91cEZpZWxkc2BdKGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y0L3JlZmVyZW5jZS94eXNlcmllcy8jZ3JvdXBGaWVsZHNfcHJvcGVydHkpLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhlIGdyb3VwIGludGVydmFscyB0byBhZ2dyZWdhdGUgZGF0YSB0byBpcyBkZWZpbmVkIGJ5IGBncm91cEludGVydmFsc2BcclxuICAgICAgICAgKiBwcm9wZXJ0eS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIGBgYFR5cGVTY3JpcHRcclxuICAgICAgICAgKiBsZXQgZGF0ZUF4aXMgPSBjaGFydC54QXhlcy5wdXNoKG5ldyBhbTRjaGFydHMuRGF0ZUF4aXMoKSk7XHJcbiAgICAgICAgICogZGF0ZUF4aXMuZ3JvdXBEYXRhID0gdHJ1ZTtcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIGxldCB2YWx1ZUF4aXMgPSBjaGFydC54QXhlcy5wdXNoKG5ldyBhbTRjaGFydHMudmFsdWVBeGlzKCkpO1xyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogbGV0IHNlcmllcyA9IGNoYXJ0LnNlcmllcy5wdXNoKG5ldyBhbTRjaGFydHMuTGluZVNlcmllcygpKTtcclxuICAgICAgICAgKiBzZXJpZXMuZGF0YUZpZWxkcy5kYXRlWCA9IFwiZGF0ZVwiO1xyXG4gICAgICAgICAqIHNlcmllcy5kYXRhRmllbGRzLnZhbHVlWSA9IFwidmFsdWVcIjtcclxuICAgICAgICAgKiBzZXJpZXMuZ3JvdXBGaWVsZHMudmFsdWVZID0gXCJhdmVyYWdlXCI7XHJcbiAgICAgICAgICogYGBgXHJcbiAgICAgICAgICogYGBgSmF2YVNjcmlwdFxyXG4gICAgICAgICAqIHZhciBkYXRlQXhpcyA9IGNoYXJ0LnhBeGVzLnB1c2gobmV3IGFtNGNoYXJ0cy5EYXRlQXhpcygpKTtcclxuICAgICAgICAgKiBkYXRlQXhpcy5ncm91cERhdGEgPSB0cnVlO1xyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogdmFyIHZhbHVlQXhpcyA9IGNoYXJ0LnhBeGVzLnB1c2gobmV3IGFtNGNoYXJ0cy52YWx1ZUF4aXMoKSk7XHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiB2YXIgc2VyaWVzID0gY2hhcnQuc2VyaWVzLnB1c2gobmV3IGFtNGNoYXJ0cy5MaW5lU2VyaWVzKCkpO1xyXG4gICAgICAgICAqIHNlcmllcy5kYXRhRmllbGRzLmRhdGVYID0gXCJkYXRlXCI7XHJcbiAgICAgICAgICogc2VyaWVzLmRhdGFGaWVsZHMudmFsdWVZID0gXCJ2YWx1ZVwiO1xyXG4gICAgICAgICAqIHNlcmllcy5ncm91cEZpZWxkcy52YWx1ZVkgPSBcImF2ZXJhZ2VcIjtcclxuICAgICAgICAgKiBgYGBcclxuICAgICAgICAgKiBgYGBKU09OXHJcbiAgICAgICAgICoge1xyXG4gICAgICAgICAqICAgLy8gLi4uXHJcbiAgICAgICAgICogICBcInhBeGVzXCI6IFt7XHJcbiAgICAgICAgICogICAgIFwidHlwZVwiOiBcIkRhdGVBeGlzXCIsXHJcbiAgICAgICAgICogICAgIFwiZ3JvdXBEYXRhXCI6IHRydWVcclxuICAgICAgICAgKiAgIH1dLFxyXG4gICAgICAgICAqICAgXCJ5QXhlc1wiOiBbe1xyXG4gICAgICAgICAqICAgICBcInR5cGVcIjogXCJWYWx1ZUF4aXNcIlxyXG4gICAgICAgICAqICAgfV0sXHJcbiAgICAgICAgICogICBcInNlcmllc1wiOiBbe1xyXG4gICAgICAgICAqICAgICBcInR5cGVcIjogXCJMaW5lU2VyaWVzXCIsXHJcbiAgICAgICAgICogICAgIFwiZGF0YUZpZWxkc1wiOiB7XHJcbiAgICAgICAgICogICAgICAgXCJkYXRlWFwiOiBcImRhdGVcIixcclxuICAgICAgICAgKiAgICAgICBcInZhbHVlWVwiOiBcInZhbHVlXCJcclxuICAgICAgICAgKiAgICAgfSxcclxuICAgICAgICAgKiAgICAgXCJncm91cEZpZWxkc1wiOiB7XHJcbiAgICAgICAgICogICAgICAgXCJ2YWx1ZVlcIjogXCJhdmVyYWdlXCJcclxuICAgICAgICAgKiAgICAgfVxyXG4gICAgICAgICAqICAgfV1cclxuICAgICAgICAgKiB9XHJcbiAgICAgICAgICogYGBgXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAZGVmYXVsdCBmYWxzZVxyXG4gICAgICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y0L2NvbmNlcHRzL2F4ZXMvZGF0ZS1heGlzLyNEeW5hbWljX2RhdGFfaXRlbV9ncm91cGluZ30gZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgZHluYW1pYyBkYXRhIGl0ZW0gZ3JvdXBpbmcuXHJcbiAgICAgICAgICogQHNpbmNlIDQuNy4wXHJcbiAgICAgICAgICogQHBhcmFtICB2YWx1ZSAgR3JvdXAgZGF0YSBwb2ludHM/XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImdyb3VwRGF0YVwiLCB2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VyaWVzLmVhY2goZnVuY3Rpb24gKHNlcmllcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlcmllcy5zZXREYXRhU2V0KFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAmJiAhc2VyaWVzLmRhdGFHcm91cGVkICYmIHNlcmllcy5pbml0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWVzLl9iYXNlSW50ZXJ2YWxbX3RoaXMudWlkXSA9IF90aGlzLm1haW5CYXNlSW50ZXJ2YWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmdyb3VwU2VyaWVzRGF0YShzZXJpZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudERhdGFTZXRJZCA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9ncm91cEludGVydmFsID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkYXRlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmludmFsaWRhdGVTZXJpZXMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERhdGVBeGlzLnByb3RvdHlwZSwgXCJncm91cEludGVydmFsXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEludGVydmFsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJncm91cEludGVydmFsXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogRGlzYWJsZXMgYXV0b21hdGljIHNlbGVjdGlvbiBvZiBkYXRhIGdyb3VwaW5nIGludGVydmFscyBhbmQgYWx3YXlzIHVzZXNcclxuICAgICAgICAgKiBgZ3JvdXBJbnRlcnZhbGAgaWYgc2V0LiBXb3JrcyBvbmx5IGlmIGBncm91cERhdGEgPSB0cnVlYC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBzaW5jZSA0LjkuMjRcclxuICAgICAgICAgKiBAcGFyYW0gIHZhbHVlICBJbnRlcnZhbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJncm91cEludGVydmFsXCIsIHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkYXRlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmludmFsaWRhdGVTZXJpZXMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERhdGVBeGlzLnByb3RvdHlwZSwgXCJncm91cENvdW50XCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIE51bWJlciBvZiBkYXRhIGl0ZW1zXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJncm91cENvdW50XCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSW5kaWNhdGVzIHRocmVzaG9sZCBvZiBkYXRhIGl0ZW1zIGluIHNlbGVjdGVkIHJhbmdlIGF0IHdoaWNoIHRvIHN0YXJ0XHJcbiAgICAgICAgICogYWdncmVnYXRpbmcgZGF0YSBpdGVtcyBpZiBgZ3JvdXBEYXRhID0gdHJ1ZWAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAZGVmYXVsdCAyMDBcclxuICAgICAgICAgKiBAc2luY2UgNC43LjBcclxuICAgICAgICAgKiBAcGFyYW0gIHZhbHVlICBOdW1iZXIgb2YgZGF0YSBpdGVtc1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImdyb3VwQ291bnRcIiwgdmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERhdGVBeGlzLnByb3RvdHlwZSwgXCJ0aW1lem9uZU9mZnNldFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHRvZG8gVGltZXpvbmUgb2Zmc2V0IGluIG1pbnV0ZXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcInRpbWV6b25lT2Zmc2V0XCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBJbmRpY2F0ZXMgYnkgaG93IG1hbnkgbWludXRlcyB0aGUgdGltZXN0YW1wcyBpbiB5b3VyIGRhdGEgYXJlIG9mZnNldCBmcm9tIEdNVC5cclxuICAgICAgICAgKiBUaGlzIGlzIHVzZWZ1bCB3aGVuIHlvdSBoYXZlIHRpbWVzdGFtcHMgYXMgeW91ciBkYXRhIGFuZCB5b3Ugd2FudCBhbGwgdGhlIHVzZXJzIHRvIHNlZVxyXG4gICAgICAgICAqIHRoZSBzYW1lIHJlc3VsdCBhbmQgbm90IHRoZSB0aW1lIHdoaWNoIHdhcyBhdCB1c2VycydzIGxvY2F0aW9uIGF0IHRoZSBnaXZlbiB0aW1lc3RhbXAuXHJcbiAgICAgICAgICogTm90ZSwgeW91IGRvIG5vdCBuZWVkIHRvIHNldCB0aW1lem9uZU9mZnNldCBib3RoIGhlcmUgYW5kIG9uIERhdGVGb3JtYXR0ZXIsIGFzIHRoaXMgd2lsbFxyXG4gICAgICAgICAqIGRpc3RvcnQgdGhlIHJlc3VsdC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxyXG4gICAgICAgICAqIEBzaW5jZSA0LjguNVxyXG4gICAgICAgICAqIEBwYXJhbSAgdmFsdWUgVGltZSB6b25lIG9mZnNldCBpbiBtaW51dGVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwidGltZXpvbmVPZmZzZXRcIiwgdmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERhdGVBeGlzLnByb3RvdHlwZSwgXCJncmlkSW50ZXJ2YWxcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEN1cnJlbnQgZ3JpZCBpbnRlcnZhbC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEByZXR1cm4gR3JpZCBpbnRlcnZhbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZ3JpZEludGVydmFsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIERhdGVBeGlzLnByb3RvdHlwZS5tYWtlR2FwID0gZnVuY3Rpb24gKGRhdGFJdGVtLCBwcmV2aW91cykge1xyXG4gICAgICAgIHZhciBzZXJpZXMgPSBkYXRhSXRlbS5jb21wb25lbnQ7XHJcbiAgICAgICAgaWYgKGRhdGFJdGVtICYmIHByZXZpb3VzKSB7XHJcbiAgICAgICAgICAgIGlmICghc2VyaWVzLmNvbm5lY3QgJiYgJHR5cGUuaXNOdW1iZXIoc2VyaWVzLmF1dG9HYXBDb3VudCkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuYmFzZUF4aXMgPT0gdGhpcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRlID0gZGF0YUl0ZW0uZGF0ZXNbXCJkYXRlXCIgKyB0aGlzLmF4aXNMZXR0ZXJdO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwcmV2RGF0ZSA9IHByZXZpb3VzLmRhdGVzW1wiZGF0ZVwiICsgdGhpcy5heGlzTGV0dGVyXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZSAmJiBwcmV2RGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGltZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJldlRpbWUgPSBwcmV2RGF0ZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lIC0gcHJldlRpbWUgPiBzZXJpZXMuYXV0b0dhcENvdW50ICogdGhpcy5iYXNlRHVyYXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0ZUF4aXMucHJvdG90eXBlLCBcImJhc2VWYWx1ZVwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBiYXNlIHZhbHVlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1pbjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIHJldHVybiBEYXRlQXhpcztcclxufShWYWx1ZUF4aXMpKTtcclxuZXhwb3J0IHsgRGF0ZUF4aXMgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiRGF0ZUF4aXNcIl0gPSBEYXRlQXhpcztcclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJEYXRlQXhpc0RhdGFJdGVtXCJdID0gRGF0ZUF4aXNEYXRhSXRlbTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGF0ZUF4aXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js ***!
  \*********************************************************************************/
/*! exports provided: DateAxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DateAxisBreak\", function() { return DateAxisBreak; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ValueAxisBreak__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValueAxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar DateAxisBreak = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(DateAxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxisBreak() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DateAxisBreak\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateAxisBreak.prototype, \"startDate\", {\r\n        /**\r\n         * @return Start date\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startDate\");\r\n        },\r\n        /**\r\n         * Starting date for the break.\r\n         *\r\n         * @param value Start date\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startDate\", value)) {\r\n                this.startValue = value.getTime();\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxisBreak.prototype, \"endDate\", {\r\n        /**\r\n         * @return End date\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endDate\");\r\n        },\r\n        /**\r\n         * Ending date for the break.\r\n         *\r\n         * @param value End date\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endDate\", value)) {\r\n                this.endValue = value.getTime();\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxisBreak;\r\n}(_ValueAxisBreak__WEBPACK_IMPORTED_MODULE_1__[\"ValueAxisBreak\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;\r\n//# sourceMappingURL=DateAxisBreak.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvRGF0ZUF4aXNCcmVhay5qcz85ZWEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tEO0FBQ0g7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyQkFBMkI7QUFDcEMsU0FBUyw2QkFBNkI7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyxDQUFDLDhEQUFjO0FBQ1M7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvYXhlcy9EYXRlQXhpc0JyZWFrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERhdGVBeGlzQnJlYWsgaW5jbHVkZXMgZnVuY3Rpb25hbGl0eSB0byBhZGQgYnJlYWtzIG9uIGEgW1tEYXRlQXhpc11dLlxyXG4gKlxyXG4gKiBBIFwiYnJlYWtcIiBjYW4gYmUgdXNlZCB0byBcImN1dCBvdXRcIiBzcGVjaWZpYyByYW5nZXMgb2YgdGhlIGF4aXMgc2NhbGUsIGUuZy5cclxuICogd2Vla2VuZHMgYW5kIGhvbGlkYXlzIG91dCBvZiB0aGUgRGF0ZS1iYXNlZCBheGlzLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBWYWx1ZUF4aXNCcmVhayB9IGZyb20gXCIuL1ZhbHVlQXhpc0JyZWFrXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBDbGFzcyB1c2VkIHRvIGRlZmluZSBicmVha3MgZm9yIFtbRGF0ZUF4aXNdXS5cclxuICpcclxuICogQSBcImJyZWFrXCIgY2FuIGJlIHVzZWQgdG8gXCJjdXQgb3V0XCIgc3BlY2lmaWMgcmFuZ2VzIG9mIHRoZSBheGlzIHNjYWxlLCBlLmcuXHJcbiAqIHdlZWtlbmRzIGFuZCBob2xpZGF5cyBvdXQgb2YgdGhlIERhdGUtYmFzZWQgYXhpcy5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSURhdGVBeGlzQnJlYWtFdmVudHN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIGV2ZW50c1xyXG4gKiBAc2VlIHtAbGluayBJRGF0ZUF4aXNCcmVha0FkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgRGF0ZUF4aXNCcmVhayA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhEYXRlQXhpc0JyZWFrLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBEYXRlQXhpc0JyZWFrKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJEYXRlQXhpc0JyZWFrXCI7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRlQXhpc0JyZWFrLnByb3RvdHlwZSwgXCJzdGFydERhdGVcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gU3RhcnQgZGF0ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwic3RhcnREYXRlXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU3RhcnRpbmcgZGF0ZSBmb3IgdGhlIGJyZWFrLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIFN0YXJ0IGRhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwic3RhcnREYXRlXCIsIHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydFZhbHVlID0gdmFsdWUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYXhpcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXhpcy5pbnZhbGlkYXRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5heGlzLmludmFsaWRhdGVTZXJpZXMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERhdGVBeGlzQnJlYWsucHJvdG90eXBlLCBcImVuZERhdGVcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gRW5kIGRhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImVuZERhdGVcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBFbmRpbmcgZGF0ZSBmb3IgdGhlIGJyZWFrLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIEVuZCBkYXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImVuZERhdGVcIiwgdmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZFZhbHVlID0gdmFsdWUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYXhpcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXhpcy5pbnZhbGlkYXRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5heGlzLmludmFsaWRhdGVTZXJpZXMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIERhdGVBeGlzQnJlYWs7XHJcbn0oVmFsdWVBeGlzQnJlYWspKTtcclxuZXhwb3J0IHsgRGF0ZUF4aXNCcmVhayB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJEYXRlQXhpc0JyZWFrXCJdID0gRGF0ZUF4aXNCcmVhaztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGF0ZUF4aXNCcmVhay5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js ***!
  \********************************************************************************/
/*! exports provided: DurationAxisDataItem, DurationAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DurationAxisDataItem\", function() { return DurationAxisDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DurationAxis\", function() { return DurationAxis; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ValueAxis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/**\r\n * DurationAxis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines data item for [[DurationAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar DurationAxisDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(DurationAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DurationAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DurationAxisDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return DurationAxisDataItem;\r\n}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__[\"ValueAxisDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create an axis that shows time durations.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DurationAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information about duration formatters.\r\n * @see {@link IDurationAxisEvents} for a list of available Events\r\n * @see {@link IDurationAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar DurationAxis = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(DurationAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DurationAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A base unit (granularity) of data.\r\n         *\r\n         * Used to indicate what are the base units of your data.\r\n         */\r\n        _this._baseUnit = \"second\";\r\n        _this.className = \"DurationAxis\";\r\n        _this.setPropertyValue(\"maxZoomFactor\", 1000000);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Formats the value according to axis' own [[DurationFormatter]].\r\n     *\r\n     * @param value  Source value\r\n     * @return Formatted value\r\n     */\r\n    DurationAxis.prototype.formatLabel = function (value, format) {\r\n        return this.durationFormatter.format(value, format || this.axisDurationFormat);\r\n    };\r\n    /**\r\n     * Adjusts actual min and max scale values so that the axis starts and ends\r\n     * at \"nice\" values, unless `strictMinMax` is set.\r\n     *\r\n     * The `difference` can be something else than `max - min`, because of the\r\n     * axis breaks.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param min        [description]\r\n     * @param max        [description]\r\n     * @param difference [description]\r\n     * @param gridCount  [description]\r\n     * @param strictMode [description]\r\n     * @return [description]\r\n     */\r\n    DurationAxis.prototype.adjustMinMax = function (min, max, difference, gridCount, strictMode) {\r\n        var e_1, _a;\r\n        var minMaxStep;\r\n        var timeUnit = this.baseUnit;\r\n        // we don't allow to go to smaller units, setting so to avoid invalidation\r\n        this.setPropertyValue(\"maxPrecision\", 0);\r\n        if (timeUnit == \"millisecond\" || timeUnit == \"second\" || timeUnit == \"minute\" || timeUnit == \"hour\") {\r\n            // will fail if 0\r\n            if (gridCount <= 1) {\r\n                gridCount = 1;\r\n            }\r\n            gridCount = Math.round(gridCount);\r\n            var initialMin = min;\r\n            var initialMax = max;\r\n            // in case min and max is the same, use max\r\n            if (difference === 0) {\r\n                difference = Math.abs(max);\r\n            }\r\n            var step = difference / gridCount;\r\n            var divisors = [60, 30, 20, 15, 10, 2, 1];\r\n            var realDivisor = 1;\r\n            if (timeUnit == \"hour\") {\r\n                divisors = [24, 12, 6, 4, 2, 1];\r\n            }\r\n            try {\r\n                for (var divisors_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__values\"])(divisors), divisors_1_1 = divisors_1.next(); !divisors_1_1.done; divisors_1_1 = divisors_1.next()) {\r\n                    var divisor = divisors_1_1.value;\r\n                    if (difference / divisor > gridCount) {\r\n                        realDivisor = divisor;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (divisors_1_1 && !divisors_1_1.done && (_a = divisors_1.return)) _a.call(divisors_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            var count = Math.ceil(((max - min) / realDivisor) / gridCount);\r\n            var exponent = Math.log(Math.abs(count)) * Math.LOG10E;\r\n            var power = Math.pow(10, Math.floor(exponent)) / 10;\r\n            var reducedCount = count / power;\r\n            // find closest to divisor\r\n            var closest = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"closest\"](divisors, reducedCount);\r\n            count = closest * power;\r\n            step = realDivisor * count;\r\n            // TODO can this be removed ?\r\n            this.durationFormatter.getValueUnit(step, this.baseUnit);\r\n            min = Math.floor(min / step) * step;\r\n            max = Math.ceil(max / step) * step;\r\n            if (strictMode) {\r\n                min -= step;\r\n                if (min < 0 && initialMin >= 0) {\r\n                    min = 0;\r\n                }\r\n                max += step;\r\n                if (max > 0 && initialMax <= 0) {\r\n                    max = 0;\r\n                }\r\n            }\r\n            minMaxStep = { min: min, max: max, step: step };\r\n        }\r\n        else {\r\n            minMaxStep = _super.prototype.adjustMinMax.call(this, min, max, difference, gridCount, strictMode);\r\n        }\r\n        // choose duration formatter based on step\r\n        this.axisDurationFormat = this.durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, this.baseUnit);\r\n        return minMaxStep;\r\n    };\r\n    Object.defineProperty(DurationAxis.prototype, \"tooltipDurationFormat\", {\r\n        /**\r\n         * @return Duration format for axis labels\r\n         */\r\n        get: function () {\r\n            return this._tooltipDurationFormat;\r\n        },\r\n        /**\r\n         * A special duration format to apply axis tooltips.\r\n         *\r\n         * Will use same format as for labels, if not set.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information.\r\n         * @param value  Duration format for axis labels\r\n         */\r\n        set: function (value) {\r\n            this._tooltipDurationFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns text to show in a axis tooltip, based on specific position within\r\n     * axis.\r\n     *\r\n     * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n     * chart, or explicitly for this Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (px)\r\n     * @return Label (numeric value)\r\n     */\r\n    DurationAxis.prototype.getTooltipText = function (position) {\r\n        var value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"round\"](this.positionToValue(position), this._stepDecimalPlaces);\r\n        var valueStr = this.formatLabel(value, this.tooltipDurationFormat);\r\n        if (!this._adapterO) {\r\n            return valueStr;\r\n        }\r\n        else {\r\n            return this._adapterO.apply(\"getTooltipText\", valueStr);\r\n        }\r\n    };\r\n    Object.defineProperty(DurationAxis.prototype, \"baseUnit\", {\r\n        /**\r\n         * @return Base unit\r\n         */\r\n        get: function () {\r\n            return this._baseUnit;\r\n        },\r\n        /**\r\n         * A base unit (granularity) of data.\r\n         *\r\n         * Used to indicate what are the base units of your data.\r\n         *\r\n         * Available options: \"millisecond\", \"second\" (default), \"minute\", \"hour\",\r\n         * \"day\", \"week\", \"month\", \"year\".\r\n         *\r\n         * @default \"second\"\r\n         * @param timeUnit\r\n         */\r\n        set: function (timeUnit) {\r\n            if (this._baseUnit != timeUnit) {\r\n                this._baseUnit = timeUnit;\r\n                this.durationFormatter.baseUnit = timeUnit;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    DurationAxis.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.baseUnit = source.baseUnit;\r\n    };\r\n    return DurationAxis;\r\n}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__[\"ValueAxis\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"DurationAxis\"] = DurationAxis;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"DurationAxisDataItem\"] = DurationAxisDataItem;\r\n//# sourceMappingURL=DurationAxis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js ***!
  \********************************************************************************/
/*! exports provided: GridCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GridCircular\", function() { return GridCircular; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Grid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Grid */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * A module defining functionality for circular axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a circular grid element for circular-type axis.\r\n *\r\n * @see {@link IGridCircularEvents} for a list of available events\r\n * @see {@link IGridCircularAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the GridCircular, also with 3d charts we might need some additional elements\r\n */\r\nvar GridCircular = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(GridCircular, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GridCircular() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"GridCircular\";\r\n        _this.pixelPerfect = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(GridCircular.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the circular grid. (absolute or relative)\r\n         *\r\n         * @param value Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GridCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the circular grid. (absolute or relative)\r\n         *\r\n         * @param value Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GridCircular;\r\n}(_Grid__WEBPACK_IMPORTED_MODULE_1__[\"Grid\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"GridCircular\"] = GridCircular;\r\n//# sourceMappingURL=GridCircular.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2F4ZXMvR3JpZENpcmN1bGFyLmpzP2RkZjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDOEI7QUFDaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywwQkFBMEI7QUFDbkMsU0FBUyw0QkFBNEI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDLENBQUMsMENBQUk7QUFDa0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvYXhlcy9HcmlkQ2lyY3VsYXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQSBtb2R1bGUgZGVmaW5pbmcgZnVuY3Rpb25hbGl0eSBmb3IgY2lyY3VsYXIgYXhpcyBncmlkIGVsZW1lbnRzLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBHcmlkIH0gZnJvbSBcIi4vR3JpZFwiO1xyXG5pbXBvcnQgeyByZWdpc3RyeSB9IGZyb20gXCIuLi8uLi9jb3JlL1JlZ2lzdHJ5XCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ3JlYXRlcyBhIGNpcmN1bGFyIGdyaWQgZWxlbWVudCBmb3IgY2lyY3VsYXItdHlwZSBheGlzLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJR3JpZENpcmN1bGFyRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSUdyaWRDaXJjdWxhckFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAdG9kbyBSZXZpZXc6IGNvbnRhaW5lciBpcyBiZXR0ZXIsIGFzIHdlJ2xsIGJlIGFibGUgdG8gYXR0YWNoIHNvbWV0aGluZyB0byB0aGUgR3JpZENpcmN1bGFyLCBhbHNvIHdpdGggM2QgY2hhcnRzIHdlIG1pZ2h0IG5lZWQgc29tZSBhZGRpdGlvbmFsIGVsZW1lbnRzXHJcbiAqL1xyXG52YXIgR3JpZENpcmN1bGFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEdyaWRDaXJjdWxhciwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gR3JpZENpcmN1bGFyKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJHcmlkQ2lyY3VsYXJcIjtcclxuICAgICAgICBfdGhpcy5waXhlbFBlcmZlY3QgPSBmYWxzZTtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEdyaWRDaXJjdWxhci5wcm90b3R5cGUsIFwiaW5uZXJSYWRpdXNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gSW5uZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJpbm5lclJhZGl1c1wiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElubmVyIHJhZGl1cyBvZiB0aGUgY2lyY3VsYXIgZ3JpZC4gKGFic29sdXRlIG9yIHJlbGF0aXZlKVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIElubmVyIHJhZGl1c1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UGVyY2VudFByb3BlcnR5KFwiaW5uZXJSYWRpdXNcIiwgdmFsdWUsIHRydWUsIGZhbHNlLCAxMCwgZmFsc2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEdyaWRDaXJjdWxhci5wcm90b3R5cGUsIFwicmFkaXVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIE91dGVyIHJhZGl1c1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwicmFkaXVzXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogT3V0ZXIgcmFkaXVzIG9mIHRoZSBjaXJjdWxhciBncmlkLiAoYWJzb2x1dGUgb3IgcmVsYXRpdmUpXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgT3V0ZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQZXJjZW50UHJvcGVydHkoXCJyYWRpdXNcIiwgdmFsdWUsIHRydWUsIGZhbHNlLCAxMCwgZmFsc2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIEdyaWRDaXJjdWxhcjtcclxufShHcmlkKSk7XHJcbmV4cG9ydCB7IEdyaWRDaXJjdWxhciB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJHcmlkQ2lyY3VsYXJcIl0gPSBHcmlkQ2lyY3VsYXI7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUdyaWRDaXJjdWxhci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js ***!
  \*****************************************************************************/
/*! exports provided: Cursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cursor\", function() { return Cursor; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/interaction/Interaction */ \"./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/interaction/Mouse */ \"./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_DOM__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/DOM */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js\");\n/* harmony import */ var _core_System__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/System */ \"./node_modules/@amcharts/amcharts4/.internal/core/System.js\");\n/**\r\n * Cursor module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Main Cursor class with common cursor functionality.\r\n *\r\n * Chart-specific cursors must extend this class.\r\n *\r\n * @see {@link ICursorEvents} for a list of available events\r\n * @see {@link ICursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n * @todo Should we allow changing `_generalBehavior`?\r\n */\r\nvar Cursor = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(Cursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Cursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Current cursor position during selection.\r\n         *\r\n         * @todo Better description\r\n         */\r\n        _this.point = { x: 0, y: 0 };\r\n        /**\r\n         * Specifies the rules when cursor needs to be moved or hidden.\r\n         */\r\n        _this._stick = \"none\";\r\n        _this.className = \"Cursor\";\r\n        // Set defaults\r\n        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__[\"percent\"])(100);\r\n        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__[\"percent\"])(100);\r\n        _this.shouldClone = false;\r\n        _this.hide(0);\r\n        _this.trackable = true;\r\n        _this.clickable = true;\r\n        _this.isMeasured = false;\r\n        // Add events on body to trigger down and up events (to start zooming or\r\n        // selection)\r\n        var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])();\r\n        _this._disposers.push(interaction.body.events.on(\"down\", _this.handleCursorDown, _this));\r\n        _this._disposers.push(interaction.body.events.on(\"up\", _this.handleCursorUp, _this));\r\n        _this._disposers.push(interaction.body.events.on(\"track\", _this.handleCursorMove, _this));\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Handle pointer movement in document and update cursor position as needed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event\r\n     */\r\n    Cursor.prototype.handleCursorMove = function (event) {\r\n        if (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch)) {\r\n            return;\r\n        }\r\n        if (((this._generalBehavior != \"zoom\" && this._generalBehavior != \"pan\") || !this.downPoint) && !Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n            // We want to let zoom/pan continue even if cursor is outside chart area\r\n            if (!this.isHidden || !this.isHiding) {\r\n                this.hide();\r\n            }\r\n            return;\r\n        }\r\n        var local = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__[\"documentPointToSprite\"](event.pointer.point, this);\r\n        if (this._stick == \"hard\" && this._stickPoint) {\r\n            local = this._stickPoint;\r\n        }\r\n        if (this._stick == \"soft\" && this._stickPoint) {\r\n            if (!this.fitsToBounds(local)) {\r\n                local = this._stickPoint;\r\n            }\r\n        }\r\n        if (this._adapterO) {\r\n            this._adapterO.apply(\"cursorPoint\", local);\r\n        }\r\n        this.triggerMove(local);\r\n        return local;\r\n    };\r\n    /**\r\n     * Hides actual SVG elements and handles hiding animations.\r\n     *\r\n     * @param duration  Fade out duration (ms)\r\n     * @return Fade out duration (ms)\r\n     * @ignore\r\n     */\r\n    Cursor.prototype.hideReal = function (duration) {\r\n        if ((this._stick == \"hard\" || this._stick == \"soft\") && this._stickPoint) {\r\n            return;\r\n        }\r\n        return _super.prototype.hideReal.call(this, duration);\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * The second parameter has following options:\r\n     *\r\n     * `\"none\"` - placed cursor will only be there until mouse/touch moves, then\r\n     * it either moves to a new place (if pointer over plot area) or is hidden.\r\n     *\r\n     * `\"soft\"` - cursor will stay in the place if mouse/touch is happening\r\n     * outside chart, but will move to a new place whe plot area is hovered or\r\n     * touched.\r\n     *\r\n     * `\"hard\"` - cursor will stay in place no matter what, until it is moved by\r\n     * another `triggerMove()` call.\r\n     *\r\n     * The third parameter - `force` (since `4.9.5`) - if set to `true` will\r\n     * make cursor execute all of the actions associated with cursor move,\r\n     * including line redraws, tooltip updates, etc. Useful when underlying\r\n     * chart data is dynamically being updated.\r\n     *\r\n     * @param point  Point to place cursor at\r\n     * @param stick  Level of cursor stickiness to the place\r\n     * @param force  Force cursor move\r\n     */\r\n    Cursor.prototype.triggerMove = function (point, stick, force) {\r\n        point.x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"round\"](point.x, 1);\r\n        point.y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"round\"](point.y, 1);\r\n        if (stick) {\r\n            this._stick = stick;\r\n        }\r\n        if (stick == \"hard\" || stick == \"soft\") {\r\n            this._stickPoint = point;\r\n        }\r\n        this.triggerMoveReal(point, force);\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * @param point Point to place cursor at\r\n     */\r\n    Cursor.prototype.triggerMoveReal = function (point, force) {\r\n        if (this.point.x != point.x || this.point.y != point.y || force) {\r\n            this.point = point;\r\n            this.invalidatePosition();\r\n            // hide cursor if it's out of bounds\r\n            if (this.fitsToBounds(point)) {\r\n                this.show(0);\r\n            }\r\n            else {\r\n                // unless we are selecting (mouse is down)\r\n                if (!this.downPoint) {\r\n                    this.hide(0);\r\n                }\r\n            }\r\n            if (this.visible) {\r\n                this.getPositions();\r\n                this.dispatch(\"cursorpositionchanged\"); // not good to dispatch later (check step count example)\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Simulates pressing down (click/touch) action by a cursor.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerDown = function (point) {\r\n        this.triggerDownReal(point);\r\n    };\r\n    /**\r\n     * Simulates pressing down (click/touch) action by a cursor.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerDownReal = function (point) {\r\n        switch (this._generalBehavior) {\r\n            case \"zoom\":\r\n                this.dispatchImmediately(\"zoomstarted\");\r\n                break;\r\n            case \"select\":\r\n                this.dispatchImmediately(\"selectstarted\");\r\n                break;\r\n            case \"pan\":\r\n                this.dispatchImmediately(\"panstarted\");\r\n                Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])().setGlobalStyle(_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__[\"MouseCursorStyle\"].grabbing);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Simulates the action of release of the mouse down / touch.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerUp = function (point) {\r\n        this.triggerUpReal(point);\r\n    };\r\n    /**\r\n     * Simulates the action of release of the mouse down / touch.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerUpReal = function (point) {\r\n        _core_System__WEBPACK_IMPORTED_MODULE_10__[\"system\"].requestFrame();\r\n        this.updatePoint(this.upPoint);\r\n        var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])();\r\n        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"getDistance\"](this._upPointOrig, this._downPointOrig) > interaction.getHitOption(this.interactions, \"hitTolerance\")) {\r\n            switch (this._generalBehavior) {\r\n                case \"zoom\":\r\n                    this.dispatch(\"zoomended\");\r\n                    break;\r\n                case \"select\":\r\n                    this.dispatch(\"selectended\");\r\n                    break;\r\n                case \"pan\":\r\n                    this.dispatch(\"panended\");\r\n                    interaction.setGlobalStyle(_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__[\"MouseCursorStyle\"].default);\r\n                    break;\r\n            }\r\n            this.downPoint = undefined;\r\n            this.updateSelection();\r\n        }\r\n        /*\r\n        else {\r\n            \r\n            if(this._generalBehavior == \"select\"){\r\n                this.dispatchImmediately(\"selectended\");\r\n            }\r\n            this.dispatchImmediately(\"behaviorcanceled\");\r\n            interaction.setGlobalStyle(MouseCursorStyle.default);\r\n            this.downPoint = undefined;\r\n        }*/\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Cursor.prototype.updateSelection = function () {\r\n    };\r\n    /**\r\n     * Updates cursors current positions.\r\n     */\r\n    Cursor.prototype.getPositions = function () {\r\n        // positions are used by axes or series\r\n        this.xPosition = this.point.x / this.innerWidth;\r\n        this.yPosition = 1 - this.point.y / this.innerHeight;\r\n    };\r\n    /**\r\n     * Handles pointer down event so we can start zoom or selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original event\r\n     */\r\n    Cursor.prototype.handleCursorDown = function (event) {\r\n        if (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch) || !Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n            return;\r\n        }\r\n        // Initiate blur so that whatever focused element on the page is unselected\r\n        _core_utils_DOM__WEBPACK_IMPORTED_MODULE_9__[\"blur\"]();\r\n        // Get local point\r\n        var local = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__[\"documentPointToSprite\"](event.pointer.point, this);\r\n        if (this._stick == \"hard\" && this._stickPoint) {\r\n            local = this._stickPoint;\r\n        }\r\n        if (this._adapterO) {\r\n            this._adapterO.apply(\"cursorPoint\", local);\r\n        }\r\n        if (!this.fitsToBounds(local)) {\r\n            return;\r\n        }\r\n        this._downPointOrig = { x: local.x, y: local.y };\r\n        // We need to cancel the event to prevent gestures on touch devices\r\n        if (event.event.cancelable && this.shouldPreventGestures(event.touch) && this.fitsToBounds(local)) {\r\n            event.event.preventDefault();\r\n        }\r\n        // Make this happen\r\n        this.triggerMove(local);\r\n        this.triggerDown(local);\r\n    };\r\n    /**\r\n     * Determines whether Cursor should prevent default action on move.\r\n     *\r\n     * Child classes should override this as necessary.\r\n     *\r\n     * @return Prevent default?\r\n     */\r\n    Cursor.prototype.shouldPreventGestures = function (touch) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Updates the coordinates of where pointer down event occurred\r\n     * (was pressed).\r\n     */\r\n    Cursor.prototype.updatePoint = function (point) {\r\n    };\r\n    /**\r\n     * Handles pointer up event - finishes zoom or selection action.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original event\r\n     */\r\n    Cursor.prototype.handleCursorUp = function (event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        if (!this.downPoint && !Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n            return;\r\n        }\r\n        var local = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__[\"documentPointToSprite\"](event.pointer.point, this);\r\n        if (this._adapterO) {\r\n            this._adapterO.apply(\"cursorPoint\", local);\r\n        }\r\n        if (!this.downPoint || !this.fitsToBounds(this.downPoint)) {\r\n            return;\r\n        }\r\n        if (this._stick == \"hard\" && this._stickPoint) {\r\n            local = this._stickPoint;\r\n        }\r\n        this._upPointOrig = { x: local.x, y: local.y };\r\n        this.triggerMove(local);\r\n        this.triggerUp(local);\r\n    };\r\n    Object.defineProperty(Cursor.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * A reference to a [[Chart]] the cursor belongs to.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](this._chart.plotContainer)) {\r\n                Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__[\"getInteraction\"])().lockElement(this._chart.plotContainer.interactions);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Cursor;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_1__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"Cursor\"] = Cursor;\r\n//# sourceMappingURL=Cursor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js ***!
  \**********************************************************************************/
/*! exports provided: RadarCursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarCursor\", function() { return RadarCursor; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _XYCursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYCursor */ \"./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Cursor for [[RadarChart]].\r\n *\r\n * @see {@link IRadarCursorEvents} for a list of available events\r\n * @see {@link IRadarCursorAdapters} for a list of available Adapters\r\n */\r\nvar RadarCursor = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarCursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarCursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"RadarCursor\";\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100);\r\n        _this.innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(0);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        _this.mask = undefined;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point  Point to check\r\n     * @return Fits within container?\r\n     */\r\n    RadarCursor.prototype.fitsToBounds = function (point) {\r\n        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](point);\r\n        //if(!$math.isAngleInRange(angle, this.startAngle, this.endAngle)){\r\n        //return false;\r\n        //}\r\n        if (radius < this.truePixelRadius + 1 && radius > this.pixelInnerRadius - 1) { // ok to add/remove some\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(RadarCursor.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the cursor's radial line.\r\n         *\r\n         * @param value Start angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the cursor's radial line.\r\n         *\r\n         * @param value End angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RadarCursor.prototype.triggerMoveReal = function (point, force) {\r\n        if (!this.xAxis || (this.xAxis && (!this.xAxis.cursorTooltipEnabled || this.xAxis.tooltip.disabled))) {\r\n            this.updateLineX(this.point);\r\n        }\r\n        if (!this.yAxis || (this.yAxis && (!this.yAxis.cursorTooltipEnabled || this.yAxis.tooltip.disabled))) {\r\n            this.updateLineY(this.point);\r\n        }\r\n        this.updateSelection();\r\n        _super.prototype.triggerMoveReal.call(this, point, force);\r\n    };\r\n    /**\r\n     * (Re)draws the horizontal (circular) cursor's line.\r\n     *\r\n     * @param point New target point\r\n     */\r\n    RadarCursor.prototype.updateLineX = function (point) {\r\n        var radius = this.pixelRadius;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        var innerRadius = this.pixelInnerRadius;\r\n        if (radius > 0 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](startAngle) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](endAngle) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](innerRadius)) {\r\n            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](point), startAngle, endAngle);\r\n            var path = void 0;\r\n            if (this.lineX && this.lineX.visible) {\r\n                this.lineX.moveTo({ x: 0, y: 0 });\r\n                // fill\r\n                if (this.xAxis && this.fullWidthLineX) {\r\n                    var startPoint = this.xAxis.currentItemStartPoint;\r\n                    var endPoint = this.xAxis.currentItemEndPoint;\r\n                    if (startPoint && endPoint) {\r\n                        var fillStartAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](startPoint), startAngle, endAngle);\r\n                        var fillEndAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](endPoint), startAngle, endAngle);\r\n                        var arc = fillEndAngle - fillStartAngle;\r\n                        // clockwise\r\n                        // this is needed, normalizeAngle doesn't solve it\r\n                        if (startAngle < endAngle) {\r\n                            if (arc < 0) {\r\n                                arc += 360;\r\n                            }\r\n                        }\r\n                        // ccw\r\n                        else {\r\n                            if (arc > 0) {\r\n                                arc -= 360;\r\n                            }\r\n                        }\r\n                        angle -= arc / 2;\r\n                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle) })\r\n                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle) })\r\n                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](angle, arc, radius)\r\n                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle + arc), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle + arc) })\r\n                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](angle + arc, -arc, innerRadius);\r\n                    }\r\n                }\r\n                // line\r\n                if (!path) {\r\n                    path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle) });\r\n                }\r\n                this.lineX.path = path;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * (Re)draws the vertical (radial) cursor's line.\r\n     *\r\n     * @param point New target point\r\n     */\r\n    RadarCursor.prototype.updateLineY = function (point) {\r\n        if (this.lineY && this.lineY.visible) {\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var truePixelRadius = this.truePixelRadius;\r\n            var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](point), 0, this.truePixelRadius);\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](radius) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](startAngle)) {\r\n                this.lineY.moveTo({ x: 0, y: 0 });\r\n                var path = void 0;\r\n                var arc = endAngle - startAngle;\r\n                if (this.yAxis && this.fullWidthLineY) {\r\n                    // fill\r\n                    var startPoint = this.yAxis.currentItemStartPoint;\r\n                    var endPoint = this.yAxis.currentItemEndPoint;\r\n                    if (startPoint && endPoint) {\r\n                        var innerRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](startPoint), 0, truePixelRadius);\r\n                        radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](endPoint), 0, truePixelRadius);\r\n                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](startAngle, arc, radius);\r\n                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](endAngle, -arc, innerRadius);\r\n                    }\r\n                }\r\n                if (!path) {\r\n                    path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](startAngle, endAngle - startAngle, radius);\r\n                }\r\n                this.lineY.path = path;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.updateSelection = function () {\r\n        if (this._usesSelection) {\r\n            var downPoint = this.downPoint;\r\n            if (downPoint) {\r\n                var point = this.point;\r\n                var radius = this.pixelRadius;\r\n                var truePixelRadius = this.truePixelRadius;\r\n                var innerRadius = this.pixelInnerRadius;\r\n                var startAngle = Math.min(this.startAngle, this.endAngle);\r\n                var endAngle = Math.max(this.startAngle, this.endAngle);\r\n                var downAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](downPoint), startAngle, endAngle);\r\n                var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](point), startAngle, endAngle);\r\n                var downRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](downPoint);\r\n                if (downRadius < truePixelRadius) {\r\n                    var currentRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](point), 0, truePixelRadius);\r\n                    this._prevAngle = angle;\r\n                    var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: 0, y: 0 });\r\n                    var downSin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](downAngle);\r\n                    var downCos = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](downAngle);\r\n                    var sin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle);\r\n                    var cos = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle);\r\n                    var behavior = this.behavior;\r\n                    if (behavior == \"zoomX\" || behavior == \"selectX\") {\r\n                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: radius * downCos, y: radius * downSin }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](downAngle, angle - downAngle, radius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: innerRadius * cos, y: innerRadius * sin }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](angle, downAngle - angle, innerRadius);\r\n                    }\r\n                    else if (behavior == \"zoomY\" || behavior == \"selectY\") {\r\n                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle), y: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](startAngle, endAngle - startAngle, currentRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle), y: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](endAngle, startAngle - endAngle, downRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"closePath\"]();\r\n                    }\r\n                    else if (behavior == \"zoomXY\") {\r\n                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](downAngle), y: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](downAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](downAngle, angle - downAngle, currentRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle), y: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arcTo\"](angle, downAngle - angle, downRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"closePath\"]();\r\n                    }\r\n                    this.selection.path = path;\r\n                }\r\n                this.selection.moveTo({ x: 0, y: 0 });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates cursors current positions.\r\n     */\r\n    RadarCursor.prototype.getPositions = function () {\r\n        // positions are used by axes or series\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var innerRadius = this.pixelInnerRadius;\r\n            var radius = this.truePixelRadius - innerRadius;\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](this.point), startAngle, endAngle);\r\n            var xPosition = ((angle - startAngle) / (endAngle - startAngle));\r\n            this.xPosition = xPosition;\r\n            this.yPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"]((_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](this.point) - innerRadius) / radius, 0, 1);\r\n        }\r\n    };\r\n    /**\r\n     * Overriding inherited method, so that nothing happens when it's triggered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.updatePoint = function (point) {\r\n    };\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes horizontal position.\r\n     *\r\n     * @param event Axis event\r\n     */\r\n    RadarCursor.prototype.handleXTooltipPosition = function (event) {\r\n        if (this.xAxis.cursorTooltipEnabled) {\r\n            var tooltip = this.xAxis.tooltip;\r\n            this.updateLineX(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"svgPointToSprite\"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n        }\r\n    };\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes vertical position.\r\n     *\r\n     * @todo Description\r\n     * @param event Axis event\r\n     */\r\n    RadarCursor.prototype.handleYTooltipPosition = function (event) {\r\n        if (this.yAxis.cursorTooltipEnabled) {\r\n            var tooltip = this.yAxis.tooltip;\r\n            this.updateLineY(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"svgPointToSprite\"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n        }\r\n    };\r\n    /**\r\n     * needs to be overriden\r\n     * @ignore\r\n     */\r\n    RadarCursor.prototype.updateLinePositions = function (point) {\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    RadarCursor.prototype.getRanges = function () {\r\n        var downPoint = this.downPoint;\r\n        if (downPoint) {\r\n            var upPoint = this.upPoint;\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                var radius = this.pixelRadius;\r\n                var startAngle = this.startAngle;\r\n                var endAngle = this.endAngle;\r\n                var downAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](downPoint), this.startAngle, this.endAngle);\r\n                var upAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitAngleToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"](upPoint), this.startAngle, this.endAngle);\r\n                var downRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](downPoint), 0, radius);\r\n                var upRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"fitToRange\"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getDistance\"](upPoint), 0, radius);\r\n                var startX = 0;\r\n                var endX = 1;\r\n                var startY = 0;\r\n                var endY = 1;\r\n                var behavior = this.behavior;\r\n                if (behavior == \"zoomX\" || behavior == \"selectX\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n                    var arc = endAngle - startAngle;\r\n                    startX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"]((downAngle - startAngle) / arc, 5);\r\n                    endX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"]((upAngle - startAngle) / arc, 5);\r\n                }\r\n                if (behavior == \"zoomY\" || behavior == \"selectY\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n                    startY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](downRadius / radius, 5);\r\n                    endY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](upRadius / radius, 5);\r\n                }\r\n                this.xRange = { start: Math.min(startX, endX), end: Math.max(startX, endX) };\r\n                this.yRange = { start: Math.min(startY, endY), end: Math.max(startY, endY) };\r\n                if (this.behavior == \"selectX\" || this.behavior == \"selectY\" || this.behavior == \"selectXY\") {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.selection.hide();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Overriding inherited method, so that nothing happens when `updateSize`\r\n     * is triggered.\r\n     *\r\n     * RadarCursor is quite complicated and needs own sizing logic.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.updateSize = function () { };\r\n    Object.defineProperty(RadarCursor.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the cursor's circular line.\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Outer radius of the circular line in pixels.\r\n         *\r\n         * @return Outer radius (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeRadiusToValue\"](this.radius, this.truePixelRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"truePixelRadius\", {\r\n        /**\r\n         * [truePixelRadius description]\r\n         *\r\n         * @todo Description\r\n         * @return Outer radius (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeToValue\"](Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100), _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"min\"](this.innerWidth / 2, this.innerHeight / 2));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the cursor's circular line.\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * Inner radius of the circular line in pixels.\r\n         *\r\n         * @return Inner radius (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            var innerRadius = this.innerRadius;\r\n            if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"Percent\"]) {\r\n                innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100 * innerRadius.value * this.chart.innerRadiusModifyer);\r\n            }\r\n            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeRadiusToValue\"](innerRadius, this.truePixelRadius) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.fixPoint = function (point) {\r\n        // overriding xy method\r\n        return point;\r\n    };\r\n    return RadarCursor;\r\n}(_XYCursor__WEBPACK_IMPORTED_MODULE_1__[\"XYCursor\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"RadarCursor\"] = RadarCursor;\r\n//# sourceMappingURL=RadarCursor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2N1cnNvcnMvUmFkYXJDdXJzb3IuanM/YmM5OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFrQztBQUNJO0FBQ3NCO0FBQ2I7QUFDSTtBQUNKO0FBQ0U7QUFDRjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHlCQUF5QjtBQUNsQyxTQUFTLDJCQUEyQjtBQUNwQztBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUVBQU87QUFDOUIsNEJBQTRCLG1FQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDREQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxzRkFBc0Y7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlEQUFjLGdCQUFnQix5REFBYyxjQUFjLHlEQUFjO0FBQ2xHLHdCQUF3QixnRUFBcUIsQ0FBQyx5REFBYztBQUM1RDtBQUNBO0FBQ0EsbUNBQW1DLGFBQWE7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxnRUFBcUIsQ0FBQyx5REFBYztBQUNqRiwyQ0FBMkMsZ0VBQXFCLENBQUMseURBQWM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDJEQUFZLEVBQUUsa0JBQWtCLG9EQUFTLDBCQUEwQixvREFBUyxTQUFTO0FBQ3BILDhCQUE4QiwyREFBWSxFQUFFLGFBQWEsb0RBQVMscUJBQXFCLG9EQUFTLFNBQVM7QUFDekcsOEJBQThCLDBEQUFXO0FBQ3pDLDhCQUE4QiwyREFBWSxFQUFFLGtCQUFrQixvREFBUyxnQ0FBZ0Msb0RBQVMsZUFBZTtBQUMvSCw4QkFBOEIsMERBQVc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkRBQVksRUFBRSxrQkFBa0Isb0RBQVMsMEJBQTBCLG9EQUFTLFNBQVMsSUFBSSwyREFBWSxFQUFFLGFBQWEsb0RBQVMscUJBQXFCLG9EQUFTLFNBQVM7QUFDL0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDJEQUFnQixDQUFDLDREQUFpQjtBQUMzRCxnQkFBZ0IseURBQWMsWUFBWSx5REFBYztBQUN4RCxtQ0FBbUMsYUFBYTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQywyREFBZ0IsQ0FBQyw0REFBaUI7QUFDNUUsaUNBQWlDLDJEQUFnQixDQUFDLDREQUFpQjtBQUNuRSwrQkFBK0IsMkRBQVksRUFBRSxhQUFhLG9EQUFTLDBCQUEwQixvREFBUyxjQUFjLElBQUksMERBQVc7QUFDbkksZ0NBQWdDLDJEQUFZLEVBQUUsa0JBQWtCLG9EQUFTLDZCQUE2QixvREFBUyxZQUFZLElBQUksMERBQVc7QUFDMUk7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFZLEVBQUUsYUFBYSxvREFBUywwQkFBMEIsb0RBQVMsY0FBYyxJQUFJLDBEQUFXO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZ0VBQXFCLENBQUMseURBQWM7QUFDcEUsNEJBQTRCLGdFQUFxQixDQUFDLHlEQUFjO0FBQ2hFLGlDQUFpQyw0REFBaUI7QUFDbEQ7QUFDQSx3Q0FBd0MsMkRBQWdCLENBQUMsNERBQWlCO0FBQzFFO0FBQ0EsK0JBQStCLDJEQUFZLEVBQUUsYUFBYTtBQUMxRCxrQ0FBa0Msb0RBQVM7QUFDM0Msa0NBQWtDLG9EQUFTO0FBQzNDLDhCQUE4QixvREFBUztBQUN2Qyw4QkFBOEIsb0RBQVM7QUFDdkM7QUFDQTtBQUNBLGdDQUFnQywyREFBWSxFQUFFLDJDQUEyQyxJQUFJLDBEQUFXLHlDQUF5QywyREFBWSxFQUFFLDZDQUE2QyxJQUFJLDBEQUFXO0FBQzNOO0FBQ0E7QUFDQSwrQkFBK0IsMkRBQVksRUFBRSxvQkFBb0Isb0RBQVMsaUNBQWlDLG9EQUFTLGNBQWMsSUFBSSwwREFBVyxxREFBcUQsMkRBQVksRUFBRSxpQkFBaUIsb0RBQVMsNEJBQTRCLG9EQUFTLFlBQVksSUFBSSwwREFBVyxnREFBZ0QsOERBQWU7QUFDN1c7QUFDQTtBQUNBLCtCQUErQiwyREFBWSxFQUFFLG9CQUFvQixvREFBUyxnQ0FBZ0Msb0RBQVMsYUFBYSxJQUFJLDBEQUFXLGdEQUFnRCwyREFBWSxFQUFFLGlCQUFpQixvREFBUyx5QkFBeUIsb0RBQVMsU0FBUyxJQUFJLDBEQUFXLHlDQUF5Qyw4REFBZTtBQUN6VjtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsYUFBYTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdFQUFxQixDQUFDLHlEQUFjO0FBQzVEO0FBQ0E7QUFDQSw2QkFBNkIsMkRBQWdCLEVBQUUsNERBQWlCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQXVCLEVBQUUsdUNBQXVDO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQXVCLEVBQUUsdUNBQXVDO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdFQUFxQixDQUFDLHlEQUFjO0FBQ3BFLDhCQUE4QixnRUFBcUIsQ0FBQyx5REFBYztBQUNsRSxpQ0FBaUMsMkRBQWdCLENBQUMsNERBQWlCO0FBQ25FLCtCQUErQiwyREFBZ0IsQ0FBQyw0REFBaUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQVc7QUFDeEMsMkJBQTJCLHNEQUFXO0FBQ3RDO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQVc7QUFDeEMsMkJBQTJCLHNEQUFXO0FBQ3RDO0FBQ0EsK0JBQStCO0FBQy9CLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1RUFBNEI7QUFDL0MsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGlFQUFzQixDQUFDLG1FQUFPLE9BQU8sb0RBQVM7QUFDakUsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsMkRBQU87QUFDOUMsOEJBQThCLG1FQUFPO0FBQ3JDO0FBQ0EsbUJBQW1CLHVFQUE0QjtBQUMvQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsa0RBQVE7QUFDYTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9jdXJzb3JzL1JhZGFyQ3Vyc29yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbmltcG9ydCB7IFhZQ3Vyc29yIH0gZnJvbSBcIi4vWFlDdXJzb3JcIjtcclxuaW1wb3J0IHsgUGVyY2VudCwgcGVyY2VudCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1BlcmNlbnRcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkcGF0aCBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXJpbmcvUGF0aFwiO1xyXG5pbXBvcnQgKiBhcyAkbWF0aCBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9NYXRoXCI7XHJcbmltcG9ydCAqIGFzICR1dGlscyBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9VdGlsc1wiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ3Vyc29yIGZvciBbW1JhZGFyQ2hhcnRdXS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSVJhZGFyQ3Vyc29yRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSVJhZGFyQ3Vyc29yQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqL1xyXG52YXIgUmFkYXJDdXJzb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoUmFkYXJDdXJzb3IsIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIFJhZGFyQ3Vyc29yKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IFxyXG4gICAgICAgIC8vIEluaXRcclxuICAgICAgICBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiUmFkYXJDdXJzb3JcIjtcclxuICAgICAgICBfdGhpcy5yYWRpdXMgPSBwZXJjZW50KDEwMCk7XHJcbiAgICAgICAgX3RoaXMuaW5uZXJSYWRpdXMgPSBwZXJjZW50KDApO1xyXG4gICAgICAgIC8vIEFwcGx5IHRoZW1lXHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIF90aGlzLm1hc2sgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3MgaWYgcG9pbnQgaXMgd2l0aGluIGJvdW5kcyBvZiBhIGNvbnRhaW5lci5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gcG9pbnQgIFBvaW50IHRvIGNoZWNrXHJcbiAgICAgKiBAcmV0dXJuIEZpdHMgd2l0aGluIGNvbnRhaW5lcj9cclxuICAgICAqL1xyXG4gICAgUmFkYXJDdXJzb3IucHJvdG90eXBlLmZpdHNUb0JvdW5kcyA9IGZ1bmN0aW9uIChwb2ludCkge1xyXG4gICAgICAgIHZhciByYWRpdXMgPSAkbWF0aC5nZXREaXN0YW5jZShwb2ludCk7XHJcbiAgICAgICAgLy9pZighJG1hdGguaXNBbmdsZUluUmFuZ2UoYW5nbGUsIHRoaXMuc3RhcnRBbmdsZSwgdGhpcy5lbmRBbmdsZSkpe1xyXG4gICAgICAgIC8vcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIC8vfVxyXG4gICAgICAgIGlmIChyYWRpdXMgPCB0aGlzLnRydWVQaXhlbFJhZGl1cyArIDEgJiYgcmFkaXVzID4gdGhpcy5waXhlbElubmVyUmFkaXVzIC0gMSkgeyAvLyBvayB0byBhZGQvcmVtb3ZlIHNvbWVcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmFkYXJDdXJzb3IucHJvdG90eXBlLCBcInN0YXJ0QW5nbGVcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gU3RhcnQgYW5nbGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcInN0YXJ0QW5nbGVcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBTdGFydGluZyBhbmdsZSBvZiB0aGUgY3Vyc29yJ3MgcmFkaWFsIGxpbmUuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgU3RhcnQgYW5nbGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJzdGFydEFuZ2xlXCIsIHZhbHVlLCB0cnVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSYWRhckN1cnNvci5wcm90b3R5cGUsIFwiZW5kQW5nbGVcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gRW5kIGFuZ2xlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJlbmRBbmdsZVwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEVuZCBhbmdsZSBvZiB0aGUgY3Vyc29yJ3MgcmFkaWFsIGxpbmUuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgRW5kIGFuZ2xlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiZW5kQW5nbGVcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgUmFkYXJDdXJzb3IucHJvdG90eXBlLnRyaWdnZXJNb3ZlUmVhbCA9IGZ1bmN0aW9uIChwb2ludCwgZm9yY2UpIHtcclxuICAgICAgICBpZiAoIXRoaXMueEF4aXMgfHwgKHRoaXMueEF4aXMgJiYgKCF0aGlzLnhBeGlzLmN1cnNvclRvb2x0aXBFbmFibGVkIHx8IHRoaXMueEF4aXMudG9vbHRpcC5kaXNhYmxlZCkpKSB7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTGluZVgodGhpcy5wb2ludCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy55QXhpcyB8fCAodGhpcy55QXhpcyAmJiAoIXRoaXMueUF4aXMuY3Vyc29yVG9vbHRpcEVuYWJsZWQgfHwgdGhpcy55QXhpcy50b29sdGlwLmRpc2FibGVkKSkpIHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVMaW5lWSh0aGlzLnBvaW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51cGRhdGVTZWxlY3Rpb24oKTtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLnRyaWdnZXJNb3ZlUmVhbC5jYWxsKHRoaXMsIHBvaW50LCBmb3JjZSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiAoUmUpZHJhd3MgdGhlIGhvcml6b250YWwgKGNpcmN1bGFyKSBjdXJzb3IncyBsaW5lLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwb2ludCBOZXcgdGFyZ2V0IHBvaW50XHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVMaW5lWCA9IGZ1bmN0aW9uIChwb2ludCkge1xyXG4gICAgICAgIHZhciByYWRpdXMgPSB0aGlzLnBpeGVsUmFkaXVzO1xyXG4gICAgICAgIHZhciBzdGFydEFuZ2xlID0gdGhpcy5zdGFydEFuZ2xlO1xyXG4gICAgICAgIHZhciBlbmRBbmdsZSA9IHRoaXMuZW5kQW5nbGU7XHJcbiAgICAgICAgdmFyIGlubmVyUmFkaXVzID0gdGhpcy5waXhlbElubmVyUmFkaXVzO1xyXG4gICAgICAgIGlmIChyYWRpdXMgPiAwICYmICR0eXBlLmlzTnVtYmVyKHN0YXJ0QW5nbGUpICYmICR0eXBlLmlzTnVtYmVyKGVuZEFuZ2xlKSAmJiAkdHlwZS5pc051bWJlcihpbm5lclJhZGl1cykpIHtcclxuICAgICAgICAgICAgdmFyIGFuZ2xlID0gJG1hdGguZml0QW5nbGVUb1JhbmdlKCRtYXRoLmdldEFuZ2xlKHBvaW50KSwgc3RhcnRBbmdsZSwgZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICB2YXIgcGF0aCA9IHZvaWQgMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMubGluZVggJiYgdGhpcy5saW5lWC52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpbmVYLm1vdmVUbyh7IHg6IDAsIHk6IDAgfSk7XHJcbiAgICAgICAgICAgICAgICAvLyBmaWxsXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy54QXhpcyAmJiB0aGlzLmZ1bGxXaWR0aExpbmVYKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0UG9pbnQgPSB0aGlzLnhBeGlzLmN1cnJlbnRJdGVtU3RhcnRQb2ludDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZW5kUG9pbnQgPSB0aGlzLnhBeGlzLmN1cnJlbnRJdGVtRW5kUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0UG9pbnQgJiYgZW5kUG9pbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGxTdGFydEFuZ2xlID0gJG1hdGguZml0QW5nbGVUb1JhbmdlKCRtYXRoLmdldEFuZ2xlKHN0YXJ0UG9pbnQpLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaWxsRW5kQW5nbGUgPSAkbWF0aC5maXRBbmdsZVRvUmFuZ2UoJG1hdGguZ2V0QW5nbGUoZW5kUG9pbnQpLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhcmMgPSBmaWxsRW5kQW5nbGUgLSBmaWxsU3RhcnRBbmdsZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2xvY2t3aXNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgbmVlZGVkLCBub3JtYWxpemVBbmdsZSBkb2Vzbid0IHNvbHZlIGl0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydEFuZ2xlIDwgZW5kQW5nbGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcmMgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJjICs9IDM2MDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjY3dcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJjID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyYyAtPSAzNjA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYW5nbGUgLT0gYXJjIC8gMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCA9ICRwYXRoLm1vdmVUbyh7IHg6IGlubmVyUmFkaXVzICogJG1hdGguY29zKGFuZ2xlKSwgeTogaW5uZXJSYWRpdXMgKiAkbWF0aC5zaW4oYW5nbGUpIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICArICRwYXRoLmxpbmVUbyh7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJHBhdGguYXJjVG8oYW5nbGUsIGFyYywgcmFkaXVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAkcGF0aC5saW5lVG8oeyB4OiBpbm5lclJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSArIGFyYyksIHk6IGlubmVyUmFkaXVzICogJG1hdGguc2luKGFuZ2xlICsgYXJjKSB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAkcGF0aC5hcmNUbyhhbmdsZSArIGFyYywgLWFyYywgaW5uZXJSYWRpdXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIGxpbmVcclxuICAgICAgICAgICAgICAgIGlmICghcGF0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiBpbm5lclJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IGlubmVyUmFkaXVzICogJG1hdGguc2luKGFuZ2xlKSB9KSArICRwYXRoLmxpbmVUbyh7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyhhbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpbmVYLnBhdGggPSBwYXRoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogKFJlKWRyYXdzIHRoZSB2ZXJ0aWNhbCAocmFkaWFsKSBjdXJzb3IncyBsaW5lLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwb2ludCBOZXcgdGFyZ2V0IHBvaW50XHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVMaW5lWSA9IGZ1bmN0aW9uIChwb2ludCkge1xyXG4gICAgICAgIGlmICh0aGlzLmxpbmVZICYmIHRoaXMubGluZVkudmlzaWJsZSkge1xyXG4gICAgICAgICAgICB2YXIgc3RhcnRBbmdsZSA9IHRoaXMuc3RhcnRBbmdsZTtcclxuICAgICAgICAgICAgdmFyIGVuZEFuZ2xlID0gdGhpcy5lbmRBbmdsZTtcclxuICAgICAgICAgICAgdmFyIHRydWVQaXhlbFJhZGl1cyA9IHRoaXMudHJ1ZVBpeGVsUmFkaXVzO1xyXG4gICAgICAgICAgICB2YXIgcmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSgkbWF0aC5nZXREaXN0YW5jZShwb2ludCksIDAsIHRoaXMudHJ1ZVBpeGVsUmFkaXVzKTtcclxuICAgICAgICAgICAgaWYgKCR0eXBlLmlzTnVtYmVyKHJhZGl1cykgJiYgJHR5cGUuaXNOdW1iZXIoc3RhcnRBbmdsZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubGluZVkubW92ZVRvKHsgeDogMCwgeTogMCB9KTtcclxuICAgICAgICAgICAgICAgIHZhciBwYXRoID0gdm9pZCAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFyYyA9IGVuZEFuZ2xlIC0gc3RhcnRBbmdsZTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnlBeGlzICYmIHRoaXMuZnVsbFdpZHRoTGluZVkpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBmaWxsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0UG9pbnQgPSB0aGlzLnlBeGlzLmN1cnJlbnRJdGVtU3RhcnRQb2ludDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZW5kUG9pbnQgPSB0aGlzLnlBeGlzLmN1cnJlbnRJdGVtRW5kUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0UG9pbnQgJiYgZW5kUG9pbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlubmVyUmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSgkbWF0aC5nZXREaXN0YW5jZShzdGFydFBvaW50KSwgMCwgdHJ1ZVBpeGVsUmFkaXVzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSgkbWF0aC5nZXREaXN0YW5jZShlbmRQb2ludCksIDAsIHRydWVQaXhlbFJhZGl1cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiByYWRpdXMgKiAkbWF0aC5jb3Moc3RhcnRBbmdsZSksIHk6IHJhZGl1cyAqICRtYXRoLnNpbihzdGFydEFuZ2xlKSB9KSArICRwYXRoLmFyY1RvKHN0YXJ0QW5nbGUsIGFyYywgcmFkaXVzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCArPSAkcGF0aC5tb3ZlVG8oeyB4OiBpbm5lclJhZGl1cyAqICRtYXRoLmNvcyhlbmRBbmdsZSksIHk6IGlubmVyUmFkaXVzICogJG1hdGguc2luKGVuZEFuZ2xlKSB9KSArICRwYXRoLmFyY1RvKGVuZEFuZ2xlLCAtYXJjLCBpbm5lclJhZGl1cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCFwYXRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCA9ICRwYXRoLm1vdmVUbyh7IHg6IHJhZGl1cyAqICRtYXRoLmNvcyhzdGFydEFuZ2xlKSwgeTogcmFkaXVzICogJG1hdGguc2luKHN0YXJ0QW5nbGUpIH0pICsgJHBhdGguYXJjVG8oc3RhcnRBbmdsZSwgZW5kQW5nbGUgLSBzdGFydEFuZ2xlLCByYWRpdXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5lWS5wYXRoID0gcGF0aDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgc2VsZWN0aW9uIGRpbWVuc2lvbnMgb24gc2l6ZSBjaGFuZ2UuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBSYWRhckN1cnNvci5wcm90b3R5cGUudXBkYXRlU2VsZWN0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl91c2VzU2VsZWN0aW9uKSB7XHJcbiAgICAgICAgICAgIHZhciBkb3duUG9pbnQgPSB0aGlzLmRvd25Qb2ludDtcclxuICAgICAgICAgICAgaWYgKGRvd25Qb2ludCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBvaW50ID0gdGhpcy5wb2ludDtcclxuICAgICAgICAgICAgICAgIHZhciByYWRpdXMgPSB0aGlzLnBpeGVsUmFkaXVzO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRydWVQaXhlbFJhZGl1cyA9IHRoaXMudHJ1ZVBpeGVsUmFkaXVzO1xyXG4gICAgICAgICAgICAgICAgdmFyIGlubmVyUmFkaXVzID0gdGhpcy5waXhlbElubmVyUmFkaXVzO1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0QW5nbGUgPSBNYXRoLm1pbih0aGlzLnN0YXJ0QW5nbGUsIHRoaXMuZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGVuZEFuZ2xlID0gTWF0aC5tYXgodGhpcy5zdGFydEFuZ2xlLCB0aGlzLmVuZEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHZhciBkb3duQW5nbGUgPSAkbWF0aC5maXRBbmdsZVRvUmFuZ2UoJG1hdGguZ2V0QW5nbGUoZG93blBvaW50KSwgc3RhcnRBbmdsZSwgZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFuZ2xlID0gJG1hdGguZml0QW5nbGVUb1JhbmdlKCRtYXRoLmdldEFuZ2xlKHBvaW50KSwgc3RhcnRBbmdsZSwgZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGRvd25SYWRpdXMgPSAkbWF0aC5nZXREaXN0YW5jZShkb3duUG9pbnQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRvd25SYWRpdXMgPCB0cnVlUGl4ZWxSYWRpdXMpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFJhZGl1cyA9ICRtYXRoLmZpdFRvUmFuZ2UoJG1hdGguZ2V0RGlzdGFuY2UocG9pbnQpLCAwLCB0cnVlUGl4ZWxSYWRpdXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3ByZXZBbmdsZSA9IGFuZ2xlO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXRoID0gJHBhdGgubW92ZVRvKHsgeDogMCwgeTogMCB9KTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZG93blNpbiA9ICRtYXRoLnNpbihkb3duQW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkb3duQ29zID0gJG1hdGguY29zKGRvd25BbmdsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNpbiA9ICRtYXRoLnNpbihhbmdsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvcyA9ICRtYXRoLmNvcyhhbmdsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJlaGF2aW9yID0gdGhpcy5iZWhhdmlvcjtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYmVoYXZpb3IgPT0gXCJ6b29tWFwiIHx8IGJlaGF2aW9yID09IFwic2VsZWN0WFwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubGluZVRvKHsgeDogcmFkaXVzICogZG93bkNvcywgeTogcmFkaXVzICogZG93blNpbiB9KSArICRwYXRoLmFyY1RvKGRvd25BbmdsZSwgYW5nbGUgLSBkb3duQW5nbGUsIHJhZGl1cykgKyAkcGF0aC5saW5lVG8oeyB4OiBpbm5lclJhZGl1cyAqIGNvcywgeTogaW5uZXJSYWRpdXMgKiBzaW4gfSkgKyAkcGF0aC5hcmNUbyhhbmdsZSwgZG93bkFuZ2xlIC0gYW5nbGUsIGlubmVyUmFkaXVzKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYmVoYXZpb3IgPT0gXCJ6b29tWVwiIHx8IGJlaGF2aW9yID09IFwic2VsZWN0WVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiBjdXJyZW50UmFkaXVzICogJG1hdGguY29zKHN0YXJ0QW5nbGUpLCB5OiBjdXJyZW50UmFkaXVzICogJG1hdGguc2luKHN0YXJ0QW5nbGUpIH0pICsgJHBhdGguYXJjVG8oc3RhcnRBbmdsZSwgZW5kQW5nbGUgLSBzdGFydEFuZ2xlLCBjdXJyZW50UmFkaXVzKSArICRwYXRoLmxpbmVUbyh7IHg6IGRvd25SYWRpdXMgKiAkbWF0aC5jb3MoZW5kQW5nbGUpLCB5OiBkb3duUmFkaXVzICogJG1hdGguc2luKGVuZEFuZ2xlKSB9KSArICRwYXRoLmFyY1RvKGVuZEFuZ2xlLCBzdGFydEFuZ2xlIC0gZW5kQW5nbGUsIGRvd25SYWRpdXMpICsgJHBhdGguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGJlaGF2aW9yID09IFwiem9vbVhZXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCA9ICRwYXRoLm1vdmVUbyh7IHg6IGN1cnJlbnRSYWRpdXMgKiAkbWF0aC5jb3MoZG93bkFuZ2xlKSwgeTogY3VycmVudFJhZGl1cyAqICRtYXRoLnNpbihkb3duQW5nbGUpIH0pICsgJHBhdGguYXJjVG8oZG93bkFuZ2xlLCBhbmdsZSAtIGRvd25BbmdsZSwgY3VycmVudFJhZGl1cykgKyAkcGF0aC5saW5lVG8oeyB4OiBkb3duUmFkaXVzICogJG1hdGguY29zKGFuZ2xlKSwgeTogZG93blJhZGl1cyAqICRtYXRoLnNpbihhbmdsZSkgfSkgKyAkcGF0aC5hcmNUbyhhbmdsZSwgZG93bkFuZ2xlIC0gYW5nbGUsIGRvd25SYWRpdXMpICsgJHBhdGguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnBhdGggPSBwYXRoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24ubW92ZVRvKHsgeDogMCwgeTogMCB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgY3Vyc29ycyBjdXJyZW50IHBvc2l0aW9ucy5cclxuICAgICAqL1xyXG4gICAgUmFkYXJDdXJzb3IucHJvdG90eXBlLmdldFBvc2l0aW9ucyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBwb3NpdGlvbnMgYXJlIHVzZWQgYnkgYXhlcyBvciBzZXJpZXNcclxuICAgICAgICB2YXIgY2hhcnQgPSB0aGlzLmNoYXJ0O1xyXG4gICAgICAgIGlmIChjaGFydCkge1xyXG4gICAgICAgICAgICB2YXIgaW5uZXJSYWRpdXMgPSB0aGlzLnBpeGVsSW5uZXJSYWRpdXM7XHJcbiAgICAgICAgICAgIHZhciByYWRpdXMgPSB0aGlzLnRydWVQaXhlbFJhZGl1cyAtIGlubmVyUmFkaXVzO1xyXG4gICAgICAgICAgICB2YXIgc3RhcnRBbmdsZSA9IHRoaXMuc3RhcnRBbmdsZTtcclxuICAgICAgICAgICAgdmFyIGVuZEFuZ2xlID0gdGhpcy5lbmRBbmdsZTtcclxuICAgICAgICAgICAgdmFyIGFuZ2xlID0gJG1hdGguZml0QW5nbGVUb1JhbmdlKCRtYXRoLmdldEFuZ2xlKHRoaXMucG9pbnQpLCBzdGFydEFuZ2xlLCBlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgIHZhciB4UG9zaXRpb24gPSAoKGFuZ2xlIC0gc3RhcnRBbmdsZSkgLyAoZW5kQW5nbGUgLSBzdGFydEFuZ2xlKSk7XHJcbiAgICAgICAgICAgIHRoaXMueFBvc2l0aW9uID0geFBvc2l0aW9uO1xyXG4gICAgICAgICAgICB0aGlzLnlQb3NpdGlvbiA9ICRtYXRoLmZpdFRvUmFuZ2UoKCRtYXRoLmdldERpc3RhbmNlKHRoaXMucG9pbnQpIC0gaW5uZXJSYWRpdXMpIC8gcmFkaXVzLCAwLCAxKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBPdmVycmlkaW5nIGluaGVyaXRlZCBtZXRob2QsIHNvIHRoYXQgbm90aGluZyBoYXBwZW5zIHdoZW4gaXQncyB0cmlnZ2VyZWQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBSYWRhckN1cnNvci5wcm90b3R5cGUudXBkYXRlUG9pbnQgPSBmdW5jdGlvbiAocG9pbnQpIHtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgQ3Vyc29yJ3MgcG9zaXRpb24gd2hlbiBheGlzIHRvb2x0aXAgY2hhbmdlcyBob3Jpem9udGFsIHBvc2l0aW9uLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBldmVudCBBeGlzIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ3Vyc29yLnByb3RvdHlwZS5oYW5kbGVYVG9vbHRpcFBvc2l0aW9uID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMueEF4aXMuY3Vyc29yVG9vbHRpcEVuYWJsZWQpIHtcclxuICAgICAgICAgICAgdmFyIHRvb2x0aXAgPSB0aGlzLnhBeGlzLnRvb2x0aXA7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTGluZVgoJHV0aWxzLnN2Z1BvaW50VG9TcHJpdGUoeyB4OiB0b29sdGlwLnBpeGVsWCwgeTogdG9vbHRpcC5waXhlbFkgfSwgdGhpcykpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgQ3Vyc29yJ3MgcG9zaXRpb24gd2hlbiBheGlzIHRvb2x0aXAgY2hhbmdlcyB2ZXJ0aWNhbCBwb3NpdGlvbi5cclxuICAgICAqXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICogQHBhcmFtIGV2ZW50IEF4aXMgZXZlbnRcclxuICAgICAqL1xyXG4gICAgUmFkYXJDdXJzb3IucHJvdG90eXBlLmhhbmRsZVlUb29sdGlwUG9zaXRpb24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZiAodGhpcy55QXhpcy5jdXJzb3JUb29sdGlwRW5hYmxlZCkge1xyXG4gICAgICAgICAgICB2YXIgdG9vbHRpcCA9IHRoaXMueUF4aXMudG9vbHRpcDtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVMaW5lWSgkdXRpbHMuc3ZnUG9pbnRUb1Nwcml0ZSh7IHg6IHRvb2x0aXAucGl4ZWxYLCB5OiB0b29sdGlwLnBpeGVsWSB9LCB0aGlzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogbmVlZHMgdG8gYmUgb3ZlcnJpZGVuXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVMaW5lUG9zaXRpb25zID0gZnVuY3Rpb24gKHBvaW50KSB7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBbZ2V0UmFuZ2VzIGRlc2NyaXB0aW9uXVxyXG4gICAgICpcclxuICAgICAqIEB0b2RvIERlc2NyaXB0aW9uXHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ3Vyc29yLnByb3RvdHlwZS5nZXRSYW5nZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRvd25Qb2ludCA9IHRoaXMuZG93blBvaW50O1xyXG4gICAgICAgIGlmIChkb3duUG9pbnQpIHtcclxuICAgICAgICAgICAgdmFyIHVwUG9pbnQgPSB0aGlzLnVwUG9pbnQ7XHJcbiAgICAgICAgICAgIHZhciBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgICAgICAgIGlmIChjaGFydCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJhZGl1cyA9IHRoaXMucGl4ZWxSYWRpdXM7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnRBbmdsZSA9IHRoaXMuc3RhcnRBbmdsZTtcclxuICAgICAgICAgICAgICAgIHZhciBlbmRBbmdsZSA9IHRoaXMuZW5kQW5nbGU7XHJcbiAgICAgICAgICAgICAgICB2YXIgZG93bkFuZ2xlID0gJG1hdGguZml0QW5nbGVUb1JhbmdlKCRtYXRoLmdldEFuZ2xlKGRvd25Qb2ludCksIHRoaXMuc3RhcnRBbmdsZSwgdGhpcy5lbmRBbmdsZSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdXBBbmdsZSA9ICRtYXRoLmZpdEFuZ2xlVG9SYW5nZSgkbWF0aC5nZXRBbmdsZSh1cFBvaW50KSwgdGhpcy5zdGFydEFuZ2xlLCB0aGlzLmVuZEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHZhciBkb3duUmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSgkbWF0aC5nZXREaXN0YW5jZShkb3duUG9pbnQpLCAwLCByYWRpdXMpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHVwUmFkaXVzID0gJG1hdGguZml0VG9SYW5nZSgkbWF0aC5nZXREaXN0YW5jZSh1cFBvaW50KSwgMCwgcmFkaXVzKTtcclxuICAgICAgICAgICAgICAgIHZhciBzdGFydFggPSAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIGVuZFggPSAxO1xyXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0WSA9IDA7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW5kWSA9IDE7XHJcbiAgICAgICAgICAgICAgICB2YXIgYmVoYXZpb3IgPSB0aGlzLmJlaGF2aW9yO1xyXG4gICAgICAgICAgICAgICAgaWYgKGJlaGF2aW9yID09IFwiem9vbVhcIiB8fCBiZWhhdmlvciA9PSBcInNlbGVjdFhcIiB8fCBiZWhhdmlvciA9PSBcInpvb21YWVwiIHx8IGJlaGF2aW9yID09IFwic2VsZWN0WFlcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhcmMgPSBlbmRBbmdsZSAtIHN0YXJ0QW5nbGU7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRYID0gJG1hdGgucm91bmQoKGRvd25BbmdsZSAtIHN0YXJ0QW5nbGUpIC8gYXJjLCA1KTtcclxuICAgICAgICAgICAgICAgICAgICBlbmRYID0gJG1hdGgucm91bmQoKHVwQW5nbGUgLSBzdGFydEFuZ2xlKSAvIGFyYywgNSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoYmVoYXZpb3IgPT0gXCJ6b29tWVwiIHx8IGJlaGF2aW9yID09IFwic2VsZWN0WVwiIHx8IGJlaGF2aW9yID09IFwiem9vbVhZXCIgfHwgYmVoYXZpb3IgPT0gXCJzZWxlY3RYWVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRZID0gJG1hdGgucm91bmQoZG93blJhZGl1cyAvIHJhZGl1cywgNSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5kWSA9ICRtYXRoLnJvdW5kKHVwUmFkaXVzIC8gcmFkaXVzLCA1KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMueFJhbmdlID0geyBzdGFydDogTWF0aC5taW4oc3RhcnRYLCBlbmRYKSwgZW5kOiBNYXRoLm1heChzdGFydFgsIGVuZFgpIH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLnlSYW5nZSA9IHsgc3RhcnQ6IE1hdGgubWluKHN0YXJ0WSwgZW5kWSksIGVuZDogTWF0aC5tYXgoc3RhcnRZLCBlbmRZKSB9O1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYmVoYXZpb3IgPT0gXCJzZWxlY3RYXCIgfHwgdGhpcy5iZWhhdmlvciA9PSBcInNlbGVjdFlcIiB8fCB0aGlzLmJlaGF2aW9yID09IFwic2VsZWN0WFlcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHZvaWRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIE92ZXJyaWRpbmcgaW5oZXJpdGVkIG1ldGhvZCwgc28gdGhhdCBub3RoaW5nIGhhcHBlbnMgd2hlbiBgdXBkYXRlU2l6ZWBcclxuICAgICAqIGlzIHRyaWdnZXJlZC5cclxuICAgICAqXHJcbiAgICAgKiBSYWRhckN1cnNvciBpcyBxdWl0ZSBjb21wbGljYXRlZCBhbmQgbmVlZHMgb3duIHNpemluZyBsb2dpYy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVTaXplID0gZnVuY3Rpb24gKCkgeyB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFJhZGFyQ3Vyc29yLnByb3RvdHlwZSwgXCJyYWRpdXNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gT3V0ZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJyYWRpdXNcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBPdXRlciByYWRpdXMgb2YgdGhlIGN1cnNvcidzIGNpcmN1bGFyIGxpbmUuXHJcbiAgICAgICAgICogQWJzb2x1dGUgKHB4KSBvciByZWxhdGl2ZSAoW1tQZXJjZW50XV0pLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBPdXRlciByYWRpdXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBlcmNlbnRQcm9wZXJ0eShcInJhZGl1c1wiLCB2YWx1ZSwgZmFsc2UsIGZhbHNlLCAxMCwgZmFsc2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFJhZGFyQ3Vyc29yLnByb3RvdHlwZSwgXCJwaXhlbFJhZGl1c1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogT3V0ZXIgcmFkaXVzIG9mIHRoZSBjaXJjdWxhciBsaW5lIGluIHBpeGVscy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEByZXR1cm4gT3V0ZXIgcmFkaXVzIChweClcclxuICAgICAgICAgKiBAcmVhZG9ubHlcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuICR1dGlscy5yZWxhdGl2ZVJhZGl1c1RvVmFsdWUodGhpcy5yYWRpdXMsIHRoaXMudHJ1ZVBpeGVsUmFkaXVzKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSYWRhckN1cnNvci5wcm90b3R5cGUsIFwidHJ1ZVBpeGVsUmFkaXVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBbdHJ1ZVBpeGVsUmFkaXVzIGRlc2NyaXB0aW9uXVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAgICAgKiBAcmV0dXJuIE91dGVyIHJhZGl1cyAocHgpXHJcbiAgICAgICAgICogQHJlYWRvbmx5XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkdXRpbHMucmVsYXRpdmVUb1ZhbHVlKHBlcmNlbnQoMTAwKSwgJG1hdGgubWluKHRoaXMuaW5uZXJXaWR0aCAvIDIsIHRoaXMuaW5uZXJIZWlnaHQgLyAyKSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmFkYXJDdXJzb3IucHJvdG90eXBlLCBcImlubmVyUmFkaXVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIElubmVyIHJhZGl1c1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiaW5uZXJSYWRpdXNcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBJbm5lciByYWRpdXMgb2YgdGhlIGN1cnNvcidzIGNpcmN1bGFyIGxpbmUuXHJcbiAgICAgICAgICogQWJzb2x1dGUgKHB4KSBvciByZWxhdGl2ZSAoW1tQZXJjZW50XV0pLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBJbm5lciByYWRpdXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBlcmNlbnRQcm9wZXJ0eShcImlubmVyUmFkaXVzXCIsIHZhbHVlLCBmYWxzZSwgZmFsc2UsIDEwLCBmYWxzZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmFkYXJDdXJzb3IucHJvdG90eXBlLCBcInBpeGVsSW5uZXJSYWRpdXNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElubmVyIHJhZGl1cyBvZiB0aGUgY2lyY3VsYXIgbGluZSBpbiBwaXhlbHMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcmV0dXJuIElubmVyIHJhZGl1cyAocHgpXHJcbiAgICAgICAgICogQHJlYWRvbmx5XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBpbm5lclJhZGl1cyA9IHRoaXMuaW5uZXJSYWRpdXM7XHJcbiAgICAgICAgICAgIGlmIChpbm5lclJhZGl1cyBpbnN0YW5jZW9mIFBlcmNlbnQpIHtcclxuICAgICAgICAgICAgICAgIGlubmVyUmFkaXVzID0gcGVyY2VudCgxMDAgKiBpbm5lclJhZGl1cy52YWx1ZSAqIHRoaXMuY2hhcnQuaW5uZXJSYWRpdXNNb2RpZnllcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuICR1dGlscy5yZWxhdGl2ZVJhZGl1c1RvVmFsdWUoaW5uZXJSYWRpdXMsIHRoaXMudHJ1ZVBpeGVsUmFkaXVzKSB8fCAwO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBSYWRhckN1cnNvci5wcm90b3R5cGUuZml4UG9pbnQgPSBmdW5jdGlvbiAocG9pbnQpIHtcclxuICAgICAgICAvLyBvdmVycmlkaW5nIHh5IG1ldGhvZFxyXG4gICAgICAgIHJldHVybiBwb2ludDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gUmFkYXJDdXJzb3I7XHJcbn0oWFlDdXJzb3IpKTtcclxuZXhwb3J0IHsgUmFkYXJDdXJzb3IgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiUmFkYXJDdXJzb3JcIl0gPSBSYWRhckN1cnNvcjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmFkYXJDdXJzb3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js ***!
  \*******************************************************************************/
/*! exports provided: XYCursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYCursor\", function() { return XYCursor; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Cursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cursor */ \"./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/DateAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\");\n/* harmony import */ var _series_XYSeries__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../series/XYSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/interaction/Interaction */ \"./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js\");\n/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/interaction/Mouse */ \"./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Cursor for XY chart\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A cursor used on [[XYChart]].\r\n *\r\n * @see {@link IXYCursorEvents} for a list of available events\r\n * @see {@link IXYCursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n */\r\nvar XYCursor = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYCursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYCursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Vertical cursor line element.\r\n         */\r\n        _this._lineX = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * Horizontal cursor line element.\r\n         */\r\n        _this._lineY = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * Horizontal [[Axis]].\r\n         */\r\n        _this._xAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * Vertical [[Axis]].\r\n         */\r\n        _this._yAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__[\"MutableValueDisposer\"]();\r\n        _this._snapToDisposers = [];\r\n        _this.className = \"XYCursor\";\r\n        // Defaults\r\n        _this.behavior = \"zoomX\";\r\n        _this.maxPanOut = 0.1;\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__[\"InterfaceColorSet\"]();\r\n        // Create selection element\r\n        var selection = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        selection.shouldClone = false;\r\n        selection.fillOpacity = 0.2;\r\n        selection.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        selection.isMeasured = false;\r\n        selection.visible = false;\r\n        selection.interactionsEnabled = false;\r\n        _this.selection = selection;\r\n        _this._disposers.push(_this.selection);\r\n        // Create cursor's vertical line\r\n        var lineX = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        lineX.shouldClone = false;\r\n        lineX.stroke = interfaceColors.getFor(\"grid\");\r\n        lineX.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_8__[\"color\"])();\r\n        lineX.strokeDasharray = \"3,3\";\r\n        lineX.isMeasured = false;\r\n        lineX.strokeOpacity = 0.4;\r\n        lineX.interactionsEnabled = false;\r\n        lineX.y = 0; // important\r\n        _this.lineX = lineX;\r\n        _this._disposers.push(_this.lineX);\r\n        // Create cursor's horizontal line\r\n        var lineY = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        lineY.shouldClone = false;\r\n        lineY.stroke = interfaceColors.getFor(\"grid\");\r\n        lineY.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_8__[\"color\"])();\r\n        lineY.strokeDasharray = \"3,3\";\r\n        lineY.isMeasured = false;\r\n        lineY.strokeOpacity = 0.4;\r\n        lineY.interactionsEnabled = false;\r\n        lineY.x = 0; // important\r\n        _this.lineY = lineY;\r\n        _this._disposers.push(_this.lineY);\r\n        // Add handler for size changes\r\n        _this.events.on(\"sizechanged\", _this.updateSize, _this, false);\r\n        _this._disposers.push(_this._lineX);\r\n        _this._disposers.push(_this._lineY);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.mask = _this;\r\n        _this.hideSeriesTooltipsOnSelection = true;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates cursor element dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateSize = function () {\r\n        if (this.lineX) {\r\n            this.lineX.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"moveTo\"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"lineTo\"]({ x: 0, y: this.innerHeight });\r\n        }\r\n        if (this.lineY) {\r\n            this.lineY.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"moveTo\"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"lineTo\"]({ x: this.innerWidth, y: 0 });\r\n        }\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateSelection = function () {\r\n        if (this._usesSelection) {\r\n            var downPoint = this.downPoint;\r\n            var behavior = this.behavior;\r\n            if (downPoint) {\r\n                var point = this.point;\r\n                if (this.lineX) {\r\n                    point.x = this.lineX.pixelX;\r\n                }\r\n                if (this.lineY) {\r\n                    point.y = this.lineY.pixelY;\r\n                }\r\n                var selection = this.selection;\r\n                var x = Math.min(point.x, downPoint.x);\r\n                var y = Math.min(point.y, downPoint.y);\r\n                var w = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](Math.abs(downPoint.x - point.x), this._positionPrecision);\r\n                var h = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](Math.abs(downPoint.y - point.y), this._positionPrecision);\r\n                switch (behavior) {\r\n                    case \"zoomX\":\r\n                        y = 0;\r\n                        h = this.pixelHeight;\r\n                        break;\r\n                    case \"zoomY\":\r\n                        x = 0;\r\n                        w = this.pixelWidth;\r\n                        break;\r\n                    case \"selectX\":\r\n                        y = 0;\r\n                        h = this.pixelHeight;\r\n                        break;\r\n                    case \"selectY\":\r\n                        x = 0;\r\n                        w = this.pixelWidth;\r\n                        break;\r\n                }\r\n                selection.x = x;\r\n                selection.y = y;\r\n                selection.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"rectangle\"](w, h);\r\n                selection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle\r\n            }\r\n            else {\r\n                if (this._generalBehavior != \"select\") {\r\n                    this.selection.hide();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.fixPoint = function (point) {\r\n        point.x = Math.max(0, point.x);\r\n        point.y = Math.max(0, point.y);\r\n        point.x = Math.min(this.pixelWidth, point.x);\r\n        point.y = Math.min(this.pixelHeight, point.y);\r\n        return point;\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * @param point Point to place cursor at\r\n     */\r\n    XYCursor.prototype.triggerMoveReal = function (point, force) {\r\n        _super.prototype.triggerMoveReal.call(this, point, force);\r\n        var snapToSeries = this.snapToSeries;\r\n        if ((snapToSeries && !this.downPoint)) {\r\n            if (snapToSeries instanceof _series_XYSeries__WEBPACK_IMPORTED_MODULE_6__[\"XYSeries\"]) {\r\n                if (snapToSeries.isHidden) {\r\n                    this.updateLinePositions(point);\r\n                }\r\n            }\r\n            else {\r\n                var allHidden_1 = true;\r\n                _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](snapToSeries, function (s) {\r\n                    if (!s.isHidden) {\r\n                        allHidden_1 = false;\r\n                    }\r\n                });\r\n                if (allHidden_1) {\r\n                    this.updateLinePositions(point);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.updateLinePositions(point);\r\n        }\r\n        if (this.downPoint && _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getDistance\"](this.downPoint, point) > 3) {\r\n            if (this._generalBehavior == \"pan\") {\r\n                this.getPanningRanges();\r\n                this.dispatch(\"panning\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateLinePositions = function (point) {\r\n        point = this.fixPoint(this.point);\r\n        if (this.lineX && this.lineX.visible && !this.xAxis) {\r\n            this.lineX.x = point.x;\r\n        }\r\n        if (this.lineY && this.lineY.visible && !this.yAxis) {\r\n            this.lineY.y = point.y;\r\n        }\r\n        this.updateSelection();\r\n    };\r\n    XYCursor.prototype.triggerDownReal = function (point) {\r\n        if (this.visible && !this.isHiding) {\r\n            if (this._generalBehavior == \"select\") {\r\n                this.selection.parent = this.parent;\r\n            }\r\n            if (this.fitsToBounds(point)) {\r\n                this.downPoint = { x: point.x, y: point.y };\r\n                this.updatePoint(point);\r\n                //this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine\r\n                this.point.x = this.downPoint.x;\r\n                this.point.y = this.downPoint.y;\r\n                var selection = this.selection;\r\n                var selectionX = this.downPoint.x;\r\n                var selectionY = this.downPoint.y;\r\n                if (this._usesSelection) {\r\n                    selection.x = selectionX;\r\n                    selection.y = selectionY;\r\n                    selection.path = \"\";\r\n                    selection.show();\r\n                }\r\n                _super.prototype.triggerDownReal.call(this, point);\r\n            }\r\n            else {\r\n                this.downPoint = undefined;\r\n            }\r\n        }\r\n        else {\r\n            this.downPoint = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Updates the coordinates of where pointer down event occurred\r\n     * (was pressed).\r\n     */\r\n    XYCursor.prototype.updatePoint = function (point) {\r\n        if (this.lineX) {\r\n            point.x = this.lineX.pixelX;\r\n        }\r\n        if (this.lineY) {\r\n            point.y = this.lineY.pixelY;\r\n        }\r\n    };\r\n    /**\r\n     * Handle action when cursor is released, which should perform an operation\r\n     * based on its `behavior`, like zoom.\r\n     *\r\n     * @param  point  Release point\r\n     */\r\n    XYCursor.prototype.triggerUpReal = function (point) {\r\n        if (this.hasMoved()) {\r\n            if (this.downPoint) {\r\n                this.upPoint = point;\r\n                this.updatePoint(this.upPoint);\r\n                if (this._generalBehavior != \"pan\") {\r\n                    this.getRanges();\r\n                }\r\n                if (this._generalBehavior != \"select\") {\r\n                    this.selection.hide();\r\n                }\r\n                _super.prototype.triggerUpReal.call(this, point);\r\n            }\r\n        }\r\n        else {\r\n            if (this._generalBehavior != \"select\") {\r\n                this.selection.hide(0);\r\n            }\r\n            else {\r\n                this.xRange = undefined;\r\n                this.yRange = undefined;\r\n                this.dispatchImmediately(\"selectended\");\r\n            }\r\n            // reset cursor style, just in case\r\n            if (this._generalBehavior == \"pan\") {\r\n                var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_10__[\"getInteraction\"])();\r\n                interaction.setGlobalStyle(_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_11__[\"MouseCursorStyle\"].default);\r\n            }\r\n            this.dispatchImmediately(\"behaviorcanceled\");\r\n        }\r\n        this.downPoint = undefined;\r\n        this.dispatch(\"cursorpositionchanged\");\r\n    };\r\n    /**\r\n     * Calculates if the cursor has moved enough based on its `behavior`.\r\n     *\r\n     * @return Moved?\r\n     */\r\n    XYCursor.prototype.hasMoved = function () {\r\n        var distance;\r\n        if (this.behavior == \"zoomX\" || this.behavior == \"panX\") {\r\n            distance = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getHorizontalDistance\"](this._upPointOrig, this._downPointOrig);\r\n        }\r\n        else if (this.behavior == \"zoomY\" || this.behavior == \"panY\") {\r\n            distance = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getVerticalDistance\"](this._upPointOrig, this._downPointOrig);\r\n        }\r\n        else {\r\n            distance = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getDistance\"](this._upPointOrig, this._downPointOrig);\r\n        }\r\n        return distance > Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_10__[\"getInteraction\"])().getHitOption(this.interactions, \"hitTolerance\");\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.getPanningRanges = function () {\r\n        var startX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](this.downPoint.x / this.innerWidth, 5);\r\n        var startY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](this.downPoint.y / this.innerHeight, 5);\r\n        var currentX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](this.point.x / this.innerWidth, 5);\r\n        var currentY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](this.point.y / this.innerHeight, 5);\r\n        var deltaX = startX - currentX;\r\n        var deltaY = startY - currentY;\r\n        this.xRange = { start: deltaX, end: 1 + deltaX };\r\n        this.yRange = { start: deltaY, end: 1 + deltaY };\r\n        if (this.behavior == \"panX\") {\r\n            this.yRange.start = 0;\r\n            this.yRange.end = 1;\r\n        }\r\n        if (this.behavior == \"panY\") {\r\n            this.xRange.start = 0;\r\n            this.xRange.end = 1;\r\n        }\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.getRanges = function () {\r\n        if (this.lineX) {\r\n            this.upPoint.x = this.lineX.pixelX;\r\n        }\r\n        if (this.lineY) {\r\n            this.upPoint.y = this.lineY.pixelY;\r\n        }\r\n        // @todo Is this needed?\r\n        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__[\"used\"](this.selection);\r\n        var startX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](this.downPoint.x / this.innerWidth, 5);\r\n        var endX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((this.upPoint.x) / this.innerWidth, 5);\r\n        var startY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](this.downPoint.y / this.innerHeight, 5);\r\n        var endY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((this.upPoint.y) / this.innerHeight, 5);\r\n        this.xRange = { start: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"min\"](startX, endX), end: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"max\"](startX, endX) };\r\n        this.yRange = { start: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"min\"](startY, endY), end: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"max\"](startY, endY) };\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"behavior\", {\r\n        /**\r\n         * Behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"behavior\");\r\n        },\r\n        /**\r\n         * Cursor's behavior when it's moved with pointer down:\r\n         *\r\n         * * `\"zoomX\"` - zooms horizontally.\r\n         * * `\"zoomY\"` - zooms vertically.\r\n         * * `\"zoomXY\"` - zooms both horizontally and vertically.\r\n         * * `\"selectX\"` - selects a range horizontally.\r\n         * * `\"selectY\"` - selects a range vertically.\r\n         * * `\"selectXY\"` - selects a range both horizontally and vertically.\r\n         * * `\"panX\"` - moves (pans) current selection horizontally.\r\n         * * `\"panY\"` - moves (pans) current selection vertically.\r\n         * * `\"panXY\"` - moves (pans) current selection both horizontally and vertically.\r\n         * * `\"none\"` - does nothing with pointer down.\r\n         *\r\n         * E.g. \"zoomXY\" will mean that pressing a mouse (or touching) over plot area\r\n         * and dragging it will start zooming the chart.\r\n         *\r\n         * NOTE: `\"zoomXY\"` acts differently when used on a `DateAxis`.\r\n         * See [this note](https://www.amcharts.com/docs/v4/concepts/chart-cursor/#zoomXY_behavior_and_DateAxis).\r\n         *\r\n         * @param value Bheavior\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"behavior\", value, true);\r\n            this._usesSelection = false;\r\n            if (value.indexOf(\"zoom\") != -1) {\r\n                this._generalBehavior = \"zoom\";\r\n                this._usesSelection = true;\r\n            }\r\n            if (value.indexOf(\"select\") != -1) {\r\n                this._generalBehavior = \"select\";\r\n                this._usesSelection = true;\r\n            }\r\n            if (value.indexOf(\"pan\") != -1) {\r\n                this._generalBehavior = \"pan\";\r\n                this._usesSelection = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Determines whether Cursor should prevent default action on move.\r\n     *\r\n     * If cursor's behavior is \"none\", it should not obstruct the page scrolling.\r\n     *\r\n     * @return Prevent default?\r\n     */\r\n    XYCursor.prototype.shouldPreventGestures = function (touch) {\r\n        return (!this.interactions.isTouchProtected || !touch) && this.behavior != \"none\";\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"fullWidthLineX\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthLineX\");\r\n        },\r\n        /**\r\n         * Cursor's horizontal line is expanded to take full width of the related\r\n         * Axis' cell/category.\r\n         *\r\n         * NOTE: this setting will work properly if `xAxis` is set and only in case\r\n         * `xAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * @param value Full width?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthLineX\", value);\r\n            if (!value) {\r\n                this.updateSize();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"fullWidthLineY\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthLineY\");\r\n        },\r\n        /**\r\n         * Cursor's vertical line is expanded to take full width of the related\r\n         * Axis' cell/category.\r\n         *\r\n         * NOTE: this setting will work properly if `yAxis` is set and only in case\r\n         * `yAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * @param value Full width?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthLineY\", value);\r\n            if (!value) {\r\n                this.updateSize();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"hideSeriesTooltipsOnSelection\", {\r\n        /**\r\n         * @return hide tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideSeriesTooltipsOnSelection\");\r\n        },\r\n        /**\r\n         * If set to `true` this will hide series tooltips when selecting with cursor.\r\n         *\r\n         * @since 4.5.15\r\n         * @param  value  hide tooltips?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideSeriesTooltipsOnSelection\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"maxTooltipDistance\", {\r\n        /**\r\n         * @return Distance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxTooltipDistance\");\r\n        },\r\n        /**\r\n         * If set to a numeric value, cursor will display closest series' tooltips\r\n         * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n         * it.\r\n         *\r\n         * Set it to `-1` to always force one tooltip, even if there are multiple\r\n         * data items in exactly same place.\r\n         *\r\n         * @since 4.7.18\r\n         * @param  value  Distance\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxTooltipDistance\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"maxPanOut\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxPanOut\");\r\n        },\r\n        /**\r\n         * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n         * This setting specifies relative value by how much we can pan out the plot\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxPanOut\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"xAxis\", {\r\n        /**\r\n         * @return X axis\r\n         */\r\n        get: function () {\r\n            return this._xAxis.get();\r\n        },\r\n        /**\r\n         * A reference to X [[Axis]].\r\n         *\r\n         * An XY cursor can live without `xAxis` set. You set xAxis for cursor when\r\n         * you have axis tooltip enabled and you want cursor line to be at the same\r\n         * position as tooltip.\r\n         *\r\n         * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n         * [[ValueAxis]].\r\n         *\r\n         * @todo Description (review)\r\n         * @param axis X axis\r\n         */\r\n        set: function (axis) {\r\n            var _this = this;\r\n            if (this._xAxis.get() != axis) {\r\n                this._xAxis.set(axis, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__[\"MultiDisposer\"]([\r\n                    axis.tooltip.events.on(\"positionchanged\", this.handleXTooltipPosition, this, false),\r\n                    axis.events.on(\"rangechangestarted\", function (event) {\r\n                        _this.hide(0);\r\n                        _this.preventShow = true;\r\n                    }, undefined, false),\r\n                    axis.events.on(\"rangechangeended\", function (event) {\r\n                        _this.preventShow = false;\r\n                        _this.hide(0);\r\n                        _this.dispatch(\"cursorpositionchanged\");\r\n                    }, undefined, false)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Y Axis\r\n         */\r\n        get: function () {\r\n            return this._yAxis.get();\r\n        },\r\n        /**\r\n         * A reference to Y [[Axis]].\r\n         *\r\n         * An XY cursor can live without `yAxis` set. You set xAxis for cursor when\r\n         * you have axis tooltip enabled and you want cursor line to be at the same\r\n         * position as tooltip.\r\n         *\r\n         * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n         * [[ValueAxis]].\r\n         *\r\n         * @todo Description (review)\r\n         * @param axis Y axis\r\n         */\r\n        set: function (axis) {\r\n            var _this = this;\r\n            if (this._yAxis.get() != axis) {\r\n                this._yAxis.set(axis, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__[\"MultiDisposer\"]([\r\n                    axis.tooltip.events.on(\"positionchanged\", this.handleYTooltipPosition, this, false),\r\n                    axis.events.on(\"rangechangestarted\", function (event) {\r\n                        _this.hide(0);\r\n                        _this.__disabled = true;\r\n                    }, undefined, false),\r\n                    axis.events.on(\"rangechangeended\", function (event) {\r\n                        _this.__disabled = false;\r\n                        _this.hide(0);\r\n                        _this.dispatch(\"cursorpositionchanged\");\r\n                    }, undefined, false)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original Axis event\r\n     */\r\n    XYCursor.prototype.handleXTooltipPosition = function (event) {\r\n        var tooltip = this.xAxis.tooltip;\r\n        var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__[\"svgPointToSprite\"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n        var x = point.x;\r\n        point.y = 1;\r\n        if (this.lineX) {\r\n            this.lineX.x = x;\r\n            if (!this.fitsToBounds(point)) {\r\n                this.hide();\r\n            }\r\n        }\r\n        if (this.xAxis && this.fullWidthLineX) {\r\n            var startPoint = this.xAxis.currentItemStartPoint;\r\n            var endPoint = this.xAxis.currentItemEndPoint;\r\n            if (startPoint && endPoint) {\r\n                this.lineX.x = x;\r\n                var width = endPoint.x - startPoint.x;\r\n                this.lineX.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"rectangle\"](width, this.innerHeight, -width / 2);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates Cursor's position when Y axis changes position or scale.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original Axis event\r\n     */\r\n    XYCursor.prototype.handleYTooltipPosition = function (event) {\r\n        var tooltip = this.yAxis.tooltip;\r\n        var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__[\"svgPointToSprite\"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n        var y = point.y;\r\n        point.x = 1;\r\n        if (this.lineY) {\r\n            this.lineY.y = y;\r\n            if (!this.fitsToBounds(point)) {\r\n                this.hide();\r\n            }\r\n        }\r\n        if (this.yAxis && this.fullWidthLineY) {\r\n            var startPoint = this.yAxis.currentItemStartPoint;\r\n            var endPoint = this.yAxis.currentItemEndPoint;\r\n            if (startPoint && endPoint) {\r\n                this.lineY.y = y;\r\n                var height = endPoint.y - startPoint.y;\r\n                this.lineY.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__[\"rectangle\"](this.innerWidth, height, 0, -height / 2);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"lineX\", {\r\n        /**\r\n         * @return Line element\r\n         */\r\n        get: function () {\r\n            return this._lineX.get();\r\n        },\r\n        /**\r\n         * A Line element to use for X axis.\r\n         *\r\n         * @param lineX Line\r\n         */\r\n        set: function (lineX) {\r\n            if (lineX) {\r\n                lineX.setElement(this.paper.add(\"path\"));\r\n                this._lineX.set(lineX, lineX.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n                lineX.interactionsEnabled = false;\r\n                lineX.parent = this;\r\n            }\r\n            else {\r\n                this._lineX.reset();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"lineY\", {\r\n        /**\r\n         * @return Line element\r\n         */\r\n        get: function () {\r\n            return this._lineY.get();\r\n        },\r\n        /**\r\n         * A Line element to use Y axis.\r\n         *\r\n         * @param lineY Line\r\n         */\r\n        set: function (lineY) {\r\n            if (lineY) {\r\n                lineY.setElement(this.paper.add(\"path\"));\r\n                this._lineY.set(lineY, lineY.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n                lineY.parent = this;\r\n                lineY.interactionsEnabled = false;\r\n            }\r\n            else {\r\n                this._lineY.reset();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"selection\", {\r\n        /**\r\n         * @return Selection rectangle\r\n         */\r\n        get: function () {\r\n            return this._selection;\r\n        },\r\n        /**\r\n         * A selection element ([[Sprite]]).\r\n         *\r\n         * @param selection Selection rectangle\r\n         */\r\n        set: function (selection) {\r\n            this._selection = selection;\r\n            if (selection) {\r\n                selection.element = this.paper.add(\"path\");\r\n                selection.parent = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces\r\n     * with real references.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYCursor.prototype.processConfig = function (config) {\r\n        var _this = this;\r\n        if (config) {\r\n            // Set up axes\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"hasValue\"](config.xAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"isString\"](config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"hasValue\"](config.yAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"isString\"](config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"hasValue\"](config.snapToSeries)) {\r\n                var snapTo_1 = _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"isArray\"](config.snapToSeries) ? config.snapToSeries : [config.snapToSeries];\r\n                var snapError_1 = false;\r\n                _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](snapTo_1, function (snap, index) {\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__[\"isString\"](snap)) {\r\n                        if (_this.map.hasKey(snap)) {\r\n                            snapTo_1[index] = _this.map.getKey(snap);\r\n                        }\r\n                        else {\r\n                            _this.processingErrors.push(\"[XYCursor] No series with id \\\"\" + snap + \"\\\" found for `series`\");\r\n                            snapError_1 = true;\r\n                        }\r\n                    }\r\n                });\r\n                if (snapError_1) {\r\n                    delete config.snapToSeries;\r\n                }\r\n                else {\r\n                    config.snapToSeries = snapTo_1;\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"snapToSeries\", {\r\n        /**\r\n         * @return {XYSeries | XYSeries[]}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapToSeries\");\r\n        },\r\n        /**\r\n         * Specifies to which series cursor lines should be snapped.\r\n         *\r\n         * Can be a single series instance or an array of series.\r\n         *\r\n         * @param {XYSeries | XYSeries[]}\r\n         */\r\n        set: function (series) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"snapToSeries\", series)) {\r\n                if (series instanceof _series_XYSeries__WEBPACK_IMPORTED_MODULE_6__[\"XYSeries\"]) {\r\n                    series = [series];\r\n                }\r\n                if (this._snapToDisposers) {\r\n                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](this._snapToDisposers, function (disposer) {\r\n                        disposer.dispose();\r\n                    });\r\n                }\r\n                this._snapToDisposers = [];\r\n                if (series) {\r\n                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](series, function (s) {\r\n                        _this._snapToDisposers.push(s.events.on(\"tooltipshownat\", function () { _this.handleSnap(s); }, undefined, false));\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleSnap description]\r\n     *\r\n     * @ignore\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.handleSnap = function (series) {\r\n        if (!this.downPoint) {\r\n            var x = series.getTooltipX() + series.xAxis.pixelX;\r\n            var y = series.getTooltipY() + series.yAxis.pixelY;\r\n            if (this.xAxis) {\r\n                if (this.xAxis.renderer.opposite) {\r\n                    y -= this.pixelHeight;\r\n                }\r\n            }\r\n            this.point = { x: x, y: y };\r\n            this.getPositions();\r\n            var xx = x;\r\n            var yy = y;\r\n            x -= this.pixelWidth;\r\n            if (this.yAxis) {\r\n                if (this.yAxis.renderer.opposite) {\r\n                    x += this.pixelWidth;\r\n                }\r\n            }\r\n            var tooltip = series.tooltip;\r\n            var duration = tooltip.animationDuration;\r\n            var easing = tooltip.animationEasing;\r\n            var xAxis = series.xAxis;\r\n            var yAxis = series.yAxis;\r\n            if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__[\"ValueAxis\"] && !(xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_5__[\"DateAxis\"]) && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__[\"ValueAxis\"] && !(yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_5__[\"DateAxis\"])) {\r\n                series.yAxis.showTooltipAtPosition(this.yPosition);\r\n                series.xAxis.showTooltipAtPosition(this.xPosition);\r\n            }\r\n            else {\r\n                if (series.baseAxis == series.xAxis) {\r\n                    series.yAxis.showTooltipAtPosition(this.yPosition);\r\n                }\r\n                if (series.baseAxis == series.yAxis) {\r\n                    series.xAxis.showTooltipAtPosition(this.xPosition);\r\n                }\r\n            }\r\n            this.lineX.animate([{ property: \"y\", to: y }], duration, easing);\r\n            this.lineY.animate([{ property: \"x\", to: x }], duration, easing);\r\n            if (!this.xAxis) {\r\n                this.lineX.animate([{ property: \"x\", to: xx }], duration, easing);\r\n            }\r\n            if (!this.yAxis) {\r\n                this.lineY.animate([{ property: \"y\", to: yy }], duration, easing);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    XYCursor.prototype.dispose = function () {\r\n        this.hide(0);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return XYCursor;\r\n}(_Cursor__WEBPACK_IMPORTED_MODULE_1__[\"Cursor\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_7__[\"registry\"].registeredClasses[\"XYCursor\"] = XYCursor;\r\n//# sourceMappingURL=XYCursor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2N1cnNvcnMvWFlDdXJzb3IuanM/Zjk2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDUztBQUNxQztBQUNsQztBQUNGO0FBQ0U7QUFDQztBQUNBO0FBQ3dCO0FBQ0g7QUFDSjtBQUNqQjtBQUNFO0FBQ0Y7QUFDRTtBQUNFO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsc0JBQXNCO0FBQy9CLFNBQVMsd0JBQXdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5RUFBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHlFQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseUVBQW9CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5RUFBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywrRUFBaUI7QUFDbkQ7QUFDQSwwQ0FBMEMsbURBQU07QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1EQUFNO0FBQzVDO0FBQ0E7QUFDQSxxQkFBcUIsK0RBQUs7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1EQUFNO0FBQzVDO0FBQ0E7QUFDQSxxQkFBcUIsK0RBQUs7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDREQUFZLEVBQUUsYUFBYSxJQUFJLDREQUFZLEVBQUUsNEJBQTRCO0FBQ3ZHO0FBQ0E7QUFDQSw4QkFBOEIsNERBQVksRUFBRSxhQUFhLElBQUksNERBQVksRUFBRSwyQkFBMkI7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdURBQVc7QUFDbkMsd0JBQXdCLHVEQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsK0RBQWU7QUFDaEQsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHlEQUFRO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1REFBVztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2REFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxRkFBYztBQUNoRCwyQ0FBMkMseUVBQWdCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdUVBQTJCO0FBQ2xEO0FBQ0E7QUFDQSx1QkFBdUIscUVBQXlCO0FBQ2hEO0FBQ0E7QUFDQSx1QkFBdUIsNkRBQWlCO0FBQ3hDO0FBQ0EsMEJBQTBCLHFGQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVEQUFXO0FBQ2hDLHlCQUF5Qix1REFBVztBQUNwQyx1QkFBdUIsdURBQVc7QUFDbEMsMkJBQTJCLHVEQUFXO0FBQ3RDO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBVztBQUNuQixxQkFBcUIsdURBQVc7QUFDaEMsbUJBQW1CLHVEQUFXO0FBQzlCLHlCQUF5Qix1REFBVztBQUNwQyx1QkFBdUIsdURBQVc7QUFDbEMsdUJBQXVCLFFBQVEscURBQVMscUJBQXFCLHFEQUFTO0FBQ3RFLHVCQUF1QixRQUFRLHFEQUFTLHFCQUFxQixxREFBUztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsa0VBQWE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxrRUFBYTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtRUFBdUIsRUFBRSx1Q0FBdUM7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywrREFBZTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1FQUF1QixFQUFFLHVDQUF1QztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLCtEQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBYyxrQkFBa0IsMERBQWM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBYyxrQkFBa0IsMERBQWM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBYztBQUM5QiwrQkFBK0IseURBQWE7QUFDNUM7QUFDQSxnQkFBZ0IsdURBQVc7QUFDM0Isd0JBQXdCLDBEQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHlEQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1REFBVztBQUMvQjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdURBQVc7QUFDL0IsK0ZBQStGLHFCQUFxQixFQUFFO0FBQ3RILHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMseURBQVMsdUJBQXVCLHVEQUFRLHNCQUFzQix5REFBUyx1QkFBdUIsdURBQVE7QUFDdkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx1QkFBdUI7QUFDeEQsaUNBQWlDLHVCQUF1QjtBQUN4RDtBQUNBLHFDQUFxQyx3QkFBd0I7QUFDN0Q7QUFDQTtBQUNBLHFDQUFxQyx3QkFBd0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyw4Q0FBTTtBQUNZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2N1cnNvcnMvWFlDdXJzb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3Vyc29yIGZvciBYWSBjaGFydFxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBDdXJzb3IgfSBmcm9tIFwiLi9DdXJzb3JcIjtcclxuaW1wb3J0IHsgU3ByaXRlIH0gZnJvbSBcIi4uLy4uL2NvcmUvU3ByaXRlXCI7XHJcbmltcG9ydCB7IE11dGFibGVWYWx1ZURpc3Bvc2VyLCBNdWx0aURpc3Bvc2VyIH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvRGlzcG9zZXJcIjtcclxuaW1wb3J0IHsgVmFsdWVBeGlzIH0gZnJvbSBcIi4uL2F4ZXMvVmFsdWVBeGlzXCI7XHJcbmltcG9ydCB7IERhdGVBeGlzIH0gZnJvbSBcIi4uL2F4ZXMvRGF0ZUF4aXNcIjtcclxuaW1wb3J0IHsgWFlTZXJpZXMgfSBmcm9tIFwiLi4vc2VyaWVzL1hZU2VyaWVzXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuaW1wb3J0IHsgY29sb3IgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9Db2xvclwiO1xyXG5pbXBvcnQgeyBJbnRlcmZhY2VDb2xvclNldCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0ludGVyZmFjZUNvbG9yU2V0XCI7XHJcbmltcG9ydCB7IGdldEludGVyYWN0aW9uIH0gZnJvbSBcIi4uLy4uL2NvcmUvaW50ZXJhY3Rpb24vSW50ZXJhY3Rpb25cIjtcclxuaW1wb3J0IHsgTW91c2VDdXJzb3JTdHlsZSB9IGZyb20gXCIuLi8uLi9jb3JlL2ludGVyYWN0aW9uL01vdXNlXCI7XHJcbmltcG9ydCAqIGFzICRtYXRoIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL01hdGhcIjtcclxuaW1wb3J0ICogYXMgJHV0aWxzIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1V0aWxzXCI7XHJcbmltcG9ydCAqIGFzICR0eXBlIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1R5cGVcIjtcclxuaW1wb3J0ICogYXMgJGFycmF5IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0FycmF5XCI7XHJcbmltcG9ydCAqIGFzICRwYXRoIGZyb20gXCIuLi8uLi9jb3JlL3JlbmRlcmluZy9QYXRoXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQSBjdXJzb3IgdXNlZCBvbiBbW1hZQ2hhcnRdXS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSVhZQ3Vyc29yRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSVhZQ3Vyc29yQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEB0b2RvIEFkZCBkZXNjcmlwdGlvbiwgZXhhbXBsZXNcclxuICovXHJcbnZhciBYWUN1cnNvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhYWUN1cnNvciwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gWFlDdXJzb3IoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gXHJcbiAgICAgICAgLy8gSW5pdFxyXG4gICAgICAgIF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVmVydGljYWwgY3Vyc29yIGxpbmUgZWxlbWVudC5cclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5fbGluZVggPSBuZXcgTXV0YWJsZVZhbHVlRGlzcG9zZXIoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBIb3Jpem9udGFsIGN1cnNvciBsaW5lIGVsZW1lbnQuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMuX2xpbmVZID0gbmV3IE11dGFibGVWYWx1ZURpc3Bvc2VyKCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSG9yaXpvbnRhbCBbW0F4aXNdXS5cclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5feEF4aXMgPSBuZXcgTXV0YWJsZVZhbHVlRGlzcG9zZXIoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBWZXJ0aWNhbCBbW0F4aXNdXS5cclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5feUF4aXMgPSBuZXcgTXV0YWJsZVZhbHVlRGlzcG9zZXIoKTtcclxuICAgICAgICBfdGhpcy5fc25hcFRvRGlzcG9zZXJzID0gW107XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJYWUN1cnNvclwiO1xyXG4gICAgICAgIC8vIERlZmF1bHRzXHJcbiAgICAgICAgX3RoaXMuYmVoYXZpb3IgPSBcInpvb21YXCI7XHJcbiAgICAgICAgX3RoaXMubWF4UGFuT3V0ID0gMC4xO1xyXG4gICAgICAgIHZhciBpbnRlcmZhY2VDb2xvcnMgPSBuZXcgSW50ZXJmYWNlQ29sb3JTZXQoKTtcclxuICAgICAgICAvLyBDcmVhdGUgc2VsZWN0aW9uIGVsZW1lbnRcclxuICAgICAgICB2YXIgc2VsZWN0aW9uID0gX3RoaXMuY3JlYXRlQ2hpbGQoU3ByaXRlKTtcclxuICAgICAgICBzZWxlY3Rpb24uc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBzZWxlY3Rpb24uZmlsbE9wYWNpdHkgPSAwLjI7XHJcbiAgICAgICAgc2VsZWN0aW9uLmZpbGwgPSBpbnRlcmZhY2VDb2xvcnMuZ2V0Rm9yKFwiYWx0ZXJuYXRpdmVCYWNrZ3JvdW5kXCIpO1xyXG4gICAgICAgIHNlbGVjdGlvbi5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgc2VsZWN0aW9uLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICBzZWxlY3Rpb24uaW50ZXJhY3Rpb25zRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIF90aGlzLnNlbGVjdGlvbiA9IHNlbGVjdGlvbjtcclxuICAgICAgICBfdGhpcy5fZGlzcG9zZXJzLnB1c2goX3RoaXMuc2VsZWN0aW9uKTtcclxuICAgICAgICAvLyBDcmVhdGUgY3Vyc29yJ3MgdmVydGljYWwgbGluZVxyXG4gICAgICAgIHZhciBsaW5lWCA9IF90aGlzLmNyZWF0ZUNoaWxkKFNwcml0ZSk7XHJcbiAgICAgICAgbGluZVguc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBsaW5lWC5zdHJva2UgPSBpbnRlcmZhY2VDb2xvcnMuZ2V0Rm9yKFwiZ3JpZFwiKTtcclxuICAgICAgICBsaW5lWC5maWxsID0gY29sb3IoKTtcclxuICAgICAgICBsaW5lWC5zdHJva2VEYXNoYXJyYXkgPSBcIjMsM1wiO1xyXG4gICAgICAgIGxpbmVYLmlzTWVhc3VyZWQgPSBmYWxzZTtcclxuICAgICAgICBsaW5lWC5zdHJva2VPcGFjaXR5ID0gMC40O1xyXG4gICAgICAgIGxpbmVYLmludGVyYWN0aW9uc0VuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBsaW5lWC55ID0gMDsgLy8gaW1wb3J0YW50XHJcbiAgICAgICAgX3RoaXMubGluZVggPSBsaW5lWDtcclxuICAgICAgICBfdGhpcy5fZGlzcG9zZXJzLnB1c2goX3RoaXMubGluZVgpO1xyXG4gICAgICAgIC8vIENyZWF0ZSBjdXJzb3IncyBob3Jpem9udGFsIGxpbmVcclxuICAgICAgICB2YXIgbGluZVkgPSBfdGhpcy5jcmVhdGVDaGlsZChTcHJpdGUpO1xyXG4gICAgICAgIGxpbmVZLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICAgICAgbGluZVkuc3Ryb2tlID0gaW50ZXJmYWNlQ29sb3JzLmdldEZvcihcImdyaWRcIik7XHJcbiAgICAgICAgbGluZVkuZmlsbCA9IGNvbG9yKCk7XHJcbiAgICAgICAgbGluZVkuc3Ryb2tlRGFzaGFycmF5ID0gXCIzLDNcIjtcclxuICAgICAgICBsaW5lWS5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgbGluZVkuc3Ryb2tlT3BhY2l0eSA9IDAuNDtcclxuICAgICAgICBsaW5lWS5pbnRlcmFjdGlvbnNFbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgbGluZVkueCA9IDA7IC8vIGltcG9ydGFudFxyXG4gICAgICAgIF90aGlzLmxpbmVZID0gbGluZVk7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKF90aGlzLmxpbmVZKTtcclxuICAgICAgICAvLyBBZGQgaGFuZGxlciBmb3Igc2l6ZSBjaGFuZ2VzXHJcbiAgICAgICAgX3RoaXMuZXZlbnRzLm9uKFwic2l6ZWNoYW5nZWRcIiwgX3RoaXMudXBkYXRlU2l6ZSwgX3RoaXMsIGZhbHNlKTtcclxuICAgICAgICBfdGhpcy5fZGlzcG9zZXJzLnB1c2goX3RoaXMuX2xpbmVYKTtcclxuICAgICAgICBfdGhpcy5fZGlzcG9zZXJzLnB1c2goX3RoaXMuX2xpbmVZKTtcclxuICAgICAgICBfdGhpcy5fZGlzcG9zZXJzLnB1c2goX3RoaXMuX3hBeGlzKTtcclxuICAgICAgICBfdGhpcy5fZGlzcG9zZXJzLnB1c2goX3RoaXMuX3lBeGlzKTtcclxuICAgICAgICBfdGhpcy5tYXNrID0gX3RoaXM7XHJcbiAgICAgICAgX3RoaXMuaGlkZVNlcmllc1Rvb2x0aXBzT25TZWxlY3Rpb24gPSB0cnVlO1xyXG4gICAgICAgIC8vIEFwcGx5IHRoZW1lXHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBjdXJzb3IgZWxlbWVudCBkaW1lbnNpb25zIG9uIHNpemUgY2hhbmdlLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqL1xyXG4gICAgWFlDdXJzb3IucHJvdG90eXBlLnVwZGF0ZVNpemUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubGluZVgpIHtcclxuICAgICAgICAgICAgdGhpcy5saW5lWC5wYXRoID0gJHBhdGgubW92ZVRvKHsgeDogMCwgeTogMCB9KSArICRwYXRoLmxpbmVUbyh7IHg6IDAsIHk6IHRoaXMuaW5uZXJIZWlnaHQgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmxpbmVZKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGluZVkucGF0aCA9ICRwYXRoLm1vdmVUbyh7IHg6IDAsIHk6IDAgfSkgKyAkcGF0aC5saW5lVG8oeyB4OiB0aGlzLmlubmVyV2lkdGgsIHk6IDAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBzZWxlY3Rpb24gZGltZW5zaW9ucyBvbiBzaXplIGNoYW5nZS5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVTZWxlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3VzZXNTZWxlY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIGRvd25Qb2ludCA9IHRoaXMuZG93blBvaW50O1xyXG4gICAgICAgICAgICB2YXIgYmVoYXZpb3IgPSB0aGlzLmJlaGF2aW9yO1xyXG4gICAgICAgICAgICBpZiAoZG93blBvaW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcG9pbnQgPSB0aGlzLnBvaW50O1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGluZVgpIHtcclxuICAgICAgICAgICAgICAgICAgICBwb2ludC54ID0gdGhpcy5saW5lWC5waXhlbFg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5saW5lWSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvaW50LnkgPSB0aGlzLmxpbmVZLnBpeGVsWTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBzZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbjtcclxuICAgICAgICAgICAgICAgIHZhciB4ID0gTWF0aC5taW4ocG9pbnQueCwgZG93blBvaW50LngpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHkgPSBNYXRoLm1pbihwb2ludC55LCBkb3duUG9pbnQueSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdyA9ICRtYXRoLnJvdW5kKE1hdGguYWJzKGRvd25Qb2ludC54IC0gcG9pbnQueCksIHRoaXMuX3Bvc2l0aW9uUHJlY2lzaW9uKTtcclxuICAgICAgICAgICAgICAgIHZhciBoID0gJG1hdGgucm91bmQoTWF0aC5hYnMoZG93blBvaW50LnkgLSBwb2ludC55KSwgdGhpcy5fcG9zaXRpb25QcmVjaXNpb24pO1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChiZWhhdmlvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ6b29tWFwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB5ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaCA9IHRoaXMucGl4ZWxIZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ6b29tWVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB4ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdyA9IHRoaXMucGl4ZWxXaWR0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInNlbGVjdFhcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgeSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGggPSB0aGlzLnBpeGVsSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic2VsZWN0WVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB4ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdyA9IHRoaXMucGl4ZWxXaWR0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24ueCA9IHg7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24ueSA9IHk7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24ucGF0aCA9ICRwYXRoLnJlY3RhbmdsZSh3LCBoKTtcclxuICAgICAgICAgICAgICAgIHNlbGVjdGlvbi52YWxpZGF0ZVBvc2l0aW9uKCk7IC8vIG90aGVyd2lzZSBFZGdlIHNob2VzIHNvbWUgaW5jb3JyZWN0IHNpemUgcmVjdGFuZ2xlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZ2VuZXJhbEJlaGF2aW9yICE9IFwic2VsZWN0XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUuZml4UG9pbnQgPSBmdW5jdGlvbiAocG9pbnQpIHtcclxuICAgICAgICBwb2ludC54ID0gTWF0aC5tYXgoMCwgcG9pbnQueCk7XHJcbiAgICAgICAgcG9pbnQueSA9IE1hdGgubWF4KDAsIHBvaW50LnkpO1xyXG4gICAgICAgIHBvaW50LnggPSBNYXRoLm1pbih0aGlzLnBpeGVsV2lkdGgsIHBvaW50LngpO1xyXG4gICAgICAgIHBvaW50LnkgPSBNYXRoLm1pbih0aGlzLnBpeGVsSGVpZ2h0LCBwb2ludC55KTtcclxuICAgICAgICByZXR1cm4gcG9pbnQ7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBQbGFjZXMgdGhlIGN1cnNvciBhdCBzcGVjaWZpYyBwb2ludC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcG9pbnQgUG9pbnQgdG8gcGxhY2UgY3Vyc29yIGF0XHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS50cmlnZ2VyTW92ZVJlYWwgPSBmdW5jdGlvbiAocG9pbnQsIGZvcmNlKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS50cmlnZ2VyTW92ZVJlYWwuY2FsbCh0aGlzLCBwb2ludCwgZm9yY2UpO1xyXG4gICAgICAgIHZhciBzbmFwVG9TZXJpZXMgPSB0aGlzLnNuYXBUb1NlcmllcztcclxuICAgICAgICBpZiAoKHNuYXBUb1NlcmllcyAmJiAhdGhpcy5kb3duUG9pbnQpKSB7XHJcbiAgICAgICAgICAgIGlmIChzbmFwVG9TZXJpZXMgaW5zdGFuY2VvZiBYWVNlcmllcykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHNuYXBUb1Nlcmllcy5pc0hpZGRlbikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTGluZVBvc2l0aW9ucyhwb2ludCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWxsSGlkZGVuXzEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgJGFycmF5LmVhY2goc25hcFRvU2VyaWVzLCBmdW5jdGlvbiAocykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghcy5pc0hpZGRlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxIaWRkZW5fMSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKGFsbEhpZGRlbl8xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVMaW5lUG9zaXRpb25zKHBvaW50KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVMaW5lUG9zaXRpb25zKHBvaW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuZG93blBvaW50ICYmICRtYXRoLmdldERpc3RhbmNlKHRoaXMuZG93blBvaW50LCBwb2ludCkgPiAzKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9nZW5lcmFsQmVoYXZpb3IgPT0gXCJwYW5cIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRQYW5uaW5nUmFuZ2VzKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoKFwicGFubmluZ1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVMaW5lUG9zaXRpb25zID0gZnVuY3Rpb24gKHBvaW50KSB7XHJcbiAgICAgICAgcG9pbnQgPSB0aGlzLmZpeFBvaW50KHRoaXMucG9pbnQpO1xyXG4gICAgICAgIGlmICh0aGlzLmxpbmVYICYmIHRoaXMubGluZVgudmlzaWJsZSAmJiAhdGhpcy54QXhpcykge1xyXG4gICAgICAgICAgICB0aGlzLmxpbmVYLnggPSBwb2ludC54O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5saW5lWSAmJiB0aGlzLmxpbmVZLnZpc2libGUgJiYgIXRoaXMueUF4aXMpIHtcclxuICAgICAgICAgICAgdGhpcy5saW5lWS55ID0gcG9pbnQueTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51cGRhdGVTZWxlY3Rpb24oKTtcclxuICAgIH07XHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUudHJpZ2dlckRvd25SZWFsID0gZnVuY3Rpb24gKHBvaW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMudmlzaWJsZSAmJiAhdGhpcy5pc0hpZGluZykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fZ2VuZXJhbEJlaGF2aW9yID09IFwic2VsZWN0XCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnBhcmVudCA9IHRoaXMucGFyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmZpdHNUb0JvdW5kcyhwb2ludCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZG93blBvaW50ID0geyB4OiBwb2ludC54LCB5OiBwb2ludC55IH07XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVBvaW50KHBvaW50KTtcclxuICAgICAgICAgICAgICAgIC8vdGhpcy51cGRhdGVMaW5lUG9zaXRpb25zKHBvaW50KTsgLy8gb3RoZXJ3aXNlIGxpbmVzIHdvbid0IGJlIGluIGNvcnJlY3QgcG9zaXRpb24gYW5kIHRvdWNoIHdvbid0IHdvcmsgZmluZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5wb2ludC54ID0gdGhpcy5kb3duUG9pbnQueDtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9pbnQueSA9IHRoaXMuZG93blBvaW50Lnk7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5zZWxlY3Rpb247XHJcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0aW9uWCA9IHRoaXMuZG93blBvaW50Lng7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0aW9uWSA9IHRoaXMuZG93blBvaW50Lnk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fdXNlc1NlbGVjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbi54ID0gc2VsZWN0aW9uWDtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24ueSA9IHNlbGVjdGlvblk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uLnBhdGggPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbi5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBfc3VwZXIucHJvdG90eXBlLnRyaWdnZXJEb3duUmVhbC5jYWxsKHRoaXMsIHBvaW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZG93blBvaW50ID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmRvd25Qb2ludCA9IHVuZGVmaW5lZDtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIHRoZSBjb29yZGluYXRlcyBvZiB3aGVyZSBwb2ludGVyIGRvd24gZXZlbnQgb2NjdXJyZWRcclxuICAgICAqICh3YXMgcHJlc3NlZCkuXHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS51cGRhdGVQb2ludCA9IGZ1bmN0aW9uIChwb2ludCkge1xyXG4gICAgICAgIGlmICh0aGlzLmxpbmVYKSB7XHJcbiAgICAgICAgICAgIHBvaW50LnggPSB0aGlzLmxpbmVYLnBpeGVsWDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMubGluZVkpIHtcclxuICAgICAgICAgICAgcG9pbnQueSA9IHRoaXMubGluZVkucGl4ZWxZO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBhY3Rpb24gd2hlbiBjdXJzb3IgaXMgcmVsZWFzZWQsIHdoaWNoIHNob3VsZCBwZXJmb3JtIGFuIG9wZXJhdGlvblxyXG4gICAgICogYmFzZWQgb24gaXRzIGBiZWhhdmlvcmAsIGxpa2Ugem9vbS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gIHBvaW50ICBSZWxlYXNlIHBvaW50XHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS50cmlnZ2VyVXBSZWFsID0gZnVuY3Rpb24gKHBvaW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaGFzTW92ZWQoKSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5kb3duUG9pbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudXBQb2ludCA9IHBvaW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVQb2ludCh0aGlzLnVwUG9pbnQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2dlbmVyYWxCZWhhdmlvciAhPSBcInBhblwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRSYW5nZXMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9nZW5lcmFsQmVoYXZpb3IgIT0gXCJzZWxlY3RcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIF9zdXBlci5wcm90b3R5cGUudHJpZ2dlclVwUmVhbC5jYWxsKHRoaXMsIHBvaW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2dlbmVyYWxCZWhhdmlvciAhPSBcInNlbGVjdFwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5oaWRlKDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy54UmFuZ2UgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnlSYW5nZSA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGlzcGF0Y2hJbW1lZGlhdGVseShcInNlbGVjdGVuZGVkXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIHJlc2V0IGN1cnNvciBzdHlsZSwganVzdCBpbiBjYXNlXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9nZW5lcmFsQmVoYXZpb3IgPT0gXCJwYW5cIikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGludGVyYWN0aW9uID0gZ2V0SW50ZXJhY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgIGludGVyYWN0aW9uLnNldEdsb2JhbFN0eWxlKE1vdXNlQ3Vyc29yU3R5bGUuZGVmYXVsdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5kaXNwYXRjaEltbWVkaWF0ZWx5KFwiYmVoYXZpb3JjYW5jZWxlZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5kb3duUG9pbnQgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5kaXNwYXRjaChcImN1cnNvcnBvc2l0aW9uY2hhbmdlZFwiKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENhbGN1bGF0ZXMgaWYgdGhlIGN1cnNvciBoYXMgbW92ZWQgZW5vdWdoIGJhc2VkIG9uIGl0cyBgYmVoYXZpb3JgLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm4gTW92ZWQ/XHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS5oYXNNb3ZlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGlzdGFuY2U7XHJcbiAgICAgICAgaWYgKHRoaXMuYmVoYXZpb3IgPT0gXCJ6b29tWFwiIHx8IHRoaXMuYmVoYXZpb3IgPT0gXCJwYW5YXCIpIHtcclxuICAgICAgICAgICAgZGlzdGFuY2UgPSAkbWF0aC5nZXRIb3Jpem9udGFsRGlzdGFuY2UodGhpcy5fdXBQb2ludE9yaWcsIHRoaXMuX2Rvd25Qb2ludE9yaWcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLmJlaGF2aW9yID09IFwiem9vbVlcIiB8fCB0aGlzLmJlaGF2aW9yID09IFwicGFuWVwiKSB7XHJcbiAgICAgICAgICAgIGRpc3RhbmNlID0gJG1hdGguZ2V0VmVydGljYWxEaXN0YW5jZSh0aGlzLl91cFBvaW50T3JpZywgdGhpcy5fZG93blBvaW50T3JpZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBkaXN0YW5jZSA9ICRtYXRoLmdldERpc3RhbmNlKHRoaXMuX3VwUG9pbnRPcmlnLCB0aGlzLl9kb3duUG9pbnRPcmlnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRpc3RhbmNlID4gZ2V0SW50ZXJhY3Rpb24oKS5nZXRIaXRPcHRpb24odGhpcy5pbnRlcmFjdGlvbnMsIFwiaGl0VG9sZXJhbmNlXCIpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogW2dldFJhbmdlcyBkZXNjcmlwdGlvbl1cclxuICAgICAqXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICovXHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUuZ2V0UGFubmluZ1JhbmdlcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgc3RhcnRYID0gJG1hdGgucm91bmQodGhpcy5kb3duUG9pbnQueCAvIHRoaXMuaW5uZXJXaWR0aCwgNSk7XHJcbiAgICAgICAgdmFyIHN0YXJ0WSA9IDEgLSAkbWF0aC5yb3VuZCh0aGlzLmRvd25Qb2ludC55IC8gdGhpcy5pbm5lckhlaWdodCwgNSk7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRYID0gJG1hdGgucm91bmQodGhpcy5wb2ludC54IC8gdGhpcy5pbm5lcldpZHRoLCA1KTtcclxuICAgICAgICB2YXIgY3VycmVudFkgPSAxIC0gJG1hdGgucm91bmQodGhpcy5wb2ludC55IC8gdGhpcy5pbm5lckhlaWdodCwgNSk7XHJcbiAgICAgICAgdmFyIGRlbHRhWCA9IHN0YXJ0WCAtIGN1cnJlbnRYO1xyXG4gICAgICAgIHZhciBkZWx0YVkgPSBzdGFydFkgLSBjdXJyZW50WTtcclxuICAgICAgICB0aGlzLnhSYW5nZSA9IHsgc3RhcnQ6IGRlbHRhWCwgZW5kOiAxICsgZGVsdGFYIH07XHJcbiAgICAgICAgdGhpcy55UmFuZ2UgPSB7IHN0YXJ0OiBkZWx0YVksIGVuZDogMSArIGRlbHRhWSB9O1xyXG4gICAgICAgIGlmICh0aGlzLmJlaGF2aW9yID09IFwicGFuWFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMueVJhbmdlLnN0YXJ0ID0gMDtcclxuICAgICAgICAgICAgdGhpcy55UmFuZ2UuZW5kID0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuYmVoYXZpb3IgPT0gXCJwYW5ZXCIpIHtcclxuICAgICAgICAgICAgdGhpcy54UmFuZ2Uuc3RhcnQgPSAwO1xyXG4gICAgICAgICAgICB0aGlzLnhSYW5nZS5lbmQgPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFtnZXRSYW5nZXMgZGVzY3JpcHRpb25dXHJcbiAgICAgKlxyXG4gICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAqL1xyXG4gICAgWFlDdXJzb3IucHJvdG90eXBlLmdldFJhbmdlcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy5saW5lWCkge1xyXG4gICAgICAgICAgICB0aGlzLnVwUG9pbnQueCA9IHRoaXMubGluZVgucGl4ZWxYO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5saW5lWSkge1xyXG4gICAgICAgICAgICB0aGlzLnVwUG9pbnQueSA9IHRoaXMubGluZVkucGl4ZWxZO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBAdG9kbyBJcyB0aGlzIG5lZWRlZD9cclxuICAgICAgICAkdXRpbHMudXNlZCh0aGlzLnNlbGVjdGlvbik7XHJcbiAgICAgICAgdmFyIHN0YXJ0WCA9ICRtYXRoLnJvdW5kKHRoaXMuZG93blBvaW50LnggLyB0aGlzLmlubmVyV2lkdGgsIDUpO1xyXG4gICAgICAgIHZhciBlbmRYID0gJG1hdGgucm91bmQoKHRoaXMudXBQb2ludC54KSAvIHRoaXMuaW5uZXJXaWR0aCwgNSk7XHJcbiAgICAgICAgdmFyIHN0YXJ0WSA9IDEgLSAkbWF0aC5yb3VuZCh0aGlzLmRvd25Qb2ludC55IC8gdGhpcy5pbm5lckhlaWdodCwgNSk7XHJcbiAgICAgICAgdmFyIGVuZFkgPSAxIC0gJG1hdGgucm91bmQoKHRoaXMudXBQb2ludC55KSAvIHRoaXMuaW5uZXJIZWlnaHQsIDUpO1xyXG4gICAgICAgIHRoaXMueFJhbmdlID0geyBzdGFydDogJG1hdGgubWluKHN0YXJ0WCwgZW5kWCksIGVuZDogJG1hdGgubWF4KHN0YXJ0WCwgZW5kWCkgfTtcclxuICAgICAgICB0aGlzLnlSYW5nZSA9IHsgc3RhcnQ6ICRtYXRoLm1pbihzdGFydFksIGVuZFkpLCBlbmQ6ICRtYXRoLm1heChzdGFydFksIGVuZFkpIH07XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFhZQ3Vyc29yLnByb3RvdHlwZSwgXCJiZWhhdmlvclwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQmVoYXZpb3JcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImJlaGF2aW9yXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ3Vyc29yJ3MgYmVoYXZpb3Igd2hlbiBpdCdzIG1vdmVkIHdpdGggcG9pbnRlciBkb3duOlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogKiBgXCJ6b29tWFwiYCAtIHpvb21zIGhvcml6b250YWxseS5cclxuICAgICAgICAgKiAqIGBcInpvb21ZXCJgIC0gem9vbXMgdmVydGljYWxseS5cclxuICAgICAgICAgKiAqIGBcInpvb21YWVwiYCAtIHpvb21zIGJvdGggaG9yaXpvbnRhbGx5IGFuZCB2ZXJ0aWNhbGx5LlxyXG4gICAgICAgICAqICogYFwic2VsZWN0WFwiYCAtIHNlbGVjdHMgYSByYW5nZSBob3Jpem9udGFsbHkuXHJcbiAgICAgICAgICogKiBgXCJzZWxlY3RZXCJgIC0gc2VsZWN0cyBhIHJhbmdlIHZlcnRpY2FsbHkuXHJcbiAgICAgICAgICogKiBgXCJzZWxlY3RYWVwiYCAtIHNlbGVjdHMgYSByYW5nZSBib3RoIGhvcml6b250YWxseSBhbmQgdmVydGljYWxseS5cclxuICAgICAgICAgKiAqIGBcInBhblhcImAgLSBtb3ZlcyAocGFucykgY3VycmVudCBzZWxlY3Rpb24gaG9yaXpvbnRhbGx5LlxyXG4gICAgICAgICAqICogYFwicGFuWVwiYCAtIG1vdmVzIChwYW5zKSBjdXJyZW50IHNlbGVjdGlvbiB2ZXJ0aWNhbGx5LlxyXG4gICAgICAgICAqICogYFwicGFuWFlcImAgLSBtb3ZlcyAocGFucykgY3VycmVudCBzZWxlY3Rpb24gYm90aCBob3Jpem9udGFsbHkgYW5kIHZlcnRpY2FsbHkuXHJcbiAgICAgICAgICogKiBgXCJub25lXCJgIC0gZG9lcyBub3RoaW5nIHdpdGggcG9pbnRlciBkb3duLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRS5nLiBcInpvb21YWVwiIHdpbGwgbWVhbiB0aGF0IHByZXNzaW5nIGEgbW91c2UgKG9yIHRvdWNoaW5nKSBvdmVyIHBsb3QgYXJlYVxyXG4gICAgICAgICAqIGFuZCBkcmFnZ2luZyBpdCB3aWxsIHN0YXJ0IHpvb21pbmcgdGhlIGNoYXJ0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogTk9URTogYFwiem9vbVhZXCJgIGFjdHMgZGlmZmVyZW50bHkgd2hlbiB1c2VkIG9uIGEgYERhdGVBeGlzYC5cclxuICAgICAgICAgKiBTZWUgW3RoaXMgbm90ZV0oaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjQvY29uY2VwdHMvY2hhcnQtY3Vyc29yLyN6b29tWFlfYmVoYXZpb3JfYW5kX0RhdGVBeGlzKS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSBCaGVhdmlvclxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImJlaGF2aW9yXCIsIHZhbHVlLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5fdXNlc1NlbGVjdGlvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAodmFsdWUuaW5kZXhPZihcInpvb21cIikgIT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2dlbmVyYWxCZWhhdmlvciA9IFwiem9vbVwiO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdXNlc1NlbGVjdGlvbiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHZhbHVlLmluZGV4T2YoXCJzZWxlY3RcIikgIT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2dlbmVyYWxCZWhhdmlvciA9IFwic2VsZWN0XCI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl91c2VzU2VsZWN0aW9uID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodmFsdWUuaW5kZXhPZihcInBhblwiKSAhPSAtMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZ2VuZXJhbEJlaGF2aW9yID0gXCJwYW5cIjtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3VzZXNTZWxlY3Rpb24gPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgQ3Vyc29yIHNob3VsZCBwcmV2ZW50IGRlZmF1bHQgYWN0aW9uIG9uIG1vdmUuXHJcbiAgICAgKlxyXG4gICAgICogSWYgY3Vyc29yJ3MgYmVoYXZpb3IgaXMgXCJub25lXCIsIGl0IHNob3VsZCBub3Qgb2JzdHJ1Y3QgdGhlIHBhZ2Ugc2Nyb2xsaW5nLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm4gUHJldmVudCBkZWZhdWx0P1xyXG4gICAgICovXHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUuc2hvdWxkUHJldmVudEdlc3R1cmVzID0gZnVuY3Rpb24gKHRvdWNoKSB7XHJcbiAgICAgICAgcmV0dXJuICghdGhpcy5pbnRlcmFjdGlvbnMuaXNUb3VjaFByb3RlY3RlZCB8fCAhdG91Y2gpICYmIHRoaXMuYmVoYXZpb3IgIT0gXCJub25lXCI7XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFhZQ3Vyc29yLnByb3RvdHlwZSwgXCJmdWxsV2lkdGhMaW5lWFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBGdWxsIHdpZHRoP1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiZnVsbFdpZHRoTGluZVhcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDdXJzb3IncyBob3Jpem9udGFsIGxpbmUgaXMgZXhwYW5kZWQgdG8gdGFrZSBmdWxsIHdpZHRoIG9mIHRoZSByZWxhdGVkXHJcbiAgICAgICAgICogQXhpcycgY2VsbC9jYXRlZ29yeS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIE5PVEU6IHRoaXMgc2V0dGluZyB3aWxsIHdvcmsgcHJvcGVybHkgaWYgYHhBeGlzYCBpcyBzZXQgYW5kIG9ubHkgaW4gY2FzZVxyXG4gICAgICAgICAqIGB4QXhpc2AgaXMgW1tDYXRlZ29yeUF4aXNdXSBvciBbW0RhdGVBeGlzXV0uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgRnVsbCB3aWR0aD9cclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJmdWxsV2lkdGhMaW5lWFwiLCB2YWx1ZSk7XHJcbiAgICAgICAgICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2l6ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoWFlDdXJzb3IucHJvdG90eXBlLCBcImZ1bGxXaWR0aExpbmVZXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEZ1bGwgd2lkdGg/XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJmdWxsV2lkdGhMaW5lWVwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEN1cnNvcidzIHZlcnRpY2FsIGxpbmUgaXMgZXhwYW5kZWQgdG8gdGFrZSBmdWxsIHdpZHRoIG9mIHRoZSByZWxhdGVkXHJcbiAgICAgICAgICogQXhpcycgY2VsbC9jYXRlZ29yeS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIE5PVEU6IHRoaXMgc2V0dGluZyB3aWxsIHdvcmsgcHJvcGVybHkgaWYgYHlBeGlzYCBpcyBzZXQgYW5kIG9ubHkgaW4gY2FzZVxyXG4gICAgICAgICAqIGB5QXhpc2AgaXMgW1tDYXRlZ29yeUF4aXNdXSBvciBbW0RhdGVBeGlzXV0uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgRnVsbCB3aWR0aD9cclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJmdWxsV2lkdGhMaW5lWVwiLCB2YWx1ZSk7XHJcbiAgICAgICAgICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2l6ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoWFlDdXJzb3IucHJvdG90eXBlLCBcImhpZGVTZXJpZXNUb29sdGlwc09uU2VsZWN0aW9uXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIGhpZGUgdG9vbHRpcD9cclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImhpZGVTZXJpZXNUb29sdGlwc09uU2VsZWN0aW9uXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSWYgc2V0IHRvIGB0cnVlYCB0aGlzIHdpbGwgaGlkZSBzZXJpZXMgdG9vbHRpcHMgd2hlbiBzZWxlY3Rpbmcgd2l0aCBjdXJzb3IuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAc2luY2UgNC41LjE1XHJcbiAgICAgICAgICogQHBhcmFtICB2YWx1ZSAgaGlkZSB0b29sdGlwcz9cclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJoaWRlU2VyaWVzVG9vbHRpcHNPblNlbGVjdGlvblwiLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoWFlDdXJzb3IucHJvdG90eXBlLCBcIm1heFRvb2x0aXBEaXN0YW5jZVwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBEaXN0YW5jZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwibWF4VG9vbHRpcERpc3RhbmNlXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSWYgc2V0IHRvIGEgbnVtZXJpYyB2YWx1ZSwgY3Vyc29yIHdpbGwgZGlzcGxheSBjbG9zZXN0IHNlcmllcycgdG9vbHRpcHNcclxuICAgICAgICAgKiBwbHVzIHRvb2x0aXBzIGZyb20gc2VyaWVzIHRoYXQgYXJlIGNsb3NlciB0byB0aGFuIGBtYXhUb29sdGlwRGlzdGFuY2VgIHRvXHJcbiAgICAgICAgICogaXQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBTZXQgaXQgdG8gYC0xYCB0byBhbHdheXMgZm9yY2Ugb25lIHRvb2x0aXAsIGV2ZW4gaWYgdGhlcmUgYXJlIG11bHRpcGxlXHJcbiAgICAgICAgICogZGF0YSBpdGVtcyBpbiBleGFjdGx5IHNhbWUgcGxhY2UuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAc2luY2UgNC43LjE4XHJcbiAgICAgICAgICogQHBhcmFtICB2YWx1ZSAgRGlzdGFuY2VcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJtYXhUb29sdGlwRGlzdGFuY2VcIiwgdmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFhZQ3Vyc29yLnByb3RvdHlwZSwgXCJtYXhQYW5PdXRcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gRnVsbCB3aWR0aD9cclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcIm1heFBhbk91dFwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElmIGN1cnNvciBiZWhhdmlvciBpcyBwYW5YIG9yIHBhblksIHdlIGFsbG93IHRvIHBhbiBwbG90IG91dCBvZiBpdCdzIG1heCBib3VuZHMgZm9yIGEgYmV0dGVyIHVzZXIgZXhwZXJpZW5jZS5cclxuICAgICAgICAgKiBUaGlzIHNldHRpbmcgc3BlY2lmaWVzIHJlbGF0aXZlIHZhbHVlIGJ5IGhvdyBtdWNoIHdlIGNhbiBwYW4gb3V0IHRoZSBwbG90XHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJtYXhQYW5PdXRcIiwgdmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFhZQ3Vyc29yLnByb3RvdHlwZSwgXCJ4QXhpc1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBYIGF4aXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3hBeGlzLmdldCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSByZWZlcmVuY2UgdG8gWCBbW0F4aXNdXS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEFuIFhZIGN1cnNvciBjYW4gbGl2ZSB3aXRob3V0IGB4QXhpc2Agc2V0LiBZb3Ugc2V0IHhBeGlzIGZvciBjdXJzb3Igd2hlblxyXG4gICAgICAgICAqIHlvdSBoYXZlIGF4aXMgdG9vbHRpcCBlbmFibGVkIGFuZCB5b3Ugd2FudCBjdXJzb3IgbGluZSB0byBiZSBhdCB0aGUgc2FtZVxyXG4gICAgICAgICAqIHBvc2l0aW9uIGFzIHRvb2x0aXAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIHdvcmtzIHdpdGggW1tDYXRlZ29yeUF4aXNdXSBhbmQgW1tEYXRlQXhpc11dIGJ1dCBub3Qgd2l0aFxyXG4gICAgICAgICAqIFtbVmFsdWVBeGlzXV0uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAdG9kbyBEZXNjcmlwdGlvbiAocmV2aWV3KVxyXG4gICAgICAgICAqIEBwYXJhbSBheGlzIFggYXhpc1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGF4aXMpIHtcclxuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3hBeGlzLmdldCgpICE9IGF4aXMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3hBeGlzLnNldChheGlzLCBuZXcgTXVsdGlEaXNwb3NlcihbXHJcbiAgICAgICAgICAgICAgICAgICAgYXhpcy50b29sdGlwLmV2ZW50cy5vbihcInBvc2l0aW9uY2hhbmdlZFwiLCB0aGlzLmhhbmRsZVhUb29sdGlwUG9zaXRpb24sIHRoaXMsIGZhbHNlKSxcclxuICAgICAgICAgICAgICAgICAgICBheGlzLmV2ZW50cy5vbihcInJhbmdlY2hhbmdlc3RhcnRlZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJldmVudFNob3cgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIHVuZGVmaW5lZCwgZmFsc2UpLFxyXG4gICAgICAgICAgICAgICAgICAgIGF4aXMuZXZlbnRzLm9uKFwicmFuZ2VjaGFuZ2VlbmRlZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucHJldmVudFNob3cgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZGlzcGF0Y2goXCJjdXJzb3Jwb3NpdGlvbmNoYW5nZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgdW5kZWZpbmVkLCBmYWxzZSlcclxuICAgICAgICAgICAgICAgIF0pKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFhZQ3Vyc29yLnByb3RvdHlwZSwgXCJ5QXhpc1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBZIEF4aXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3lBeGlzLmdldCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSByZWZlcmVuY2UgdG8gWSBbW0F4aXNdXS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEFuIFhZIGN1cnNvciBjYW4gbGl2ZSB3aXRob3V0IGB5QXhpc2Agc2V0LiBZb3Ugc2V0IHhBeGlzIGZvciBjdXJzb3Igd2hlblxyXG4gICAgICAgICAqIHlvdSBoYXZlIGF4aXMgdG9vbHRpcCBlbmFibGVkIGFuZCB5b3Ugd2FudCBjdXJzb3IgbGluZSB0byBiZSBhdCB0aGUgc2FtZVxyXG4gICAgICAgICAqIHBvc2l0aW9uIGFzIHRvb2x0aXAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIHdvcmtzIHdpdGggW1tDYXRlZ29yeUF4aXNdXSBhbmQgW1tEYXRlQXhpc11dIGJ1dCBub3Qgd2l0aFxyXG4gICAgICAgICAqIFtbVmFsdWVBeGlzXV0uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAdG9kbyBEZXNjcmlwdGlvbiAocmV2aWV3KVxyXG4gICAgICAgICAqIEBwYXJhbSBheGlzIFkgYXhpc1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGF4aXMpIHtcclxuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3lBeGlzLmdldCgpICE9IGF4aXMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3lBeGlzLnNldChheGlzLCBuZXcgTXVsdGlEaXNwb3NlcihbXHJcbiAgICAgICAgICAgICAgICAgICAgYXhpcy50b29sdGlwLmV2ZW50cy5vbihcInBvc2l0aW9uY2hhbmdlZFwiLCB0aGlzLmhhbmRsZVlUb29sdGlwUG9zaXRpb24sIHRoaXMsIGZhbHNlKSxcclxuICAgICAgICAgICAgICAgICAgICBheGlzLmV2ZW50cy5vbihcInJhbmdlY2hhbmdlc3RhcnRlZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuX19kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgdW5kZWZpbmVkLCBmYWxzZSksXHJcbiAgICAgICAgICAgICAgICAgICAgYXhpcy5ldmVudHMub24oXCJyYW5nZWNoYW5nZWVuZGVkXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5fX2Rpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmhpZGUoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmRpc3BhdGNoKFwiY3Vyc29ycG9zaXRpb25jaGFuZ2VkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIHVuZGVmaW5lZCwgZmFsc2UpXHJcbiAgICAgICAgICAgICAgICBdKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyBDdXJzb3IncyBwb3NpdGlvbiB3aGVuIGF4aXMgdG9vbHRpcCBjaGFuZ2VzIHBvc2l0aW9uLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBldmVudCBPcmlnaW5hbCBBeGlzIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS5oYW5kbGVYVG9vbHRpcFBvc2l0aW9uID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgdmFyIHRvb2x0aXAgPSB0aGlzLnhBeGlzLnRvb2x0aXA7XHJcbiAgICAgICAgdmFyIHBvaW50ID0gJHV0aWxzLnN2Z1BvaW50VG9TcHJpdGUoeyB4OiB0b29sdGlwLnBpeGVsWCwgeTogdG9vbHRpcC5waXhlbFkgfSwgdGhpcyk7XHJcbiAgICAgICAgdmFyIHggPSBwb2ludC54O1xyXG4gICAgICAgIHBvaW50LnkgPSAxO1xyXG4gICAgICAgIGlmICh0aGlzLmxpbmVYKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGluZVgueCA9IHg7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5maXRzVG9Cb3VuZHMocG9pbnQpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy54QXhpcyAmJiB0aGlzLmZ1bGxXaWR0aExpbmVYKSB7XHJcbiAgICAgICAgICAgIHZhciBzdGFydFBvaW50ID0gdGhpcy54QXhpcy5jdXJyZW50SXRlbVN0YXJ0UG9pbnQ7XHJcbiAgICAgICAgICAgIHZhciBlbmRQb2ludCA9IHRoaXMueEF4aXMuY3VycmVudEl0ZW1FbmRQb2ludDtcclxuICAgICAgICAgICAgaWYgKHN0YXJ0UG9pbnQgJiYgZW5kUG9pbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubGluZVgueCA9IHg7XHJcbiAgICAgICAgICAgICAgICB2YXIgd2lkdGggPSBlbmRQb2ludC54IC0gc3RhcnRQb2ludC54O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5lWC5wYXRoID0gJHBhdGgucmVjdGFuZ2xlKHdpZHRoLCB0aGlzLmlubmVySGVpZ2h0LCAtd2lkdGggLyAyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgQ3Vyc29yJ3MgcG9zaXRpb24gd2hlbiBZIGF4aXMgY2hhbmdlcyBwb3NpdGlvbiBvciBzY2FsZS5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgT3JpZ2luYWwgQXhpcyBldmVudFxyXG4gICAgICovXHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUuaGFuZGxlWVRvb2x0aXBQb3NpdGlvbiA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciB0b29sdGlwID0gdGhpcy55QXhpcy50b29sdGlwO1xyXG4gICAgICAgIHZhciBwb2ludCA9ICR1dGlscy5zdmdQb2ludFRvU3ByaXRlKHsgeDogdG9vbHRpcC5waXhlbFgsIHk6IHRvb2x0aXAucGl4ZWxZIH0sIHRoaXMpO1xyXG4gICAgICAgIHZhciB5ID0gcG9pbnQueTtcclxuICAgICAgICBwb2ludC54ID0gMTtcclxuICAgICAgICBpZiAodGhpcy5saW5lWSkge1xyXG4gICAgICAgICAgICB0aGlzLmxpbmVZLnkgPSB5O1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZml0c1RvQm91bmRzKHBvaW50KSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMueUF4aXMgJiYgdGhpcy5mdWxsV2lkdGhMaW5lWSkge1xyXG4gICAgICAgICAgICB2YXIgc3RhcnRQb2ludCA9IHRoaXMueUF4aXMuY3VycmVudEl0ZW1TdGFydFBvaW50O1xyXG4gICAgICAgICAgICB2YXIgZW5kUG9pbnQgPSB0aGlzLnlBeGlzLmN1cnJlbnRJdGVtRW5kUG9pbnQ7XHJcbiAgICAgICAgICAgIGlmIChzdGFydFBvaW50ICYmIGVuZFBvaW50KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpbmVZLnkgPSB5O1xyXG4gICAgICAgICAgICAgICAgdmFyIGhlaWdodCA9IGVuZFBvaW50LnkgLSBzdGFydFBvaW50Lnk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpbmVZLnBhdGggPSAkcGF0aC5yZWN0YW5nbGUodGhpcy5pbm5lcldpZHRoLCBoZWlnaHQsIDAsIC1oZWlnaHQgLyAyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoWFlDdXJzb3IucHJvdG90eXBlLCBcImxpbmVYXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIExpbmUgZWxlbWVudFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGluZVguZ2V0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIExpbmUgZWxlbWVudCB0byB1c2UgZm9yIFggYXhpcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSBsaW5lWCBMaW5lXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAobGluZVgpIHtcclxuICAgICAgICAgICAgaWYgKGxpbmVYKSB7XHJcbiAgICAgICAgICAgICAgICBsaW5lWC5zZXRFbGVtZW50KHRoaXMucGFwZXIuYWRkKFwicGF0aFwiKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saW5lWC5zZXQobGluZVgsIGxpbmVYLmV2ZW50cy5vbihcInBvc2l0aW9uY2hhbmdlZFwiLCB0aGlzLnVwZGF0ZVNlbGVjdGlvbiwgdGhpcywgZmFsc2UpKTtcclxuICAgICAgICAgICAgICAgIGxpbmVYLmludGVyYWN0aW9uc0VuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGxpbmVYLnBhcmVudCA9IHRoaXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saW5lWC5yZXNldCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoWFlDdXJzb3IucHJvdG90eXBlLCBcImxpbmVZXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIExpbmUgZWxlbWVudFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGluZVkuZ2V0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIExpbmUgZWxlbWVudCB0byB1c2UgWSBheGlzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIGxpbmVZIExpbmVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChsaW5lWSkge1xyXG4gICAgICAgICAgICBpZiAobGluZVkpIHtcclxuICAgICAgICAgICAgICAgIGxpbmVZLnNldEVsZW1lbnQodGhpcy5wYXBlci5hZGQoXCJwYXRoXCIpKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xpbmVZLnNldChsaW5lWSwgbGluZVkuZXZlbnRzLm9uKFwicG9zaXRpb25jaGFuZ2VkXCIsIHRoaXMudXBkYXRlU2VsZWN0aW9uLCB0aGlzLCBmYWxzZSkpO1xyXG4gICAgICAgICAgICAgICAgbGluZVkucGFyZW50ID0gdGhpcztcclxuICAgICAgICAgICAgICAgIGxpbmVZLmludGVyYWN0aW9uc0VuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xpbmVZLnJlc2V0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShYWUN1cnNvci5wcm90b3R5cGUsIFwic2VsZWN0aW9uXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIFNlbGVjdGlvbiByZWN0YW5nbGVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NlbGVjdGlvbjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgc2VsZWN0aW9uIGVsZW1lbnQgKFtbU3ByaXRlXV0pLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHNlbGVjdGlvbiBTZWxlY3Rpb24gcmVjdGFuZ2xlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoc2VsZWN0aW9uKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NlbGVjdGlvbiA9IHNlbGVjdGlvbjtcclxuICAgICAgICAgICAgaWYgKHNlbGVjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uLmVsZW1lbnQgPSB0aGlzLnBhcGVyLmFkZChcInBhdGhcIik7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24ucGFyZW50ID0gdGhpcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBQcm9jZXNzZXMgSlNPTi1iYXNlZCBjb25maWcgYmVmb3JlIGl0IGlzIGFwcGxpZWQgdG8gdGhlIG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBMb29rcyBpZiBgeEF4aXNgIGFuZCBgeUF4aXNgIGlzIHNldCB2aWEgSUQgaW4gSlNPTiBjb25maWcsIGFuZCByZXBsYWNlc1xyXG4gICAgICogd2l0aCByZWFsIHJlZmVyZW5jZXMuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIGNvbmZpZyAgQ29uZmlnXHJcbiAgICAgKi9cclxuICAgIFhZQ3Vyc29yLnByb3RvdHlwZS5wcm9jZXNzQ29uZmlnID0gZnVuY3Rpb24gKGNvbmZpZykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKGNvbmZpZykge1xyXG4gICAgICAgICAgICAvLyBTZXQgdXAgYXhlc1xyXG4gICAgICAgICAgICBpZiAoJHR5cGUuaGFzVmFsdWUoY29uZmlnLnhBeGlzKSAmJiAkdHlwZS5pc1N0cmluZyhjb25maWcueEF4aXMpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5tYXAuaGFzS2V5KGNvbmZpZy54QXhpcykpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25maWcueEF4aXMgPSB0aGlzLm1hcC5nZXRLZXkoY29uZmlnLnhBeGlzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ0Vycm9ycy5wdXNoKFwiW1hZQ3Vyc29yXSBObyBheGlzIHdpdGggaWQgXFxcIlwiICsgY29uZmlnLnhBeGlzICsgXCJcXFwiIGZvdW5kIGZvciBgeEF4aXNgXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBjb25maWcueEF4aXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCR0eXBlLmhhc1ZhbHVlKGNvbmZpZy55QXhpcykgJiYgJHR5cGUuaXNTdHJpbmcoY29uZmlnLnlBeGlzKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubWFwLmhhc0tleShjb25maWcueUF4aXMpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uZmlnLnlBeGlzID0gdGhpcy5tYXAuZ2V0S2V5KGNvbmZpZy55QXhpcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdFcnJvcnMucHVzaChcIltYWUN1cnNvcl0gTm8gYXhpcyB3aXRoIGlkIFxcXCJcIiArIGNvbmZpZy55QXhpcyArIFwiXFxcIiBmb3VuZCBmb3IgYHlBeGlzYFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBkZWxldGUgY29uZmlnLnlBeGlzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgkdHlwZS5oYXNWYWx1ZShjb25maWcuc25hcFRvU2VyaWVzKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHNuYXBUb18xID0gJHR5cGUuaXNBcnJheShjb25maWcuc25hcFRvU2VyaWVzKSA/IGNvbmZpZy5zbmFwVG9TZXJpZXMgOiBbY29uZmlnLnNuYXBUb1Nlcmllc107XHJcbiAgICAgICAgICAgICAgICB2YXIgc25hcEVycm9yXzEgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICRhcnJheS5lYWNoKHNuYXBUb18xLCBmdW5jdGlvbiAoc25hcCwgaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJHR5cGUuaXNTdHJpbmcoc25hcCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLm1hcC5oYXNLZXkoc25hcCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNuYXBUb18xW2luZGV4XSA9IF90aGlzLm1hcC5nZXRLZXkoc25hcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5wcm9jZXNzaW5nRXJyb3JzLnB1c2goXCJbWFlDdXJzb3JdIE5vIHNlcmllcyB3aXRoIGlkIFxcXCJcIiArIHNuYXAgKyBcIlxcXCIgZm91bmQgZm9yIGBzZXJpZXNgXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc25hcEVycm9yXzEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc25hcEVycm9yXzEpIHtcclxuICAgICAgICAgICAgICAgICAgICBkZWxldGUgY29uZmlnLnNuYXBUb1NlcmllcztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZy5zbmFwVG9TZXJpZXMgPSBzbmFwVG9fMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLnByb2Nlc3NDb25maWcuY2FsbCh0aGlzLCBjb25maWcpO1xyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShYWUN1cnNvci5wcm90b3R5cGUsIFwic25hcFRvU2VyaWVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIHtYWVNlcmllcyB8IFhZU2VyaWVzW119XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJzbmFwVG9TZXJpZXNcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBTcGVjaWZpZXMgdG8gd2hpY2ggc2VyaWVzIGN1cnNvciBsaW5lcyBzaG91bGQgYmUgc25hcHBlZC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIENhbiBiZSBhIHNpbmdsZSBzZXJpZXMgaW5zdGFuY2Ugb3IgYW4gYXJyYXkgb2Ygc2VyaWVzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHtYWVNlcmllcyB8IFhZU2VyaWVzW119XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoc2VyaWVzKSB7XHJcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJzbmFwVG9TZXJpZXNcIiwgc2VyaWVzKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHNlcmllcyBpbnN0YW5jZW9mIFhZU2VyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VyaWVzID0gW3Nlcmllc107XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc25hcFRvRGlzcG9zZXJzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJGFycmF5LmVhY2godGhpcy5fc25hcFRvRGlzcG9zZXJzLCBmdW5jdGlvbiAoZGlzcG9zZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcG9zZXIuZGlzcG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fc25hcFRvRGlzcG9zZXJzID0gW107XHJcbiAgICAgICAgICAgICAgICBpZiAoc2VyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJGFycmF5LmVhY2goc2VyaWVzLCBmdW5jdGlvbiAocykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5fc25hcFRvRGlzcG9zZXJzLnB1c2gocy5ldmVudHMub24oXCJ0b29sdGlwc2hvd25hdFwiLCBmdW5jdGlvbiAoKSB7IF90aGlzLmhhbmRsZVNuYXAocyk7IH0sIHVuZGVmaW5lZCwgZmFsc2UpKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBbaGFuZGxlU25hcCBkZXNjcmlwdGlvbl1cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICovXHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUuaGFuZGxlU25hcCA9IGZ1bmN0aW9uIChzZXJpZXMpIHtcclxuICAgICAgICBpZiAoIXRoaXMuZG93blBvaW50KSB7XHJcbiAgICAgICAgICAgIHZhciB4ID0gc2VyaWVzLmdldFRvb2x0aXBYKCkgKyBzZXJpZXMueEF4aXMucGl4ZWxYO1xyXG4gICAgICAgICAgICB2YXIgeSA9IHNlcmllcy5nZXRUb29sdGlwWSgpICsgc2VyaWVzLnlBeGlzLnBpeGVsWTtcclxuICAgICAgICAgICAgaWYgKHRoaXMueEF4aXMpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnhBeGlzLnJlbmRlcmVyLm9wcG9zaXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeSAtPSB0aGlzLnBpeGVsSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMucG9pbnQgPSB7IHg6IHgsIHk6IHkgfTtcclxuICAgICAgICAgICAgdGhpcy5nZXRQb3NpdGlvbnMoKTtcclxuICAgICAgICAgICAgdmFyIHh4ID0geDtcclxuICAgICAgICAgICAgdmFyIHl5ID0geTtcclxuICAgICAgICAgICAgeCAtPSB0aGlzLnBpeGVsV2lkdGg7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnlBeGlzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy55QXhpcy5yZW5kZXJlci5vcHBvc2l0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHggKz0gdGhpcy5waXhlbFdpZHRoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciB0b29sdGlwID0gc2VyaWVzLnRvb2x0aXA7XHJcbiAgICAgICAgICAgIHZhciBkdXJhdGlvbiA9IHRvb2x0aXAuYW5pbWF0aW9uRHVyYXRpb247XHJcbiAgICAgICAgICAgIHZhciBlYXNpbmcgPSB0b29sdGlwLmFuaW1hdGlvbkVhc2luZztcclxuICAgICAgICAgICAgdmFyIHhBeGlzID0gc2VyaWVzLnhBeGlzO1xyXG4gICAgICAgICAgICB2YXIgeUF4aXMgPSBzZXJpZXMueUF4aXM7XHJcbiAgICAgICAgICAgIGlmICh4QXhpcyBpbnN0YW5jZW9mIFZhbHVlQXhpcyAmJiAhKHhBeGlzIGluc3RhbmNlb2YgRGF0ZUF4aXMpICYmIHlBeGlzIGluc3RhbmNlb2YgVmFsdWVBeGlzICYmICEoeUF4aXMgaW5zdGFuY2VvZiBEYXRlQXhpcykpIHtcclxuICAgICAgICAgICAgICAgIHNlcmllcy55QXhpcy5zaG93VG9vbHRpcEF0UG9zaXRpb24odGhpcy55UG9zaXRpb24pO1xyXG4gICAgICAgICAgICAgICAgc2VyaWVzLnhBeGlzLnNob3dUb29sdGlwQXRQb3NpdGlvbih0aGlzLnhQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2VyaWVzLmJhc2VBeGlzID09IHNlcmllcy54QXhpcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlcmllcy55QXhpcy5zaG93VG9vbHRpcEF0UG9zaXRpb24odGhpcy55UG9zaXRpb24pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHNlcmllcy5iYXNlQXhpcyA9PSBzZXJpZXMueUF4aXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZXJpZXMueEF4aXMuc2hvd1Rvb2x0aXBBdFBvc2l0aW9uKHRoaXMueFBvc2l0aW9uKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmxpbmVYLmFuaW1hdGUoW3sgcHJvcGVydHk6IFwieVwiLCB0bzogeSB9XSwgZHVyYXRpb24sIGVhc2luZyk7XHJcbiAgICAgICAgICAgIHRoaXMubGluZVkuYW5pbWF0ZShbeyBwcm9wZXJ0eTogXCJ4XCIsIHRvOiB4IH1dLCBkdXJhdGlvbiwgZWFzaW5nKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnhBeGlzKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpbmVYLmFuaW1hdGUoW3sgcHJvcGVydHk6IFwieFwiLCB0bzogeHggfV0sIGR1cmF0aW9uLCBlYXNpbmcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghdGhpcy55QXhpcykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5lWS5hbmltYXRlKFt7IHByb3BlcnR5OiBcInlcIiwgdG86IHl5IH1dLCBkdXJhdGlvbiwgZWFzaW5nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIERlc3Ryb3lzIHRoaXMgb2JqZWN0IGFuZCBhbGwgcmVsYXRlZCBkYXRhLlxyXG4gICAgICovXHJcbiAgICBYWUN1cnNvci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLmhpZGUoMCk7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kaXNwb3NlLmNhbGwodGhpcyk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFhZQ3Vyc29yO1xyXG59KEN1cnNvcikpO1xyXG5leHBvcnQgeyBYWUN1cnNvciB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJYWUN1cnNvclwiXSA9IFhZQ3Vyc29yO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1YWUN1cnNvci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js ***!
  \***********************************************************************************/
/*! exports provided: Candlestick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Candlestick\", function() { return Candlestick; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Line */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Candlestick = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(Candlestick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Candlestick() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Candlestick\";\r\n        _this.layout = \"none\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Candlestick.prototype.createAssets = function () {\r\n        _super.prototype.createAssets.call(this);\r\n        this.lowLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__[\"Line\"]);\r\n        this.lowLine.shouldClone = false;\r\n        this.highLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__[\"Line\"]);\r\n        this.highLine.shouldClone = false;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Candlestick]].\r\n     *\r\n     * @param source Source Candlestick\r\n     */\r\n    Candlestick.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.lowLine) {\r\n            this.lowLine.copyFrom(source.lowLine);\r\n        }\r\n        if (this.highLine) {\r\n            this.highLine.copyFrom(source.highLine);\r\n        }\r\n    };\r\n    return Candlestick;\r\n}(_Column__WEBPACK_IMPORTED_MODULE_1__[\"Column\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"Candlestick\"] = Candlestick;\r\n//# sourceMappingURL=Candlestick.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0NhbmRsZXN0aWNrLmpzP2Q1M2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNjO0FBQ0Q7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5QkFBeUI7QUFDbEMsU0FBUywyQkFBMkI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx3REFBSTtBQUM1QztBQUNBLHlDQUF5Qyx3REFBSTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLDhDQUFNO0FBQ2U7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvZWxlbWVudHMvQ2FuZGxlc3RpY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTW9kdWxlIHRoYXQgZGVmaW5lcyBldmVyeXRoaW5nIHJlbGF0ZWQgdG8gYnVpbGRpbmcgQ2FuZGxlc3RpY2tzLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBDb2x1bW4gfSBmcm9tIFwiLi9Db2x1bW5cIjtcclxuaW1wb3J0IHsgTGluZSB9IGZyb20gXCIuLi8uLi9jb3JlL2VsZW1lbnRzL0xpbmVcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIENsYXNzIHVzZWQgdG8gY3JlYXRlcyBDYW5kbGVzdGlja3MuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElDYW5kbGVzdGlja0V2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElDYW5kbGVzdGlja0FkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAdG9kbyBVc2FnZSBleGFtcGxlXHJcbiAqIEBpbXBvcnRhbnRcclxuICovXHJcbnZhciBDYW5kbGVzdGljayA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhDYW5kbGVzdGljaywgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ2FuZGxlc3RpY2soKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkNhbmRsZXN0aWNrXCI7XHJcbiAgICAgICAgX3RoaXMubGF5b3V0ID0gXCJub25lXCI7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIENhbmRsZXN0aWNrLnByb3RvdHlwZS5jcmVhdGVBc3NldHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5jcmVhdGVBc3NldHMuY2FsbCh0aGlzKTtcclxuICAgICAgICB0aGlzLmxvd0xpbmUgPSB0aGlzLmNyZWF0ZUNoaWxkKExpbmUpO1xyXG4gICAgICAgIHRoaXMubG93TGluZS5zaG91bGRDbG9uZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuaGlnaExpbmUgPSB0aGlzLmNyZWF0ZUNoaWxkKExpbmUpO1xyXG4gICAgICAgIHRoaXMuaGlnaExpbmUuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvcGllcyBhbGwgcGFyYW1ldGVycyBmcm9tIGFub3RoZXIgW1tDYW5kbGVzdGlja11dLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzb3VyY2UgU291cmNlIENhbmRsZXN0aWNrXHJcbiAgICAgKi9cclxuICAgIENhbmRsZXN0aWNrLnByb3RvdHlwZS5jb3B5RnJvbSA9IGZ1bmN0aW9uIChzb3VyY2UpIHtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmNvcHlGcm9tLmNhbGwodGhpcywgc291cmNlKTtcclxuICAgICAgICBpZiAodGhpcy5sb3dMaW5lKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG93TGluZS5jb3B5RnJvbShzb3VyY2UubG93TGluZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmhpZ2hMaW5lKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGlnaExpbmUuY29weUZyb20oc291cmNlLmhpZ2hMaW5lKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENhbmRsZXN0aWNrO1xyXG59KENvbHVtbikpO1xyXG5leHBvcnQgeyBDYW5kbGVzdGljayB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJDYW5kbGVzdGlja1wiXSA9IENhbmRsZXN0aWNrO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1DYW5kbGVzdGljay5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js ***!
  \*********************************************************************************/
/*! exports provided: ChordLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChordLink\", function() { return ChordLink; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_elements_QuadraticCurve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/QuadraticCurve */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * ChordLink module\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Chord Diagram.\r\n *\r\n * @see {@link IChordLinkEvents} for a list of available events\r\n * @see {@link IChordLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ChordLink = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ChordLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordLink\";\r\n        _this.middleLine = _this.createChild(_core_elements_QuadraticCurve__WEBPACK_IMPORTED_MODULE_3__[\"QuadraticCurve\"]);\r\n        _this.middleLine.shouldClone = false;\r\n        _this.middleLine.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates (redraws) the link.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (!this.isTemplate) {\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var arc = this.arc;\r\n            var radius = this.radius;\r\n            var fromNode = this.dataItem.fromNode;\r\n            var toNode = this.dataItem.toNode;\r\n            var fromX = 0;\r\n            var fromY = 0;\r\n            if (fromNode) {\r\n                fromX = fromNode.pixelX + fromNode.dx;\r\n                fromY = fromNode.pixelY + fromNode.dy;\r\n            }\r\n            var toX = 0;\r\n            var toY = 0;\r\n            if (toNode) {\r\n                toX = toNode.pixelX + toNode.dx;\r\n                toY = toNode.pixelY + toNode.dy;\r\n            }\r\n            if (radius > 0) {\r\n                var x1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"cos\"](startAngle) + fromX;\r\n                var y1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"sin\"](startAngle) + fromY;\r\n                var x2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"cos\"](endAngle) + toX;\r\n                var y2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"sin\"](endAngle) + toY;\r\n                //let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;\r\n                //let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});\r\n                //let cpx = (arcWidth) * $math.cos(cpAngle);\r\n                //let cpy = (arcWidth) * $math.sin(cpAngle);\r\n                var cp = { x: 0, y: 0 };\r\n                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"moveTo\"]({ x: x1, y: y1 });\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"arcTo\"](startAngle, arc, radius);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"quadraticCurveTo\"]({ x: x2, y: y2 }, cp);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"arcTo\"](endAngle, arc, radius);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"quadraticCurveTo\"]({ x: x1, y: y1 }, cp);\r\n                if (arc > 0) {\r\n                    this.link.path = path;\r\n                }\r\n                else {\r\n                    this.link.path = \"\";\r\n                }\r\n                if (this.maskBullets) {\r\n                    this.bulletsMask.path = path;\r\n                    this.bulletsContainer.mask = this.bulletsMask;\r\n                }\r\n                var mAngle1 = startAngle + arc / 2;\r\n                var mAngle2 = endAngle + arc / 2;\r\n                var middleLine = this.middleLine;\r\n                middleLine.x1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"cos\"](mAngle1) + fromX;\r\n                middleLine.y1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"sin\"](mAngle1) + fromY;\r\n                middleLine.x2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"cos\"](mAngle2) + toX;\r\n                middleLine.y2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"sin\"](mAngle2) + toY;\r\n                middleLine.cpx = 0;\r\n                middleLine.cpy = 0;\r\n                middleLine.stroke = this.fill;\r\n                this.positionBullets();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChordLink.prototype, \"radius\", {\r\n        /**\r\n         * @return End Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * [radius description]\r\n         *\r\n         * @todo Description\r\n         * @param value End Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"radius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordLink.prototype, \"arc\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"arc\");\r\n        },\r\n        /**\r\n         * [arc description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"arc\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ChordLink;\r\n}(_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagramLink\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"ChordLink\"] = ChordLink;\r\n//# sourceMappingURL=ChordLink.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js ***!
  \*********************************************************************************/
/*! exports provided: ChordNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChordNode\", function() { return ChordNode; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js\");\n/* harmony import */ var _axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../axes/AxisLabelCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_elements_Slice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/elements/Slice */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../elements/Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/**\r\n * ChordNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a node in a Chord Diagram.\r\n *\r\n * A Chord node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[ChordLink]] elements.\r\n *\r\n * @see {@link IChordNodeEvents} for a list of available events\r\n * @see {@link IChordNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ChordNode = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ChordNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordNode() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordNode\";\r\n        var label = _this.createChild(_axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_2__[\"AxisLabelCircular\"]);\r\n        label.location = 0.5;\r\n        label.radius = 5;\r\n        label.text = \"{name}\";\r\n        label.zIndex = 1;\r\n        label.shouldClone = false;\r\n        _this.label = label;\r\n        _this.layout = \"none\";\r\n        _this.events.on(\"positionchanged\", _this.updateRotation, _this, false);\r\n        _this.isMeasured = false;\r\n        _this.slice = _this.createChild(_core_elements_Slice__WEBPACK_IMPORTED_MODULE_4__[\"Slice\"]);\r\n        _this.slice.isMeasured = false;\r\n        var hiddenState = _this.hiddenState;\r\n        hiddenState.properties.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__[\"InterfaceColorSet\"]().getFor(\"disabledBackground\");\r\n        hiddenState.properties.opacity = 0.5;\r\n        hiddenState.properties.visible = true;\r\n        _this.setStateOnChildren = false;\r\n        _this.slice.hiddenState.properties.visible = true;\r\n        _this.adapter.add(\"tooltipX\", function (tooltipX, target) {\r\n            return target.slice.ix * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n        });\r\n        _this.adapter.add(\"tooltipY\", function (tooltipY, target) {\r\n            return target.slice.iy * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates all links, attached to this node.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordNode.prototype.invalidateLinks = function () {\r\n        var _this = this;\r\n        _super.prototype.invalidateLinks.call(this);\r\n        var label = this.label;\r\n        var slice = this.slice;\r\n        var chart = this.chart;\r\n        if (chart && slice) {\r\n            var sum = this.total;\r\n            var arc_1 = slice.arc;\r\n            var sliceStartAngle_1 = slice.startAngle;\r\n            this.children.each(function (child) {\r\n                if (child instanceof _elements_Bullet__WEBPACK_IMPORTED_MODULE_9__[\"Bullet\"]) {\r\n                    var locationX = child.locationX;\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](locationX)) {\r\n                        locationX = 0.5;\r\n                    }\r\n                    var locationY = child.locationY;\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](locationY)) {\r\n                        locationY = 1;\r\n                    }\r\n                    var childAngle = sliceStartAngle_1 + arc_1 * locationX;\r\n                    var childRadius = locationY * slice.radius;\r\n                    child.x = childRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](childAngle);\r\n                    child.y = childRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](childAngle);\r\n                }\r\n            });\r\n            var labelAngle = sliceStartAngle_1 + arc_1 * label.location;\r\n            var startAngle = sliceStartAngle_1 + (1 - sum / this.adjustedTotal) * arc_1 * 0.5; // if value of a node is > then sum of the links, add to center link\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNaN\"](startAngle)) {\r\n                startAngle = sliceStartAngle_1;\r\n            }\r\n            label.fixPosition(labelAngle, slice.radius);\r\n            this.nextAngle = startAngle;\r\n            if (this._outgoingSorted) {\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"each\"](this._outgoingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    link.parent = _this.chart.linksContainer;\r\n                    var value = dataItem.getWorkingValue(\"value\");\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](value)) {\r\n                        if (chart.nonRibbon) {\r\n                            var percentWidth = link.percentWidth;\r\n                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](percentWidth)) {\r\n                                percentWidth = 5;\r\n                            }\r\n                            percentWidth = percentWidth / 100;\r\n                            link.startAngle = sliceStartAngle_1 + arc_1 / 2 - arc_1 / 2 * percentWidth;\r\n                            link.arc = arc_1 * percentWidth;\r\n                        }\r\n                        else {\r\n                            link.arc = value * chart.valueAngle;\r\n                            link.startAngle = _this.nextAngle;\r\n                            _this.nextAngle += link.arc;\r\n                        }\r\n                        if (!dataItem.toNode) {\r\n                            link.endAngle = link.startAngle;\r\n                        }\r\n                        link.radius = slice.pixelInnerRadius;\r\n                    }\r\n                    //link.validate();\r\n                });\r\n            }\r\n            if (this._incomingSorted) {\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"each\"](this._incomingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    link.radius = slice.pixelInnerRadius;\r\n                    if (chart.nonRibbon) {\r\n                        var percentWidth = link.percentWidth;\r\n                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](percentWidth)) {\r\n                            percentWidth = 5;\r\n                        }\r\n                        percentWidth = percentWidth / 100;\r\n                        link.endAngle = sliceStartAngle_1 + arc_1 / 2 - arc_1 / 2 * percentWidth;\r\n                        link.arc = arc_1 * percentWidth;\r\n                    }\r\n                    else {\r\n                        link.endAngle = _this.nextAngle;\r\n                        var value = dataItem.getWorkingValue(\"value\");\r\n                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](value)) {\r\n                            link.arc = value * chart.valueAngle; // yes, this is needed\r\n                            _this.nextAngle += link.arc;\r\n                        }\r\n                    }\r\n                    if (!dataItem.fromNode) {\r\n                        link.startAngle = link.endAngle;\r\n                    }\r\n                    //link.validate();\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * updates slice start angle so that when we drag a node it would face the center\r\n     */\r\n    ChordNode.prototype.updateRotation = function () {\r\n        var slice = this.slice;\r\n        var mAngle = this.trueStartAngle + slice.arc / 2;\r\n        var radius = slice.radius;\r\n        var tx = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](mAngle);\r\n        var ty = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](mAngle);\r\n        var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getAngle\"]({ x: tx + this.pixelX, y: ty + this.pixelY });\r\n        slice.startAngle = this.trueStartAngle + (angle - mAngle);\r\n        this.dx = -this.pixelX;\r\n        this.dy = -this.pixelY;\r\n    };\r\n    /**\r\n     * Copies properties and labels from another [[ChordNode]].\r\n     *\r\n     * @param source  Source node\r\n     */\r\n    ChordNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n        this.slice.copyFrom(source.slice);\r\n    };\r\n    return ChordNode;\r\n}(_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagramNode\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ChordNode\"] = ChordNode;\r\n//# sourceMappingURL=ChordNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js ***!
  \************************************************************************************/
/*! exports provided: CircleBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CircleBullet\", function() { return CircleBullet; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Circle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar CircleBullet = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CircleBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CircleBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CircleBullet\";\r\n        var circle = _this.createChild(_core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__[\"Circle\"]);\r\n        circle.shouldClone = false;\r\n        circle.radius = 5;\r\n        circle.isMeasured = false;\r\n        _this.circle = circle;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[CircleBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    CircleBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.circle.copyFrom(source.circle);\r\n    };\r\n    return CircleBullet;\r\n}(_Bullet__WEBPACK_IMPORTED_MODULE_1__[\"Bullet\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n//# sourceMappingURL=CircleBullet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0NpcmNsZUJ1bGxldC5qcz83OGYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDa0I7QUFDTDtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG9CQUFvQjtBQUM3QixTQUFTLHNCQUFzQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsNERBQU07QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLDhDQUFNO0FBQ2dCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0NpcmNsZUJ1bGxldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBCdWxsZXQgbW9kdWxlXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEJ1bGxldCB9IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQgeyBDaXJjbGUgfSBmcm9tIFwiLi4vLi4vY29yZS9lbGVtZW50cy9DaXJjbGVcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBidWxsZXQgd2l0aCBhIHRleHR1YWwgbGFiZWwuXHJcbiAqXHJcbiAqIFVzZXMgW1tMYWJlbF1dIGluc3RhbmNlIHRvIGRyYXcgdGhlIGxhYmVsLCBzbyB0aGUgbGFiZWwgaXRzZWxmIGlzXHJcbiAqIGNvbmZpZ3VyYWJsZS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSUJ1bGxldEV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElCdWxsZXRBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gVXNhZ2UgZXhhbXBsZVxyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgQ2lyY2xlQnVsbGV0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKENpcmNsZUJ1bGxldCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ2lyY2xlQnVsbGV0KCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJDaXJjbGVCdWxsZXRcIjtcclxuICAgICAgICB2YXIgY2lyY2xlID0gX3RoaXMuY3JlYXRlQ2hpbGQoQ2lyY2xlKTtcclxuICAgICAgICBjaXJjbGUuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBjaXJjbGUucmFkaXVzID0gNTtcclxuICAgICAgICBjaXJjbGUuaXNNZWFzdXJlZCA9IGZhbHNlO1xyXG4gICAgICAgIF90aGlzLmNpcmNsZSA9IGNpcmNsZTtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3BpZXMgYWxsIHByb3ByaXRpZXMgYW5kIHJlbGF0ZWQgc3R1ZmYgZnJvbSBhbm90aGVyIGluc3RhbmNlIG9mXHJcbiAgICAgKiBbW0NpcmNsZUJ1bGxldF1dLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzb3VyY2UgIFNvdXJjZSBlbGVtZW50XHJcbiAgICAgKi9cclxuICAgIENpcmNsZUJ1bGxldC5wcm90b3R5cGUuY29weUZyb20gPSBmdW5jdGlvbiAoc291cmNlKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5jb3B5RnJvbS5jYWxsKHRoaXMsIHNvdXJjZSk7XHJcbiAgICAgICAgdGhpcy5jaXJjbGUuY29weUZyb20oc291cmNlLmNpcmNsZSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENpcmNsZUJ1bGxldDtcclxufShCdWxsZXQpKTtcclxuZXhwb3J0IHsgQ2lyY2xlQnVsbGV0IH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkNpcmNsZUJ1bGxldFwiXSA9IENpcmNsZUJ1bGxldDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2lyY2xlQnVsbGV0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js ***!
  \*********************************************************************************/
/*! exports provided: ClockHand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClockHand\", function() { return ClockHand; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Circle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js\");\n/* harmony import */ var _core_elements_Trapezoid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Trapezoid */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Trapezoid.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Functionality for drawing simple ClockHands\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * ClockHand class is capable of drawing a simple pointy shape with optionally\r\n * rounderd corners and an icon.\r\n *\r\n * @see {@link IClockHandEvents} for a list of available events\r\n * @see {@link IClockHandAdapters} for a list of available Adapters\r\n * @todo Improve\r\n * @important\r\n */\r\nvar ClockHand = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ClockHand, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ClockHand() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * An Axis hand is related to.\r\n         */\r\n        _this._axis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__[\"MutableValueDisposer\"]();\r\n        _this.className = \"ClockHand\";\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__[\"InterfaceColorSet\"]();\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.stroke = _this.fill;\r\n        var pin = new _core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__[\"Circle\"]();\r\n        pin.radius = 5;\r\n        _this.pin = pin;\r\n        _this.isMeasured = false;\r\n        _this.startWidth = 5;\r\n        _this.endWidth = 1;\r\n        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(100);\r\n        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(100);\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(100);\r\n        _this.innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(0);\r\n        var hand = new _core_elements_Trapezoid__WEBPACK_IMPORTED_MODULE_3__[\"Trapezoid\"]();\r\n        _this.hand = hand;\r\n        _this._disposers.push(_this._axis);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Re(validates) the clock hand, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ClockHand.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var hand = this.hand;\r\n        hand.width = this.pixelWidth;\r\n        var h = Math.max(this.startWidth, this.endWidth);\r\n        hand.height = h;\r\n        hand.leftSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(this.startWidth / h * 100);\r\n        hand.rightSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(this.endWidth / h * 100);\r\n        if (this.axis) {\r\n            var renderer = this.axis.renderer;\r\n            var x0 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__[\"relativeRadiusToValue\"](this.innerRadius, renderer.pixelRadius);\r\n            var x1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__[\"relativeRadiusToValue\"](this.radius, renderer.pixelRadius);\r\n            hand.x = x0;\r\n            hand.y = -h / 2;\r\n            hand.width = x1 - x0;\r\n        }\r\n    };\r\n    Object.defineProperty(ClockHand.prototype, \"pin\", {\r\n        /**\r\n         * @return Pin element\r\n         */\r\n        get: function () {\r\n            return this._pin;\r\n        },\r\n        /**\r\n         * A circle element used as hand's base. (pin)\r\n         *\r\n         * @param pin  Pin element\r\n         */\r\n        set: function (pin) {\r\n            if (this._pin) {\r\n                this.removeDispose(this._pin);\r\n            }\r\n            if (pin) {\r\n                this._pin = pin;\r\n                pin.parent = this;\r\n                this._disposers.push(pin);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"hand\", {\r\n        /**\r\n         * @return Hand element\r\n         */\r\n        get: function () {\r\n            return this._hand;\r\n        },\r\n        /**\r\n         * A trapezoid shape used for hand itself.\r\n         *\r\n         * The shape of the trapezoid is controlled by ClockHand's `startWidth` and\r\n         * `endWidth` properties.\r\n         *\r\n         * Set `endWidth` to 1 (px) to make it pointy.\r\n         *\r\n         * @param hand  Hand element\r\n         */\r\n        set: function (hand) {\r\n            if (this._hand) {\r\n                this.removeDispose(this._hand);\r\n            }\r\n            if (hand) {\r\n                this._hand = hand;\r\n                hand.parent = this;\r\n                this._disposers.push(hand);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Radius of the hand's outer end. (tip)\r\n         *\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @default Percent(0)\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Radius of the hand's inner end. (base)\r\n         *\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @default Percent(0)\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"startWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startWidth\");\r\n        },\r\n        /**\r\n         * Width, in pixels, of the clock hand's inner end. (base)\r\n         *\r\n         * @default 5\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"endWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endWidth\");\r\n        },\r\n        /**\r\n         * Width, in pixels, of the clock hand's outer end. (tip)\r\n         *\r\n         * @default 1\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"rotationDirection\", {\r\n        /**\r\n         * @return rotationDirection\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"rotationDirection\");\r\n        },\r\n        /**\r\n         * Rotation direction\r\n         *\r\n         * @default any\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"rotationDirection\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Moves clock hand to particular value.\r\n     *\r\n     * If `duration` is set to a number in milliseconds, the hand will move\r\n     * to the new position gracefully, rather than jumping rigth to it.\r\n     *\r\n     * Alternatively, you can also set `value` directly.\r\n     *\r\n     * @param value     New value\r\n     * @param duration  Animation duration (ms)\r\n     * @param easing  Animation easing function\r\n     */\r\n    ClockHand.prototype.showValue = function (value, duration, easing) {\r\n        this._value = value;\r\n        if (value != undefined) {\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](duration)) {\r\n                duration = 0;\r\n            }\r\n            if (this.axis) {\r\n                var renderer = this.axis.renderer;\r\n                var newAngle = renderer.positionToAngle(this.axis.anyToPosition(value));\r\n                var currentAngle = this.rotation;\r\n                if (this.rotationDirection == \"clockWise\") {\r\n                    if (newAngle < currentAngle) {\r\n                        this.rotation = currentAngle - 360;\r\n                    }\r\n                }\r\n                if (this.rotationDirection == \"counterClockWise\") {\r\n                    if (newAngle > currentAngle) {\r\n                        this.rotation = currentAngle + 360;\r\n                    }\r\n                }\r\n                this.animate({ property: \"rotation\", to: newAngle }, duration, easing);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ClockHand.prototype, \"currentPosition\", {\r\n        /**\r\n         * Returns hand's relative position on axis\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                var renderer = this.axis.renderer;\r\n                return renderer.angleToPosition(this.rotation);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        /**\r\n         * A current value clock hand is pointing to.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.showValue(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"axis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            return this._axis.get();\r\n        },\r\n        /**\r\n         * An Axis clock hand is associated with.\r\n         *\r\n         * Hand's `value` relates to values on the Axis.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            if (this.axis != axis) {\r\n                this._axis.set(axis, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__[\"MultiDisposer\"]([\r\n                    axis.events.on(\"datavalidated\", this.updateValue, this, false),\r\n                    axis.events.on(\"datarangechanged\", this.updateValue, this, false),\r\n                    axis.events.on(\"dataitemsvalidated\", this.updateValue, this, false),\r\n                    axis.events.on(\"propertychanged\", this.invalidate, this, false)\r\n                ]));\r\n            }\r\n            if (axis) {\r\n                var chart = axis.chart;\r\n                if (chart) {\r\n                    this.rotation = chart.startAngle;\r\n                }\r\n            }\r\n            this.parent = axis.renderer;\r\n            this.zIndex = 5;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Triggers `value` accessor, so that Hand animates to new position, in case\r\n     * value has changed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ClockHand.prototype.updateValue = function () {\r\n        this.value = this.value;\r\n    };\r\n    /**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param config  Config\r\n */\r\n    ClockHand.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Connect clock hands with axes\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](config.axis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isString\"](config.axis) && this.map.hasKey(config.axis)) {\r\n                config.axis = this.map.getKey(config.axis);\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return ClockHand;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_1__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_6__[\"registry\"].registeredClasses[\"ClockHand\"] = ClockHand;\r\n//# sourceMappingURL=ClockHand.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js ***!
  \******************************************************************************/
/*! exports provided: Column */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Column\", function() { return Column; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Column = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(Column, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Column() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Column\";\r\n        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__[\"percent\"])(80);\r\n        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__[\"percent\"])(80);\r\n        //this.isMeasured = true; // for correct position of the tooltip\r\n        _this.events.disableType(\"transformed\"); // not to bug parent\r\n        _this.applyOnClones = true;\r\n        _this.strokeOpacity = 1;\r\n        _this.layout = \"none\";\r\n        _this.createAssets();\r\n        // otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n        _this.events.on(\"childadded\", _this.handleKidAdded, _this, false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column.prototype.handleKidAdded = function () {\r\n        if (this.layout == \"none\") {\r\n            this.layout = \"absolute\";\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column.prototype.createAssets = function () {\r\n        this.column = this.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_2__[\"RoundedRectangle\"]);\r\n        this.column.shouldClone = false;\r\n        this.column.isMeasured = false;\r\n        this.column.cornerRadius(0, 0, 0, 0);\r\n        this._disposers.push(this.column);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    Column.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var column = this.column;\r\n        if (column) {\r\n            column.width = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"min\"](this.pixelWidth, this.maxWidth);\r\n            column.height = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"min\"](this.pixelHeight, this.maxHeight);\r\n            if (column.invalid) {\r\n                column.validate(); // important!\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Column]].\r\n     *\r\n     * @param source Source Column\r\n     */\r\n    Column.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.column) {\r\n            this.column.copyFrom(source.column);\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.column) {\r\n                return { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"min\"](this.pixelWidth, this.maxWidth), height: _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"min\"](this.pixelHeight, this.maxHeight) };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_1__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"Column\"] = Column;\r\n//# sourceMappingURL=Column.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0NvbHVtbi5qcz80ZTM0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUQ7QUFDdUI7QUFDekI7QUFDSTtBQUNKO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0JBQW9CO0FBQzdCLFNBQVMsc0JBQXNCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtRUFBTztBQUM3Qix1QkFBdUIsbUVBQU87QUFDOUIsaUNBQWlDO0FBQ2pDLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGdGQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsb0RBQVM7QUFDcEMsNEJBQTRCLG9EQUFTO0FBQ3JDO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSx3QkFBd0Isb0JBQW9CLG9EQUFTLDBDQUEwQyxvREFBUztBQUN4RztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyxDQUFDLHlEQUFTO0FBQ087QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvZWxlbWVudHMvQ29sdW1uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSB0aGF0IGRlZmluZXMgZXZlcnl0aGluZyByZWxhdGVkIHRvIGJ1aWxkaW5nIENvbHVtbnMuXHJcbiAqIEl0IGlzIGEgY29udGFpbmVyIHdoaWNoIGhhcyBjb2x1bW4gZWxlbWVudCB3aGljaCBpcyBhIFJvdW5kZWRSZWN0YW5nbGUuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gXCIuLi8uLi9jb3JlL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgeyBSb3VuZGVkUmVjdGFuZ2xlIH0gZnJvbSBcIi4uLy4uL2NvcmUvZWxlbWVudHMvUm91bmRlZFJlY3RhbmdsZVwiO1xyXG5pbXBvcnQgeyByZWdpc3RyeSB9IGZyb20gXCIuLi8uLi9jb3JlL1JlZ2lzdHJ5XCI7XHJcbmltcG9ydCB7IHBlcmNlbnQgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9QZXJjZW50XCI7XHJcbmltcG9ydCAqIGFzICRtYXRoIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL01hdGhcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBDbGFzcyB1c2VkIHRvIGNyZWF0ZXMgQ29sdW1ucy5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSUNvbHVtbkV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElDb2x1bW5BZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gVXNhZ2UgZXhhbXBsZVxyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgQ29sdW1uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKENvbHVtbiwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ29sdW1uKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJDb2x1bW5cIjtcclxuICAgICAgICBfdGhpcy53aWR0aCA9IHBlcmNlbnQoODApO1xyXG4gICAgICAgIF90aGlzLmhlaWdodCA9IHBlcmNlbnQoODApO1xyXG4gICAgICAgIC8vdGhpcy5pc01lYXN1cmVkID0gdHJ1ZTsgLy8gZm9yIGNvcnJlY3QgcG9zaXRpb24gb2YgdGhlIHRvb2x0aXBcclxuICAgICAgICBfdGhpcy5ldmVudHMuZGlzYWJsZVR5cGUoXCJ0cmFuc2Zvcm1lZFwiKTsgLy8gbm90IHRvIGJ1ZyBwYXJlbnRcclxuICAgICAgICBfdGhpcy5hcHBseU9uQ2xvbmVzID0gdHJ1ZTtcclxuICAgICAgICBfdGhpcy5zdHJva2VPcGFjaXR5ID0gMTtcclxuICAgICAgICBfdGhpcy5sYXlvdXQgPSBcIm5vbmVcIjtcclxuICAgICAgICBfdGhpcy5jcmVhdGVBc3NldHMoKTtcclxuICAgICAgICAvLyBvdGhlcndpc2UgdXNlcnMgd2lsbCBoYXZlIHRvIHNldCBsYXlvdXQgdGhlbXNlbHZlcyBpZiB0aGV5J2xsIHdhbnQgdG8gYWxpZ24sIHNjYWxlIGV0YyBjaGlsZHJlblxyXG4gICAgICAgIF90aGlzLmV2ZW50cy5vbihcImNoaWxkYWRkZWRcIiwgX3RoaXMuaGFuZGxlS2lkQWRkZWQsIF90aGlzLCBmYWxzZSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIENvbHVtbi5wcm90b3R5cGUuaGFuZGxlS2lkQWRkZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubGF5b3V0ID09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGF5b3V0ID0gXCJhYnNvbHV0ZVwiO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgQ29sdW1uLnByb3RvdHlwZS5jcmVhdGVBc3NldHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5jb2x1bW4gPSB0aGlzLmNyZWF0ZUNoaWxkKFJvdW5kZWRSZWN0YW5nbGUpO1xyXG4gICAgICAgIHRoaXMuY29sdW1uLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jb2x1bW4uaXNNZWFzdXJlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuY29sdW1uLmNvcm5lclJhZGl1cygwLCAwLCAwLCAwKTtcclxuICAgICAgICB0aGlzLl9kaXNwb3NlcnMucHVzaCh0aGlzLmNvbHVtbik7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIENvbHVtbi5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMpO1xyXG4gICAgICAgIHZhciBjb2x1bW4gPSB0aGlzLmNvbHVtbjtcclxuICAgICAgICBpZiAoY29sdW1uKSB7XHJcbiAgICAgICAgICAgIGNvbHVtbi53aWR0aCA9ICRtYXRoLm1pbih0aGlzLnBpeGVsV2lkdGgsIHRoaXMubWF4V2lkdGgpO1xyXG4gICAgICAgICAgICBjb2x1bW4uaGVpZ2h0ID0gJG1hdGgubWluKHRoaXMucGl4ZWxIZWlnaHQsIHRoaXMubWF4SGVpZ2h0KTtcclxuICAgICAgICAgICAgaWYgKGNvbHVtbi5pbnZhbGlkKSB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW4udmFsaWRhdGUoKTsgLy8gaW1wb3J0YW50IVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ29waWVzIGFsbCBwYXJhbWV0ZXJzIGZyb20gYW5vdGhlciBbW0NvbHVtbl1dLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzb3VyY2UgU291cmNlIENvbHVtblxyXG4gICAgICovXHJcbiAgICBDb2x1bW4ucHJvdG90eXBlLmNvcHlGcm9tID0gZnVuY3Rpb24gKHNvdXJjZSkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuY29weUZyb20uY2FsbCh0aGlzLCBzb3VyY2UpO1xyXG4gICAgICAgIGlmICh0aGlzLmNvbHVtbikge1xyXG4gICAgICAgICAgICB0aGlzLmNvbHVtbi5jb3B5RnJvbShzb3VyY2UuY29sdW1uKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbHVtbi5wcm90b3R5cGUsIFwiYmJveFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUmV0dXJucyBib3VuZGluZyBib3ggKHNxdWFyZSkgZm9yIHRoaXMgZWxlbWVudC5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZGVmaW5lZEJCb3gpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlZmluZWRCQm94O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbHVtbikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgeDogMCwgeTogMCwgd2lkdGg6IHRoaXMuY29sdW1uLm1lYXN1cmVkV2lkdGgsIGhlaWdodDogdGhpcy5jb2x1bW4ubWVhc3VyZWRIZWlnaHQgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7IHg6IDAsIHk6IDAsIHdpZHRoOiAkbWF0aC5taW4odGhpcy5waXhlbFdpZHRoLCB0aGlzLm1heFdpZHRoKSwgaGVpZ2h0OiAkbWF0aC5taW4odGhpcy5waXhlbEhlaWdodCwgdGhpcy5tYXhIZWlnaHQpIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIHJldHVybiBDb2x1bW47XHJcbn0oQ29udGFpbmVyKSk7XHJcbmV4cG9ydCB7IENvbHVtbiB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJDb2x1bW5cIl0gPSBDb2x1bW47XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbHVtbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js ***!
  \********************************************************************************/
/*! exports provided: Column3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Column3D\", function() { return Column3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony import */ var _core_elements_3d_Rectangle3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/3d/Rectangle3D */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Rectangle3D.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Column3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(Column3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Column3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Column3D\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column3D.prototype.createAssets = function () {\r\n        this.column3D = this.createChild(_core_elements_3d_Rectangle3D__WEBPACK_IMPORTED_MODULE_2__[\"Rectangle3D\"]);\r\n        this.column3D.shouldClone = false;\r\n        this.column3D.strokeOpacity = 0;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.column3D;\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    Column3D.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (this.column3D) {\r\n            this.column3D.width = this.pixelWidth;\r\n            this.column3D.height = this.pixelHeight;\r\n            if (this.column3D.invalid) {\r\n                this.column3D.validate();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Column3D]].\r\n     *\r\n     * @param source Source Column3D\r\n     */\r\n    Column3D.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.column3D) {\r\n            this.column3D.copyFrom(source.column3D);\r\n        }\r\n    };\r\n    /**\r\n     * Sets actual `fill` property on the SVG element, including applicable color\r\n     * modifiers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Fill\r\n     */\r\n    Column3D.prototype.setFill = function (value) {\r\n        _super.prototype.setFill.call(this, value);\r\n        this.column.fill = value;\r\n    };\r\n    return Column3D;\r\n}(_Column__WEBPACK_IMPORTED_MODULE_1__[\"Column\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"Column3D\"] = Column3D;\r\n//# sourceMappingURL=Column3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0NvbHVtbjNELmpzPzgzMGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQytCO0FBQ2xCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsc0JBQXNCO0FBQy9CLFNBQVMsd0JBQXdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx5RUFBVztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLDhDQUFNO0FBQ1k7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvZWxlbWVudHMvQ29sdW1uM0QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTW9kdWxlIHRoYXQgZGVmaW5lcyBldmVyeXRoaW5nIHJlbGF0ZWQgdG8gYnVpbGRpbmcgM0QgQ29sdW1ucy5cclxuICogSXQgaXMgYSBjb250YWluZXIgd2hpY2ggaGFzIGNvbHVtbjNEIGVsZW1lbnQgd2hpY2ggaXMgYSBSZWN0YW5nbGUzRC5cclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQ29sdW1uIH0gZnJvbSBcIi4vQ29sdW1uXCI7XHJcbmltcG9ydCB7IFJlY3RhbmdsZTNEIH0gZnJvbSBcIi4uLy4uL2NvcmUvZWxlbWVudHMvM2QvUmVjdGFuZ2xlM0RcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIENsYXNzIHVzZWQgdG8gY3JlYXRlcyBDb2x1bW4zRHMuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElDb2x1bW4zREV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElDb2x1bW4zREFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAdG9kbyBVc2FnZSBleGFtcGxlXHJcbiAqIEBpbXBvcnRhbnRcclxuICovXHJcbnZhciBDb2x1bW4zRCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhDb2x1bW4zRCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ29sdW1uM0QoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkNvbHVtbjNEXCI7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIENvbHVtbjNELnByb3RvdHlwZS5jcmVhdGVBc3NldHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5jb2x1bW4zRCA9IHRoaXMuY3JlYXRlQ2hpbGQoUmVjdGFuZ2xlM0QpO1xyXG4gICAgICAgIHRoaXMuY29sdW1uM0Quc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmNvbHVtbjNELnN0cm9rZU9wYWNpdHkgPSAwO1xyXG4gICAgICAgIC8vIHNvbWUgZGlydHkgaGFjayBzbyB0aGF0IGlmIHVzZXIgYWNjZXNzIGNvbHVtbiwgaXQgd29uJ3QgZ2V0IGVycm9yXHJcbiAgICAgICAgdGhpcy5jb2x1bW4gPSB0aGlzLmNvbHVtbjNEO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBDb2x1bW4zRC5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMpO1xyXG4gICAgICAgIGlmICh0aGlzLmNvbHVtbjNEKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29sdW1uM0Qud2lkdGggPSB0aGlzLnBpeGVsV2lkdGg7XHJcbiAgICAgICAgICAgIHRoaXMuY29sdW1uM0QuaGVpZ2h0ID0gdGhpcy5waXhlbEhlaWdodDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuY29sdW1uM0QuaW52YWxpZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb2x1bW4zRC52YWxpZGF0ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ29waWVzIGFsbCBwYXJhbWV0ZXJzIGZyb20gYW5vdGhlciBbW0NvbHVtbjNEXV0uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHNvdXJjZSBTb3VyY2UgQ29sdW1uM0RcclxuICAgICAqL1xyXG4gICAgQ29sdW1uM0QucHJvdG90eXBlLmNvcHlGcm9tID0gZnVuY3Rpb24gKHNvdXJjZSkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuY29weUZyb20uY2FsbCh0aGlzLCBzb3VyY2UpO1xyXG4gICAgICAgIGlmICh0aGlzLmNvbHVtbjNEKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29sdW1uM0QuY29weUZyb20oc291cmNlLmNvbHVtbjNEKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIGFjdHVhbCBgZmlsbGAgcHJvcGVydHkgb24gdGhlIFNWRyBlbGVtZW50LCBpbmNsdWRpbmcgYXBwbGljYWJsZSBjb2xvclxyXG4gICAgICogbW9kaWZpZXJzLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSB2YWx1ZSAgRmlsbFxyXG4gICAgICovXHJcbiAgICBDb2x1bW4zRC5wcm90b3R5cGUuc2V0RmlsbCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuc2V0RmlsbC5jYWxsKHRoaXMsIHZhbHVlKTtcclxuICAgICAgICB0aGlzLmNvbHVtbi5maWxsID0gdmFsdWU7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENvbHVtbjNEO1xyXG59KENvbHVtbikpO1xyXG5leHBvcnQgeyBDb2x1bW4zRCB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJDb2x1bW4zRFwiXSA9IENvbHVtbjNEO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2x1bW4zRC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js ***!
  \**********************************************************************************/
/*! exports provided: ConeColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConeColumn\", function() { return ConeColumn; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony import */ var _core_elements_3d_Cone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/3d/Cone */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Cone.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * Module that defines everything related to building Cone Columns.\r\n * It is a container which has coneColumn element which is a Cone.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates ConeColumns.\r\n *\r\n * @see {@link IConeColumnEvents} for a list of available events\r\n * @see {@link IConeColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar ConeColumn = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ConeColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ConeColumn.prototype.createAssets = function () {\r\n        this.coneColumn = this.createChild(_core_elements_3d_Cone__WEBPACK_IMPORTED_MODULE_2__[\"Cone\"]);\r\n        this.coneColumn.shouldClone = false;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.coneColumn;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[ConeColumn]].\r\n     *\r\n     * @param source Source ConeColumn\r\n     */\r\n    ConeColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.coneColumn) {\r\n            this.coneColumn.copyFrom(source.coneColumn);\r\n        }\r\n    };\r\n    return ConeColumn;\r\n}(_Column__WEBPACK_IMPORTED_MODULE_1__[\"Column\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ConeColumn\"] = ConeColumn;\r\n//# sourceMappingURL=ConeColumn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0NvbmVDb2x1bW4uanM/MTY4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDSjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLDBCQUEwQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsMkRBQUk7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsOENBQU07QUFDYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9lbGVtZW50cy9Db25lQ29sdW1uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSB0aGF0IGRlZmluZXMgZXZlcnl0aGluZyByZWxhdGVkIHRvIGJ1aWxkaW5nIENvbmUgQ29sdW1ucy5cclxuICogSXQgaXMgYSBjb250YWluZXIgd2hpY2ggaGFzIGNvbmVDb2x1bW4gZWxlbWVudCB3aGljaCBpcyBhIENvbmUuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IENvbHVtbiB9IGZyb20gXCIuL0NvbHVtblwiO1xyXG5pbXBvcnQgeyBDb25lIH0gZnJvbSBcIi4uLy4uL2NvcmUvZWxlbWVudHMvM2QvQ29uZVwiO1xyXG5pbXBvcnQgeyByZWdpc3RyeSB9IGZyb20gXCIuLi8uLi9jb3JlL1JlZ2lzdHJ5XCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ2xhc3MgdXNlZCB0byBjcmVhdGVzIENvbmVDb2x1bW5zLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJQ29uZUNvbHVtbkV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElDb25lQ29sdW1uQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEB0b2RvIFVzYWdlIGV4YW1wbGVcclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIENvbmVDb2x1bW4gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoQ29uZUNvbHVtbiwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ29uZUNvbHVtbigpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiQ29uZUNvbHVtblwiO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXHJcbiAgICBDb25lQ29sdW1uLnByb3RvdHlwZS5jcmVhdGVBc3NldHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5jb25lQ29sdW1uID0gdGhpcy5jcmVhdGVDaGlsZChDb25lKTtcclxuICAgICAgICB0aGlzLmNvbmVDb2x1bW4uc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICAvLyBzb21lIGRpcnR5IGhhY2sgc28gdGhhdCBpZiB1c2VyIGFjY2VzcyBjb2x1bW4sIGl0IHdvbid0IGdldCBlcnJvclxyXG4gICAgICAgIHRoaXMuY29sdW1uID0gdGhpcy5jb25lQ29sdW1uO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ29waWVzIGFsbCBwYXJhbWV0ZXJzIGZyb20gYW5vdGhlciBbW0NvbmVDb2x1bW5dXS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc291cmNlIFNvdXJjZSBDb25lQ29sdW1uXHJcbiAgICAgKi9cclxuICAgIENvbmVDb2x1bW4ucHJvdG90eXBlLmNvcHlGcm9tID0gZnVuY3Rpb24gKHNvdXJjZSkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuY29weUZyb20uY2FsbCh0aGlzLCBzb3VyY2UpO1xyXG4gICAgICAgIGlmICh0aGlzLmNvbmVDb2x1bW4pIHtcclxuICAgICAgICAgICAgdGhpcy5jb25lQ29sdW1uLmNvcHlGcm9tKHNvdXJjZS5jb25lQ29sdW1uKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENvbmVDb2x1bW47XHJcbn0oQ29sdW1uKSk7XHJcbmV4cG9ydCB7IENvbmVDb2x1bW4gfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiQ29uZUNvbHVtblwiXSA9IENvbmVDb2x1bW47XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmVDb2x1bW4uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js ***!
  \************************************************************************************/
/*! exports provided: CurvedColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CurvedColumn\", function() { return CurvedColumn; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/**\r\n * Module that defines everything related to building Curved Columns.\r\n * It is a container which has CurvedColumn element which is a Sprite.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates CurvedColumns.\r\n *\r\n * @see {@link ICurvedColumnEvents} for a list of available events\r\n * @see {@link ICurvedColumnAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar CurvedColumn = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CurvedColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CurvedColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CurvedColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * [createAssets description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    CurvedColumn.prototype.createAssets = function () {\r\n        this.curvedColumn = this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        this.curvedColumn.shouldClone = false;\r\n        this.setPropertyValue(\"tension\", 0.7);\r\n        this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__[\"percent\"])(120);\r\n        this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__[\"percent\"])(120);\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.curvedColumn;\r\n    };\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    CurvedColumn.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var w = this.realWidth;\r\n        var h = this.realHeight;\r\n        var x = this.realX - this.pixelX;\r\n        var y = this.realY - this.pixelY;\r\n        var points;\r\n        // TODO can this be removed ?\r\n        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"used\"](this.width);\r\n        var tensionX = 1;\r\n        var tensionY = 1;\r\n        if (this.orientation == \"vertical\") {\r\n            tensionX = this.tension;\r\n            points = [{ x: 0, y: h + y }, { x: w / 2, y: y }, { x: w, y: h + y }];\r\n        }\r\n        else {\r\n            tensionY = this.tension;\r\n            points = [{ x: x, y: 0 }, { x: x + w, y: h / 2 }, { x: x, y: h }];\r\n        }\r\n        var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"](points[0]) + new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__[\"Tension\"](tensionX, tensionY).smooth(points);\r\n        this.column.path = path;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[CurvedColumn]].\r\n     *\r\n     * @param source  Source CurvedColumn\r\n     */\r\n    CurvedColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.curvedColumn) {\r\n            this.curvedColumn.copyFrom(source.curvedColumn);\r\n        }\r\n    };\r\n    Object.defineProperty(CurvedColumn.prototype, \"tension\", {\r\n        /**\r\n         * @return Tension (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tension\");\r\n        },\r\n        /**\r\n         * Horizontal tension of the curve.\r\n         *\r\n         * Tension defines how \"lose\" the line will be.\r\n         *\r\n         * 1 is the maximum tension which would result in pointy columns with\r\n         * straight edges.\r\n         *\r\n         * The smaller the tension th wider the column will be.\r\n         *\r\n         * @default 0.7\r\n         * @param value tension (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tension\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CurvedColumn.prototype, \"orientation\", {\r\n        /**\r\n         * Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the column.\r\n         *\r\n         * Available options: \"vertical\" (default) and \"horizontal\".\r\n         *\r\n         * @default \"vertical\"\r\n         * @param value  Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CurvedColumn;\r\n}(_Column__WEBPACK_IMPORTED_MODULE_1__[\"Column\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"CurvedColumn\"] = CurvedColumn;\r\n//# sourceMappingURL=CurvedColumn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js ***!
  \***********************************************************************************/
/*! exports provided: ErrorBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrorBullet\", function() { return ErrorBullet; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar ErrorBullet = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ErrorBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ErrorBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ErrorBullet\";\r\n        _this.errorLine = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        _this.errorLine.shouldClone = false;\r\n        _this.width = 20;\r\n        _this.height = 20;\r\n        _this.strokeOpacity = 1;\r\n        _this.isDynamic = true;\r\n        return _this;\r\n    }\r\n    ErrorBullet.prototype.validatePosition = function () {\r\n        _super.prototype.validatePosition.call(this);\r\n        var w = this.pixelWidth / 2;\r\n        var h = this.pixelHeight / 2;\r\n        this.errorLine.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: -w, y: -h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: w, y: -h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: 0, y: -h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: 0, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: -w, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"]({ x: w, y: h });\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[ErrorBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    ErrorBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.errorLine.copyFrom(source.errorLine);\r\n    };\r\n    return ErrorBullet;\r\n}(_Bullet__WEBPACK_IMPORTED_MODULE_1__[\"Bullet\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n//# sourceMappingURL=ErrorBullet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0Vycm9yQnVsbGV0LmpzP2NiNWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ1M7QUFDSTtBQUNJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0JBQW9CO0FBQzdCLFNBQVMsc0JBQXNCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxtREFBTTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDJEQUFZLEVBQUUsZUFBZSxJQUFJLDJEQUFZLEVBQUUsY0FBYyxJQUFJLDJEQUFZLEVBQUUsY0FBYyxJQUFJLDJEQUFZLEVBQUUsYUFBYSxJQUFJLDJEQUFZLEVBQUUsY0FBYyxJQUFJLDJEQUFZLEVBQUUsYUFBYTtBQUN6TjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsOENBQU07QUFDZTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9lbGVtZW50cy9FcnJvckJ1bGxldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBCdWxsZXQgbW9kdWxlXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEJ1bGxldCB9IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQgeyBTcHJpdGUgfSBmcm9tIFwiLi4vLi4vY29yZS9TcHJpdGVcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkcGF0aCBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXJpbmcvUGF0aFwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBidWxsZXQgd2l0aCBhIHRleHR1YWwgbGFiZWwuXHJcbiAqXHJcbiAqIFVzZXMgW1tMYWJlbF1dIGluc3RhbmNlIHRvIGRyYXcgdGhlIGxhYmVsLCBzbyB0aGUgbGFiZWwgaXRzZWxmIGlzXHJcbiAqIGNvbmZpZ3VyYWJsZS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSUJ1bGxldEV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElCdWxsZXRBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gVXNhZ2UgZXhhbXBsZVxyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgRXJyb3JCdWxsZXQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoRXJyb3JCdWxsZXQsIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIEVycm9yQnVsbGV0KCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJFcnJvckJ1bGxldFwiO1xyXG4gICAgICAgIF90aGlzLmVycm9yTGluZSA9IF90aGlzLmNyZWF0ZUNoaWxkKFNwcml0ZSk7XHJcbiAgICAgICAgX3RoaXMuZXJyb3JMaW5lLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMud2lkdGggPSAyMDtcclxuICAgICAgICBfdGhpcy5oZWlnaHQgPSAyMDtcclxuICAgICAgICBfdGhpcy5zdHJva2VPcGFjaXR5ID0gMTtcclxuICAgICAgICBfdGhpcy5pc0R5bmFtaWMgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIEVycm9yQnVsbGV0LnByb3RvdHlwZS52YWxpZGF0ZVBvc2l0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGVQb3NpdGlvbi5jYWxsKHRoaXMpO1xyXG4gICAgICAgIHZhciB3ID0gdGhpcy5waXhlbFdpZHRoIC8gMjtcclxuICAgICAgICB2YXIgaCA9IHRoaXMucGl4ZWxIZWlnaHQgLyAyO1xyXG4gICAgICAgIHRoaXMuZXJyb3JMaW5lLnBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiAtdywgeTogLWggfSkgKyAkcGF0aC5saW5lVG8oeyB4OiB3LCB5OiAtaCB9KSArICRwYXRoLm1vdmVUbyh7IHg6IDAsIHk6IC1oIH0pICsgJHBhdGgubGluZVRvKHsgeDogMCwgeTogaCB9KSArICRwYXRoLm1vdmVUbyh7IHg6IC13LCB5OiBoIH0pICsgJHBhdGgubGluZVRvKHsgeDogdywgeTogaCB9KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvcGllcyBhbGwgcHJvcHJpdGllcyBhbmQgcmVsYXRlZCBzdHVmZiBmcm9tIGFub3RoZXIgaW5zdGFuY2Ugb2ZcclxuICAgICAqIFtbRXJyb3JCdWxsZXRdXS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc291cmNlICBTb3VyY2UgZWxlbWVudFxyXG4gICAgICovXHJcbiAgICBFcnJvckJ1bGxldC5wcm90b3R5cGUuY29weUZyb20gPSBmdW5jdGlvbiAoc291cmNlKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5jb3B5RnJvbS5jYWxsKHRoaXMsIHNvdXJjZSk7XHJcbiAgICAgICAgdGhpcy5lcnJvckxpbmUuY29weUZyb20oc291cmNlLmVycm9yTGluZSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEVycm9yQnVsbGV0O1xyXG59KEJ1bGxldCkpO1xyXG5leHBvcnQgeyBFcnJvckJ1bGxldCB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJFcnJvckJ1bGxldFwiXSA9IEVycm9yQnVsbGV0O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FcnJvckJ1bGxldC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js ***!
  \***************************************************************************************/
/*! exports provided: FlowDiagramLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagramLink\", function() { return FlowDiagramLink; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/fills/LinearGradient */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/elements/Polyline */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js\");\n/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/elements/Line */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * FlowDiagramLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Flow Diagram.\r\n *\r\n * @see {@link IFlowDiagramLinkEvents} for a list of available events\r\n * @see {@link IFlowDiagramLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar FlowDiagramLink = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FlowDiagramLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagramLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FlowDiagramLink\";\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_10__[\"InterfaceColorSet\"]();\r\n        _this.maskBullets = false;\r\n        _this.colorMode = \"fromNode\";\r\n        _this.layout = \"none\";\r\n        _this.isMeasured = false;\r\n        _this.startAngle = 0;\r\n        _this.endAngle = 0;\r\n        _this.strokeOpacity = 0;\r\n        // this is very important, otherwise the container will be shifted\r\n        _this.verticalCenter = \"none\";\r\n        _this.horizontalCenter = \"none\";\r\n        _this.tooltipText = \"{fromName}→{toName}:{value.value}\";\r\n        _this.tooltipLocation = 0.5;\r\n        _this.link = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__[\"Sprite\"]);\r\n        _this.link.shouldClone = false;\r\n        _this.link.setElement(_this.paper.add(\"path\"));\r\n        _this.link.isMeasured = false;\r\n        _this.fillOpacity = 0.2;\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Positions bullets\r\n     * @ignore\r\n     */\r\n    FlowDiagramLink.prototype.positionBullets = function () {\r\n        var _this = this;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](this.bullets.iterator(), function (bullet) {\r\n            bullet.parent = _this.bulletsContainer;\r\n            bullet.maxWidth = _this.maxWidth;\r\n            bullet.maxHeight = _this.maxHeight;\r\n            _this.positionBullet(bullet);\r\n        });\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"bulletsContainer\", {\r\n        /**\r\n         * Bullets container\r\n         */\r\n        get: function () {\r\n            if (!this._bulletsContainer) {\r\n                var bulletsContainer = this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n                bulletsContainer.shouldClone = false;\r\n                bulletsContainer.layout = \"none\";\r\n                this._bulletsContainer = bulletsContainer;\r\n            }\r\n            return this._bulletsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"bulletsMask\", {\r\n        /**\r\n         * Bullets mask sprite\r\n         */\r\n        get: function () {\r\n            if (!this._bulletsMask) {\r\n                var bulletsMask = this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__[\"Sprite\"]);\r\n                bulletsMask.shouldClone = false;\r\n                bulletsMask.setElement(this.paper.add(\"path\"));\r\n                bulletsMask.isMeasured = false;\r\n                this._bulletsMask = bulletsMask;\r\n            }\r\n            return this._bulletsMask;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions bullets at relative bullet.locationX position on the link.\r\n     * @ignore\r\n     */\r\n    FlowDiagramLink.prototype.positionBullet = function (bullet) {\r\n        var location = bullet.locationX;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](location)) {\r\n            location = bullet.locationY;\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](location)) {\r\n            location = 0.5;\r\n        }\r\n        var point = this.middleLine.positionToPoint(location);\r\n        bullet.moveTo(point);\r\n        var rotationField = bullet.propertyFields.rotation;\r\n        var angle;\r\n        if (bullet.dataItem) {\r\n            var dataContext = bullet.dataItem.dataContext;\r\n            angle = dataContext[rotationField];\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](angle)) {\r\n            angle = point.angle;\r\n        }\r\n        bullet.rotation = angle;\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * [startAngle description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * [endAngle description]\r\n         *\r\n         * @todo Description\r\n         * @param value  End angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"colorMode\", {\r\n        /**\r\n         * Fill mode\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colorMode\");\r\n        },\r\n        /**\r\n         * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n         * Some of the links, like ChordLink does not support gradiens well.\r\n         *\r\n         * @param value  Fill mode\r\n         */\r\n        set: function (value) {\r\n            if (value == \"gradient\") {\r\n                var color = this.fill;\r\n                this.gradient.stops.clear();\r\n                if (color instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__[\"Color\"]) {\r\n                    this.gradient.addColor(color);\r\n                    this.gradient.addColor(color);\r\n                }\r\n                this.fill = this.gradient;\r\n                this.stroke = this.gradient;\r\n            }\r\n            this.setPropertyValue(\"colorMode\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return mask bullets value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Should link bullets be masked or not\r\n         *\r\n         * @param value\r\n         * @default false\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maskBullets\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"tooltipLocation\", {\r\n        /**\r\n         * Tooltip location value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation\");\r\n        },\r\n        /**\r\n         * Relative location of a tooltip.\r\n         * @default 0.5\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds color steps in the link gradient.\r\n     *\r\n     * @param value  Fill option\r\n     */\r\n    FlowDiagramLink.prototype.setFill = function (value) {\r\n        _super.prototype.setFill.call(this, value);\r\n        var gradient = this._gradient;\r\n        if (gradient && value instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__[\"Color\"]) {\r\n            gradient.stops.clear();\r\n            gradient.addColor(value);\r\n            gradient.addColor(value);\r\n        }\r\n    };\r\n    /**\r\n     * Updates bounding box based on element dimension settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagramLink.prototype.measureElement = function () {\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"bullets\", {\r\n        /**\r\n         * List of bullets\r\n         *\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._bullets) {\r\n                this._bullets = new _core_utils_List__WEBPACK_IMPORTED_MODULE_7__[\"ListTemplate\"](new _elements_Bullet__WEBPACK_IMPORTED_MODULE_5__[\"Bullet\"]());\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_7__[\"ListDisposer\"](this._bullets));\r\n                this._disposers.push(this._bullets.template);\r\n                this._bullets.events.on(\"inserted\", function (event) {\r\n                    event.newValue.events.on(\"propertychanged\", function (event) {\r\n                        if (event.property == \"locationX\" || event.property == \"locationY\") {\r\n                            _this.positionBullet(event.target);\r\n                        }\r\n                    }, undefined, false);\r\n                }, undefined, false);\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties from another [[FlowDiagramLink]].\r\n     *\r\n     * @param source  Source link\r\n     */\r\n    FlowDiagramLink.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.bullets.copyFrom(source.bullets);\r\n        var middleLine = this.middleLine;\r\n        if (middleLine) {\r\n            if (middleLine instanceof _core_elements_Line__WEBPACK_IMPORTED_MODULE_9__[\"Line\"] && source.middleLine instanceof _core_elements_Line__WEBPACK_IMPORTED_MODULE_9__[\"Line\"]) {\r\n                middleLine.copyFrom(source.middleLine);\r\n            }\r\n            if (middleLine instanceof _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_8__[\"Polyline\"] && source.middleLine instanceof _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_8__[\"Polyline\"]) {\r\n                middleLine.copyFrom(source.middleLine);\r\n            }\r\n        }\r\n        this.link.copyFrom(source.link);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Tooltip X (px)\r\n     */\r\n    FlowDiagramLink.prototype.getTooltipX = function () {\r\n        if (this.middleLine) {\r\n            return this.middleLine.positionToPoint(this.tooltipLocation).x;\r\n        }\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Tooltip Y (px)\r\n     */\r\n    FlowDiagramLink.prototype.getTooltipY = function () {\r\n        if (this.middleLine) {\r\n            return this.middleLine.positionToPoint(this.tooltipLocation).y;\r\n        }\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"gradient\", {\r\n        /**\r\n         * A gradiend instance that is used to provided colored gradient fills for\r\n         * the Flow link.\r\n         */\r\n        get: function () {\r\n            if (!this._gradient) {\r\n                this._gradient = new _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__[\"LinearGradient\"]();\r\n            }\r\n            return this._gradient;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FlowDiagramLink;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"FlowDiagramLink\"] = FlowDiagramLink;\r\n//# sourceMappingURL=FlowDiagramLink.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js ***!
  \***************************************************************************************/
/*! exports provided: FlowDiagramNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagramNode\", function() { return FlowDiagramNode; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_String__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/String */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js\");\n/* harmony import */ var _core_utils_Order__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Order */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js\");\n/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Number */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js\");\n/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _Legend__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Legend */ \"./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js\");\n/**\r\n * FlowDiagramNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a node in a Flow Diagram.\r\n *\r\n * A Flow node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[FlowLink]] elements.\r\n *\r\n * @see {@link IFlowDiagramNodeEvents} for a list of available events\r\n * @see {@link IFlowDiagramNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar FlowDiagramNode = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FlowDiagramNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagramNode() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Settings for the appearance of the related legend items.\r\n         */\r\n        _this.legendSettings = new _Legend__WEBPACK_IMPORTED_MODULE_12__[\"LegendSettings\"]();\r\n        _this.className = \"FlowDiagramNode\";\r\n        _this.isMeasured = false;\r\n        // TODO can this be removed ?\r\n        new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__[\"InterfaceColorSet\"]();\r\n        _this.draggable = true;\r\n        _this.inert = true;\r\n        _this.setStateOnChildren = true;\r\n        _this.events.on(\"positionchanged\", _this.invalidateLinks, _this, false);\r\n        _this.events.on(\"sizechanged\", _this.invalidateLinks, _this, false);\r\n        return _this;\r\n        //this.events.on(\"hit\", this.handleHit, this, false);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagramNode.prototype.handleHit = function (event) {\r\n        if (this.isHidden || this.isHiding) {\r\n            this.show();\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    };\r\n    /**\r\n     * Shows hidden node.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    FlowDiagramNode.prototype.show = function (duration) {\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        this.outgoingDataItems.each(function (dataItem) {\r\n            if (!dataItem.toNode || (dataItem.toNode && !dataItem.toNode.isHidden)) {\r\n                dataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n            }\r\n        });\r\n        this.incomingDataItems.each(function (dataItem) {\r\n            if (!dataItem.fromNode || (dataItem.fromNode && !dataItem.fromNode.isHidden)) {\r\n                dataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n            }\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides node.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    FlowDiagramNode.prototype.hide = function (duration) {\r\n        var animation = _super.prototype.hide.call(this, duration);\r\n        this.outgoingDataItems.each(function (dataItem) {\r\n            dataItem.setWorkingValue(\"value\", 0, duration);\r\n        });\r\n        this.incomingDataItems.each(function (dataItem) {\r\n            dataItem.setWorkingValue(\"value\", 0, duration);\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Marks node as invalid, for redrawal in the next update cycle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagramNode.prototype.validate = function () {\r\n        if (!this.isDisposed()) {\r\n            _super.prototype.validate.call(this);\r\n            this.invalidateLinks();\r\n        }\r\n    };\r\n    /**\r\n     * Invalidates all links, attached to this node.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagramNode.prototype.invalidateLinks = function () {\r\n        var _this = this;\r\n        this.outgoingDataItems.each(function (dataItem) {\r\n            var link = dataItem.link;\r\n            if (link.colorMode == \"fromNode\") {\r\n                link.fill = link.dataItem.fromNode.color;\r\n            }\r\n            if (link.colorMode == \"gradient\") {\r\n                link.fill = link.gradient;\r\n                link.stroke = link.gradient;\r\n                var stop_1 = link.gradient.stops.getIndex(0);\r\n                if (stop_1) {\r\n                    stop_1.color = _this.color;\r\n                    link.gradient.validate();\r\n                }\r\n            }\r\n        });\r\n        this.incomingDataItems.each(function (dataItem) {\r\n            var link = dataItem.link;\r\n            if (link.colorMode == \"toNode\") {\r\n                link.fill = link.dataItem.toNode.color;\r\n            }\r\n            if (link.colorMode == \"gradient\") {\r\n                link.fill = link.gradient;\r\n                link.stroke = link.gradient;\r\n                var stop_2 = link.gradient.stops.getIndex(1);\r\n                if (stop_2) {\r\n                    stop_2.color = _this.color;\r\n                    link.gradient.validate();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"incomingDataItems\", {\r\n        /**\r\n         * List of incoming items (links).\r\n         *\r\n         * @readonly\r\n         * @return Incoming items\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._incomingDataItems) {\r\n                var incomingDataItems = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"List\"]();\r\n                incomingDataItems.events.on(\"inserted\", function () {\r\n                    if (_this.chart.sortBy == \"name\") {\r\n                        _this._incomingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"sort\"](_this._incomingDataItems.iterator(), function (x, y) { return _core_utils_String__WEBPACK_IMPORTED_MODULE_7__[\"order\"](x.fromName, y.fromName); });\r\n                    }\r\n                    else if (_this.chart.sortBy == \"value\") {\r\n                        _this._incomingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"sort\"](_this._incomingDataItems.iterator(), function (x, y) { return _core_utils_Order__WEBPACK_IMPORTED_MODULE_8__[\"reverse\"](_core_utils_Number__WEBPACK_IMPORTED_MODULE_9__[\"order\"](x.value, y.value)); });\r\n                    }\r\n                    else {\r\n                        _this._incomingSorted = _this._incomingDataItems.iterator();\r\n                    }\r\n                }, undefined, false);\r\n                this._incomingDataItems = incomingDataItems;\r\n            }\r\n            return this._incomingDataItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"outgoingDataItems\", {\r\n        /**\r\n         * List of outgoing items (links).\r\n         *\r\n         * @readonly\r\n         * @return Outgoing items\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._outgoingDataItems) {\r\n                var outgoingDataItems = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"List\"]();\r\n                outgoingDataItems.events.on(\"inserted\", function () {\r\n                    if (_this.chart.sortBy == \"name\") {\r\n                        _this._outgoingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"sort\"](_this._outgoingDataItems.iterator(), function (x, y) { return _core_utils_String__WEBPACK_IMPORTED_MODULE_7__[\"order\"](x.fromName, y.fromName); });\r\n                    }\r\n                    else if (_this.chart.sortBy == \"value\") {\r\n                        _this._outgoingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"sort\"](_this._outgoingDataItems.iterator(), function (x, y) { return _core_utils_Order__WEBPACK_IMPORTED_MODULE_8__[\"reverse\"](_core_utils_Number__WEBPACK_IMPORTED_MODULE_9__[\"order\"](x.value, y.value)); });\r\n                    }\r\n                    else {\r\n                        _this._outgoingSorted = _this._outgoingDataItems.iterator();\r\n                    }\r\n                }, undefined, false);\r\n                this._outgoingDataItems = outgoingDataItems;\r\n            }\r\n            return this._outgoingDataItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"name\");\r\n        },\r\n        /**\r\n         * A name of the node.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"name\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"total\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"total\");\r\n        },\r\n        /**\r\n         * Sum of all incoming+outgoing link values\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"total\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"totalIncoming\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"totalIncoming\");\r\n        },\r\n        /**\r\n         * Sum of all incomming link values.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"totalIncoming\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"totalOutgoing\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"totalOutgoing\");\r\n        },\r\n        /**\r\n         * Sum of all outgoing link values.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"totalOutgoing\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"color\");\r\n        },\r\n        /**\r\n         * Node's color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.setColorProperty(\"color\", value);\r\n            if (this._background) {\r\n                this._background.fill = value;\r\n            }\r\n            this.fill = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    FlowDiagramNode.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__[\"RoundedRectangle\"]);\r\n        column.shouldClone = false;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__[\"copyProperties\"](this, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        column.stroke = this.fill;\r\n        column.copyFrom(this);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.fill;\r\n        legendDataItem.colorOrig = column.fill;\r\n    };\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * Legend data item that corresponds to this series.\r\n         *\r\n         * @param value  Data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            this._legendDataItem.itemContainer.deepInvalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FlowDiagramNode;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_1__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"FlowDiagramNode\"] = FlowDiagramNode;\r\n//# sourceMappingURL=FlowDiagramNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js ***!
  \***********************************************************************************/
/*! exports provided: FunnelSlice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunnelSlice\", function() { return FunnelSlice; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Module that defines everything related to building Funnel slices.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to create [[FunnelSlice]] elements.\r\n *\r\n * @see {@link IFunnelSliceEvents} for a list of available events\r\n * @see {@link IFunnelSliceAdapters} for a list of available adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar FunnelSlice = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FunnelSlice, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSlice() {\r\n        var _this = _super.call(this) || this;\r\n        _this.slice = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        _this.slice.shouldClone = false;\r\n        _this.slice.setElement(_this.paper.add(\"path\"));\r\n        _this.slice.isMeasured = false;\r\n        _this.orientation = \"vertical\";\r\n        _this.bottomWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__[\"percent\"])(100);\r\n        _this.topWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__[\"percent\"])(100);\r\n        _this.isMeasured = false;\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        _this.expandDistance = 0;\r\n        _this.className = \"FunnelSlice\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     */\r\n    FunnelSlice.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var pt = this.pixelPaddingTop;\r\n        var pb = this.pixelPaddingBottom;\r\n        var pr = this.pixelPaddingRight;\r\n        var pl = this.pixelPaddingLeft;\r\n        var w = this.pixelWidth - pr - pl;\r\n        var h = this.pixelHeight - pt - pb;\r\n        var ed = this.expandDistance;\r\n        var path = \"\";\r\n        if (this.orientation == \"vertical\") {\r\n            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.topWidth, w);\r\n            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.bottomWidth, w);\r\n            var tl = { x: (w - tw) / 2 + pl, y: pt };\r\n            var tr = { x: (w + tw) / 2 + pl, y: pt };\r\n            var br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n            var bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n            var cpr = { x: tr.x + (br.x - tr.x) / 2 + ed * h, y: tr.y + 0.5 * h };\r\n            var cpl = { x: tl.x + (bl.x - tl.x) / 2 - ed * h, y: tl.y + 0.5 * h };\r\n            var qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"lineTo\"](br);\r\n            var qp2 = \"\";\r\n            if (ed != 0) {\r\n                qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"quadraticCurveTo\"](br, cpr);\r\n                qp2 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"quadraticCurveTo\"](tl, cpl);\r\n            }\r\n            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"moveTo\"](tl) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"lineTo\"](tr) + qp1 + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"lineTo\"](bl) + qp2;\r\n            this.tickPoint = { x: tr.x + (br.x - tr.x) / 2, y: tr.y + (br.y - tr.y) / 2 };\r\n        }\r\n        else {\r\n            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.topWidth, h);\r\n            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.bottomWidth, h);\r\n            var tt = { x: pl, y: (h - tw) / 2 + pt };\r\n            var tb = { x: pl, y: (h + tw) / 2 + pt };\r\n            var bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n            var bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n            var cpr = { y: tt.y + (bt.y - tt.y) / 2 - ed * w, x: tt.x + 0.5 * w };\r\n            var cpl = { y: tb.y + (bb.y - tb.y) / 2 + ed * w, x: tb.x + 0.5 * w };\r\n            var qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"lineTo\"](bt);\r\n            var qp2 = \"\";\r\n            if (ed != 0) {\r\n                qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"quadraticCurveTo\"](bt, cpr);\r\n                qp2 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"quadraticCurveTo\"](tb, cpl);\r\n            }\r\n            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"moveTo\"](tb) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"lineTo\"](tt) + qp1 + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"lineTo\"](bb) + qp2;\r\n            this.tickPoint = { y: tb.y + (bb.y - tb.y) / 2, x: tb.x + (bb.x - tb.x) / 2 };\r\n        }\r\n        this.slice.path = path;\r\n        this.invalidateLayout();\r\n    };\r\n    FunnelSlice.prototype.getPoint = function (locationX, locationY) {\r\n        var pt = this.pixelPaddingTop;\r\n        var pb = this.pixelPaddingBottom;\r\n        var pr = this.pixelPaddingRight;\r\n        var pl = this.pixelPaddingLeft;\r\n        var w = this.pixelWidth - pr - pl;\r\n        var h = this.pixelHeight - pt - pb;\r\n        if (this.orientation == \"vertical\") {\r\n            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.topWidth, w);\r\n            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.bottomWidth, w);\r\n            var tl = { x: (w - tw) / 2 + pl, y: pt };\r\n            var tr = { x: (w + tw) / 2 + pl, y: pt };\r\n            var br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n            var bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n            var mlx = tl.x + (bl.x - tl.x) * locationY;\r\n            var mrx = tr.x + (br.x - tr.x) * locationY;\r\n            return { x: mlx + (mrx - mlx) * locationX, y: tr.y + (br.y - tr.y) * locationY };\r\n        }\r\n        else {\r\n            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.topWidth, h);\r\n            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__[\"relativeToValue\"](this.bottomWidth, h);\r\n            var tt = { x: pl, y: (h - tw) / 2 + pt };\r\n            var tb = { x: pl, y: (h + tw) / 2 + pt };\r\n            var bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n            var bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n            var mty = tt.y + (bt.y - tt.y) * locationX;\r\n            var mby = tb.y + (bb.y - tb.y) * locationX;\r\n            return { y: mty + (mby - mty) * locationY, x: tt.x + (bt.x - tt.x) * locationX };\r\n        }\r\n    };\r\n    Object.defineProperty(FunnelSlice.prototype, \"bottomWidth\", {\r\n        /**\r\n         * @return bottom width\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomWidth\");\r\n        },\r\n        /**\r\n         * Bottom width in pixels or percent.\r\n         *\r\n         * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n         * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n         * becomes read-only as it will be automatically reset by series.\r\n         *\r\n         * @param value  Bottom width\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"bottomWidth\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"topWidth\", {\r\n        /**\r\n         * @return Top width\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"topWidth\");\r\n        },\r\n        /**\r\n         * Top width in pixels or percent.\r\n         *\r\n         * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n         * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n         * becomes read-only as it will be automatically reset by series.\r\n         *\r\n         * @param value  Top width\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"topWidth\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the funnel slice: \"horizontal\" or \"vertical\".\r\n         *\r\n         * IMPORTANT: this setting might be used to set orintation if you use slice\r\n         * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n         * becomes read-only as it will be automatically reset by series.\r\n         *\r\n         * @param value  Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"expandDistance\", {\r\n        /**\r\n         * @return expandDistance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"expandDistance\");\r\n        },\r\n        /**\r\n         * A relative distance slice's sides should be bent to. It's relative to the\r\n         * height of the slice.\r\n         *\r\n         * Zero (default) will mean the sides will be perfectly straight.\r\n         *\r\n         * Positive value will make them bend outwards, resulting in \"puffed\" slices.\r\n         *\r\n         * Negative values will make them bend inwards.\r\n         *\r\n         * @default 0\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"expandDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[Sprite]].\r\n     *\r\n     * @param source Source Sprite\r\n     */\r\n    FunnelSlice.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.slice) {\r\n            this.slice.copyFrom(source.slice);\r\n        }\r\n    };\r\n    return FunnelSlice;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_1__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"FunnelSlice\"] = FunnelSlice;\r\n//# sourceMappingURL=FunnelSlice.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js ***!
  \**********************************************************************************/
/*! exports provided: FunnelTick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunnelTick\", function() { return FunnelTick; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Tick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Funnel tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws an tick line for a funnel slice connecting it to a related label.\r\n *\r\n * @see {@link IFunnelTickEvents} for a list of available events\r\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\r\n */\r\nvar FunnelTick = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FunnelTick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelTick() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A label element this tick is attached to.\r\n         */\r\n        _this._label = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * A slice element this tick is attached to.\r\n         */\r\n        _this._slice = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MutableValueDisposer\"]();\r\n        _this.className = \"FunnelTick\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this._disposers.push(_this._label);\r\n        _this._disposers.push(_this._slice);\r\n        _this.setPropertyValue(\"locationX\", 0);\r\n        _this.setPropertyValue(\"locationY\", 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelTick.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var slice = this.slice;\r\n        var point = slice.getPoint(this.locationX, this.locationY);\r\n        if (point) {\r\n            var label = this.label;\r\n            var series = slice.dataItem.component;\r\n            var p0 = void 0;\r\n            var p1 = void 0;\r\n            var p2 = void 0;\r\n            if (series.orientation == \"vertical\") {\r\n                var x1 = label.pixelX;\r\n                var y1 = label.pixelY;\r\n                if (!series.labelsOpposite) {\r\n                    x1 += label.maxRight;\r\n                }\r\n                p0 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"spritePointToSprite\"](point, slice, this.parent);\r\n                p2 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"spritePointToSprite\"]({ x: x1, y: y1 }, label.parent, this.parent);\r\n                p1 = { x: label.parent.pixelX - this.length, y: p2.y };\r\n                if (!series.labelsOpposite) {\r\n                    p1.x = label.parent.measuredWidth + this.length;\r\n                }\r\n            }\r\n            else {\r\n                var x1 = label.pixelX;\r\n                var y1 = label.pixelY;\r\n                if (!series.labelsOpposite) {\r\n                    y1 += label.maxBottom;\r\n                }\r\n                p0 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"spritePointToSprite\"](point, slice, this.parent);\r\n                p2 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"spritePointToSprite\"]({ x: x1, y: y1 }, label.parent, this.parent);\r\n                p1 = { x: p2.x, y: label.parent.pixelY - this.length };\r\n                if (!series.labelsOpposite) {\r\n                    p1.y = label.parent.measuredHeight + this.length;\r\n                }\r\n            }\r\n            this.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"moveTo\"](p0) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"lineTo\"](p1) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__[\"lineTo\"](p2);\r\n        }\r\n    };\r\n    Object.defineProperty(FunnelTick.prototype, \"slice\", {\r\n        /**\r\n         * @return FunnelSlice\r\n         */\r\n        get: function () {\r\n            return this._slice.get();\r\n        },\r\n        /**\r\n         * [[FunnelSlice]] element tick is attached to.\r\n         *\r\n         * @param slice  Slice\r\n         */\r\n        set: function (slice) {\r\n            this._slice.set(slice, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MultiDisposer\"]([\r\n                slice.events.on(\"transformed\", this.invalidate, this, false),\r\n                slice.events.on(\"validated\", this.invalidate, this, false)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelTick.prototype, \"label\", {\r\n        /**\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            return this._label.get();\r\n        },\r\n        /**\r\n         * [[Label]] element tick is attached to.\r\n         *\r\n         * @param label  Label\r\n         */\r\n        set: function (label) {\r\n            this._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelTick.prototype, \"locationX\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationX\");\r\n        },\r\n        /**\r\n         * A relative horizontal position within target element a tick is pointing\r\n         * to.\r\n         *\r\n         * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\r\n         *\r\n         * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n         * of the slice), or outside 0-1 range, which will put tick anchor position\r\n         * outside target element.\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"locationX\", value, false, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelTick.prototype, \"locationY\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationY\");\r\n        },\r\n        /**\r\n         * A relative vertical position within target element a tick is pointing\r\n         * to.\r\n         *\r\n         * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\r\n         *\r\n         * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n         * of the slice), or outside 0-1 range, which will put tick anchor position\r\n         * outside target element.\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"locationY\", value, false, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelTick;\r\n}(_elements_Tick__WEBPACK_IMPORTED_MODULE_1__[\"Tick\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"FunnelTick\"] = FunnelTick;\r\n//# sourceMappingURL=FunnelTick.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js ***!
  \***********************************************************************************/
/*! exports provided: LabelBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LabelBullet\", function() { return LabelBullet; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Label */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar LabelBullet = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(LabelBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LabelBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"LabelBullet\";\r\n        var label = _this.createChild(_core_elements_Label__WEBPACK_IMPORTED_MODULE_2__[\"Label\"]);\r\n        label.shouldClone = false;\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.truncate = true;\r\n        label.hideOversized = false;\r\n        label.maxWidth = 500;\r\n        label.maxHeight = 500;\r\n        label.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__[\"color\"])();\r\n        label.strokeOpacity = 0;\r\n        label.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__[\"InterfaceColorSet\"]().getFor(\"text\");\r\n        _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\r\n        _this.label = label;\r\n        // not good, as lineSeries will have labels somewhere in the middle.\r\n        //this.locationX = 0.5;\r\n        //this.locationY = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    LabelBullet.prototype.handleMaxSize = function () {\r\n        this.label.maxWidth = this.maxWidth;\r\n        this.label.maxHeight = this.maxHeight;\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[LabelBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    LabelBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n    };\r\n    return LabelBullet;\r\n}(_Bullet__WEBPACK_IMPORTED_MODULE_1__[\"Bullet\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n//# sourceMappingURL=LabelBullet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0xhYmVsQnVsbGV0LmpzP2FkNDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDZ0I7QUFDSDtBQUNBO0FBQ3dCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0JBQW9CO0FBQzdCLFNBQVMsc0JBQXNCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywwREFBSztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrREFBSztBQUM1QjtBQUNBLHlCQUF5QiwrRUFBaUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyw4Q0FBTTtBQUNlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL0xhYmVsQnVsbGV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEJ1bGxldCBtb2R1bGVcclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQnVsbGV0IH0gZnJvbSBcIi4vQnVsbGV0XCI7XHJcbmltcG9ydCB7IExhYmVsIH0gZnJvbSBcIi4uLy4uL2NvcmUvZWxlbWVudHMvTGFiZWxcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgeyBjb2xvciB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0NvbG9yXCI7XHJcbmltcG9ydCB7IEludGVyZmFjZUNvbG9yU2V0IH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvSW50ZXJmYWNlQ29sb3JTZXRcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgYnVsbGV0IHdpdGggYSB0ZXh0dWFsIGxhYmVsLlxyXG4gKlxyXG4gKiBVc2VzIFtbTGFiZWxdXSBpbnN0YW5jZSB0byBkcmF3IHRoZSBsYWJlbCwgc28gdGhlIGxhYmVsIGl0c2VsZiBpc1xyXG4gKiBjb25maWd1cmFibGUuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElCdWxsZXRFdmVudHN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIGV2ZW50c1xyXG4gKiBAc2VlIHtAbGluayBJQnVsbGV0QWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEB0b2RvIFVzYWdlIGV4YW1wbGVcclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIExhYmVsQnVsbGV0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKExhYmVsQnVsbGV0LCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBMYWJlbEJ1bGxldCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiTGFiZWxCdWxsZXRcIjtcclxuICAgICAgICB2YXIgbGFiZWwgPSBfdGhpcy5jcmVhdGVDaGlsZChMYWJlbCk7XHJcbiAgICAgICAgbGFiZWwuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBsYWJlbC52ZXJ0aWNhbENlbnRlciA9IFwibWlkZGxlXCI7XHJcbiAgICAgICAgbGFiZWwuaG9yaXpvbnRhbENlbnRlciA9IFwibWlkZGxlXCI7XHJcbiAgICAgICAgbGFiZWwudHJ1bmNhdGUgPSB0cnVlO1xyXG4gICAgICAgIGxhYmVsLmhpZGVPdmVyc2l6ZWQgPSBmYWxzZTtcclxuICAgICAgICBsYWJlbC5tYXhXaWR0aCA9IDUwMDtcclxuICAgICAgICBsYWJlbC5tYXhIZWlnaHQgPSA1MDA7XHJcbiAgICAgICAgbGFiZWwuc3Ryb2tlID0gY29sb3IoKTtcclxuICAgICAgICBsYWJlbC5zdHJva2VPcGFjaXR5ID0gMDtcclxuICAgICAgICBsYWJlbC5maWxsID0gbmV3IEludGVyZmFjZUNvbG9yU2V0KCkuZ2V0Rm9yKFwidGV4dFwiKTtcclxuICAgICAgICBfdGhpcy5ldmVudHMub24oXCJtYXhzaXplY2hhbmdlZFwiLCBfdGhpcy5oYW5kbGVNYXhTaXplLCBfdGhpcywgZmFsc2UpO1xyXG4gICAgICAgIF90aGlzLmxhYmVsID0gbGFiZWw7XHJcbiAgICAgICAgLy8gbm90IGdvb2QsIGFzIGxpbmVTZXJpZXMgd2lsbCBoYXZlIGxhYmVscyBzb21ld2hlcmUgaW4gdGhlIG1pZGRsZS5cclxuICAgICAgICAvL3RoaXMubG9jYXRpb25YID0gMC41O1xyXG4gICAgICAgIC8vdGhpcy5sb2NhdGlvblkgPSAwLjU7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIExhYmVsQnVsbGV0LnByb3RvdHlwZS5oYW5kbGVNYXhTaXplID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMubGFiZWwubWF4V2lkdGggPSB0aGlzLm1heFdpZHRoO1xyXG4gICAgICAgIHRoaXMubGFiZWwubWF4SGVpZ2h0ID0gdGhpcy5tYXhIZWlnaHQ7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb3BpZXMgYWxsIHByb3ByaXRpZXMgYW5kIHJlbGF0ZWQgc3R1ZmYgZnJvbSBhbm90aGVyIGluc3RhbmNlIG9mXHJcbiAgICAgKiBbW0xhYmVsQnVsbGV0XV0uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHNvdXJjZSAgU291cmNlIGVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgTGFiZWxCdWxsZXQucHJvdG90eXBlLmNvcHlGcm9tID0gZnVuY3Rpb24gKHNvdXJjZSkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuY29weUZyb20uY2FsbCh0aGlzLCBzb3VyY2UpO1xyXG4gICAgICAgIHRoaXMubGFiZWwuY29weUZyb20oc291cmNlLmxhYmVsKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gTGFiZWxCdWxsZXQ7XHJcbn0oQnVsbGV0KSk7XHJcbmV4cG9ydCB7IExhYmVsQnVsbGV0IH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkxhYmVsQnVsbGV0XCJdID0gTGFiZWxCdWxsZXQ7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxhYmVsQnVsbGV0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js ***!
  \*************************************************************************************/
/*! exports provided: NavigationBarDataItem, NavigationBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationBarDataItem\", function() { return NavigationBarDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavigationBar\", function() { return NavigationBar; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Component */ \"./node_modules/@amcharts/amcharts4/.internal/core/Component.js\");\n/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/DataItem */ \"./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_elements_TextLink__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/elements/TextLink */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js\");\n/* harmony import */ var _core_elements_Triangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Triangle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar NavigationBarDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(NavigationBarDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBarDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"NavigationBarDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(NavigationBarDataItem.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.properties[\"name\"];\r\n        },\r\n        /**\r\n         * Name of the navigation bar item.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"name\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NavigationBarDataItem;\r\n}(_core_DataItem__WEBPACK_IMPORTED_MODULE_2__[\"DataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\r\nvar NavigationBar = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(NavigationBar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBar() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"NavigationBar\";\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__[\"InterfaceColorSet\"]();\r\n        var textLink = new _core_elements_TextLink__WEBPACK_IMPORTED_MODULE_4__[\"TextLink\"]();\r\n        textLink.valign = \"middle\";\r\n        textLink.paddingTop = 8;\r\n        textLink.paddingBottom = 8;\r\n        _this.paddingBottom = 2;\r\n        _this.links = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"ListTemplate\"](textLink);\r\n        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"ListDisposer\"](_this.links));\r\n        _this._disposers.push(textLink);\r\n        _this._linksIterator = new _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__[\"ListIterator\"](_this.links, function () { return _this.links.create(); });\r\n        _this._linksIterator.createNewItems = true;\r\n        var triangle = new _core_elements_Triangle__WEBPACK_IMPORTED_MODULE_5__[\"Triangle\"]();\r\n        triangle.direction = \"right\";\r\n        triangle.width = 8;\r\n        triangle.height = 12;\r\n        triangle.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        triangle.fillOpacity = 0.5;\r\n        triangle.valign = \"middle\";\r\n        triangle.marginLeft = 10;\r\n        triangle.marginRight = 10;\r\n        _this.separators = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"ListTemplate\"](triangle);\r\n        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"ListDisposer\"](_this.separators));\r\n        _this._disposers.push(triangle);\r\n        var activeLink = new _core_elements_TextLink__WEBPACK_IMPORTED_MODULE_4__[\"TextLink\"]();\r\n        _this.activeLink = activeLink;\r\n        activeLink.copyFrom(textLink);\r\n        activeLink.valign = \"middle\";\r\n        activeLink.fontWeight = \"bold\";\r\n        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__[\"percent\"])(100);\r\n        _this.layout = \"grid\";\r\n        _this.dataFields.name = \"name\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Completely redraws the navigation bar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    NavigationBar.prototype.validateDataElements = function () {\r\n        this.removeChildren();\r\n        this._linksIterator.reset();\r\n        _super.prototype.validateDataElements.call(this);\r\n        //@todo: dispose\r\n    };\r\n    /**\r\n     * Creates a visual element for a data item (nav item).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    NavigationBar.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        var textLink;\r\n        if (dataItem.index < this.dataItems.length - 1) {\r\n            textLink = this._linksIterator.getLast();\r\n            textLink.parent = this;\r\n            var separator = this.separators.create();\r\n            separator.parent = this;\r\n            separator.valign = \"middle\";\r\n        }\r\n        else {\r\n            textLink = this.activeLink;\r\n            textLink.events.copyFrom(this.links.template.events);\r\n            textLink.hide(0);\r\n            textLink.show();\r\n            textLink.parent = this;\r\n        }\r\n        textLink.dataItem = dataItem;\r\n        textLink.text = dataItem.name;\r\n        textLink.validate();\r\n    };\r\n    return NavigationBar;\r\n}(_core_Component__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_6__[\"registry\"].registeredClasses[\"NavigationBar\"] = NavigationBar;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_6__[\"registry\"].registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;\r\n//# sourceMappingURL=NavigationBar.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js ***!
  \****************************************************************************/
/*! exports provided: OHLC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OHLC\", function() { return OHLC; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Candlestick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Candlestick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js\");\n/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Line */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * Module that defines everything related to building OHLCs.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar OHLC = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(OHLC, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function OHLC() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"OHLC\";\r\n        _this.layout = \"none\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    OHLC.prototype.createAssets = function () {\r\n        //super.createAssets();\r\n        this.openLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__[\"Line\"]);\r\n        this.openLine.shouldClone = false;\r\n        this.highLowLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__[\"Line\"]);\r\n        this.highLowLine.shouldClone = false;\r\n        this.closeLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__[\"Line\"]);\r\n        this.closeLine.shouldClone = false;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[OHLC]].\r\n     *\r\n     * @param source Source OHLC\r\n     */\r\n    OHLC.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.openLine) {\r\n            this.openLine.copyFrom(source.openLine);\r\n        }\r\n        if (this.highLowLine) {\r\n            this.highLowLine.copyFrom(source.highLowLine);\r\n        }\r\n        if (this.closeLine) {\r\n            this.closeLine.copyFrom(source.closeLine);\r\n        }\r\n    };\r\n    return OHLC;\r\n}(_Candlestick__WEBPACK_IMPORTED_MODULE_1__[\"Candlestick\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"OHLC\"] = OHLC;\r\n//# sourceMappingURL=OHLC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL09ITEMuanM/ZWJlYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzRDO0FBQ0k7QUFDRDtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGtCQUFrQjtBQUMzQixTQUFTLG9CQUFvQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLHdEQUFJO0FBQzdDO0FBQ0EsNENBQTRDLHdEQUFJO0FBQ2hEO0FBQ0EsMENBQTBDLHdEQUFJO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsd0RBQVc7QUFDRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9lbGVtZW50cy9PSExDLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSB0aGF0IGRlZmluZXMgZXZlcnl0aGluZyByZWxhdGVkIHRvIGJ1aWxkaW5nIE9ITENzLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBDYW5kbGVzdGljayB9IGZyb20gXCIuL0NhbmRsZXN0aWNrXCI7XHJcbmltcG9ydCB7IExpbmUgfSBmcm9tIFwiLi4vLi4vY29yZS9lbGVtZW50cy9MaW5lXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBDbGFzcyB1c2VkIHRvIGNyZWF0ZXMgT0hMQ3MuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElPSExDRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSU9ITENBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gVXNhZ2UgZXhhbXBsZVxyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgT0hMQyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhPSExDLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBPSExDKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJPSExDXCI7XHJcbiAgICAgICAgX3RoaXMubGF5b3V0ID0gXCJub25lXCI7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIE9ITEMucHJvdG90eXBlLmNyZWF0ZUFzc2V0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL3N1cGVyLmNyZWF0ZUFzc2V0cygpO1xyXG4gICAgICAgIHRoaXMub3BlbkxpbmUgPSB0aGlzLmNyZWF0ZUNoaWxkKExpbmUpO1xyXG4gICAgICAgIHRoaXMub3BlbkxpbmUuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmhpZ2hMb3dMaW5lID0gdGhpcy5jcmVhdGVDaGlsZChMaW5lKTtcclxuICAgICAgICB0aGlzLmhpZ2hMb3dMaW5lLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jbG9zZUxpbmUgPSB0aGlzLmNyZWF0ZUNoaWxkKExpbmUpO1xyXG4gICAgICAgIHRoaXMuY2xvc2VMaW5lLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb3BpZXMgYWxsIHBhcmFtZXRlcnMgZnJvbSBhbm90aGVyIFtbT0hMQ11dLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzb3VyY2UgU291cmNlIE9ITENcclxuICAgICAqL1xyXG4gICAgT0hMQy5wcm90b3R5cGUuY29weUZyb20gPSBmdW5jdGlvbiAoc291cmNlKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5jb3B5RnJvbS5jYWxsKHRoaXMsIHNvdXJjZSk7XHJcbiAgICAgICAgaWYgKHRoaXMub3BlbkxpbmUpIHtcclxuICAgICAgICAgICAgdGhpcy5vcGVuTGluZS5jb3B5RnJvbShzb3VyY2Uub3BlbkxpbmUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5oaWdoTG93TGluZSkge1xyXG4gICAgICAgICAgICB0aGlzLmhpZ2hMb3dMaW5lLmNvcHlGcm9tKHNvdXJjZS5oaWdoTG93TGluZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmNsb3NlTGluZSkge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlTGluZS5jb3B5RnJvbShzb3VyY2UuY2xvc2VMaW5lKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE9ITEM7XHJcbn0oQ2FuZGxlc3RpY2spKTtcclxuZXhwb3J0IHsgT0hMQyB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJPSExDXCJdID0gT0hMQztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T0hMQy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js ***!
  \*******************************************************************************/
/*! exports provided: PieTick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieTick\", function() { return PieTick; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Tick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * Pie tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws an tick line for a pie slice connecting it to a related label.\r\n *\r\n * @see {@link IPieTickEvents} for a list of available events\r\n * @see {@link IPieTickAdapters} for a list of available Adapters\r\n */\r\nvar PieTick = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieTick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieTick() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A label element this tick is attached to.\r\n         */\r\n        _this._label = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * A slice element this tick is attached to.\r\n         */\r\n        _this._slice = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MutableValueDisposer\"]();\r\n        _this.className = \"PieTick\";\r\n        _this.element = _this.paper.add(\"polyline\");\r\n        _this._disposers.push(_this._label);\r\n        _this._disposers.push(_this._slice);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieTick.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var slice = this.slice;\r\n        var label = this.label;\r\n        var series = slice.dataItem.component;\r\n        if (slice && slice.radius > 0 && label && label.text) {\r\n            var x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;\r\n            var y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;\r\n            var x1 = void 0;\r\n            var y1 = void 0;\r\n            var x2 = void 0;\r\n            var y2 = void 0;\r\n            if (series.alignLabels) {\r\n                x1 = label.pixelX - this.length;\r\n                y1 = label.pixelY;\r\n                x2 = label.pixelX;\r\n                y2 = y1;\r\n                if (label.horizontalCenter == \"right\") {\r\n                    x1 += 2 * this.length;\r\n                    x2 = x1 - this.length;\r\n                }\r\n            }\r\n            else {\r\n                var r = label.pixelRadius(slice.radius);\r\n                x1 = x0 + r * slice.ix;\r\n                y1 = y0 + r * slice.iy;\r\n                x2 = x1;\r\n                y2 = y1;\r\n            }\r\n            this.element.attr({ \"points\": [x0, y0, x1, y1, x2, y2] });\r\n        }\r\n    };\r\n    Object.defineProperty(PieTick.prototype, \"slice\", {\r\n        /**\r\n         * @return Slice\r\n         */\r\n        get: function () {\r\n            return this._slice.get();\r\n        },\r\n        /**\r\n         * Slice element tick is attached to.\r\n         *\r\n         * @param slice  Slice\r\n         */\r\n        set: function (slice) {\r\n            this._slice.set(slice, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__[\"MultiDisposer\"]([\r\n                slice.events.on(\"transformed\", this.invalidate, this),\r\n                slice.events.on(\"validated\", this.invalidate, this)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieTick.prototype, \"label\", {\r\n        /**\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            return this._label.get();\r\n        },\r\n        /**\r\n         * Label element tick is attached to.\r\n         *\r\n         * @param label  Label\r\n         */\r\n        set: function (label) {\r\n            this._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieTick;\r\n}(_elements_Tick__WEBPACK_IMPORTED_MODULE_1__[\"Tick\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PieTick\"] = PieTick;\r\n//# sourceMappingURL=PieTick.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL1BpZVRpY2suanM/OWZjNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3dDO0FBQ3dDO0FBQ2pDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMsdUJBQXVCO0FBQ2hDO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5RUFBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHlFQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHFDQUFxQztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxrRUFBYTtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUMsQ0FBQyxtREFBSTtBQUNhO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL1BpZVRpY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUGllIHRpY2sgbW9kdWxlLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBUaWNrIH0gZnJvbSBcIi4uL2VsZW1lbnRzL1RpY2tcIjtcclxuaW1wb3J0IHsgTXV0YWJsZVZhbHVlRGlzcG9zZXIsIE11bHRpRGlzcG9zZXIgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9EaXNwb3NlclwiO1xyXG5pbXBvcnQgeyByZWdpc3RyeSB9IGZyb20gXCIuLi8uLi9jb3JlL1JlZ2lzdHJ5XCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRHJhd3MgYW4gdGljayBsaW5lIGZvciBhIHBpZSBzbGljZSBjb25uZWN0aW5nIGl0IHRvIGEgcmVsYXRlZCBsYWJlbC5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSVBpZVRpY2tFdmVudHN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIGV2ZW50c1xyXG4gKiBAc2VlIHtAbGluayBJUGllVGlja0FkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKi9cclxudmFyIFBpZVRpY2sgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoUGllVGljaywgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gUGllVGljaygpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgbGFiZWwgZWxlbWVudCB0aGlzIHRpY2sgaXMgYXR0YWNoZWQgdG8uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMuX2xhYmVsID0gbmV3IE11dGFibGVWYWx1ZURpc3Bvc2VyKCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBzbGljZSBlbGVtZW50IHRoaXMgdGljayBpcyBhdHRhY2hlZCB0by5cclxuICAgICAgICAgKi9cclxuICAgICAgICBfdGhpcy5fc2xpY2UgPSBuZXcgTXV0YWJsZVZhbHVlRGlzcG9zZXIoKTtcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIlBpZVRpY2tcIjtcclxuICAgICAgICBfdGhpcy5lbGVtZW50ID0gX3RoaXMucGFwZXIuYWRkKFwicG9seWxpbmVcIik7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKF90aGlzLl9sYWJlbCk7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKF90aGlzLl9zbGljZSk7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRHJhd3MgdGhlIHRpY2sgZWxlbWVudC5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIFBpZVRpY2sucHJvdG90eXBlLmRyYXcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kcmF3LmNhbGwodGhpcyk7XHJcbiAgICAgICAgdmFyIHNsaWNlID0gdGhpcy5zbGljZTtcclxuICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLmxhYmVsO1xyXG4gICAgICAgIHZhciBzZXJpZXMgPSBzbGljZS5kYXRhSXRlbS5jb21wb25lbnQ7XHJcbiAgICAgICAgaWYgKHNsaWNlICYmIHNsaWNlLnJhZGl1cyA+IDAgJiYgbGFiZWwgJiYgbGFiZWwudGV4dCkge1xyXG4gICAgICAgICAgICB2YXIgeDAgPSBzbGljZS5keCArIHNsaWNlLnNsaWNlLmR4ICsgc2xpY2UucGl4ZWxYICsgc2xpY2UuaXggKiBzbGljZS5yYWRpdXMgKiBzbGljZS5zY2FsZTtcclxuICAgICAgICAgICAgdmFyIHkwID0gc2xpY2UuZHkgKyBzbGljZS5zbGljZS5keSArIHNsaWNlLnBpeGVsWSArIHNsaWNlLml5ICogc2xpY2UucmFkaXVzWSAqIHNsaWNlLnNjYWxlO1xyXG4gICAgICAgICAgICB2YXIgeDEgPSB2b2lkIDA7XHJcbiAgICAgICAgICAgIHZhciB5MSA9IHZvaWQgMDtcclxuICAgICAgICAgICAgdmFyIHgyID0gdm9pZCAwO1xyXG4gICAgICAgICAgICB2YXIgeTIgPSB2b2lkIDA7XHJcbiAgICAgICAgICAgIGlmIChzZXJpZXMuYWxpZ25MYWJlbHMpIHtcclxuICAgICAgICAgICAgICAgIHgxID0gbGFiZWwucGl4ZWxYIC0gdGhpcy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB5MSA9IGxhYmVsLnBpeGVsWTtcclxuICAgICAgICAgICAgICAgIHgyID0gbGFiZWwucGl4ZWxYO1xyXG4gICAgICAgICAgICAgICAgeTIgPSB5MTtcclxuICAgICAgICAgICAgICAgIGlmIChsYWJlbC5ob3Jpem9udGFsQ2VudGVyID09IFwicmlnaHRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHgxICs9IDIgKiB0aGlzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICB4MiA9IHgxIC0gdGhpcy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgciA9IGxhYmVsLnBpeGVsUmFkaXVzKHNsaWNlLnJhZGl1cyk7XHJcbiAgICAgICAgICAgICAgICB4MSA9IHgwICsgciAqIHNsaWNlLml4O1xyXG4gICAgICAgICAgICAgICAgeTEgPSB5MCArIHIgKiBzbGljZS5peTtcclxuICAgICAgICAgICAgICAgIHgyID0geDE7XHJcbiAgICAgICAgICAgICAgICB5MiA9IHkxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5hdHRyKHsgXCJwb2ludHNcIjogW3gwLCB5MCwgeDEsIHkxLCB4MiwgeTJdIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUGllVGljay5wcm90b3R5cGUsIFwic2xpY2VcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gU2xpY2VcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NsaWNlLmdldCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU2xpY2UgZWxlbWVudCB0aWNrIGlzIGF0dGFjaGVkIHRvLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHNsaWNlICBTbGljZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHNsaWNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NsaWNlLnNldChzbGljZSwgbmV3IE11bHRpRGlzcG9zZXIoW1xyXG4gICAgICAgICAgICAgICAgc2xpY2UuZXZlbnRzLm9uKFwidHJhbnNmb3JtZWRcIiwgdGhpcy5pbnZhbGlkYXRlLCB0aGlzKSxcclxuICAgICAgICAgICAgICAgIHNsaWNlLmV2ZW50cy5vbihcInZhbGlkYXRlZFwiLCB0aGlzLmludmFsaWRhdGUsIHRoaXMpXHJcbiAgICAgICAgICAgIF0pKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShQaWVUaWNrLnByb3RvdHlwZSwgXCJsYWJlbFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBMYWJlbFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGFiZWwuZ2V0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBMYWJlbCBlbGVtZW50IHRpY2sgaXMgYXR0YWNoZWQgdG8uXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gbGFiZWwgIExhYmVsXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAobGFiZWwpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGFiZWwuc2V0KGxhYmVsLCBsYWJlbC5ldmVudHMub24oXCJ0cmFuc2Zvcm1lZFwiLCB0aGlzLmludmFsaWRhdGUsIHRoaXMsIGZhbHNlKSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gUGllVGljaztcclxufShUaWNrKSk7XHJcbmV4cG9ydCB7IFBpZVRpY2sgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiUGllVGlja1wiXSA9IFBpZVRpY2s7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBpZVRpY2suanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js ***!
  \***********************************************************************************/
/*! exports provided: RadarColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarColumn\", function() { return RadarColumn; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony import */ var _core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Slice */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar RadarColumn = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.createAssets = function () {\r\n        this.radarColumn = this.createChild(_core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__[\"Slice\"]);\r\n        this.radarColumn.shouldClone = false;\r\n        this.radarColumn.strokeOpacity = undefined;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.radarColumn;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[RadarColumn]].\r\n     *\r\n     * @param source Source RadarColumn\r\n     */\r\n    RadarColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.radarColumn) {\r\n            this.radarColumn.copyFrom(source.radarColumn);\r\n        }\r\n    };\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @return X\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.getTooltipX = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](value)) {\r\n            return this.radarColumn.getTooltipX();\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @return Y\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.getTooltipY = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](value)) {\r\n            return this.radarColumn.getTooltipY();\r\n        }\r\n        return value;\r\n    };\r\n    return RadarColumn;\r\n}(_Column__WEBPACK_IMPORTED_MODULE_1__[\"Column\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"RadarColumn\"] = RadarColumn;\r\n//# sourceMappingURL=RadarColumn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL1JhZGFyQ29sdW1uLmpzPzliNDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDZ0I7QUFDSDtBQUNBO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUJBQXlCO0FBQ2xDLFNBQVMsMkJBQTJCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywwREFBSztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEseURBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyw4Q0FBTTtBQUNlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL1JhZGFyQ29sdW1uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSB0aGF0IGRlZmluZXMgZXZlcnl0aGluZyByZWxhdGVkIHRvIGJ1aWxkaW5nIFJhZGFyQ29sdW1ucy5cclxuICogSXQgaXMgYSBjb250YWluZXIgd2hpY2ggaGFzIHJhZGFyQ29sdW1uIGVsZW1lbnQgd2hpY2ggaXMgYSBTbGljZS5cclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQ29sdW1uIH0gZnJvbSBcIi4vQ29sdW1uXCI7XHJcbmltcG9ydCB7IFNsaWNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvZWxlbWVudHMvU2xpY2VcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ2xhc3MgdXNlZCB0byBjcmVhdGVzIFJhZGFyQ29sdW1ucy5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSVJhZGFyQ29sdW1uRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSVJhZGFyQ29sdW1uQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEB0b2RvIFVzYWdlIGV4YW1wbGVcclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIFJhZGFyQ29sdW1uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKFJhZGFyQ29sdW1uLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBSYWRhckNvbHVtbigpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiUmFkYXJDb2x1bW5cIjtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgUmFkYXJDb2x1bW4ucHJvdG90eXBlLmNyZWF0ZUFzc2V0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLnJhZGFyQ29sdW1uID0gdGhpcy5jcmVhdGVDaGlsZChTbGljZSk7XHJcbiAgICAgICAgdGhpcy5yYWRhckNvbHVtbi5zaG91bGRDbG9uZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucmFkYXJDb2x1bW4uc3Ryb2tlT3BhY2l0eSA9IHVuZGVmaW5lZDtcclxuICAgICAgICAvLyBzb21lIGRpcnR5IGhhY2sgc28gdGhhdCBpZiB1c2VyIGFjY2VzcyBjb2x1bW4sIGl0IHdvbid0IGdldCBlcnJvclxyXG4gICAgICAgIHRoaXMuY29sdW1uID0gdGhpcy5yYWRhckNvbHVtbjtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENvcGllcyBhbGwgcGFyYW1ldGVycyBmcm9tIGFub3RoZXIgW1tSYWRhckNvbHVtbl1dLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzb3VyY2UgU291cmNlIFJhZGFyQ29sdW1uXHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ29sdW1uLnByb3RvdHlwZS5jb3B5RnJvbSA9IGZ1bmN0aW9uIChzb3VyY2UpIHtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmNvcHlGcm9tLmNhbGwodGhpcywgc291cmNlKTtcclxuICAgICAgICBpZiAodGhpcy5yYWRhckNvbHVtbikge1xyXG4gICAgICAgICAgICB0aGlzLnJhZGFyQ29sdW1uLmNvcHlGcm9tKHNvdXJjZS5yYWRhckNvbHVtbik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogWCBjb29yZGluYXRlIGZvciB0aGUgc2xpY2UgdG9vbHRpcC5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJuIFhcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgUmFkYXJDb2x1bW4ucHJvdG90eXBlLmdldFRvb2x0aXBYID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcInRvb2x0aXBYXCIpO1xyXG4gICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIodmFsdWUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJhZGFyQ29sdW1uLmdldFRvb2x0aXBYKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFkgY29vcmRpbmF0ZSBmb3IgdGhlIHNsaWNlIHRvb2x0aXAuXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybiBZXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIFJhZGFyQ29sdW1uLnByb3RvdHlwZS5nZXRUb29sdGlwWSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJ0b29sdGlwWFwiKTtcclxuICAgICAgICBpZiAoISR0eXBlLmlzTnVtYmVyKHZhbHVlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yYWRhckNvbHVtbi5nZXRUb29sdGlwWSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFJhZGFyQ29sdW1uO1xyXG59KENvbHVtbikpO1xyXG5leHBvcnQgeyBSYWRhckNvbHVtbiB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJSYWRhckNvbHVtblwiXSA9IFJhZGFyQ29sdW1uO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SYWRhckNvbHVtbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js ***!
  \**********************************************************************************/
/*! exports provided: SankeyLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SankeyLink\", function() { return SankeyLink; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Polyspline */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * SankeyLink module\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SankeyLink = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(SankeyLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SankeyLink\";\r\n        // TODO can this be removed ?\r\n        new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__[\"InterfaceColorSet\"]();\r\n        _this.tension = 0.8;\r\n        _this.controlPointDistance = 0.2;\r\n        _this.startAngle = 0;\r\n        _this.endAngle = 0;\r\n        _this.linkWidth = 0;\r\n        _this.startX = 0;\r\n        _this.endX = 0;\r\n        _this.startY = 0;\r\n        _this.endY = 0;\r\n        _this.middleLine = _this.createChild(_core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_3__[\"Polyspline\"]);\r\n        _this.middleLine.shouldClone = false;\r\n        _this.middleLine.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates (redraws) the link.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (!this.isTemplate) {\r\n            var x0 = this.startX;\r\n            var y0 = this.startY;\r\n            var x1 = this.endX;\r\n            var y1 = this.endY;\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](x1)) {\r\n                x1 = x0;\r\n            }\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](y1)) {\r\n                y1 = y0;\r\n            }\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var w = this.linkWidth;\r\n            var path = \"\";\r\n            var xt0 = x0;\r\n            var yt0 = y0;\r\n            var xt1 = x1;\r\n            var yt1 = y1;\r\n            var xb0 = x0 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n            var xb1 = x1 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle);\r\n            var yb0 = y0 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n            var yb1 = y1 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle);\r\n            var xm0 = x0 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n            var xm1 = x1 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle);\r\n            var ym0 = y0 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n            var ym1 = y1 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle);\r\n            this.zIndex = this.zIndex || this.dataItem.index;\r\n            var tensionX = this.tension + (1 - this.tension) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n            var tensionY = this.tension + (1 - this.tension) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n            this.middleLine.tensionX = tensionX;\r\n            this.middleLine.tensionY = tensionY;\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](w) && (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](x0) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](x1) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](y0) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](y1))) {\r\n                // solves issues with gradient fill of straight lines\r\n                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](xt0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](xt1, 3)) {\r\n                    xt1 += 0.01;\r\n                }\r\n                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](yt0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](yt1, 3)) {\r\n                    yt1 += 0.01;\r\n                }\r\n                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](xb0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](xb1, 3)) {\r\n                    xb1 += 0.01;\r\n                }\r\n                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](yb0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"round\"](yb1, 3)) {\r\n                    yb1 += 0.01;\r\n                }\r\n                var minX = Math.min(xb0, xb1, xt0, xt1);\r\n                var minY = Math.min(yb0, yb1, yt0, yt1);\r\n                var maxX = Math.max(xb0, xb1, xt0, xt1);\r\n                var maxY = Math.max(yb0, yb1, yt0, yt1);\r\n                this._bbox = {\r\n                    x: minX,\r\n                    y: minY,\r\n                    width: maxX - minX,\r\n                    height: maxY - minY\r\n                };\r\n                var cpd = this.controlPointDistance;\r\n                var kxt0 = xt0 + (xt1 - xt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n                var kyt0 = yt0 + (yt1 - yt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n                var kxt1 = xt1 - (xt1 - xt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle);\r\n                var kyt1 = yt1 - (yt1 - yt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle);\r\n                var kxm0 = xm0 + (xm1 - xm0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n                var kym0 = ym0 + (ym1 - ym0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n                var kxm1 = xm1 - (xm1 - xm0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle);\r\n                var kym1 = ym1 - (ym1 - ym0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle);\r\n                var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"getAngle\"]({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\r\n                var dx = (w / _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](angle) - w) / _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"tan\"](angle) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n                var dy = (w / _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](angle) - w) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"tan\"](angle) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n                var kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](startAngle);\r\n                var kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](startAngle);\r\n                var kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"cos\"](endAngle);\r\n                var kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__[\"sin\"](endAngle);\r\n                this.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];\r\n                kxt0 += dx / 2;\r\n                kyt0 += dy / 2;\r\n                kxt1 += dx / 2;\r\n                kyt1 += dy / 2;\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"moveTo\"]({ x: xt0, y: yt0 });\r\n                path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_7__[\"Tension\"](tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"lineTo\"]({ x: xb1, y: yb1 });\r\n                path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_7__[\"Tension\"](tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__[\"closePath\"]();\r\n            }\r\n            this.link.path = path;\r\n            if (this.maskBullets) {\r\n                this.bulletsMask.path = path;\r\n                this.bulletsContainer.mask = this.bulletsMask;\r\n            }\r\n            this.positionBullets();\r\n        }\r\n    };\r\n    Object.defineProperty(SankeyLink.prototype, \"startX\", {\r\n        /**\r\n         * @return Start X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startX\");\r\n        },\r\n        /**\r\n         * [startX description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"endX\", {\r\n        /**\r\n         * @return End X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endX\");\r\n        },\r\n        /**\r\n         * [endX description]\r\n         *\r\n         * @todo Description\r\n         * @param value  End X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"startY\", {\r\n        /**\r\n         * @return Start Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startY\");\r\n        },\r\n        /**\r\n         * [startY description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"endY\", {\r\n        /**\r\n         * @return End Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endY\");\r\n        },\r\n        /**\r\n         * [endY description]\r\n         *\r\n         * @todo Description\r\n         * @param value End Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"linkWidth\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"linkWidth\");\r\n        },\r\n        /**\r\n         * [linkWidth description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"linkWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"controlPointDistance\", {\r\n        /**\r\n         * @return relative control point distance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointDistance\");\r\n        },\r\n        /**\r\n         * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n         * @default 0.2\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"tension\", {\r\n        /**\r\n         * @return tension value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tension\");\r\n        },\r\n        /**\r\n         * Tension of a spline, 1 would make the link to have sharp edges\r\n         * @default 0.8\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tension\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SankeyLink;\r\n}(_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagramLink\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"SankeyLink\"] = SankeyLink;\r\n//# sourceMappingURL=SankeyLink.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL2VsZW1lbnRzL1NhbmtleUxpbmsuanM/NTcxMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ2tDO0FBQ2tCO0FBQ0w7QUFDYTtBQUNXO0FBQ3hCO0FBQ0E7QUFDYztBQUNWO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx3QkFBd0I7QUFDakMsU0FBUywwQkFBMEI7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrRUFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLG9FQUFVO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseURBQWM7QUFDL0I7QUFDQTtBQUNBLGlCQUFpQix5REFBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixvREFBUztBQUN4QywrQkFBK0Isb0RBQVM7QUFDeEMsK0JBQStCLG9EQUFTO0FBQ3hDLCtCQUErQixvREFBUztBQUN4QyxtQ0FBbUMsb0RBQVM7QUFDNUMsbUNBQW1DLG9EQUFTO0FBQzVDLG1DQUFtQyxvREFBUztBQUM1QyxtQ0FBbUMsb0RBQVM7QUFDNUM7QUFDQSwrREFBK0Qsb0RBQVM7QUFDeEUsK0RBQStELG9EQUFTO0FBQ3hFO0FBQ0E7QUFDQSxnQkFBZ0IseURBQWMsUUFBUSx5REFBYyxRQUFRLHlEQUFjLFFBQVEseURBQWMsUUFBUSx5REFBYztBQUN0SDtBQUNBLG9CQUFvQixzREFBVyxZQUFZLHNEQUFXO0FBQ3REO0FBQ0E7QUFDQSxvQkFBb0Isc0RBQVcsWUFBWSxzREFBVztBQUN0RDtBQUNBO0FBQ0Esb0JBQW9CLHNEQUFXLFlBQVksc0RBQVc7QUFDdEQ7QUFDQTtBQUNBLG9CQUFvQixzREFBVyxZQUFZLHNEQUFXO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELG9EQUFTO0FBQzlELHFEQUFxRCxvREFBUztBQUM5RCxxREFBcUQsb0RBQVM7QUFDOUQscURBQXFELG9EQUFTO0FBQzlELHFEQUFxRCxvREFBUztBQUM5RCxxREFBcUQsb0RBQVM7QUFDOUQscURBQXFELG9EQUFTO0FBQzlELHFEQUFxRCxvREFBUztBQUM5RCw0QkFBNEIseURBQWMsRUFBRSxtQkFBbUIsR0FBRyxtQkFBbUI7QUFDckYsOEJBQThCLG9EQUFTLGVBQWUsb0RBQVMsVUFBVSxvREFBUztBQUNsRiw4QkFBOEIsb0RBQVMsZUFBZSxvREFBUyxVQUFVLG9EQUFTO0FBQ2xGLCtEQUErRCxvREFBUztBQUN4RSwrREFBK0Qsb0RBQVM7QUFDeEUsK0RBQStELG9EQUFTO0FBQ3hFLCtEQUErRCxvREFBUztBQUN4RSw4Q0FBOEMsaUJBQWlCLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsaUJBQWlCO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFZLEVBQUUsaUJBQWlCO0FBQ3ZELDRCQUE0QixpRUFBa0IsOEJBQThCLGlCQUFpQixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQixHQUFHLGlCQUFpQjtBQUM3Six3QkFBd0IsMkRBQVksRUFBRSxpQkFBaUI7QUFDdkQsNEJBQTRCLGlFQUFrQiw4QkFBOEIsaUJBQWlCLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsaUJBQWlCO0FBQzdKLHdCQUF3Qiw4REFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDLENBQUMsZ0VBQWU7QUFDSztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9lbGVtZW50cy9TYW5rZXlMaW5rLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFNhbmtleUxpbmsgbW9kdWxlXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgRmxvd0RpYWdyYW1MaW5rIH0gZnJvbSBcIi4vRmxvd0RpYWdyYW1MaW5rXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuaW1wb3J0IHsgUG9seXNwbGluZSB9IGZyb20gXCIuLi8uLi9jb3JlL2VsZW1lbnRzL1BvbHlzcGxpbmVcIjtcclxuaW1wb3J0IHsgSW50ZXJmYWNlQ29sb3JTZXQgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9JbnRlcmZhY2VDb2xvclNldFwiO1xyXG5pbXBvcnQgKiBhcyAkbWF0aCBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9NYXRoXCI7XHJcbmltcG9ydCAqIGFzICR0eXBlIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1R5cGVcIjtcclxuaW1wb3J0ICogYXMgJHNtb290aGluZyBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXJpbmcvU21vb3RoaW5nXCI7XHJcbmltcG9ydCAqIGFzICRwYXRoIGZyb20gXCIuLi8uLi9jb3JlL3JlbmRlcmluZy9QYXRoXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogVGhpcyBjbGFzcyBjcmVhdGVzIGEgbGluayAod2F2ZWQgY29sb3ItZmlsbGVkIGxpbmUpIGJldHdlZW4gdHdvIG5vZGVzIGluIGFcclxuICogU2Fua2V5IERpYWdyYW0uXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElTYW5rZXlMaW5rRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSVNhbmtleUxpbmtBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIFNhbmtleUxpbmsgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoU2Fua2V5TGluaywgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gU2Fua2V5TGluaygpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiU2Fua2V5TGlua1wiO1xyXG4gICAgICAgIC8vIFRPRE8gY2FuIHRoaXMgYmUgcmVtb3ZlZCA/XHJcbiAgICAgICAgbmV3IEludGVyZmFjZUNvbG9yU2V0KCk7XHJcbiAgICAgICAgX3RoaXMudGVuc2lvbiA9IDAuODtcclxuICAgICAgICBfdGhpcy5jb250cm9sUG9pbnREaXN0YW5jZSA9IDAuMjtcclxuICAgICAgICBfdGhpcy5zdGFydEFuZ2xlID0gMDtcclxuICAgICAgICBfdGhpcy5lbmRBbmdsZSA9IDA7XHJcbiAgICAgICAgX3RoaXMubGlua1dpZHRoID0gMDtcclxuICAgICAgICBfdGhpcy5zdGFydFggPSAwO1xyXG4gICAgICAgIF90aGlzLmVuZFggPSAwO1xyXG4gICAgICAgIF90aGlzLnN0YXJ0WSA9IDA7XHJcbiAgICAgICAgX3RoaXMuZW5kWSA9IDA7XHJcbiAgICAgICAgX3RoaXMubWlkZGxlTGluZSA9IF90aGlzLmNyZWF0ZUNoaWxkKFBvbHlzcGxpbmUpO1xyXG4gICAgICAgIF90aGlzLm1pZGRsZUxpbmUuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBfdGhpcy5taWRkbGVMaW5lLnN0cm9rZU9wYWNpdHkgPSAwO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIChSZSl2YWxpZGF0ZXMgKHJlZHJhd3MpIHRoZSBsaW5rLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqL1xyXG4gICAgU2Fua2V5TGluay5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMpO1xyXG4gICAgICAgIGlmICghdGhpcy5pc1RlbXBsYXRlKSB7XHJcbiAgICAgICAgICAgIHZhciB4MCA9IHRoaXMuc3RhcnRYO1xyXG4gICAgICAgICAgICB2YXIgeTAgPSB0aGlzLnN0YXJ0WTtcclxuICAgICAgICAgICAgdmFyIHgxID0gdGhpcy5lbmRYO1xyXG4gICAgICAgICAgICB2YXIgeTEgPSB0aGlzLmVuZFk7XHJcbiAgICAgICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIoeDEpKSB7XHJcbiAgICAgICAgICAgICAgICB4MSA9IHgwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIoeTEpKSB7XHJcbiAgICAgICAgICAgICAgICB5MSA9IHkwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBzdGFydEFuZ2xlID0gdGhpcy5zdGFydEFuZ2xlO1xyXG4gICAgICAgICAgICB2YXIgZW5kQW5nbGUgPSB0aGlzLmVuZEFuZ2xlO1xyXG4gICAgICAgICAgICB2YXIgdyA9IHRoaXMubGlua1dpZHRoO1xyXG4gICAgICAgICAgICB2YXIgcGF0aCA9IFwiXCI7XHJcbiAgICAgICAgICAgIHZhciB4dDAgPSB4MDtcclxuICAgICAgICAgICAgdmFyIHl0MCA9IHkwO1xyXG4gICAgICAgICAgICB2YXIgeHQxID0geDE7XHJcbiAgICAgICAgICAgIHZhciB5dDEgPSB5MTtcclxuICAgICAgICAgICAgdmFyIHhiMCA9IHgwICsgdyAqICRtYXRoLnNpbihzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgdmFyIHhiMSA9IHgxICsgdyAqICRtYXRoLnNpbihlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgIHZhciB5YjAgPSB5MCArIHcgKiAkbWF0aC5jb3Moc3RhcnRBbmdsZSk7XHJcbiAgICAgICAgICAgIHZhciB5YjEgPSB5MSArIHcgKiAkbWF0aC5jb3MoZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICB2YXIgeG0wID0geDAgKyB3IC8gMiAqICRtYXRoLnNpbihzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgdmFyIHhtMSA9IHgxICsgdyAvIDIgKiAkbWF0aC5zaW4oZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICB2YXIgeW0wID0geTAgKyB3IC8gMiAqICRtYXRoLmNvcyhzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgdmFyIHltMSA9IHkxICsgdyAvIDIgKiAkbWF0aC5jb3MoZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICB0aGlzLnpJbmRleCA9IHRoaXMuekluZGV4IHx8IHRoaXMuZGF0YUl0ZW0uaW5kZXg7XHJcbiAgICAgICAgICAgIHZhciB0ZW5zaW9uWCA9IHRoaXMudGVuc2lvbiArICgxIC0gdGhpcy50ZW5zaW9uKSAqICRtYXRoLnNpbihzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgdmFyIHRlbnNpb25ZID0gdGhpcy50ZW5zaW9uICsgKDEgLSB0aGlzLnRlbnNpb24pICogJG1hdGguY29zKHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgICAgICB0aGlzLm1pZGRsZUxpbmUudGVuc2lvblggPSB0ZW5zaW9uWDtcclxuICAgICAgICAgICAgdGhpcy5taWRkbGVMaW5lLnRlbnNpb25ZID0gdGVuc2lvblk7XHJcbiAgICAgICAgICAgIGlmICgkdHlwZS5pc051bWJlcih3KSAmJiAoJHR5cGUuaXNOdW1iZXIoeDApICYmICR0eXBlLmlzTnVtYmVyKHgxKSAmJiAkdHlwZS5pc051bWJlcih5MCkgJiYgJHR5cGUuaXNOdW1iZXIoeTEpKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gc29sdmVzIGlzc3VlcyB3aXRoIGdyYWRpZW50IGZpbGwgb2Ygc3RyYWlnaHQgbGluZXNcclxuICAgICAgICAgICAgICAgIGlmICgkbWF0aC5yb3VuZCh4dDAsIDMpID09ICRtYXRoLnJvdW5kKHh0MSwgMykpIHtcclxuICAgICAgICAgICAgICAgICAgICB4dDEgKz0gMC4wMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgkbWF0aC5yb3VuZCh5dDAsIDMpID09ICRtYXRoLnJvdW5kKHl0MSwgMykpIHtcclxuICAgICAgICAgICAgICAgICAgICB5dDEgKz0gMC4wMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgkbWF0aC5yb3VuZCh4YjAsIDMpID09ICRtYXRoLnJvdW5kKHhiMSwgMykpIHtcclxuICAgICAgICAgICAgICAgICAgICB4YjEgKz0gMC4wMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgkbWF0aC5yb3VuZCh5YjAsIDMpID09ICRtYXRoLnJvdW5kKHliMSwgMykpIHtcclxuICAgICAgICAgICAgICAgICAgICB5YjEgKz0gMC4wMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBtaW5YID0gTWF0aC5taW4oeGIwLCB4YjEsIHh0MCwgeHQxKTtcclxuICAgICAgICAgICAgICAgIHZhciBtaW5ZID0gTWF0aC5taW4oeWIwLCB5YjEsIHl0MCwgeXQxKTtcclxuICAgICAgICAgICAgICAgIHZhciBtYXhYID0gTWF0aC5tYXgoeGIwLCB4YjEsIHh0MCwgeHQxKTtcclxuICAgICAgICAgICAgICAgIHZhciBtYXhZID0gTWF0aC5tYXgoeWIwLCB5YjEsIHl0MCwgeXQxKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Jib3ggPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeDogbWluWCxcclxuICAgICAgICAgICAgICAgICAgICB5OiBtaW5ZLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBtYXhYIC0gbWluWCxcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IG1heFkgLSBtaW5ZXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdmFyIGNwZCA9IHRoaXMuY29udHJvbFBvaW50RGlzdGFuY2U7XHJcbiAgICAgICAgICAgICAgICB2YXIga3h0MCA9IHh0MCArICh4dDEgLSB4dDApICogY3BkICogJG1hdGguY29zKHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGt5dDAgPSB5dDAgKyAoeXQxIC0geXQwKSAqIGNwZCAqICRtYXRoLnNpbihzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHZhciBreHQxID0geHQxIC0gKHh0MSAtIHh0MCkgKiBjcGQgKiAkbWF0aC5jb3MoZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGt5dDEgPSB5dDEgLSAoeXQxIC0geXQwKSAqIGNwZCAqICRtYXRoLnNpbihlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgICAgICB2YXIga3htMCA9IHhtMCArICh4bTEgLSB4bTApICogY3BkICogJG1hdGguY29zKHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGt5bTAgPSB5bTAgKyAoeW0xIC0geW0wKSAqIGNwZCAqICRtYXRoLnNpbihzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHZhciBreG0xID0geG0xIC0gKHhtMSAtIHhtMCkgKiBjcGQgKiAkbWF0aC5jb3MoZW5kQW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGt5bTEgPSB5bTEgLSAoeW0xIC0geW0wKSAqIGNwZCAqICRtYXRoLnNpbihlbmRBbmdsZSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYW5nbGUgPSAkbWF0aC5nZXRBbmdsZSh7IHg6IGt4dDAsIHk6IGt5dDAgfSwgeyB4OiBreHQxLCB5OiBreXQxIH0pO1xyXG4gICAgICAgICAgICAgICAgdmFyIGR4ID0gKHcgLyAkbWF0aC5jb3MoYW5nbGUpIC0gdykgLyAkbWF0aC50YW4oYW5nbGUpICogJG1hdGguY29zKHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGR5ID0gKHcgLyAkbWF0aC5zaW4oYW5nbGUpIC0gdykgKiAkbWF0aC50YW4oYW5nbGUpICogJG1hdGguc2luKHN0YXJ0QW5nbGUpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGt4YjAgPSAtZHggLyAyICsgeGIwICsgKHhiMSAtIHhiMCkgKiBjcGQgKiAkbWF0aC5jb3Moc3RhcnRBbmdsZSk7XHJcbiAgICAgICAgICAgICAgICB2YXIga3liMCA9IC1keSAvIDIgKyB5YjAgKyAoeWIxIC0geWIwKSAqIGNwZCAqICRtYXRoLnNpbihzdGFydEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHZhciBreGIxID0gLWR4IC8gMiArIHhiMSAtICh4YjEgLSB4YjApICogY3BkICogJG1hdGguY29zKGVuZEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHZhciBreWIxID0gLWR5IC8gMiArIHliMSAtICh5YjEgLSB5YjApICogY3BkICogJG1hdGguc2luKGVuZEFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubWlkZGxlTGluZS5zZWdtZW50cyA9IFtbeyB4OiB4bTAsIHk6IHltMCB9LCB7IHg6IGt4bTAsIHk6IGt5bTAgfSwgeyB4OiBreG0xLCB5OiBreW0xIH0sIHsgeDogeG0xLCB5OiB5bTEgfV1dO1xyXG4gICAgICAgICAgICAgICAga3h0MCArPSBkeCAvIDI7XHJcbiAgICAgICAgICAgICAgICBreXQwICs9IGR5IC8gMjtcclxuICAgICAgICAgICAgICAgIGt4dDEgKz0gZHggLyAyO1xyXG4gICAgICAgICAgICAgICAga3l0MSArPSBkeSAvIDI7XHJcbiAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLm1vdmVUbyh7IHg6IHh0MCwgeTogeXQwIH0pO1xyXG4gICAgICAgICAgICAgICAgcGF0aCArPSBuZXcgJHNtb290aGluZy5UZW5zaW9uKHRlbnNpb25YLCB0ZW5zaW9uWSkuc21vb3RoKFt7IHg6IHh0MCwgeTogeXQwIH0sIHsgeDoga3h0MCwgeToga3l0MCB9LCB7IHg6IGt4dDEsIHk6IGt5dDEgfSwgeyB4OiB4dDEsIHk6IHl0MSB9XSk7XHJcbiAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmxpbmVUbyh7IHg6IHhiMSwgeTogeWIxIH0pO1xyXG4gICAgICAgICAgICAgICAgcGF0aCArPSBuZXcgJHNtb290aGluZy5UZW5zaW9uKHRlbnNpb25YLCB0ZW5zaW9uWSkuc21vb3RoKFt7IHg6IHhiMSwgeTogeWIxIH0sIHsgeDoga3hiMSwgeToga3liMSB9LCB7IHg6IGt4YjAsIHk6IGt5YjAgfSwgeyB4OiB4YjAsIHk6IHliMCB9XSk7XHJcbiAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmNsb3NlUGF0aCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubGluay5wYXRoID0gcGF0aDtcclxuICAgICAgICAgICAgaWYgKHRoaXMubWFza0J1bGxldHMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0c01hc2sucGF0aCA9IHBhdGg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ1bGxldHNDb250YWluZXIubWFzayA9IHRoaXMuYnVsbGV0c01hc2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkJ1bGxldHMoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNhbmtleUxpbmsucHJvdG90eXBlLCBcInN0YXJ0WFwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBTdGFydCBYXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJzdGFydFhcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBbc3RhcnRYIGRlc2NyaXB0aW9uXVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgIFN0YXJ0IFhcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJzdGFydFhcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNhbmtleUxpbmsucHJvdG90eXBlLCBcImVuZFhcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gRW5kIFhcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImVuZFhcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBbZW5kWCBkZXNjcmlwdGlvbl1cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEB0b2RvIERlc2NyaXB0aW9uXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBFbmQgWFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImVuZFhcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNhbmtleUxpbmsucHJvdG90eXBlLCBcInN0YXJ0WVwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBTdGFydCBZXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJzdGFydFlcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBbc3RhcnRZIGRlc2NyaXB0aW9uXVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHRvZG8gRGVzY3JpcHRpb25cclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgIFN0YXJ0IFlcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJzdGFydFlcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNhbmtleUxpbmsucHJvdG90eXBlLCBcImVuZFlcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gRW5kIFlcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImVuZFlcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBbZW5kWSBkZXNjcmlwdGlvbl1cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEB0b2RvIERlc2NyaXB0aW9uXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIEVuZCBZXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiZW5kWVwiLCB2YWx1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2Fua2V5TGluay5wcm90b3R5cGUsIFwibGlua1dpZHRoXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIFtkZXNjcmlwdGlvbl1cclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImxpbmtXaWR0aFwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFtsaW5rV2lkdGggZGVzY3JpcHRpb25dXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAdG9kbyBEZXNjcmlwdGlvblxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSBbZGVzY3JpcHRpb25dXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwibGlua1dpZHRoXCIsIHZhbHVlLCB0cnVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTYW5rZXlMaW5rLnByb3RvdHlwZSwgXCJjb250cm9sUG9pbnREaXN0YW5jZVwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiByZWxhdGl2ZSBjb250cm9sIHBvaW50IGRpc3RhbmNlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJjb250cm9sUG9pbnREaXN0YW5jZVwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIERpc3RhbmNlIG9mIGNvbnRyb2wgcG9pbnQgb2YgYSBsaW5rLCBkZWZpbmVzIHJlbGF0aXZlIGRpc3RhbmNlIGZyb20gYSBub2RlIGF0IHdoaWNoIGxpbmtlIHNob3VsZCBiZW5kXHJcbiAgICAgICAgICogQGRlZmF1bHQgMC4yXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiY29udHJvbFBvaW50RGlzdGFuY2VcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNhbmtleUxpbmsucHJvdG90eXBlLCBcInRlbnNpb25cIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gdGVuc2lvbiB2YWx1ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwidGVuc2lvblwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRlbnNpb24gb2YgYSBzcGxpbmUsIDEgd291bGQgbWFrZSB0aGUgbGluayB0byBoYXZlIHNoYXJwIGVkZ2VzXHJcbiAgICAgICAgICogQGRlZmF1bHQgMC44XHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwidGVuc2lvblwiLCB2YWx1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gU2Fua2V5TGluaztcclxufShGbG93RGlhZ3JhbUxpbmspKTtcclxuZXhwb3J0IHsgU2Fua2V5TGluayB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJTYW5rZXlMaW5rXCJdID0gU2Fua2V5TGluaztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2Fua2V5TGluay5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js ***!
  \**********************************************************************************/
/*! exports provided: SankeyNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SankeyNode\", function() { return SankeyNode; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js\");\n/* harmony import */ var _LabelBullet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LabelBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/**\r\n * SankeyNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a node in a Sankey Diagram.\r\n *\r\n * A Sankey node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[SankeyLink]] elements.\r\n *\r\n * @see {@link ISankeyNodeEvents} for a list of available events\r\n * @see {@link ISankeyNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SankeyNode = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(SankeyNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyNode() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * [nextInCoord description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.nextInCoord = 0;\r\n        /**\r\n         * [nextOutCoord description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.nextOutCoord = 0;\r\n        _this.className = \"SankeyNode\";\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        var nameLabel = _this.createChild(_LabelBullet__WEBPACK_IMPORTED_MODULE_2__[\"LabelBullet\"]);\r\n        nameLabel.shouldClone = false;\r\n        //@should we auto update these locations if position is changed?\r\n        nameLabel.locationX = 1;\r\n        nameLabel.locationY = 0.5;\r\n        nameLabel.label.text = \"{name}\";\r\n        //nameLabel.label.textElement.hideOversized = false;\r\n        nameLabel.width = 150;\r\n        nameLabel.height = 150;\r\n        nameLabel.label.horizontalCenter = \"left\";\r\n        nameLabel.label.padding(0, 5, 0, 5);\r\n        _this.nameLabel = nameLabel;\r\n        var valueLabel = _this.createChild(_LabelBullet__WEBPACK_IMPORTED_MODULE_2__[\"LabelBullet\"]);\r\n        valueLabel.shouldClone = false;\r\n        valueLabel.label.hideOversized = false;\r\n        valueLabel.locationX = 0.5;\r\n        valueLabel.locationY = 0.5;\r\n        valueLabel.width = 150;\r\n        valueLabel.height = 150;\r\n        //valueLabel.label.text = \"{value}\";\r\n        valueLabel.label.horizontalCenter = \"middle\";\r\n        _this.valueLabel = valueLabel;\r\n        var hiddenState = _this.hiddenState;\r\n        hiddenState.properties.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__[\"InterfaceColorSet\"]().getFor(\"disabledBackground\");\r\n        hiddenState.properties.opacity = 0.5;\r\n        hiddenState.properties.visible = true;\r\n        _this.background.hiddenState.copyFrom(hiddenState);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates all links, attached to this node.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyNode.prototype.invalidateLinks = function () {\r\n        var _this = this;\r\n        _super.prototype.invalidateLinks.call(this);\r\n        this.nextInCoord = 0;\r\n        this.nextOutCoord = 0;\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var orientation_1 = chart.orientation;\r\n            if (this._incomingSorted) {\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"](this._incomingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    var value = dataItem.getWorkingValue(\"value\");\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](value)) {\r\n                        link.parent = _this.chart.linksContainer;\r\n                        var x = void 0;\r\n                        var y = void 0;\r\n                        var angle = void 0;\r\n                        if (orientation_1 == \"horizontal\") {\r\n                            x = _this.pixelX + _this.dx;\r\n                            y = _this.nextInCoord + _this.pixelY + _this.dy;\r\n                            angle = 0;\r\n                        }\r\n                        else {\r\n                            y = _this.pixelY + _this.dy;\r\n                            x = _this.nextInCoord + _this.pixelX + _this.dx;\r\n                            angle = 90;\r\n                        }\r\n                        link.endX = x;\r\n                        link.endY = y;\r\n                        link.startAngle = angle;\r\n                        link.endAngle = angle;\r\n                        link.gradient.rotation = angle;\r\n                        link.linkWidth = value * chart.valueHeight;\r\n                        if (!dataItem.fromNode) {\r\n                            if (orientation_1 == \"horizontal\") {\r\n                                link.maxWidth = 200;\r\n                                link.startX = _this.pixelX + _this.dx - link.maxWidth;\r\n                                link.startY = link.endY;\r\n                            }\r\n                            else {\r\n                                link.maxHeight = 200;\r\n                                link.startX = link.endX;\r\n                                link.startY = _this.pixelY + _this.dy - link.maxHeight;\r\n                            }\r\n                            // TODO is this needed ?\r\n                            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__[\"used\"](link.gradient);\r\n                            link.fill = dataItem.toNode.color;\r\n                            var stop_1 = link.gradient.stops.getIndex(0);\r\n                            if (stop_1) {\r\n                                if (link.colorMode == \"gradient\") {\r\n                                    stop_1.color = _this.color;\r\n                                }\r\n                                stop_1.opacity = 0;\r\n                                link.fill = link.gradient;\r\n                                link.stroke = link.gradient;\r\n                                link.gradient.validate();\r\n                            }\r\n                        }\r\n                        //link.validate();\r\n                        _this.nextInCoord += link.linkWidth;\r\n                    }\r\n                });\r\n            }\r\n            if (this._outgoingSorted) {\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"](this._outgoingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    link.parent = _this.chart.linksContainer;\r\n                    var value = dataItem.getWorkingValue(\"value\");\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](value)) {\r\n                        var x = void 0;\r\n                        var y = void 0;\r\n                        var angle = void 0;\r\n                        if (orientation_1 == \"horizontal\") {\r\n                            angle = 0;\r\n                            x = _this.pixelX + _this.pixelWidth + _this.dx - 1;\r\n                            y = _this.nextOutCoord + _this.pixelY + _this.dy;\r\n                        }\r\n                        else {\r\n                            angle = 90;\r\n                            x = _this.nextOutCoord + _this.pixelX + _this.dx;\r\n                            y = _this.pixelY + _this.pixelHeight + _this.dy - 1;\r\n                        }\r\n                        link.startX = x;\r\n                        link.startY = y;\r\n                        link.startAngle = angle;\r\n                        link.endAngle = angle;\r\n                        link.gradient.rotation = angle;\r\n                        link.linkWidth = value * _this.chart.valueHeight;\r\n                        if (!dataItem.toNode) {\r\n                            if (orientation_1 == \"horizontal\") {\r\n                                link.maxWidth = 200;\r\n                                link.endX = _this.pixelX + link.maxWidth + _this.dx;\r\n                                link.endY = link.startY;\r\n                            }\r\n                            else {\r\n                                link.maxHeight = 200;\r\n                                link.endX = link.startX;\r\n                                link.endY = _this.pixelY + link.maxHeight + _this.dy;\r\n                            }\r\n                            link.opacity = _this.opacity;\r\n                            var stop_2 = link.gradient.stops.getIndex(1);\r\n                            if (stop_2) {\r\n                                if (link.colorMode == \"gradient\") {\r\n                                    stop_2.color = _this.color;\r\n                                }\r\n                                stop_2.opacity = 0;\r\n                                link.fill = link.gradient;\r\n                                link.stroke = link.gradient;\r\n                                link.gradient.validate();\r\n                            }\r\n                        }\r\n                        //link.validate();\r\n                        _this.nextOutCoord += link.linkWidth;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.positionBullet(this.nameLabel);\r\n        this.positionBullet(this.valueLabel);\r\n    };\r\n    /**\r\n     * Positions the bullet so it is centered within the node element.\r\n     *\r\n     * @param bullet  Target bullet\r\n     */\r\n    SankeyNode.prototype.positionBullet = function (bullet) {\r\n        if (bullet) {\r\n            bullet.x = this.measuredWidth * bullet.locationX;\r\n            bullet.y = this.measuredHeight * bullet.locationY;\r\n        }\r\n    };\r\n    Object.defineProperty(SankeyNode.prototype, \"level\", {\r\n        /**\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"level\");\r\n        },\r\n        /**\r\n         * A level node is displayed at. (0 - ...)\r\n         *\r\n         * Levels are measured from left to right.\r\n         *\r\n         * The nodes in the left-most column will have `level = 0`.\r\n         *\r\n         * Nodes in second column - `level = 1`, etc.\r\n         *\r\n         * @param value  Level\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"level\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties and labels from another [[SankeyNode]].\r\n     *\r\n     * @param source  Source node\r\n     */\r\n    SankeyNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.nameLabel.copyFrom(source.nameLabel);\r\n        this.valueLabel.copyFrom(source.valueLabel);\r\n    };\r\n    return SankeyNode;\r\n}(_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagramNode\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"SankeyNode\"] = SankeyNode;\r\n//# sourceMappingURL=SankeyNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js ***!
  \****************************************************************************************/
/*! exports provided: XYChartScrollbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYChartScrollbar\", function() { return XYChartScrollbar; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/elements/Scrollbar */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _types_XYChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../types/XYChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/DateAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/rendering/filters/DesaturateFilter */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DesaturateFilter.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/Options */ \"./node_modules/@amcharts/amcharts4/.internal/core/Options.js\");\n/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYChartScrollbar = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYChartScrollbar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChartScrollbar() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A chart element Scrollbar is for.\r\n         */\r\n        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__[\"MutableValueDisposer\"]();\r\n        _this.className = \"XYChartScrollbar\";\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__[\"InterfaceColorSet\"]();\r\n        _this.padding(0, 0, 0, 0);\r\n        var scrollbarChart = _this.createChild(_types_XYChart__WEBPACK_IMPORTED_MODULE_5__[\"XYChart\"]);\r\n        scrollbarChart.shouldClone = false;\r\n        scrollbarChart.margin(0, 0, 0, 0);\r\n        scrollbarChart.padding(0, 0, 0, 0);\r\n        scrollbarChart.interactionsEnabled = false;\r\n        _this._scrollbarChart = scrollbarChart;\r\n        if (!_core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__[\"isIE\"]()) {\r\n            var filter = new _core_rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_10__[\"DesaturateFilter\"]();\r\n            filter.filterUnits = \"userSpaceOnUse\";\r\n            scrollbarChart.plotContainer.filters.push(filter);\r\n        }\r\n        _this._disposers.push(_this._scrollbarChart);\r\n        _this.minHeight = 60;\r\n        _this.minWidth = 60;\r\n        var unselectedOverlay = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        unselectedOverlay.shouldClone = false;\r\n        unselectedOverlay.setElement(_this.paper.add(\"path\"));\r\n        unselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n        unselectedOverlay.fillOpacity = 0.8;\r\n        unselectedOverlay.interactionsEnabled = false;\r\n        unselectedOverlay.isMeasured = false;\r\n        unselectedOverlay.toBack();\r\n        _this._unselectedOverlay = unselectedOverlay;\r\n        _this._disposers.push(_this._unselectedOverlay);\r\n        scrollbarChart.toBack();\r\n        _this.background.cornerRadius(0, 0, 0, 0);\r\n        var thumbBackground = _this.thumb.background;\r\n        thumbBackground.cornerRadius(0, 0, 0, 0);\r\n        thumbBackground.fillOpacity = 0;\r\n        thumbBackground.fill = interfaceColors.getFor(\"background\");\r\n        var hoverState = thumbBackground.states.getKey(\"hover\");\r\n        if (hoverState) {\r\n            hoverState.properties.fillOpacity = 0.2;\r\n        }\r\n        var downState = thumbBackground.states.getKey(\"down\");\r\n        if (downState) {\r\n            downState.properties.fillOpacity = 0.4;\r\n        }\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\r\n        /**\r\n         * A list of series that are used to draw graph(s) on the scrollbar.\r\n         *\r\n         * @readonly\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"List\"]();\r\n                this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n                this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\r\n        var _this = this;\r\n        var sourceSeries = event.newValue;\r\n        if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n            return;\r\n        }\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.zoomOutButton.disabled = true;\r\n        this.chart = sourceSeries.chart;\r\n        // Ensure that scrollbar chart shares the same locale as parent chart\r\n        scrollbarChart.language.locale = this.chart.language.locale;\r\n        var addXAxis = true;\r\n        var addYAxis = true;\r\n        // check if we haven't added clone of x or y axis before\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](this.series.iterator(), function (series) {\r\n            if (series != sourceSeries) {\r\n                if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {\r\n                    addXAxis = false;\r\n                }\r\n                if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {\r\n                    addYAxis = false;\r\n                }\r\n            }\r\n        });\r\n        sourceSeries.events.on(\"beforedisposed\", function () {\r\n            _this.series.removeValue(sourceSeries);\r\n        });\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__[\"InterfaceColorSet\"]();\r\n        var series = sourceSeries.clone();\r\n        if (_core_Options__WEBPACK_IMPORTED_MODULE_17__[\"options\"].onlyShowOnViewport || _core_Options__WEBPACK_IMPORTED_MODULE_17__[\"options\"].queue) {\r\n            this.addDisposer(this.chart.events.on(\"removedfromqueue\", function () {\r\n                scrollbarChart.invalidateData();\r\n            }));\r\n        }\r\n        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__[\"isIE\"]()) {\r\n            series.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_16__[\"color\"])(\"#aaaaaa\");\r\n            series.fill = series.stroke;\r\n            series.propertyFields.fill = undefined;\r\n            series.propertyFields.stroke = undefined;\r\n        }\r\n        sourceSeries.scrollbarSeries = series;\r\n        if (addXAxis) {\r\n            var xAxis = sourceSeries.xAxis.clone();\r\n            scrollbarChart.xAxes.moveValue(xAxis);\r\n            xAxis.title.disabled = true;\r\n            xAxis.rangeChangeDuration = 0;\r\n            //xAxis.id = sourceSeries.uid;\r\n            var renderer = xAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.chart = scrollbarChart;\r\n            renderer.margin(0, 0, 0, 0);\r\n            xAxis.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_15__[\"percent\"])(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            xAxis.maxZoomCount = undefined;\r\n            xAxis.minZoomCount = undefined;\r\n            if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                var vAxis_1 = xAxis;\r\n                var sourceAxis = sourceSeries.xAxis;\r\n                vAxis_1.groupCount = sourceAxis.groupCount * 5;\r\n                vAxis_1.min = undefined;\r\n                vAxis_1.max = undefined;\r\n                this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_1.clonedFrom.minDefined)) {\r\n                        vAxis_1.min = vAxis_1.clonedFrom.minDefined;\r\n                    }\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_1.clonedFrom.maxDefined)) {\r\n                        vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            else if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                var vAxis_2 = xAxis;\r\n                vAxis_2.min = undefined;\r\n                vAxis_2.max = undefined;\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_2.clonedFrom.minDefined)) {\r\n                    vAxis_2.min = undefined;\r\n                }\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_2.clonedFrom.maxDefined)) {\r\n                    vAxis_2.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_2.clonedFrom.minDefined)) {\r\n                        vAxis_2.min = vAxis_2.clonedFrom.min;\r\n                    }\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_2.clonedFrom.maxDefined)) {\r\n                        vAxis_2.max = vAxis_2.clonedFrom.max;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            series.xAxis = xAxis;\r\n        }\r\n        else {\r\n            this.scrollbarChart.xAxes.each(function (xAxis) {\r\n                if (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n                    series.xAxis = xAxis;\r\n                }\r\n            });\r\n        }\r\n        if (addYAxis) {\r\n            var yAxis = sourceSeries.yAxis.clone();\r\n            scrollbarChart.yAxes.moveValue(yAxis);\r\n            yAxis.title.disabled = true;\r\n            yAxis.rangeChangeDuration = 0;\r\n            var renderer = yAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.chart = scrollbarChart;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.margin(0, 0, 0, 0);\r\n            yAxis.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_15__[\"percent\"])(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            series.yAxis = yAxis;\r\n            yAxis.maxZoomCount = undefined;\r\n            yAxis.minZoomCount = undefined;\r\n            if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                var vAxis_3 = yAxis;\r\n                vAxis_3.min = undefined;\r\n                vAxis_3.max = undefined;\r\n                var sourceAxis = sourceSeries.yAxis;\r\n                yAxis.groupCount = sourceAxis.groupCount * 5;\r\n                this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_3.clonedFrom.minDefined)) {\r\n                        vAxis_3.min = vAxis_3.clonedFrom.minDefined;\r\n                    }\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_3.clonedFrom.maxDefined)) {\r\n                        vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n            else if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                var vAxis_4 = yAxis;\r\n                vAxis_4.min = undefined;\r\n                vAxis_4.max = undefined;\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_4.clonedFrom.minDefined)) {\r\n                    vAxis_4.min = undefined;\r\n                }\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_4.clonedFrom.maxDefined)) {\r\n                    vAxis_4.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_4.clonedFrom.minDefined)) {\r\n                        vAxis_4.min = vAxis_4.clonedFrom.minDefined;\r\n                    }\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](vAxis_4.clonedFrom.maxDefined)) {\r\n                        vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            this.scrollbarChart.yAxes.each(function (yAxis) {\r\n                if (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n                    series.yAxis = yAxis;\r\n                }\r\n            });\r\n        }\r\n        series.rangeChangeDuration = 0;\r\n        series.interpolationDuration = 0;\r\n        series.defaultState.transitionDuration = 0;\r\n        series.showOnInit = false;\r\n        this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n        // data might be set drectly on series\r\n        this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\r\n            if (series.data != sourceSeries.data) { // data setter doesn't check this\r\n                series.data = sourceSeries.data;\r\n            }\r\n        }, undefined, false));\r\n        series.defaultState.properties.visible = true;\r\n        scrollbarChart.series.push(series);\r\n        this.updateByOrientation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChartScrollbar.prototype.updateByOrientation = function () {\r\n        var _this = this;\r\n        if (this._scrollbarChart) {\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](this._scrollbarChart.xAxes.iterator(), function (xAxis) {\r\n                var renderer = xAxis.renderer;\r\n                if (_this.orientation == \"vertical\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](this._scrollbarChart.yAxes.iterator(), function (yAxis) {\r\n                var renderer = yAxis.renderer;\r\n                if (_this.orientation == \"horizontal\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\r\n        var sourceSeries = event.oldValue;\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.series.each(function (series) {\r\n            if (series && series.clonedFrom == sourceSeries) {\r\n                scrollbarChart.series.removeValue(series);\r\n            }\r\n        });\r\n        if (scrollbarChart.series.length == 0) {\r\n            scrollbarChart.xAxes.clear();\r\n            scrollbarChart.yAxes.clear();\r\n        }\r\n        try {\r\n            sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n        }\r\n        catch (err) {\r\n        }\r\n    };\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\r\n        /**\r\n         * A chart element that is used to display graphs in the Scrollbar.\r\n         *\r\n         * This is not the same as `chart`. It's a totally independent instance of\r\n         * [[XYChart]] with separate config, series, etc.\r\n         *\r\n         * It can be configured just like any other [[XYChart]].\r\n         *\r\n         * @readonly\r\n         * @return Scrollbar's internal chart\r\n         */\r\n        get: function () {\r\n            return this._scrollbarChart;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart that Scrollbar belongs to.\r\n         *\r\n         * @param chart  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (this._chart.get() !== chart) {\r\n                this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n                this.handleDataChanged();\r\n                this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\r\n        /**\r\n         * A [[Sprite]] object representing overlay that is used to dim area of the\r\n         * scrollbar that is currently not selected.\r\n         *\r\n         * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n         * completely disabling the dimming, and `1` making unselected area completely\r\n         * blank.\r\n         *\r\n         * @since 4.6.1\r\n         * @readonly\r\n         * @return Unselected area curtain element\r\n         */\r\n        get: function () {\r\n            return this._unselectedOverlay;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Scrollbar's internal chart's data when the main chart's data\r\n     * changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChartScrollbar.prototype.handleDataChanged = function () {\r\n        if (this.chart.data != this.scrollbarChart.data) {\r\n            this.scrollbarChart.data = this.chart.data;\r\n        }\r\n        else {\r\n            // add data is handled in XYChart\r\n            // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\r\n            this.scrollbarChart.invalidateRawData();\r\n        }\r\n    };\r\n    /**\r\n     * Zooms out all axes on the internal chart.\r\n     */\r\n    XYChartScrollbar.prototype.zoomOutAxes = function () {\r\n        var scrollbarChart = this.scrollbarChart;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](scrollbarChart.xAxes.iterator(), function (x) {\r\n            x.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](scrollbarChart.yAxes.iterator(), function (y) {\r\n            y.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n    };\r\n    /**\r\n     * Updates scrollbar thumb.\r\n     */\r\n    XYChartScrollbar.prototype.updateThumb = function () {\r\n        _super.prototype.updateThumb.call(this);\r\n        if (this._unselectedOverlay) {\r\n            var thumb = this.thumb;\r\n            var x = thumb.pixelX || 0;\r\n            var y = thumb.pixelY || 0;\r\n            var w = thumb.pixelWidth || 0;\r\n            var h = thumb.pixelHeight || 0;\r\n            var path = \"\";\r\n            if (this.orientation == \"horizontal\") {\r\n                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__[\"rectToPath\"]({\r\n                    x: -1,\r\n                    y: 0,\r\n                    width: x,\r\n                    height: h\r\n                });\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__[\"rectToPath\"]({\r\n                    x: x + w,\r\n                    y: 0,\r\n                    width: (this.pixelWidth || 0) - x - w,\r\n                    height: h\r\n                });\r\n            }\r\n            else {\r\n                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__[\"rectToPath\"]({\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: w,\r\n                    height: y\r\n                });\r\n                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__[\"rectToPath\"]({\r\n                    x: 0,\r\n                    y: y + h,\r\n                    width: w,\r\n                    height: (this.pixelHeight || 0) - y - h\r\n                });\r\n            }\r\n            this._unselectedOverlay.path = path;\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChartScrollbar.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"hasValue\"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isArray\"](config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"hasValue\"](series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isString\"](series)) {\r\n                        if (this.map.hasKey(series)) {\r\n                            config.series[i] = this.map.getKey(series);\r\n                        }\r\n                        else {\r\n                            throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return XYChartScrollbar;\r\n}(_core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_1__[\"Scrollbar\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_8__[\"registry\"].registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n//# sourceMappingURL=XYChartScrollbar.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js ***!
  \***************************************************************************************/
/*! exports provided: CandlestickSeriesDataItem, CandlestickSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CandlestickSeriesDataItem\", function() { return CandlestickSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CandlestickSeries\", function() { return CandlestickSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _elements_Candlestick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/Candlestick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar CandlestickSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CandlestickSeriesDataItem, _super);\r\n    /**\r\n     * Defines a type of [[Component]] this data item is used for\r\n     * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n     */\r\n    //public _component!: CandlestickSeries;\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CandlestickSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.values.lowValueX = {};\r\n        _this.values.lowValueY = {};\r\n        _this.values.highValueX = {};\r\n        _this.values.highValueY = {};\r\n        _this.className = \"CandlestickSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.lowValueX.value;\r\n        },\r\n        /**\r\n         * Low value for horizontal axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"lowValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.lowValueY.value;\r\n        },\r\n        /**\r\n         * Low value for vertical axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"lowValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.highValueX.value;\r\n        },\r\n        /**\r\n         * High value for horizontal axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"highValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.highValueY.value;\r\n        },\r\n        /**\r\n         * High value for vertical axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"highValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueX.value;\r\n        },\r\n        /**\r\n         * Close value for horizontal axis.\r\n         *\r\n         * This is an alias for `valueX` added for convenience only.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueY.value;\r\n        },\r\n        /**\r\n         * Close value for vertical axis.\r\n         *\r\n         * This is an alias for `valueX` added for convenience only.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CandlestickSeriesDataItem;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar CandlestickSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CandlestickSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CandlestickSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CandlestickSeries\";\r\n        _this.groupFields.lowValueX = \"low\";\r\n        _this.groupFields.lowValueY = \"low\";\r\n        _this.groupFields.highValueX = \"high\";\r\n        _this.groupFields.highValueY = \"high\";\r\n        _this.strokeOpacity = 1;\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__[\"InterfaceColorSet\"]();\r\n        var positiveColor = interfaceColors.getFor(\"positive\");\r\n        var negativeColor = interfaceColors.getFor(\"negative\");\r\n        _this.dropFromOpenState.properties.fill = negativeColor;\r\n        _this.dropFromOpenState.properties.stroke = negativeColor;\r\n        _this.riseFromOpenState.properties.fill = positiveColor;\r\n        _this.riseFromOpenState.properties.stroke = positiveColor;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    CandlestickSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Candlestick Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    CandlestickSeries.prototype.createDataItem = function () {\r\n        return new CandlestickSeriesDataItem();\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    CandlestickSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        this.validateCandlestick(dataItem);\r\n    };\r\n    CandlestickSeries.prototype.validateCandlestick = function (dataItem) {\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var lowLine_1 = column.lowLine;\r\n            var highLine_1 = column.highLine;\r\n            if (this.baseAxis == this.xAxis) {\r\n                var x = column.pixelWidth / 2;\r\n                lowLine_1.x = x;\r\n                highLine_1.x = x;\r\n                var open_1 = dataItem.getWorkingValue(this.yOpenField);\r\n                var close_1 = dataItem.getWorkingValue(this.yField);\r\n                var yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n                var yClose = this.yAxis.getY(dataItem, this.yField);\r\n                var yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n                var yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n                var pixelY = column.pixelY;\r\n                lowLine_1.y1 = yLow - pixelY;\r\n                highLine_1.y1 = yHigh - pixelY;\r\n                if (open_1 < close_1) {\r\n                    lowLine_1.y2 = yOpen - pixelY;\r\n                    highLine_1.y2 = yClose - pixelY;\r\n                }\r\n                else {\r\n                    lowLine_1.y2 = yClose - pixelY;\r\n                    highLine_1.y2 = yOpen - pixelY;\r\n                }\r\n            }\r\n            if (this.baseAxis == this.yAxis) {\r\n                var y = column.pixelHeight / 2;\r\n                lowLine_1.y = y;\r\n                highLine_1.y = y;\r\n                var open_2 = dataItem.getWorkingValue(this.xOpenField);\r\n                var close_2 = dataItem.getWorkingValue(this.xField);\r\n                var xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n                var xClose = this.xAxis.getX(dataItem, this.xField);\r\n                var xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n                var xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n                var pixelX = column.pixelX;\r\n                lowLine_1.x1 = xLow - pixelX;\r\n                highLine_1.x1 = xHigh - pixelX;\r\n                if (open_2 < close_2) {\r\n                    lowLine_1.x2 = xOpen - pixelX;\r\n                    highLine_1.x2 = xClose - pixelX;\r\n                }\r\n                else {\r\n                    lowLine_1.x2 = xClose - pixelX;\r\n                    highLine_1.x2 = xOpen - pixelX;\r\n                }\r\n            }\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.axisRanges.iterator(), function (axisRange) {\r\n                // LOW LINE\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    var rangeLowLine = rangeColumn.lowLine;\r\n                    rangeLowLine.x = lowLine_1.x;\r\n                    rangeLowLine.y = lowLine_1.y;\r\n                    rangeLowLine.x1 = lowLine_1.x1;\r\n                    rangeLowLine.x2 = lowLine_1.x2;\r\n                    rangeLowLine.y1 = lowLine_1.y1;\r\n                    rangeLowLine.y2 = lowLine_1.y2;\r\n                    // HIGH LINE\r\n                    var rangehighLine = rangeColumn.highLine;\r\n                    rangehighLine.x = highLine_1.x;\r\n                    rangehighLine.y = highLine_1.y;\r\n                    rangehighLine.x1 = highLine_1.x1;\r\n                    rangehighLine.x2 = highLine_1.x2;\r\n                    rangehighLine.y1 = highLine_1.y1;\r\n                    rangehighLine.y2 = highLine_1.y2;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(CandlestickSeries.prototype, \"xLowField\", {\r\n        /**\r\n         * A data field to look for \"low\" value for horizontal axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._xLowField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"yLowField\", {\r\n        /**\r\n         * A data field to look for \"low\" value for vertical axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._yLowField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"xHighField\", {\r\n        /**\r\n         * A data field to look for \"high\" value for horizontal axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._xHighField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"yHighField\", {\r\n        /**\r\n         * A data field to look for \"high\" value for vertical axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._yHighField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets up which data fields to use for data access.\r\n     */\r\n    CandlestickSeries.prototype.defineFields = function () {\r\n        _super.prototype.defineFields.call(this);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (this.baseAxis == xAxis) {\r\n                var yAxisFieldName = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"capitalize\"](yAxis.axisFieldName);\r\n                this._yLowField = (\"low\" + yAxisFieldName + \"Y\");\r\n                this._yHighField = (\"high\" + yAxisFieldName + \"Y\");\r\n            }\r\n            if (this.baseAxis == yAxis) {\r\n                var xAxisFieldName = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"capitalize\"](xAxis.axisFieldName);\r\n                this._xLowField = (\"low\" + xAxisFieldName + \"X\");\r\n                this._xHighField = (\"high\" + xAxisFieldName + \"X\");\r\n            }\r\n            this.addValueField(xAxis, this._xValueFields, this._xLowField);\r\n            this.addValueField(xAxis, this._xValueFields, this._xHighField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yLowField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yHighField);\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    CandlestickSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(_elements_Candlestick__WEBPACK_IMPORTED_MODULE_3__[\"Candlestick\"]);\r\n        column.shouldClone = false;\r\n        column.copyFrom(this.columns.template);\r\n        var cw;\r\n        var ch;\r\n        var highLine = column.lowLine;\r\n        var lowLine = column.highLine;\r\n        if (this.baseAxis == this.yAxis) {\r\n            cw = w / 3;\r\n            ch = h;\r\n            highLine.y = h / 2;\r\n            lowLine.y = h / 2;\r\n            highLine.x2 = w / 3;\r\n            lowLine.x2 = w / 3;\r\n            lowLine.x = w / 3 * 2;\r\n            column.column.x = w / 3;\r\n        }\r\n        else {\r\n            cw = w;\r\n            ch = h / 3;\r\n            highLine.x = w / 2;\r\n            lowLine.x = w / 2;\r\n            highLine.y2 = h / 3;\r\n            lowLine.y2 = h / 3;\r\n            lowLine.y = h / 3 * 2;\r\n            column.column.y = h / 3;\r\n        }\r\n        column.width = cw;\r\n        column.height = ch;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__[\"copyProperties\"](this, marker, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__[\"copyProperties\"](this.columns.template, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        column.stroke = this.riseFromOpenState.properties.stroke;\r\n        column.fill = column.stroke;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.fill;\r\n        legendDataItem.colorOrig = column.fill;\r\n    };\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    CandlestickSeries.prototype.createColumnTemplate = function () {\r\n        return new _elements_Candlestick__WEBPACK_IMPORTED_MODULE_3__[\"Candlestick\"]();\r\n    };\r\n    return CandlestickSeries;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;\r\n//# sourceMappingURL=CandlestickSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js ***!
  \**********************************************************************************/
/*! exports provided: ColumnSeriesDataItem, ColumnSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeriesDataItem\", function() { return ColumnSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeries\", function() { return ColumnSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _XYSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Dictionary */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _elements_Column__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../elements/Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/**\r\n * Column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeriesDataItem\";\r\n        _this.locations[\"dateX\"] = 0.5;\r\n        _this.locations[\"dateY\"] = 0.5;\r\n        _this.locations[\"categoryX\"] = 0.5;\r\n        _this.locations[\"categoryY\"] = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"column\", {\r\n        /**\r\n         * @return Column\r\n         */\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        /**\r\n         * A column used to draw a column for this data item.\r\n         *\r\n         * @param column\r\n         */\r\n        set: function (column) {\r\n            this.setColumn(column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnSeriesDataItem.prototype.setColumn = function (column) {\r\n        var _this = this;\r\n        if (this._column && column != this._column) {\r\n            _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"remove\"](this.sprites, this._column);\r\n        }\r\n        this._column = column;\r\n        if (column) {\r\n            var prevDataItem = column.dataItem;\r\n            if (prevDataItem && prevDataItem != this) {\r\n                prevDataItem.column = undefined;\r\n            }\r\n            this.addSprite(column);\r\n            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_17__[\"Disposer\"](function () {\r\n                // TODO investigate why component is undefined\r\n                // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\r\n                if (_this.component) {\r\n                    _this.component.columns.removeValue(column);\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"width\", {\r\n        get: function () {\r\n            var width = this.properties.width;\r\n            if (this._adapterO) {\r\n                width = this._adapterO.apply(\"width\", width);\r\n            }\r\n            return width;\r\n        },\r\n        set: function (value) {\r\n            if (this.properties.width != value) {\r\n                this.properties.width = value;\r\n                if (this.component) {\r\n                    this.component.validateDataElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"rangesColumns\", {\r\n        /**\r\n         * A dictionary storing axes ranges columns by axis uid\r\n         */\r\n        get: function () {\r\n            if (!this._rangesColumns) {\r\n                this._rangesColumns = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__[\"Dictionary\"]();\r\n            }\r\n            return this._rangesColumns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeriesDataItem;\r\n}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__[\"XYSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Start location within cell for columns.\r\n         */\r\n        _this._startLocation = 0;\r\n        /**\r\n         * End location within cell for columns.\r\n         */\r\n        _this._endLocation = 1;\r\n        _this.className = \"ColumnSeries\";\r\n        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__[\"percent\"])(100);\r\n        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__[\"percent\"])(100);\r\n        _this.strokeOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.clustered = true;\r\n        var columnsContainer = _this.mainContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__[\"Container\"]);\r\n        columnsContainer.shouldClone = false;\r\n        columnsContainer.isMeasured = false;\r\n        columnsContainer.layout = \"none\";\r\n        _this._columnsContainer = columnsContainer;\r\n        _this.columns.template.pixelPerfect = false;\r\n        _this.tooltipColorSource = _this.columns.template;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries.prototype, \"columnsContainer\", {\r\n        /**\r\n         * A container that columns are created in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return this._columnsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ColumnSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Column Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ColumnSeries.prototype.createDataItem = function () {\r\n        return new ColumnSeriesDataItem();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.validate = function () {\r\n        //@todo Check if we can do better than use `instanceof`\r\n        // find start/end locations based on clustered/stacked settings\r\n        // go through chart series instead of base axis series, because axis series doesn't maintain order\r\n        var _this = this;\r\n        this.group.node.removeAttribute(\"fill\");\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            var baseAxisSeries = this.chart.series;\r\n            var clusterCount_1 = 0;\r\n            var index_1 = 0;\r\n            var sortedByAxis_1 = [];\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](baseAxisSeries.iterator(), function (series) {\r\n                if (series instanceof ColumnSeries) {\r\n                    if (_this.baseAxis == series.baseAxis) {\r\n                        var index_2;\r\n                        if (_this.baseAxis == _this.xAxis) {\r\n                            index_2 = _this.chart.yAxes.indexOf(series.yAxis);\r\n                        }\r\n                        else {\r\n                            index_2 = _this.chart.xAxes.indexOf(series.xAxis);\r\n                        }\r\n                        sortedByAxis_1.push({ series: series, axis: index_2 });\r\n                    }\r\n                }\r\n            });\r\n            sortedByAxis_1.sort(function (a, b) { return a.axis - b.axis; });\r\n            var prevAxisIndex_1;\r\n            _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](sortedByAxis_1, function (sortedItem) {\r\n                var series = sortedItem.series;\r\n                if (series instanceof ColumnSeries) {\r\n                    if ((!series.stacked && series.clustered) || (prevAxisIndex_1 != sortedItem.axis && series.clustered)) {\r\n                        clusterCount_1++;\r\n                    }\r\n                    if (series == _this) {\r\n                        index_1 = clusterCount_1 - 1;\r\n                    }\r\n                }\r\n                prevAxisIndex_1 = sortedItem.axis;\r\n            });\r\n            if (!this.clustered) {\r\n                index_1 = 0;\r\n                clusterCount_1 = 1;\r\n            }\r\n            var renderer = this.baseAxis.renderer;\r\n            var cellStartLocation = renderer.cellStartLocation;\r\n            var cellEndLocation = renderer.cellEndLocation;\r\n            this._startLocation = cellStartLocation + (index_1 / clusterCount_1) * (cellEndLocation - cellStartLocation);\r\n            this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"] && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                if (xAxis.sortBySeries == this) {\r\n                    this.sortCategoryAxis(xAxis, \"valueY\");\r\n                }\r\n            }\r\n            if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"] && xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                if (yAxis.sortBySeries == this) {\r\n                    this.sortCategoryAxis(yAxis, \"valueX\");\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        for (var i = 0; i < this.startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        this._propertiesChanged = false;\r\n    };\r\n    ColumnSeries.prototype.sortCategoryAxis = function (axis, key) {\r\n        var _this = this;\r\n        this.dataItems.values.sort(function (x, y) {\r\n            return y.values[key].workingValue - x.values[key].workingValue;\r\n        });\r\n        var i = 0;\r\n        this.dataItems.each(function (dataItem) {\r\n            dataItem._index = i;\r\n            i++;\r\n        });\r\n        axis.dataItems.each(function (dataItem) {\r\n            var axis = dataItem.component;\r\n            var currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\r\n            var seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, _this);\r\n            if (seriesDataItem) {\r\n                var index = _this.dataItems.indexOf(seriesDataItem);\r\n                dataItem._index = index;\r\n                var deltaPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((index + 0.5) / _this.dataItems.length - currentPosition, 3);\r\n                if (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {\r\n                    // void\r\n                }\r\n                else if (deltaPosition != _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"](dataItem.deltaPosition, 3)) {\r\n                    if (dataItem.deltaAnimation) {\r\n                        dataItem.deltaAnimation.stop();\r\n                    }\r\n                    dataItem.deltaAnimation = dataItem.animate({ property: \"deltaPosition\", from: -deltaPosition, to: 0 }, axis.interpolationDuration, axis.interpolationEasing);\r\n                    _this._disposers.push(dataItem.deltaAnimation);\r\n                }\r\n            }\r\n        });\r\n        axis.dataItems.values.sort(function (x, y) {\r\n            return x.index - y.index;\r\n        });\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElement = function (dataItem) {\r\n        // important oder here, first real, then super. we need this to know size\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            this.validateDataElementReal(dataItem);\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative start location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getStartLocation = function (dataItem) {\r\n        var startLocation = this._startLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            startLocation += dataItem.locations[this.xOpenField] - 0.5;\r\n        }\r\n        else {\r\n            startLocation += dataItem.locations[this.yOpenField] - 0.5;\r\n        }\r\n        return startLocation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    /*\r\n   public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n       if (this.simplifiedProcessing) {\r\n           this.validateDataElement(dataItem);\r\n       }\r\n       else {\r\n           super.handleDataItemWorkingValueChange(dataItem, name);\r\n       }\r\n   }*/\r\n    /**\r\n     * Returns relative end location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getEndLocation = function (dataItem) {\r\n        var endLocation = this._endLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            endLocation += dataItem.locations[this.xField] - 0.5;\r\n        }\r\n        else {\r\n            endLocation += dataItem.locations[this.yField] - 0.5;\r\n        }\r\n        return endLocation;\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        var _this = this;\r\n        //\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\r\n        var l;\r\n        var r;\r\n        var t;\r\n        var b;\r\n        var startLocation = this.getStartLocation(dataItem);\r\n        var endLocation = this.getEndLocation(dataItem);\r\n        var xField = this.xField;\r\n        var xOpenField = this.xOpenField;\r\n        var yField = this.yField;\r\n        var yOpenField = this.yOpenField;\r\n        var template = this.columns.template;\r\n        var percentWidth = template.percentWidth;\r\n        var percentHeight = template.percentHeight;\r\n        var pixelWidth = template.pixelWidth;\r\n        var pixelHeight = template.pixelHeight;\r\n        var maxWidth = template.maxWidth;\r\n        var maxHeight = template.maxHeight;\r\n        var paddingLeft = template.pixelPaddingLeft;\r\n        var paddingRight = template.pixelPaddingRight;\r\n        var paddingTop = template.pixelPaddingTop;\r\n        var paddingBottom = template.pixelPaddingBottom;\r\n        var outOfBounds = false;\r\n        var diw = dataItem.width;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](diw)) {\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNumber\"](diw)) {\r\n                pixelWidth = diw;\r\n            }\r\n            if (diw instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__[\"Percent\"]) {\r\n                percentWidth = diw.value * 100;\r\n            }\r\n        }\r\n        // two category axes\r\n        if ((this.xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) && (this.yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"])) {\r\n            if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentWidth)) {\r\n                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentHeight)) {\r\n                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case width is set in pixels\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n        }\r\n        else if (this.baseAxis == this.xAxis) {\r\n            if (!dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            // in case width is set in percent\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentWidth)) {\r\n                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case width is set in pixels\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            var bottomLocation = dataItem.locations[yOpenField];\r\n            var topLocation = dataItem.locations[yField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {\r\n                    bottomLocation = 0;\r\n                    topLocation = 0;\r\n                }\r\n            }\r\n            b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\r\n            t = this.yAxis.getY(dataItem, yField, topLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.yAxis.axisLength);\r\n            if ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n            if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        // horizontal bars\r\n        else {\r\n            if (!dataItem.hasValue(this._xValueFields)) {\r\n                return;\r\n            }\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentHeight)) {\r\n                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"round\"]((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case height is set in pixels\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            // in case height is set in pixels\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNaN\"](maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            var rightLocation = dataItem.locations[xField];\r\n            var leftLocation = dataItem.locations[xOpenField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {\r\n                    rightLocation = 0;\r\n                    leftLocation = 0;\r\n                }\r\n            }\r\n            r = this.xAxis.getX(dataItem, xField, rightLocation);\r\n            l = this.xAxis.getX(dataItem, xOpenField, leftLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.xAxis.axisLength);\r\n            if ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        var w = Math.abs(r - l);\r\n        var h = Math.abs(b - t);\r\n        var x = Math.min(l, r);\r\n        var y = Math.min(t, b);\r\n        if (!outOfBounds) {\r\n            var column_1;\r\n            if (!dataItem.column) {\r\n                column_1 = this.columns.create();\r\n                //$object.forceCopyProperties(this.columns.template, column, visualProperties);\r\n                _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__[\"copyProperties\"](this, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]); // need this because 3d columns are not in the same container\r\n                _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__[\"copyProperties\"](this.columns.template, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]); // second time, no force, so that columns.template would override series properties\r\n                dataItem.addSprite(column_1);\r\n                dataItem.column = column_1;\r\n                column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                // accessibility\r\n                if (this.itemsFocusable()) {\r\n                    this.role = \"menu\";\r\n                    column_1.role = \"menuitem\";\r\n                    column_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.role = \"list\";\r\n                    column_1.role = \"listitem\";\r\n                    column_1.focusable = false;\r\n                }\r\n                if (column_1.focusable) {\r\n                    column_1.events.on(\"focus\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"blur\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (column_1.hoverable) {\r\n                    column_1.events.on(\"over\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"out\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                column_1.parent = this.columnsContainer;\r\n                column_1.virtualParent = this;\r\n            }\r\n            else {\r\n                column_1 = dataItem.column;\r\n                if (this._propertiesChanged) {\r\n                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__[\"copyProperties\"](this, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__[\"copyProperties\"](this.columns.template, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"], function (property) {\r\n                        column_1[property] = column_1[property];\r\n                    });\r\n                }\r\n            }\r\n            column_1.width = w;\r\n            column_1.height = h;\r\n            column_1.x = x;\r\n            column_1.y = y;\r\n            column_1.realX = l;\r\n            column_1.realY = t;\r\n            column_1.realWidth = r - l;\r\n            column_1.realHeight = b - t;\r\n            this.setColumnStates(column_1);\r\n            if (column_1.invalid) {\r\n                column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n            }\r\n            column_1.__disabled = false;\r\n            //column.returnAfterTemp();\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (!rangeColumn) {\r\n                    rangeColumn = _this.columns.create();\r\n                    //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__[\"copyProperties\"](axisRange.contents, rangeColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]); // need this because 3d columns are not in the same container\r\n                    dataItem.addSprite(rangeColumn);\r\n                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                }\r\n                rangeColumn.parent = axisRange.contents;\r\n                rangeColumn.width = w;\r\n                rangeColumn.height = h;\r\n                rangeColumn.x = x;\r\n                rangeColumn.y = y;\r\n                _this.setColumnStates(rangeColumn);\r\n                if (rangeColumn.invalid) {\r\n                    rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n                }\r\n                rangeColumn.__disabled = false;\r\n                //rangeColumn.returnAfterTemp();\r\n            });\r\n        }\r\n        else {\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        dataItem.itemWidth = w;\r\n        dataItem.itemHeight = h;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        if (dataItem) {\r\n            if (dataItem.column) {\r\n                // otherwise might flicker when enabling\r\n                dataItem.column.width = 0;\r\n                dataItem.column.height = 0;\r\n                dataItem.column.__disabled = true;\r\n            }\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    // otherwise might flicker when enabling\r\n                    rangeColumn.width = 0;\r\n                    rangeColumn.height = 0;\r\n                    rangeColumn.__disabled = true;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Apply different state/coloring to columns based on the change value.\r\n     *\r\n     * @param sprite  Sprite to apply state to\r\n     * @todo Do not apply accessibility to wicks of the candlesticks\r\n     */\r\n    ColumnSeries.prototype.setColumnStates = function (sprite) {\r\n        if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\r\n            var dataItem = sprite.dataItem;\r\n            if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"] || this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                var open_1;\r\n                var value = void 0;\r\n                var change = void 0;\r\n                if (this.baseAxis == this.yAxis) {\r\n                    if (this.xOpenField && this.xField && this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                        open_1 = dataItem.getValue(this.xOpenField);\r\n                        value = dataItem.getValue(this.xField);\r\n                    }\r\n                    change = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\r\n                }\r\n                else {\r\n                    if (this.yOpenField && this.yField && this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                        open_1 = dataItem.getValue(this.yOpenField);\r\n                        value = dataItem.getValue(this.yField);\r\n                    }\r\n                    change = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\r\n                }\r\n                if (value < open_1) {\r\n                    dataItem.droppedFromOpen = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromOpenState);\r\n                    sprite.setState(this._dropFromOpenState, 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromOpen = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromOpenState);\r\n                    sprite.setState(this._riseFromOpenState, 0);\r\n                }\r\n                if (change < 0) {\r\n                    dataItem.droppedFromPrevious = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromPreviousState);\r\n                    sprite.setState((this._dropFromPreviousState), 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromPrevious = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromPreviousState);\r\n                    sprite.setState((this._riseFromPreviousState), 0);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"columns\", {\r\n        /**\r\n         * A list of column elements in the series.\r\n         *\r\n         * @return Columns\r\n         */\r\n        get: function () {\r\n            if (!this._columns) {\r\n                this._columns = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__[\"ListTemplate\"](this.createColumnTemplate());\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__[\"ListDisposer\"](this._columns));\r\n                this._disposers.push(this._columns.template);\r\n            }\r\n            return this._columns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a column element to use as a template.\r\n     *\r\n     * @return Column template\r\n     */\r\n    ColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new _elements_Column__WEBPACK_IMPORTED_MODULE_9__[\"Column\"]();\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"clustered\", {\r\n        /**\r\n         * @return Clustered?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"clustered\");\r\n        },\r\n        /**\r\n         * Cluster this series columns?\r\n         *\r\n         * Setting to `false` will make columns overlap with other series.\r\n         *\r\n         * @default true\r\n         * @param value  Clustered?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"clustered\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromOpenState) {\r\n                this._dropFromOpenState = this.states.create(\"dropFromOpenState\");\r\n            }\r\n            return this._dropFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is lower than open value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromPreviousState) {\r\n                this._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\r\n            }\r\n            return this._dropFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is lower value of a previous\r\n         * column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromOpenState) {\r\n                this._riseFromOpenState = this.states.create(\"riseFromOpenState\");\r\n            }\r\n            return this._riseFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is same or higher than open\r\n         * value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromPreviousState) {\r\n                this._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\r\n            }\r\n            return this._riseFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is same or higher than value\r\n         * of a previous column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates value of the related legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        var _this = this;\r\n        _super.prototype.updateLegendValue.call(this, dataItem, notRange);\r\n        if (this.legendDataItem) {\r\n            var marker = this.legendDataItem.marker;\r\n            var fromOpenState_1;\r\n            var fromPreviousState_1;\r\n            if (dataItem) {\r\n                if (dataItem.droppedFromOpen) {\r\n                    fromOpenState_1 = this._dropFromOpenState;\r\n                }\r\n                else {\r\n                    fromOpenState_1 = this._riseFromOpenState;\r\n                }\r\n                if (dataItem.droppedFromPrevious) {\r\n                    fromPreviousState_1 = this._dropFromPreviousState;\r\n                }\r\n                else {\r\n                    fromPreviousState_1 = this._riseFromPreviousState;\r\n                }\r\n            }\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](marker.children.iterator(), function (child) {\r\n                if (dataItem) {\r\n                    child.setState(fromPreviousState_1);\r\n                    child.setState(fromOpenState_1);\r\n                }\r\n                else {\r\n                    // todo: think what to do here, maybe apply above states based on totals?\r\n                    child.setState(_this._riseFromPreviousState);\r\n                    child.setState(_this._riseFromOpenState);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    ColumnSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__[\"RoundedRectangle\"]);\r\n        column.shouldClone = false;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__[\"copyProperties\"](this, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        column.copyFrom(this.columns.template);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = this.fill;\r\n        legendDataItem.colorOrig = this.fill;\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[ColumnSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    ColumnSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.columns.template.copyFrom(source.columns.template);\r\n    };\r\n    /**\r\n    * returns bullet x location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        if (this.baseAxis == this.xAxis) {\r\n            var bulletLocationX = bullet.locationX;\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNumber\"](bulletLocationX)) {\r\n                bulletLocationX = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationX;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationX.call(this, bullet, field);\r\n        }\r\n    };\r\n    /**\r\n    * returns bullet y location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        if (this.baseAxis == this.yAxis) {\r\n            var bulletLocationY = bullet.locationY;\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNumber\"](bulletLocationY)) {\r\n                bulletLocationY = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationY;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationY.call(this, bullet, field);\r\n        }\r\n    };\r\n    ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\r\n        //if (this.baseAxis == this.xAxis) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNumber\"](bulletLocationX)) {\r\n            if (dataItem) {\r\n                bulletLocationX = dataItem.locations[field];\r\n            }\r\n            else {\r\n                bulletLocationX = 0.5;\r\n            }\r\n        }\r\n        return this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);\r\n        //}\r\n        //else {\r\n        //\treturn super.getAdjustedXLocation(dataItem, field);\r\n        //}\r\n    };\r\n    ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\r\n        //if (this.baseAxis == this.yAxis) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"isNumber\"](bulletLocationY)) {\r\n            if (dataItem) {\r\n                bulletLocationY = dataItem.locations[field];\r\n            }\r\n            else {\r\n                bulletLocationY = 0.5;\r\n            }\r\n        }\r\n        return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\r\n        //}\r\n        //else {\r\n        //\treturn super.getAdjustedYLocation(dataItem, field);\r\n        //}\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {\r\n        var paddingBottom = this.columns.template.pixelPaddingBottom;\r\n        var paddingTop = this.columns.template.pixelPaddingTop;\r\n        var minY = -paddingTop;\r\n        var maxY = this.yAxis.axisLength + paddingBottom;\r\n        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"fitToRange\"](coordinate, minY, maxY);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {\r\n        var paddingLeft = this.columns.template.pixelPaddingLeft;\r\n        var paddingRight = this.columns.template.pixelPaddingRight;\r\n        var minX = -paddingLeft;\r\n        var maxX = this.xAxis.axisLength + paddingRight;\r\n        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"fitToRange\"](coordinate, minX, maxX);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.columns.clear();\r\n    };\r\n    return ColumnSeries;\r\n}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__[\"XYSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_8__[\"registry\"].registeredClasses[\"ColumnSeries\"] = ColumnSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_8__[\"registry\"].registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;\r\n//# sourceMappingURL=ColumnSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js ***!
  \************************************************************************************/
/*! exports provided: ColumnSeries3DDataItem, ColumnSeries3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeries3DDataItem\", function() { return ColumnSeries3DDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeries3D\", function() { return ColumnSeries3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony import */ var _elements_Column3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/Column3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * 3D column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar ColumnSeries3DDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ColumnSeries3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ColumnSeries3DDataItem;\r\n}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ColumnSeries3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3D\";\r\n        _this.columns.template.column3D.applyOnClones = true;\r\n        _this.columns.template.hiddenState.properties.visible = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"columnsContainer\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var chart = this.chart;\r\n            if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\r\n                return chart.columnsContainer;\r\n            }\r\n            else {\r\n                return this._columnsContainer;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        if (dataItem.column) {\r\n            dataItem.column.dx = this.dx;\r\n            dataItem.column.dy = this.dy;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElements = function () {\r\n        _super.prototype.validateDataElements.call(this);\r\n        if (this.chart) {\r\n            this.chart.invalidateLayout();\r\n        }\r\n    };\r\n    /**\r\n     * Returns an element to use for 3D bar.\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ColumnSeries3D.prototype.createColumnTemplate = function () {\r\n        return new _elements_Column3D__WEBPACK_IMPORTED_MODULE_2__[\"Column3D\"]();\r\n    };\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"depth\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth (height) of the slices in the series in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value, true);\r\n            var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\r\n            template.column3D.depth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"angle\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Angle (0-360)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle of view for the slices in series. (0-360)\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Angle (0-360)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n            var template = this.columns.template;\r\n            template.column3D.angle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeries3D;\r\n}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;\r\n//# sourceMappingURL=ColumnSeries3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js ***!
  \********************************************************************************/
/*! exports provided: ConeSeriesDataItem, ConeSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConeSeriesDataItem\", function() { return ConeSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConeSeries\", function() { return ConeSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony import */ var _elements_ConeColumn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/ConeColumn */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ConeSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ConeSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ConeSeriesDataItem;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ConeSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ConeSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ConeSeries.prototype.createColumnTemplate = function () {\r\n        return new _elements_ConeColumn__WEBPACK_IMPORTED_MODULE_2__[\"ConeColumn\"]();\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    ConeSeries.prototype.getMaskPath = function () {\r\n        var dx = 0;\r\n        var dy = 0;\r\n        var column = this.columns.getIndex(0);\r\n        if (column) {\r\n            if (this.baseAxis == this.xAxis) {\r\n                dy = column.coneColumn.innerWidth / 2 + 1;\r\n            }\r\n            else {\r\n                dx = column.coneColumn.innerHeight / 2 + 1;\r\n            }\r\n            return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"rectToPath\"]({\r\n                x: -dx,\r\n                y: 0,\r\n                width: this.xAxis.axisLength + dx,\r\n                height: this.yAxis.axisLength + dy\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ConeSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var coneColumn = dataItem.column.coneColumn;\r\n            coneColumn.fill = dataItem.column.fill;\r\n            if (this.baseAxis == this.yAxis) {\r\n                coneColumn.orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                coneColumn.orientation = \"vertical\";\r\n            }\r\n        }\r\n    };\r\n    return ConeSeries;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ConeSeries\"] = ConeSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;\r\n//# sourceMappingURL=ConeSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9Db25lU2VyaWVzLmpzPzNlNTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNvRTtBQUNoQjtBQUNMO0FBQ0k7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsa0VBQW9CO0FBQ1E7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx3QkFBd0I7QUFDakMsU0FBUywwQkFBMEI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtEQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsMERBQVk7QUFDUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9Db25lU2VyaWVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbmVTZXJpZXMgbW9kdWxlXHJcbiAqIE5vdCByZWNvbW1lbmRlZCB1c2luZyBpZiB5b3UgdXNlIHNjcm9sbGJhcnMgb3IgeW91ciBjaGFydCBpcyB6b29tYWJsZSBpbiBzb21lIG90aGVyIHdheS5cclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQ29sdW1uU2VyaWVzLCBDb2x1bW5TZXJpZXNEYXRhSXRlbSB9IGZyb20gXCIuL0NvbHVtblNlcmllc1wiO1xyXG5pbXBvcnQgeyBDb25lQ29sdW1uIH0gZnJvbSBcIi4uL2VsZW1lbnRzL0NvbmVDb2x1bW5cIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkcGF0aCBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXJpbmcvUGF0aFwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBEQVRBIElURU1cclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRGVmaW5lcyBhIFtbRGF0YUl0ZW1dXSBmb3IgW1tDb25lU2VyaWVzXV0uXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIERhdGFJdGVtfVxyXG4gKi9cclxudmFyIENvbmVTZXJpZXNEYXRhSXRlbSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhDb25lU2VyaWVzRGF0YUl0ZW0sIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIENvbmVTZXJpZXNEYXRhSXRlbSgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiQ29uZVNlcmllc0RhdGFJdGVtXCI7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIHJldHVybiBDb25lU2VyaWVzRGF0YUl0ZW07XHJcbn0oQ29sdW1uU2VyaWVzRGF0YUl0ZW0pKTtcclxuZXhwb3J0IHsgQ29uZVNlcmllc0RhdGFJdGVtIH07XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRGVmaW5lcyBbW1Nlcmllc11dIGZvciBhIGNvbmUgZ3JhcGguXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElDb25lU2VyaWVzRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBFdmVudHNcclxuICogQHNlZSB7QGxpbmsgSUNvbmVTZXJpZXNBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gRXhhbXBsZVxyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgQ29uZVNlcmllcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhDb25lU2VyaWVzLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBDb25lU2VyaWVzKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJDb25lU2VyaWVzXCI7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbiBlbGVtZW50IHRvIHVzZSBmb3IgQ2FuZGxlc3RpY2tcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIEByZXR1cm4gRWxlbWVudC5cclxuICAgICAqL1xyXG4gICAgQ29uZVNlcmllcy5wcm90b3R5cGUuY3JlYXRlQ29sdW1uVGVtcGxhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDb25lQ29sdW1uKCk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGFuIFNWRyBwYXRoIHRvIHVzZSBhcyBzZXJpZXMgbWFzay5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJuIFNWRyBwYXRoXHJcbiAgICAgKi9cclxuICAgIENvbmVTZXJpZXMucHJvdG90eXBlLmdldE1hc2tQYXRoID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkeCA9IDA7XHJcbiAgICAgICAgdmFyIGR5ID0gMDtcclxuICAgICAgICB2YXIgY29sdW1uID0gdGhpcy5jb2x1bW5zLmdldEluZGV4KDApO1xyXG4gICAgICAgIGlmIChjb2x1bW4pIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuYmFzZUF4aXMgPT0gdGhpcy54QXhpcykge1xyXG4gICAgICAgICAgICAgICAgZHkgPSBjb2x1bW4uY29uZUNvbHVtbi5pbm5lcldpZHRoIC8gMiArIDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkeCA9IGNvbHVtbi5jb25lQ29sdW1uLmlubmVySGVpZ2h0IC8gMiArIDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuICRwYXRoLnJlY3RUb1BhdGgoe1xyXG4gICAgICAgICAgICAgICAgeDogLWR4LFxyXG4gICAgICAgICAgICAgICAgeTogMCxcclxuICAgICAgICAgICAgICAgIHdpZHRoOiB0aGlzLnhBeGlzLmF4aXNMZW5ndGggKyBkeCxcclxuICAgICAgICAgICAgICAgIGhlaWdodDogdGhpcy55QXhpcy5heGlzTGVuZ3RoICsgZHlcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogVmFsaWRhdGVzIGRhdGEgaXRlbSdzIGVsZW1lbnRzLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBkYXRhSXRlbSAgRGF0YSBpdGVtXHJcbiAgICAgKi9cclxuICAgIENvbmVTZXJpZXMucHJvdG90eXBlLnZhbGlkYXRlRGF0YUVsZW1lbnRSZWFsID0gZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZURhdGFFbGVtZW50UmVhbC5jYWxsKHRoaXMsIGRhdGFJdGVtKTtcclxuICAgICAgICB2YXIgY29sdW1uID0gZGF0YUl0ZW0uY29sdW1uO1xyXG4gICAgICAgIGlmIChjb2x1bW4pIHtcclxuICAgICAgICAgICAgdmFyIGNvbmVDb2x1bW4gPSBkYXRhSXRlbS5jb2x1bW4uY29uZUNvbHVtbjtcclxuICAgICAgICAgICAgY29uZUNvbHVtbi5maWxsID0gZGF0YUl0ZW0uY29sdW1uLmZpbGw7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJhc2VBeGlzID09IHRoaXMueUF4aXMpIHtcclxuICAgICAgICAgICAgICAgIGNvbmVDb2x1bW4ub3JpZW50YXRpb24gPSBcImhvcml6b250YWxcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbmVDb2x1bW4ub3JpZW50YXRpb24gPSBcInZlcnRpY2FsXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENvbmVTZXJpZXM7XHJcbn0oQ29sdW1uU2VyaWVzKSk7XHJcbmV4cG9ydCB7IENvbmVTZXJpZXMgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiQ29uZVNlcmllc1wiXSA9IENvbmVTZXJpZXM7XHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiQ29uZVNlcmllc0RhdGFJdGVtXCJdID0gQ29uZVNlcmllc0RhdGFJdGVtO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25lU2VyaWVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js ***!
  \****************************************************************************************/
/*! exports provided: CurvedColumnSeriesDataItem, CurvedColumnSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CurvedColumnSeriesDataItem\", function() { return CurvedColumnSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CurvedColumnSeries\", function() { return CurvedColumnSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony import */ var _elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/CurvedColumn */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar CurvedColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CurvedColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CurvedColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CurvedColumnSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return CurvedColumnSeriesDataItem;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar CurvedColumnSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(CurvedColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CurvedColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CurvedColumnSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an element to use for the curved column.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Element.\r\n     */\r\n    CurvedColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new _elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_2__[\"CurvedColumn\"]();\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    CurvedColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        var column = dataItem.column;\r\n        column = dataItem.column;\r\n        if (column) {\r\n            var curvedColumn = dataItem.column.curvedColumn;\r\n            curvedColumn.fill = dataItem.column.fill;\r\n            if (this.baseAxis == this.yAxis) {\r\n                column.orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                column.orientation = \"vertical\";\r\n            }\r\n        }\r\n    };\r\n    return CurvedColumnSeries;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;\r\n//# sourceMappingURL=CurvedColumnSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9DdXJ2ZWRDb2x1bW5TZXJpZXMuanM/NWRlYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29FO0FBQ1o7QUFDVDtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyxrRUFBb0I7QUFDZ0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxnQ0FBZ0M7QUFDekMsU0FBUyxrQ0FBa0M7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1FQUFZO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsMERBQVk7QUFDZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUix1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9zZXJpZXMvQ3VydmVkQ29sdW1uU2VyaWVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEN1cnZlZENvbHVtblNlcmllcyBtb2R1bGUuXHJcbiAqXHJcbiAqIE5vdCByZWNvbW1lbmRlZCB1c2luZyBpZiB5b3UgdXNlIHNjcm9sbGJhcnMgb3IgeW91ciBjaGFydCBpcyB6b29tYWJsZSBpbiBzb21lIG90aGVyIHdheS5cclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQ29sdW1uU2VyaWVzLCBDb2x1bW5TZXJpZXNEYXRhSXRlbSB9IGZyb20gXCIuL0NvbHVtblNlcmllc1wiO1xyXG5pbXBvcnQgeyBDdXJ2ZWRDb2x1bW4gfSBmcm9tIFwiLi4vZWxlbWVudHMvQ3VydmVkQ29sdW1uXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogREFUQSBJVEVNXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIERlZmluZXMgYSBbW0RhdGFJdGVtXV0gZm9yIFtbQ3VydmVkQ29sdW1uU2VyaWVzXV0uXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIERhdGFJdGVtfVxyXG4gKi9cclxudmFyIEN1cnZlZENvbHVtblNlcmllc0RhdGFJdGVtID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEN1cnZlZENvbHVtblNlcmllc0RhdGFJdGVtLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBDdXJ2ZWRDb2x1bW5TZXJpZXNEYXRhSXRlbSgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiQ3VydmVkQ29sdW1uU2VyaWVzRGF0YUl0ZW1cIjtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEN1cnZlZENvbHVtblNlcmllc0RhdGFJdGVtO1xyXG59KENvbHVtblNlcmllc0RhdGFJdGVtKSk7XHJcbmV4cG9ydCB7IEN1cnZlZENvbHVtblNlcmllc0RhdGFJdGVtIH07XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRGVmaW5lcyBbW1Nlcmllc11dIGZvciBhIGN1cnZlZCBjb2x1bW5zIGdyYXBoLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJQ3VydmVkQ29sdW1uU2VyaWVzRXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBFdmVudHNcclxuICogQHNlZSB7QGxpbmsgSUN1cnZlZENvbHVtblNlcmllc0FkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgQ3VydmVkQ29sdW1uU2VyaWVzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEN1cnZlZENvbHVtblNlcmllcywgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ3VydmVkQ29sdW1uU2VyaWVzKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJDdXJ2ZWRDb2x1bW5TZXJpZXNcIjtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGFuIGVsZW1lbnQgdG8gdXNlIGZvciB0aGUgY3VydmVkIGNvbHVtbi5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcmV0dXJuIEVsZW1lbnQuXHJcbiAgICAgKi9cclxuICAgIEN1cnZlZENvbHVtblNlcmllcy5wcm90b3R5cGUuY3JlYXRlQ29sdW1uVGVtcGxhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDdXJ2ZWRDb2x1bW4oKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlcyBkYXRhIGl0ZW0ncyBlbGVtZW50cy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKiBAcGFyYW0gZGF0YUl0ZW0gIERhdGEgaXRlbVxyXG4gICAgICovXHJcbiAgICBDdXJ2ZWRDb2x1bW5TZXJpZXMucHJvdG90eXBlLnZhbGlkYXRlRGF0YUVsZW1lbnRSZWFsID0gZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZURhdGFFbGVtZW50UmVhbC5jYWxsKHRoaXMsIGRhdGFJdGVtKTtcclxuICAgICAgICB2YXIgY29sdW1uID0gZGF0YUl0ZW0uY29sdW1uO1xyXG4gICAgICAgIGNvbHVtbiA9IGRhdGFJdGVtLmNvbHVtbjtcclxuICAgICAgICBpZiAoY29sdW1uKSB7XHJcbiAgICAgICAgICAgIHZhciBjdXJ2ZWRDb2x1bW4gPSBkYXRhSXRlbS5jb2x1bW4uY3VydmVkQ29sdW1uO1xyXG4gICAgICAgICAgICBjdXJ2ZWRDb2x1bW4uZmlsbCA9IGRhdGFJdGVtLmNvbHVtbi5maWxsO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5iYXNlQXhpcyA9PSB0aGlzLnlBeGlzKSB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW4ub3JpZW50YXRpb24gPSBcImhvcml6b250YWxcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbHVtbi5vcmllbnRhdGlvbiA9IFwidmVydGljYWxcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gQ3VydmVkQ29sdW1uU2VyaWVzO1xyXG59KENvbHVtblNlcmllcykpO1xyXG5leHBvcnQgeyBDdXJ2ZWRDb2x1bW5TZXJpZXMgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiQ3VydmVkQ29sdW1uU2VyaWVzXCJdID0gQ3VydmVkQ29sdW1uU2VyaWVzO1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkN1cnZlZENvbHVtblNlcmllc0RhdGFJdGVtXCJdID0gQ3VydmVkQ29sdW1uU2VyaWVzRGF0YUl0ZW07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUN1cnZlZENvbHVtblNlcmllcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js ***!
  \**********************************************************************************/
/*! exports provided: FunnelSeriesDataItem, FunnelSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunnelSeriesDataItem\", function() { return FunnelSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunnelSeries\", function() { return FunnelSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _PercentSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js\");\n/* harmony import */ var _elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/FunnelSlice */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js\");\n/* harmony import */ var _elements_FunnelTick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/FunnelTick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/Options */ \"./node_modules/@amcharts/amcharts4/.internal/core/Options.js\");\n/**\r\n * Defines Funnel Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar FunnelSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FunnelSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FunnelSeriesDataItem\";\r\n        // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n        _this.events.on(\"visibilitychanged\", function () {\r\n            if (_this.component) {\r\n                _this.component.invalidateDataItems();\r\n            }\r\n        }, _this, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\r\n        /**\r\n         * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._sliceLink) {\r\n                var sliceLink_1 = this.component.sliceLinks.create();\r\n                this._sliceLink = sliceLink_1;\r\n                this._disposers.push(sliceLink_1);\r\n                sliceLink_1.parent = this.component.slicesContainer;\r\n                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__[\"Disposer\"](function () {\r\n                    if (_this.component) {\r\n                        _this.component.sliceLinks.removeValue(sliceLink_1);\r\n                    }\r\n                }));\r\n                this.addSprite(sliceLink_1);\r\n                sliceLink_1.visible = this.visible;\r\n            }\r\n            return this._sliceLink;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeriesDataItem;\r\n}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__[\"PercentSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar FunnelSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FunnelSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this._nextY = 0;\r\n        _this.className = \"FunnelSeries\";\r\n        _this.orientation = \"vertical\";\r\n        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__[\"percent\"])(100);\r\n        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__[\"percent\"])(100);\r\n        _this.slicesContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__[\"percent\"])(100);\r\n        _this.slicesContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__[\"percent\"])(100);\r\n        _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\r\n        _this.labelsOpposite = true;\r\n        _this.labelsContainer.layout = \"absolute\";\r\n        _this.bottomRatio = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a [[FunnelSlice]] element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    FunnelSeries.prototype.createSlice = function () {\r\n        return new _elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_2__[\"FunnelSlice\"]();\r\n    };\r\n    /**\r\n     * Creates a [[FunnelTick]] element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    FunnelSeries.prototype.createTick = function () {\r\n        return new _elements_FunnelTick__WEBPACK_IMPORTED_MODULE_3__[\"FunnelTick\"]();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    FunnelSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Funnel Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    FunnelSeries.prototype.createDataItem = function () {\r\n        return new FunnelSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits FunnelSlice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    FunnelSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.expandDistance = 0.2;\r\n    };\r\n    /**\r\n     * [initLabel description]\r\n     *\r\n     * @todo Description\r\n     * @param label [description]\r\n     */\r\n    FunnelSeries.prototype.initLabel = function (label) {\r\n        _super.prototype.initLabel.call(this, label);\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.isMeasured = true;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this._nextY = 0;\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validateDataElements = function () {\r\n        var _this = this;\r\n        var slicesContainer = this.slicesContainer;\r\n        var labelsContainer = this.labelsContainer;\r\n        var labelTemplate = this.labels.template;\r\n        if (this.alignLabels) {\r\n            labelTemplate.interactionsEnabled = true;\r\n            slicesContainer.isMeasured = true;\r\n            labelsContainer.isMeasured = true;\r\n        }\r\n        else {\r\n            labelTemplate.interactionsEnabled = false;\r\n            slicesContainer.isMeasured = false;\r\n            labelsContainer.isMeasured = false;\r\n        }\r\n        var total = 0;\r\n        var count = 0;\r\n        this.dataItems.each(function (dItem) {\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](dItem.value)) {\r\n                count++;\r\n                if (dItem.value > 0) {\r\n                    total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n                }\r\n                else {\r\n                    if (_this.ignoreZeroValues) {\r\n                        count--;\r\n                    }\r\n                    else {\r\n                        if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n                            count--;\r\n                        }\r\n                        else {\r\n                            total += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._total = 1 / count * total;\r\n        this._count = count;\r\n        _super.prototype.validateDataElements.call(this);\r\n        this.arrangeLabels();\r\n    };\r\n    /**\r\n     * [getNextValue description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  [description]\r\n     * @return [description]\r\n     */\r\n    FunnelSeries.prototype.getNextValue = function (dataItem) {\r\n        var index = dataItem.index;\r\n        var nextValue = dataItem.getWorkingValue(\"value\");\r\n        if (index < this.dataItems.length - 1) {\r\n            var nextItem = this.dataItems.getIndex(index + 1);\r\n            nextValue = nextItem.getWorkingValue(\"value\");\r\n            if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n                return this.getNextValue(nextItem);\r\n            }\r\n        }\r\n        return nextValue;\r\n    };\r\n    /**\r\n     * [formDataElement description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.formDataElement = function () {\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    FunnelSeries.prototype.validateDataElement = function (dataItem) {\r\n        var _this = this;\r\n        //if ($type.hasValue(dataItem.value)) {\r\n        // FunnelSlice\r\n        var slice = dataItem.slice;\r\n        slice.orientation = this.orientation;\r\n        var sliceLink = dataItem.sliceLink;\r\n        sliceLink.orientation = this.orientation;\r\n        var tick = dataItem.tick;\r\n        var label = dataItem.label;\r\n        tick.slice = slice;\r\n        tick.label = label;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](dataItem.value)) {\r\n            this.decorateSlice(dataItem);\r\n            _core_utils_Array__WEBPACK_IMPORTED_MODULE_9__[\"each\"](dataItem.sprites, function (sprite) {\r\n                if (dataItem.value == 0 && _this.ignoreZeroValues) {\r\n                    sprite.__disabled = true;\r\n                }\r\n                else {\r\n                    sprite.__disabled = false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            _core_utils_Array__WEBPACK_IMPORTED_MODULE_9__[\"each\"](dataItem.sprites, function (sprite) {\r\n                sprite.__disabled = true;\r\n            });\r\n        }\r\n        if (dataItem.index == this.dataItems.length - 1) {\r\n            sliceLink.disabled = true;\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        sliceLink.fill = slice.fill;\r\n        //}\r\n    };\r\n    /**\r\n     * [decorateSlice description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    FunnelSeries.prototype.decorateSlice = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        var sliceLink = dataItem.sliceLink;\r\n        var label = dataItem.label;\r\n        var tick = dataItem.tick;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        var nextValue = this.getNextValue(dataItem);\r\n        var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n        var bottomRatio = this.bottomRatio;\r\n        var d = 1;\r\n        if (dataItem.value != 0) {\r\n            d = workingValue / Math.abs(dataItem.value);\r\n        }\r\n        else {\r\n            if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n                d = 0.000001;\r\n            }\r\n        }\r\n        if (this.ignoreZeroValues && dataItem.value == 0) {\r\n            dataItem.__disabled = true;\r\n            return;\r\n        }\r\n        else {\r\n            dataItem.__disabled = false;\r\n        }\r\n        if (this._nextY == Infinity) {\r\n            this._nextY = 0;\r\n        }\r\n        if (this.orientation == \"vertical\") {\r\n            var linkHeight = sliceLink.pixelHeight * d;\r\n            maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n            slice.y = this._nextY;\r\n            slice.height = Math.min(100000, _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"max\"](0, maxHeight / this._count * d / this._total - linkHeight));\r\n            slice.x = maxWidth / 2;\r\n            if (!this.alignLabels) {\r\n                label.x = slice.x;\r\n            }\r\n            else {\r\n                label.x = undefined;\r\n            }\r\n            label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n            this._nextY += slice.pixelHeight + linkHeight;\r\n            sliceLink.y = this._nextY - linkHeight;\r\n            sliceLink.x = slice.x;\r\n        }\r\n        else {\r\n            var linkWidth = sliceLink.pixelWidth * d;\r\n            maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n            slice.x = this._nextY;\r\n            slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n            slice.y = maxHeight / 2;\r\n            if (!this.alignLabels) {\r\n                label.y = slice.y;\r\n            }\r\n            else {\r\n                label.y = this.labelsContainer.measuredHeight;\r\n            }\r\n            label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n            this._nextY += slice.pixelWidth + linkWidth;\r\n            sliceLink.x = this._nextY - linkWidth;\r\n            sliceLink.y = slice.y;\r\n        }\r\n    };\r\n    FunnelSeries.prototype.getLastLabel = function (index) {\r\n        if (index > 0) {\r\n            var lastLabel = this.labels.getIndex(index);\r\n            if (lastLabel.__disabled || !lastLabel.visible) {\r\n                return this.getLastLabel(index - 1);\r\n            }\r\n            else {\r\n                return lastLabel;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [arrangeLabels description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.arrangeLabels = function () {\r\n        if (this.alignLabels) {\r\n            var count = this.labels.length;\r\n            if (count > 1) {\r\n                var lastLabel = this.getLastLabel(count - 1);\r\n                if (lastLabel) {\r\n                    var lastY = lastLabel.pixelY;\r\n                    var lastX = lastLabel.pixelX;\r\n                    if (count > 1) {\r\n                        for (var i = count - 2; i >= 0; i--) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY + label.measuredHeight > lastY) {\r\n                                        label.y = Math.min(1000000, lastY - label.measuredHeight);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX + label.measuredWidth > lastX) {\r\n                                        label.x = Math.min(1000000, lastX - label.measuredWidth);\r\n                                    }\r\n                                }\r\n                                lastY = label.pixelY;\r\n                                lastX = label.pixelX;\r\n                            }\r\n                        }\r\n                        lastY = 0;\r\n                        lastX = 0;\r\n                        for (var i = 0; i < count; i++) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY < lastY) {\r\n                                        label.y = Math.min(1000000, lastY);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX < lastX) {\r\n                                        label.x = Math.min(1000000, lastX);\r\n                                    }\r\n                                }\r\n                                lastY += label.measuredHeight;\r\n                                lastX += label.measuredWidth;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    FunnelSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](locationY)) {\r\n            locationY = 1;\r\n        }\r\n        bullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n        bullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n         *\r\n         * @default \"vertical\"\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"orientation\", value)) {\r\n                this.labelsOpposite = this.labelsOpposite;\r\n                this.invalidate();\r\n                if (value == \"vertical\") {\r\n                    this.ticks.template.locationX = 1;\r\n                    this.ticks.template.locationY = 0.5;\r\n                    this.labels.template.rotation = 0;\r\n                    this.layout = \"horizontal\";\r\n                }\r\n                else {\r\n                    this.ticks.template.locationX = 0.5;\r\n                    this.ticks.template.locationY = 1;\r\n                    this.labels.template.rotation = -90;\r\n                    this.layout = \"vertical\";\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\r\n        /**\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomRatio\");\r\n        },\r\n        /**\r\n         * Indicates how slice's bottom will change in relation to slices top AND\r\n         * next slices top.\r\n         *\r\n         * Basically it's a relative value (0-1) that indicates bottom width\r\n         * position between current slice's top width and the top withd of the next\r\n         * one.\r\n         *\r\n         * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n         * slice with).\r\n         *\r\n         * `0` (default) will mean that bottom will be the same as top, resulting in\r\n         * a prefectly square slice.\r\n         *\r\n         * From the data-viz standpoint `0` is a correct setting, since area of the\r\n         * slices will depict their value correctly.\r\n         *\r\n         * `1` will mean that slice will become trapezoid with its bottom matching\r\n         * width of the next slice.\r\n         *\r\n         * `0.5` will make bottom width be in the middle of width of current slice\r\n         * and the next slice.\r\n         *\r\n         * @default 0\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"bottomRatio\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\r\n        /**\r\n         * A list of elements linking each actual slice.\r\n         *\r\n         * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n         * so they have all the same configuration options.\r\n         *\r\n         * You can use `template` of this link, to specify how links will look.\r\n         *\r\n         * ```TypeScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     \"type\": \"FunnelSeries\",\r\n         *      // ...\r\n         *      \"sliceLinks\": {\r\n         *        \"fillOpacity\": 0.5\r\n         *      }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Funnel links\r\n         */\r\n        get: function () {\r\n            if (!this._sliceLinks) {\r\n                var sliceLink = new _elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_2__[\"FunnelSlice\"]();\r\n                sliceLink.applyOnClones = true;\r\n                sliceLink.fillOpacity = 0.5;\r\n                sliceLink.expandDistance = -0.3;\r\n                sliceLink.hiddenState.properties.opacity = 0;\r\n                this._disposers.push(sliceLink);\r\n                this._sliceLinks = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__[\"ListTemplate\"](sliceLink);\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__[\"ListDisposer\"](this._sliceLinks));\r\n            }\r\n            return this._sliceLinks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!_core_Options__WEBPACK_IMPORTED_MODULE_12__[\"options\"].animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var delay = 0;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"indexed\"](this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.show(interpolationDuration, delay, [\"value\"]);\r\n        });\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields = [\"value\"];\r\n        var value = 0;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!_core_Options__WEBPACK_IMPORTED_MODULE_12__[\"options\"].animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"indexed\"](this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.hide(interpolationDuration, delay, value, fields);\r\n        });\r\n        var animation = _super.prototype.hide.call(this, duration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    FunnelSeries.prototype.setAlignLabels = function (value) {\r\n        _super.prototype.setAlignLabels.call(this, value);\r\n        this.ticks.template.disabled = !value;\r\n        var labelsContainer = this.labelsContainer;\r\n        if (labelsContainer) {\r\n            // do not align\r\n            if (!value) {\r\n                labelsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__[\"percent\"])(100);\r\n                labelsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__[\"percent\"])(100);\r\n            }\r\n            //align\r\n            else {\r\n                labelsContainer.height = undefined;\r\n                labelsContainer.width = undefined;\r\n                labelsContainer.margin(10, 10, 10, 10);\r\n            }\r\n        }\r\n        this.labelsOpposite = this.labelsOpposite;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\r\n        /**\r\n         * @return Labels on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"labelsOpposite\");\r\n        },\r\n        /**\r\n         * Put labels on the oppsite side of the series?\r\n         *\r\n         * This setting is only used if `alignLabels = true`.\r\n         *\r\n         * If set to `true` (default) labels will be drawn to the right (on vertical\r\n         * series), or to the bottom (on horizontal series).\r\n         *\r\n         * If set to `false`, labels will be positioned to the left or top\r\n         * respectively.\r\n         *\r\n         * @default true\r\n         * @since 4.1.13\r\n         * @param  value  Labels on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"labelsOpposite\", value);\r\n            var labelTemplate = this.labels.template;\r\n            var labelAlign = \"none\";\r\n            var labelValign = \"none\";\r\n            if (!this.alignLabels) {\r\n                if (this.orientation == \"vertical\") {\r\n                    labelAlign = \"center\";\r\n                }\r\n                else {\r\n                    labelValign = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                // opposite (left/bottom)\r\n                if (value) {\r\n                    this.labelsContainer.toFront();\r\n                    // left\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 1;\r\n                        labelTemplate.horizontalCenter = \"left\";\r\n                        labelAlign = \"right\";\r\n                    }\r\n                    // bottom\r\n                    else {\r\n                        this.ticks.template.locationY = 1;\r\n                        labelTemplate.horizontalCenter = \"right\";\r\n                        labelValign = \"bottom\";\r\n                    }\r\n                }\r\n                // non oposite (right/top)\r\n                else {\r\n                    this.labelsContainer.toBack();\r\n                    // right\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 0;\r\n                        labelAlign = \"left\";\r\n                    }\r\n                    // top\r\n                    else {\r\n                        labelValign = \"top\";\r\n                        this.ticks.template.locationY = 0;\r\n                    }\r\n                }\r\n            }\r\n            labelTemplate.align = labelAlign;\r\n            labelTemplate.valign = labelValign;\r\n            this.validateLayout();\r\n            this.ticks.each(function (tick) {\r\n                tick.invalidate();\r\n            });\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeries;\r\n}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__[\"PercentSeries\"]));\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n//# sourceMappingURL=FunnelSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js ***!
  \********************************************************************************/
/*! exports provided: LineSeriesDataItem, LineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineSeriesDataItem\", function() { return LineSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineSeries\", function() { return LineSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _XYSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _LineSeriesSegment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LineSeriesSegment */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/DateAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\");\n/* harmony import */ var _axes_DurationAxis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/DurationAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js\");\n/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../axes/CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/elements/Line */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js\");\n/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/elements/Label */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js\");\n/* harmony import */ var _core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/elements/Rectangle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../elements/Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/**\r\n * Line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[LineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LineSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(LineSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LineSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"LineSeriesDataItem\";\r\n        return _this;\r\n    }\r\n    return LineSeriesDataItem;\r\n}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__[\"XYSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a line graph.\r\n *\r\n * @see {@link ILineSeriesEvents} for a list of available Events\r\n * @see {@link ILineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar LineSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(LineSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LineSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Minimum distance in pixels between two adjacent points.\r\n         *\r\n         * If the distance is less than this setting, a point is skipped.\r\n         *\r\n         * This allows acceptable performance with huge amounts of data points.\r\n         *\r\n         * @default 0.5\r\n         */\r\n        _this.minDistance = 0.5;\r\n        _this.segments = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__[\"ListTemplate\"](_this.createSegment());\r\n        _this.segments.template.applyOnClones = true;\r\n        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__[\"ListDisposer\"](_this.segments));\r\n        _this._disposers.push(_this.segments.template);\r\n        _this._segmentsIterator = new _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"ListIterator\"](_this.segments, function () { return _this.segments.create(); });\r\n        _this._segmentsIterator.createNewItems = true;\r\n        _this.className = \"LineSeries\";\r\n        _this.strokeOpacity = 1;\r\n        _this.fillOpacity = 0;\r\n        _this.connect = true;\r\n        _this.tensionX = 1;\r\n        _this.tensionY = 1;\r\n        _this.autoGapCount = 1.1;\r\n        _this.smoothing = \"bezier\";\r\n        _this.segmentsContainer = _this.mainContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__[\"Container\"]);\r\n        _this.segmentsContainer.isMeasured = false;\r\n        // line series might have multiple segments and it has a separate sprite for fill and stroke for each segment. So we need to observe all the changes on series and set them on the segments\r\n        // todo: we need list here, otherwise everything will be redrawn event on change of properties like tooltipX or similar.\r\n        // this.addEventListener(SpriteEvent.PROPERTY_CHANGED, this.validateDataElements, false, this);\r\n        _this.bulletsContainer.toFront();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    LineSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Line Series\");\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LineSeries.prototype.createSegment = function () {\r\n        return new _LineSeriesSegment__WEBPACK_IMPORTED_MODULE_5__[\"LineSeriesSegment\"]();\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    LineSeries.prototype.createDataItem = function () {\r\n        return new LineSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits data item's working values.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @param index     Data item's index\r\n     */\r\n    LineSeries.prototype.setInitialWorkingValues = function (dataItem) {\r\n        // this makes data items animate when added\r\n        var yAxis = this._yAxis.get();\r\n        var xAxis = this._xAxis.get();\r\n        if (this.appeared && this.visible) {\r\n            var previousDataItem = this.dataItems.getIndex(dataItem.index - 1);\r\n            dataItem.component = this; // as these values are set before, we don't know component yet\r\n            if (this.baseAxis == xAxis) {\r\n                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                    var initialY = yAxis.minZoomed;\r\n                    if (previousDataItem) {\r\n                        initialY = previousDataItem.values[\"valueY\"].workingValue;\r\n                    }\r\n                    // this makes line animate from previous point to newly added point\r\n                    dataItem.setWorkingValue(\"valueY\", initialY, 0);\r\n                    dataItem.setWorkingValue(\"valueY\", dataItem.values.valueY.value);\r\n                    if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                        dataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n                        dataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX); // animate to it's location\r\n                    }\r\n                    else if (xAxis instanceof _axes_DurationAxis__WEBPACK_IMPORTED_MODULE_8__[\"DurationAxis\"]) {\r\n                        if (previousDataItem) {\r\n                            var value = dataItem.valueX;\r\n                            dataItem.setWorkingValue(\"valueX\", previousDataItem.valueX, 0); // instantly move it to previous\r\n                            dataItem.setWorkingValue(\"valueX\", value); // animate to new value\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.baseAxis == yAxis) {\r\n                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                    var initialX = xAxis.minZoomed;\r\n                    if (previousDataItem) {\r\n                        initialX = previousDataItem.values[\"valueX\"].workingValue;\r\n                    }\r\n                    dataItem.setWorkingValue(\"valueX\", initialX, 0);\r\n                    dataItem.setWorkingValue(\"valueX\", dataItem.values.valueX.value);\r\n                    if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                        dataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n                        dataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY); // animate to it's location\r\n                    }\r\n                    else if (yAxis instanceof _axes_DurationAxis__WEBPACK_IMPORTED_MODULE_8__[\"DurationAxis\"]) {\r\n                        if (previousDataItem) {\r\n                            var value = dataItem.valueY;\r\n                            dataItem.setWorkingValue(\"valueY\", previousDataItem.valueY, 0); // instantly move it to previous\r\n                            dataItem.setWorkingValue(\"valueY\", value); // animate to new value\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.baseAxis == xAxis) {\r\n                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                    if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                        dataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX);\r\n                    }\r\n                    if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__[\"CategoryAxis\"]) {\r\n                        dataItem.setWorkingLocation(\"categoryX\", dataItem.locations.categoryX);\r\n                    }\r\n                }\r\n            }\r\n            if (this.baseAxis == yAxis) {\r\n                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__[\"ValueAxis\"]) {\r\n                    if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                        dataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY);\r\n                    }\r\n                    if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__[\"CategoryAxis\"]) {\r\n                        dataItem.setWorkingLocation(\"categoryY\", dataItem.locations.categoryY);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    LineSeries.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        _super.prototype.updateLegendValue.call(this, dataItem, notRange);\r\n        //This is hack to save some methos, used to set tooltip color source only\r\n        if (dataItem && dataItem.segment) {\r\n            this.tooltipColorSource = dataItem.segment;\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LineSeries.prototype.validate = function () {\r\n        var _this = this;\r\n        _super.prototype.validate.call(this);\r\n        if (this.xAxis && this.yAxis) {\r\n            this._segmentsIterator.reset();\r\n            this.openSegmentWrapper(this._adjustedStartIndex);\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](this.axisRanges.iterator(), function (range) {\r\n                _this.openSegmentWrapper(_this._adjustedStartIndex, range);\r\n            });\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](this._segmentsIterator.iterator(), function (segment) {\r\n                segment.__disabled = true;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [sliceData description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    LineSeries.prototype.sliceData = function () {\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        // we need extra one item to both sides with values for line series, otherwise the line will not continue out of bounds of the chart while scrolling\r\n        // find first to the left\r\n        // TODO use iterator instead\r\n        for (var i = this.startIndex - 1; i >= 0; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            if (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n                startIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        this._adjustedStartIndex = this.findAdjustedIndex(startIndex, [\"stroke\", \"strokeWidth\", \"strokeDasharray\", \"strokeOpacity\", \"fill\", \"fillOpacity\", \"opacity\"]);\r\n        // find first to the right\r\n        // TODO use iterator instead\r\n        for (var i = this.endIndex, len = this.dataItems.length; i < len; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            if (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n                endIndex = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        this._workingStartIndex = startIndex;\r\n        this._workingEndIndex = endIndex;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LineSeries.prototype.findAdjustedIndex = function (adjustedIndex, properties) {\r\n        var _this = this;\r\n        var propertyFields = this.propertyFields;\r\n        var startIndex = adjustedIndex;\r\n        _core_utils_Array__WEBPACK_IMPORTED_MODULE_17__[\"each\"](properties, function (property) {\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](propertyFields[property])) {\r\n                for (var i = startIndex; i >= 0; i--) {\r\n                    var dataItem = _this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](dataItem.properties[property])) {\r\n                            if (adjustedIndex > i) {\r\n                                adjustedIndex = i;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return adjustedIndex;\r\n    };\r\n    /**\r\n     * Wraps openSegment call with iterative solution to prevent stack overflow\r\n     *\r\n     * @param openIndex  Index\r\n     * @param axisRange  Range\r\n     */\r\n    LineSeries.prototype.openSegmentWrapper = function (openIndex, axisRange) {\r\n        var params = {\r\n            \"index\": openIndex,\r\n            \"axisRange\": axisRange\r\n        };\r\n        do {\r\n            params = this.openSegment(params.index, params.axisRange);\r\n        } while (params);\r\n    };\r\n    LineSeries.prototype.getSegment = function () {\r\n        var segment = this._segmentsIterator.getFirst();\r\n        segment.series = this;\r\n        if (segment.isDisposed()) {\r\n            this.segments.removeValue(segment);\r\n            return this.getSegment();\r\n        }\r\n        return segment;\r\n    };\r\n    /**\r\n     * [openSegment description]\r\n     *\r\n     * @todo Description\r\n     * @param openIndex  [description]\r\n     * @param axisRange  [description]\r\n     */\r\n    LineSeries.prototype.openSegment = function (openIndex, axisRange) {\r\n        var addToClose = false;\r\n        var points = [];\r\n        openIndex = Math.min(openIndex, this.dataItems.length);\r\n        var endIndex = Math.min(this._workingEndIndex, this.dataItems.length);\r\n        this._workingEndIndex = Math.min(this._workingEndIndex, this.dataItems.length);\r\n        var closeIndex;\r\n        var propertiesChanged = false;\r\n        var segment = this.getSegment();\r\n        segment.strokeDasharray = undefined;\r\n        segment.__disabled = false;\r\n        if (axisRange) {\r\n            segment.parent = axisRange.contents;\r\n            _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__[\"copyProperties\"](axisRange.contents, segment, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        }\r\n        else {\r\n            _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__[\"copyProperties\"](this, segment, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n            segment.filters.clear();\r\n            segment.parent = this.segmentsContainer;\r\n        }\r\n        this.group.node.removeAttribute(\"fill\");\r\n        var connect = this.connect;\r\n        var valuesFound = false; // some flag to avoid multiple closes if no values found\r\n        for (var i = openIndex; i < endIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.segment = segment;\r\n            if (dataItem.hasProperties) {\r\n                // if this is first item of segment\r\n                if (i == openIndex) {\r\n                    this.updateSegmentProperties(dataItem.properties, segment);\r\n                }\r\n                else {\r\n                    // this time we only need to know if properties changed, so we don't pass segment\r\n                    propertiesChanged = this.updateSegmentProperties(dataItem.properties, segment, true);\r\n                }\r\n            }\r\n            if (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n                this.addPoints(points, dataItem, this.xField, this.yField);\r\n                valuesFound = true;\r\n            }\r\n            else {\r\n                // if no values in first data item, go to next\r\n                if (i == openIndex) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    // stop cycle\r\n                    if (!connect && valuesFound) {\r\n                        closeIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            closeIndex = i;\r\n            if (this.baseAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__[\"DateAxis\"]) {\r\n                var next = this.dataItems.getIndex(i + 1);\r\n                if (next && this.baseAxis.makeGap(next, dataItem)) {\r\n                    addToClose = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (propertiesChanged) {\r\n                break;\r\n            }\r\n        }\r\n        return this.closeSegment(segment, points, openIndex, closeIndex, axisRange, addToClose);\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @todo Description\r\n     * @param points    [description]\r\n     * @param dataItem  [description]\r\n     * @param xField    [description]\r\n     * @param yField    [description]\r\n     * @param backwards [description]\r\n     */\r\n    LineSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {\r\n        var point = this.getPoint(dataItem, xField, yField, dataItem.workingLocations[xField], dataItem.workingLocations[yField]);\r\n        if (!backwards) {\r\n            dataItem.point = point;\r\n        }\r\n        points.push(point);\r\n    };\r\n    /**\r\n     * [closeSegment description]\r\n     *\r\n     * @todo Description\r\n     * @param segment    [description]\r\n     * @param points     [description]\r\n     * @param openIndex  [description]\r\n     * @param closeIndex [description]\r\n     * @param axisRange  [description]\r\n     */\r\n    LineSeries.prototype.closeSegment = function (segment, points, openIndex, closeIndex, axisRange, add) {\r\n        var closePoints = [];\r\n        if (this.dataFields[this._xOpenField] ||\r\n            this.dataFields[this._yOpenField] ||\r\n            this.stacked) {\r\n            for (var i = closeIndex; i >= openIndex; i--) {\r\n                var dataItem = this.dataItems.getIndex(i);\r\n                if (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) { // not sure, this means that open point will only be added if value is also set for this point, but maybe it's ok.\r\n                    this.addPoints(closePoints, dataItem, this.xOpenField, this.yOpenField, true);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var baseAxis = this.baseAxis;\r\n            var count = points.length;\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (count > 0) {\r\n                if (baseAxis == xAxis) {\r\n                    closePoints.push({ x: points[count - 1].x, y: yAxis.basePoint.y }); // last x\r\n                    closePoints.push({ x: points[0].x, y: yAxis.basePoint.y }); // first x\r\n                }\r\n                else {\r\n                    closePoints.push({ x: xAxis.basePoint.x, y: points[count - 1].y }); // last y\r\n                    closePoints.push({ x: xAxis.basePoint.x, y: points[0].y }); // first y\r\n                }\r\n            }\r\n        }\r\n        this.drawSegment(segment, points, closePoints);\r\n        if (add) {\r\n            closeIndex++;\r\n        }\r\n        if (closeIndex < this._workingEndIndex - 1) {\r\n            return { \"index\": closeIndex, \"axisRange\": axisRange };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Draws the line segment.\r\n     *\r\n     * @param segment     Segment\r\n     * @param points      Segment points\r\n     * @param closePoints Segment close points\r\n     */\r\n    LineSeries.prototype.drawSegment = function (segment, points, closePoints) {\r\n        segment.drawSegment(points, closePoints, this.tensionX, this.tensionY);\r\n    };\r\n    /**\r\n     * Segement will get its colors from `this.dataItem`, as thats how\r\n     * `getPropertyValue()` method works.\r\n     *\r\n     * We pass `lineSeriesDataItem.properties` as item here each time when a flag\r\n     * `hasProperties` is set to `true` on data item (this means it can contain\r\n     * some properties set).\r\n     *\r\n     * @param itemProperties  Item properties\r\n     * @param segment         Segment\r\n     * @return Properties changed?\r\n     */\r\n    LineSeries.prototype.updateSegmentProperties = function (itemProperties, segment, checkOnly) {\r\n        var changed = false;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__[\"each\"](itemProperties, function (propertyName, value) {\r\n            // some value must be defined\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](value)) {\r\n                var currentValue = segment[propertyName];\r\n                var currentValueStr = void 0;\r\n                // current value can be Color, number, anything. So we check if it has toString, otherwise just do String().\r\n                // toString() will return hex if it's color. The only problem is that it will return lowercased hex and if we have uppercase in data, it will think that it changed\r\n                if (currentValue) {\r\n                    if (currentValue.toString) {\r\n                        currentValueStr = currentValue.toString();\r\n                    }\r\n                    else {\r\n                        currentValueStr = currentValue; // not doing String(currentValue) as this will make all Objects the same\r\n                    }\r\n                }\r\n                var valueStr = void 0;\r\n                if (value) {\r\n                    if (value.toString) {\r\n                        valueStr = value.toString();\r\n                    }\r\n                    else {\r\n                        valueStr = value; // not doing String(currentValue) as this will make all Objects the same\r\n                    }\r\n                }\r\n                if (currentValue == value || (currentValueStr != undefined && valueStr != undefined && currentValueStr == valueStr)) {\r\n                    // void\r\n                }\r\n                else {\r\n                    if (!checkOnly) {\r\n                        segment[propertyName] = value;\r\n                    }\r\n                    changed = true;\r\n                }\r\n            }\r\n        });\r\n        return changed;\r\n    };\r\n    Object.defineProperty(LineSeries.prototype, \"connect\", {\r\n        /**\r\n         * @return Connect?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"connect\");\r\n        },\r\n        /**\r\n         * Connect the lines over empty data points?\r\n         *\r\n         * If set to `true` the line will connect two adjacent data points by a\r\n         * straight line. Even if there are data points with missing values\r\n         * in-between.\r\n         *\r\n         * If you set this to `false`, the line will break when there are missing\r\n         * values.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#Line_series_with_gaps} for more information about this feature\r\n         * @default true\r\n         * @param value  Connect?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"connect\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"tensionX\", {\r\n        /**\r\n         * @return Horizontal tension (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tensionX\");\r\n        },\r\n        /**\r\n         * Horizontal tension setting of the line (0-1).\r\n         *\r\n         * Can be used to create smoothed lines. It works like this:\r\n         *\r\n         * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n         * will mean that the \"tension\" is very high, so the line is maximally\r\n         * attracted to the points it connects, hence the straight line.\r\n         *\r\n         * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n         *\r\n         * The smaller the tension setting, the more relaxed the line and the more\r\n         * wide the curve.\r\n         *\r\n         * This setting is for horizontal tension, meaning the curve will bend in\r\n         * such way that it never goes below or above connecting points. To enable\r\n         * vertical bending as well, use `tensionY`.\r\n         *\r\n         * IMPORTANT: line smoothing works best when data items are placed at regular\r\n         * intervals. For setups where data items are spaced erratically, enabling\r\n         * smoothing might result in awkwardly looking lines.\r\n         *\r\n         * @default 1\r\n         * @param value  Horizontal tension (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tensionX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"tensionY\", {\r\n        /**\r\n         * @return Vertical tension (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tensionY\");\r\n        },\r\n        /**\r\n         * Can be used to create smoothed lines. It works like this:\r\n         *\r\n         * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n         * will mean that the \"tension\" is very high, so the line is maximally\r\n         * attracted to the points it connects, hence the straight line.\r\n         *\r\n         * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n         *\r\n         * The smaller the tension setting, the more relaxed the line and the more\r\n         * wide the curve.\r\n         *\r\n         * This setting is for vertical tension, meaning the curve might bend in\r\n         * such way that it will go below or above connected points.\r\n         *\r\n         * Combine this setting with `tensionX` to create beautifully looking\r\n         * smoothed line series.\r\n         *\r\n         * @default 1\r\n         * @param value  Vertical tension (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tensionY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    LineSeries.prototype.createLegendMarker = function (marker) {\r\n        var _this = this;\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.disposeChildren();\r\n        var line = marker.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_11__[\"Line\"]);\r\n        line.shouldClone = false;\r\n        //line.copyFrom(<any>this); coppies events which is not good\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__[\"copyProperties\"](this, line, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        line.x2 = w;\r\n        line.y = h / 2;\r\n        line.y2 = 0.00001;\r\n        line.visible = true;\r\n        if (this.fillOpacity > 0) {\r\n            var fill = marker.createChild(_core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_13__[\"Rectangle\"]);\r\n            //fill.copyFrom(<any>this); coppies events which is not good\r\n            _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__[\"copyProperties\"](this, fill, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n            fill.width = w;\r\n            fill.height = h;\r\n            fill.y = 0;\r\n            fill.strokeOpacity = 0;\r\n            fill.visible = true;\r\n            line.y = 0;\r\n        }\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = this.stroke;\r\n        legendDataItem.colorOrig = this.fill;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"eachContinue\"](this.bullets.iterator(), function (bullet) {\r\n            if ((bullet instanceof _elements_Bullet__WEBPACK_IMPORTED_MODULE_18__[\"Bullet\"]) && !bullet.copyToLegendMarker) {\r\n                return false;\r\n            }\r\n            var hasLabels = false;\r\n            if (bullet instanceof _core_Container__WEBPACK_IMPORTED_MODULE_3__[\"Container\"]) {\r\n                // do not copy bullets with labels\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__[\"each\"](bullet.children.iterator(), function (child) {\r\n                    if (child instanceof _core_elements_Label__WEBPACK_IMPORTED_MODULE_12__[\"Label\"]) {\r\n                        hasLabels = true;\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            if (!hasLabels) {\r\n                var clone = bullet.clone();\r\n                clone.parent = marker;\r\n                clone.isMeasured = true;\r\n                clone.tooltipText = undefined;\r\n                clone.x = w / 2;\r\n                if (_this.fillOpacity > 0) {\r\n                    clone.y = 0;\r\n                }\r\n                else {\r\n                    clone.y = h / 2;\r\n                }\r\n                clone.visible = true;\r\n                // otherwise will not transit to color after hiding\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](clone.fill)) {\r\n                    clone.fill = _this.fill;\r\n                }\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__[\"hasValue\"](clone.stroke)) {\r\n                    clone.stroke = _this.stroke;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LineSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.segments.clear();\r\n    };\r\n    Object.defineProperty(LineSeries.prototype, \"autoGapCount\", {\r\n        /**\r\n         * @return Gap count\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"autoGapCount\");\r\n        },\r\n        /**\r\n         * If `connect = false` and distance between two data points is bigger\r\n         * than `baseInterval * autoGapCount`, a line will break automatically.\r\n         *\r\n         * @since 4.2.4\r\n         * @param  value  Gap count\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"autoGapCount\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"smoothing\", {\r\n        /**\r\n         * @return Smoothing algorithm\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"smoothing\");\r\n        },\r\n        /**\r\n         * Smoothing algorithm to be used for lines.\r\n         *\r\n         * Available options: `\"bezier\"` (default), `\"monotoneX\"`, and `\"monotoneY\"`.\r\n         *\r\n         * Monotone options are best suited for data with irregular intervals. Use `\"monotoneX\"` for\r\n         * horizontal lines, and `\"monotoneY\"` vertical ones.\r\n         *\r\n         * NOTE: Both \"monotone\" algorithms will ignore `tensionX` and `tensionY` settings.\r\n         *\r\n         * @since 4.10.0\r\n         * @param  value  Smoothing algorithm\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"smoothing\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LineSeries;\r\n}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__[\"XYSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_10__[\"registry\"].registeredClasses[\"LineSeries\"] = LineSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_10__[\"registry\"].registeredClasses[\"LineSeriesDataItem\"] = LineSeriesDataItem;\r\n//# sourceMappingURL=LineSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js ***!
  \***************************************************************************************/
/*! exports provided: LineSeriesSegment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineSeriesSegment\", function() { return LineSeriesSegment; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js\");\n/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link ILineSeriesSegmentEvents} for a list of available events\r\n * @see {@link ILineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nvar LineSeriesSegment = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(LineSeriesSegment, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LineSeriesSegment() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"LineSeriesSegment\";\r\n        // Set defaults\r\n        _this.isMeasured = false;\r\n        _this.interactionsEnabled = false;\r\n        _this.layout = \"none\";\r\n        // Create fill element\r\n        var fillSprite = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        _this.fillSprite = fillSprite;\r\n        fillSprite.shouldClone = false;\r\n        fillSprite.setElement(_this.paper.add(\"path\"));\r\n        fillSprite.isMeasured = false;\r\n        _this._disposers.push(fillSprite);\r\n        // Create line element\r\n        var strokeSprite = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        _this.strokeSprite = strokeSprite;\r\n        strokeSprite.shouldClone = false;\r\n        strokeSprite.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_7__[\"color\"])();\r\n        strokeSprite.setElement(_this.paper.add(\"path\"));\r\n        strokeSprite.isMeasured = false;\r\n        _this._disposers.push(strokeSprite);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the series segment.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param points       Points to connect\r\n     * @param closePoints  ?\r\n     * @param smoothnessX  Horizontal bezier setting (?)\r\n     * @param smoothnessY  Vertical bezier setting (?)\r\n     */\r\n    LineSeriesSegment.prototype.drawSegment = function (points, closePoints, smoothnessX, smoothnessY) {\r\n        if (!this.disabled) {\r\n            if (points.length > 0 && closePoints.length > 0) {\r\n                // first moveTo helps to avoid Chrome straight line in the mask bug.\r\n                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"]({ x: points[0].x - 0.2, y: points[0].y - 0.2 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"moveTo\"](points[0]);\r\n                var series = this.series;\r\n                if (series.smoothing == \"bezier\") {\r\n                    path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__[\"Tension\"](smoothnessX, smoothnessY).smooth(points);\r\n                }\r\n                else if (series.smoothing == \"monotoneX\") {\r\n                    path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__[\"MonotoneX\"]({ closed: false }).smooth(points);\r\n                }\r\n                else if (series.smoothing == \"monotoneY\") {\r\n                    path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__[\"MonotoneY\"]({ closed: false }).smooth(points);\r\n                }\r\n                if (this.strokeOpacity == 0 || this.strokeSprite.strokeOpacity == 0) {\r\n                    // like this and not if != 0, otherwise ranges stroke won't be drawn.\r\n                }\r\n                else {\r\n                    this.strokeSprite.path = path;\r\n                }\r\n                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](closePoints[0].x) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"](closePoints[0].y)) {\r\n                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"](closePoints[0]);\r\n                        if (series.smoothing == \"bezier\") {\r\n                            path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__[\"Tension\"](smoothnessX, smoothnessY).smooth(closePoints);\r\n                        }\r\n                        else if (series.smoothing == \"monotoneX\") {\r\n                            path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__[\"MonotoneX\"]({ closed: false }).smooth(closePoints);\r\n                        }\r\n                        else if (series.smoothing == \"monotoneY\") {\r\n                            path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__[\"MonotoneY\"]({ closed: false }).smooth(closePoints);\r\n                        }\r\n                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"lineTo\"](points[0]);\r\n                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"closePath\"]();\r\n                        this.fillSprite.path = path;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.fillSprite.path = \"\";\r\n                this.strokeSprite.path = \"\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies properties from a [[Sprite]] to both line and fill elements.\r\n     *\r\n     * @param source Source [[Sprite]] to copy properties from\r\n     */\r\n    LineSeriesSegment.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        var lineElement = this.strokeSprite;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__[\"copyProperties\"](source, lineElement.properties, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        lineElement.events.copyFrom(source.strokeSprite.events);\r\n        lineElement.fillOpacity = 0;\r\n        var fillElement = this.fillSprite;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__[\"copyProperties\"](source, fillElement.properties, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        fillElement.events.copyFrom(source.fillSprite.events);\r\n        fillElement.strokeOpacity = 0;\r\n    };\r\n    return LineSeriesSegment;\r\n}(_core_Container__WEBPACK_IMPORTED_MODULE_1__[\"Container\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"LineSeriesSegment\"] = LineSeriesSegment;\r\n//# sourceMappingURL=LineSeriesSegment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9MaW5lU2VyaWVzU2VnbWVudC5qcz8wMDNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUQ7QUFDWTtBQUNkO0FBQ0k7QUFDQTtBQUNKO0FBQ0E7QUFDYztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLCtCQUErQjtBQUN4QyxTQUFTLGlDQUFpQztBQUMxQztBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsbURBQU07QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLG1EQUFNO0FBQ25EO0FBQ0E7QUFDQSw0QkFBNEIsK0RBQUs7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFZLEVBQUUsNkNBQTZDLElBQUksMkRBQVk7QUFDdEc7QUFDQTtBQUNBLGdDQUFnQyxpRUFBa0I7QUFDbEQ7QUFDQTtBQUNBLGdDQUFnQyxtRUFBb0IsRUFBRSxnQkFBZ0I7QUFDdEU7QUFDQTtBQUNBLGdDQUFnQyxtRUFBb0IsRUFBRSxnQkFBZ0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RUFBOEU7QUFDOUUsd0JBQXdCLHlEQUFjLHNCQUFzQix5REFBYztBQUMxRSxnQ0FBZ0MsMkRBQVk7QUFDNUM7QUFDQSx3Q0FBd0MsaUVBQWtCO0FBQzFEO0FBQ0E7QUFDQSx3Q0FBd0MsbUVBQW9CLEVBQUUsZ0JBQWdCO0FBQzlFO0FBQ0E7QUFDQSx3Q0FBd0MsbUVBQW9CLEVBQUUsZ0JBQWdCO0FBQzlFO0FBQ0EsZ0NBQWdDLDJEQUFZO0FBQzVDLGdDQUFnQyw4REFBZTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFzQixpQ0FBaUMsNkRBQWdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQXNCLGlDQUFpQyw2REFBZ0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMseURBQVM7QUFDa0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvc2VyaWVzL0xpbmVTZXJpZXNTZWdtZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpbmUgc2VyaWVzIHNlZ21lbnQgbW9kdWxlLlxyXG4gKiBAdG9kbyBBZGQgZGVzY3JpcHRpb24gYWJvdXQgd2hhdCB0aGlzIGlzXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gXCIuLi8uLi9jb3JlL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgeyBTcHJpdGUsIHZpc3VhbFByb3BlcnRpZXMgfSBmcm9tIFwiLi4vLi4vY29yZS9TcHJpdGVcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkcGF0aCBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXJpbmcvUGF0aFwiO1xyXG5pbXBvcnQgKiBhcyAkb2JqZWN0IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL09iamVjdFwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbmltcG9ydCB7IGNvbG9yIH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvQ29sb3JcIjtcclxuaW1wb3J0ICogYXMgJHNtb290aGluZyBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXJpbmcvU21vb3RoaW5nXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogUmVwcmVzZW50cyBhIGxpbmUgc2VyaWVzIHNlZ21lbnQuXHJcbiAqXHJcbiAqIEEgbGluZSBzZWdtZW50IGNhbiBiZSB1c2VkIHRvIGFwcGx5IGRpZmZlcmVudCBwcm9wZXJ0aWVzIHRvIGEgcGFydCBvZiB0aGVcclxuICogbGluZSBzZXJpZXMsIGJldHdlZW4gdHdvIGRhdGEgcG9pbnRzLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJTGluZVNlcmllc1NlZ21lbnRFdmVudHN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIGV2ZW50c1xyXG4gKiBAc2VlIHtAbGluayBJTGluZVNlcmllc1NlZ21lbnRBZGFwdGVyc30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgQWRhcHRlcnNcclxuICogQHRvZG8gRXhhbXBsZVxyXG4gKi9cclxudmFyIExpbmVTZXJpZXNTZWdtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKExpbmVTZXJpZXNTZWdtZW50LCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBMaW5lU2VyaWVzU2VnbWVudCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBcclxuICAgICAgICAvLyBJbml0XHJcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkxpbmVTZXJpZXNTZWdtZW50XCI7XHJcbiAgICAgICAgLy8gU2V0IGRlZmF1bHRzXHJcbiAgICAgICAgX3RoaXMuaXNNZWFzdXJlZCA9IGZhbHNlO1xyXG4gICAgICAgIF90aGlzLmludGVyYWN0aW9uc0VuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBfdGhpcy5sYXlvdXQgPSBcIm5vbmVcIjtcclxuICAgICAgICAvLyBDcmVhdGUgZmlsbCBlbGVtZW50XHJcbiAgICAgICAgdmFyIGZpbGxTcHJpdGUgPSBfdGhpcy5jcmVhdGVDaGlsZChTcHJpdGUpO1xyXG4gICAgICAgIF90aGlzLmZpbGxTcHJpdGUgPSBmaWxsU3ByaXRlO1xyXG4gICAgICAgIGZpbGxTcHJpdGUuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBmaWxsU3ByaXRlLnNldEVsZW1lbnQoX3RoaXMucGFwZXIuYWRkKFwicGF0aFwiKSk7XHJcbiAgICAgICAgZmlsbFNwcml0ZS5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKGZpbGxTcHJpdGUpO1xyXG4gICAgICAgIC8vIENyZWF0ZSBsaW5lIGVsZW1lbnRcclxuICAgICAgICB2YXIgc3Ryb2tlU3ByaXRlID0gX3RoaXMuY3JlYXRlQ2hpbGQoU3ByaXRlKTtcclxuICAgICAgICBfdGhpcy5zdHJva2VTcHJpdGUgPSBzdHJva2VTcHJpdGU7XHJcbiAgICAgICAgc3Ryb2tlU3ByaXRlLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICAgICAgc3Ryb2tlU3ByaXRlLmZpbGwgPSBjb2xvcigpO1xyXG4gICAgICAgIHN0cm9rZVNwcml0ZS5zZXRFbGVtZW50KF90aGlzLnBhcGVyLmFkZChcInBhdGhcIikpO1xyXG4gICAgICAgIHN0cm9rZVNwcml0ZS5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKHN0cm9rZVNwcml0ZSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBEcmF3cyB0aGUgc2VyaWVzIHNlZ21lbnQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIHBvaW50cyAgICAgICBQb2ludHMgdG8gY29ubmVjdFxyXG4gICAgICogQHBhcmFtIGNsb3NlUG9pbnRzICA/XHJcbiAgICAgKiBAcGFyYW0gc21vb3RobmVzc1ggIEhvcml6b250YWwgYmV6aWVyIHNldHRpbmcgKD8pXHJcbiAgICAgKiBAcGFyYW0gc21vb3RobmVzc1kgIFZlcnRpY2FsIGJlemllciBzZXR0aW5nICg/KVxyXG4gICAgICovXHJcbiAgICBMaW5lU2VyaWVzU2VnbWVudC5wcm90b3R5cGUuZHJhd1NlZ21lbnQgPSBmdW5jdGlvbiAocG9pbnRzLCBjbG9zZVBvaW50cywgc21vb3RobmVzc1gsIHNtb290aG5lc3NZKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgIGlmIChwb2ludHMubGVuZ3RoID4gMCAmJiBjbG9zZVBvaW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBmaXJzdCBtb3ZlVG8gaGVscHMgdG8gYXZvaWQgQ2hyb21lIHN0cmFpZ2h0IGxpbmUgaW4gdGhlIG1hc2sgYnVnLlxyXG4gICAgICAgICAgICAgICAgdmFyIHBhdGggPSAkcGF0aC5tb3ZlVG8oeyB4OiBwb2ludHNbMF0ueCAtIDAuMiwgeTogcG9pbnRzWzBdLnkgLSAwLjIgfSkgKyAkcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKTtcclxuICAgICAgICAgICAgICAgIHZhciBzZXJpZXMgPSB0aGlzLnNlcmllcztcclxuICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuc21vb3RoaW5nID09IFwiYmV6aWVyXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoICs9IG5ldyAkc21vb3RoaW5nLlRlbnNpb24oc21vb3RobmVzc1gsIHNtb290aG5lc3NZKS5zbW9vdGgocG9pbnRzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlcmllcy5zbW9vdGhpbmcgPT0gXCJtb25vdG9uZVhcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGggKz0gbmV3ICRzbW9vdGhpbmcuTW9ub3RvbmVYKHsgY2xvc2VkOiBmYWxzZSB9KS5zbW9vdGgocG9pbnRzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlcmllcy5zbW9vdGhpbmcgPT0gXCJtb25vdG9uZVlcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGggKz0gbmV3ICRzbW9vdGhpbmcuTW9ub3RvbmVZKHsgY2xvc2VkOiBmYWxzZSB9KS5zbW9vdGgocG9pbnRzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0cm9rZU9wYWNpdHkgPT0gMCB8fCB0aGlzLnN0cm9rZVNwcml0ZS5zdHJva2VPcGFjaXR5ID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBsaWtlIHRoaXMgYW5kIG5vdCBpZiAhPSAwLCBvdGhlcndpc2UgcmFuZ2VzIHN0cm9rZSB3b24ndCBiZSBkcmF3bi5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3Ryb2tlU3ByaXRlLnBhdGggPSBwYXRoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlsbE9wYWNpdHkgPiAwIHx8IHRoaXMuZmlsbFNwcml0ZS5maWxsT3BhY2l0eSA+IDApIHsgLy8gaGVscHMgdG8gYXZvaWQgZHJhd2luZyBmaWxsIG9iamVjdCBpZiBmaWxsIGlzIG5vdCB2aXNpYmxlXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCR0eXBlLmlzTnVtYmVyKGNsb3NlUG9pbnRzWzBdLngpICYmICR0eXBlLmlzTnVtYmVyKGNsb3NlUG9pbnRzWzBdLnkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubGluZVRvKGNsb3NlUG9pbnRzWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlcmllcy5zbW9vdGhpbmcgPT0gXCJiZXppZXJcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCArPSBuZXcgJHNtb290aGluZy5UZW5zaW9uKHNtb290aG5lc3NYLCBzbW9vdGhuZXNzWSkuc21vb3RoKGNsb3NlUG9pbnRzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzZXJpZXMuc21vb3RoaW5nID09IFwibW9ub3RvbmVYXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggKz0gbmV3ICRzbW9vdGhpbmcuTW9ub3RvbmVYKHsgY2xvc2VkOiBmYWxzZSB9KS5zbW9vdGgoY2xvc2VQb2ludHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlcmllcy5zbW9vdGhpbmcgPT0gXCJtb25vdG9uZVlcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCArPSBuZXcgJHNtb290aGluZy5Nb25vdG9uZVkoeyBjbG9zZWQ6IGZhbHNlIH0pLnNtb290aChjbG9zZVBvaW50cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCArPSAkcGF0aC5saW5lVG8ocG9pbnRzWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aCArPSAkcGF0aC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5maWxsU3ByaXRlLnBhdGggPSBwYXRoO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsbFNwcml0ZS5wYXRoID0gXCJcIjtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3Ryb2tlU3ByaXRlLnBhdGggPSBcIlwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ29waWVzIHByb3BlcnRpZXMgZnJvbSBhIFtbU3ByaXRlXV0gdG8gYm90aCBsaW5lIGFuZCBmaWxsIGVsZW1lbnRzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzb3VyY2UgU291cmNlIFtbU3ByaXRlXV0gdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cclxuICAgICAqL1xyXG4gICAgTGluZVNlcmllc1NlZ21lbnQucHJvdG90eXBlLmNvcHlGcm9tID0gZnVuY3Rpb24gKHNvdXJjZSkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuY29weUZyb20uY2FsbCh0aGlzLCBzb3VyY2UpO1xyXG4gICAgICAgIHZhciBsaW5lRWxlbWVudCA9IHRoaXMuc3Ryb2tlU3ByaXRlO1xyXG4gICAgICAgICRvYmplY3QuY29weVByb3BlcnRpZXMoc291cmNlLCBsaW5lRWxlbWVudC5wcm9wZXJ0aWVzLCB2aXN1YWxQcm9wZXJ0aWVzKTtcclxuICAgICAgICBsaW5lRWxlbWVudC5ldmVudHMuY29weUZyb20oc291cmNlLnN0cm9rZVNwcml0ZS5ldmVudHMpO1xyXG4gICAgICAgIGxpbmVFbGVtZW50LmZpbGxPcGFjaXR5ID0gMDtcclxuICAgICAgICB2YXIgZmlsbEVsZW1lbnQgPSB0aGlzLmZpbGxTcHJpdGU7XHJcbiAgICAgICAgJG9iamVjdC5jb3B5UHJvcGVydGllcyhzb3VyY2UsIGZpbGxFbGVtZW50LnByb3BlcnRpZXMsIHZpc3VhbFByb3BlcnRpZXMpO1xyXG4gICAgICAgIGZpbGxFbGVtZW50LmV2ZW50cy5jb3B5RnJvbShzb3VyY2UuZmlsbFNwcml0ZS5ldmVudHMpO1xyXG4gICAgICAgIGZpbGxFbGVtZW50LnN0cm9rZU9wYWNpdHkgPSAwO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBMaW5lU2VyaWVzU2VnbWVudDtcclxufShDb250YWluZXIpKTtcclxuZXhwb3J0IHsgTGluZVNlcmllc1NlZ21lbnQgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiTGluZVNlcmllc1NlZ21lbnRcIl0gPSBMaW5lU2VyaWVzU2VnbWVudDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGluZVNlcmllc1NlZ21lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js ***!
  \********************************************************************************/
/*! exports provided: OHLCSeriesDataItem, OHLCSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OHLCSeriesDataItem\", function() { return OHLCSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OHLCSeries\", function() { return OHLCSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _CandlestickSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CandlestickSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _elements_OHLC__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/OHLC */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[OHLCSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar OHLCSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(OHLCSeriesDataItem, _super);\r\n    /**\r\n     * Defines a type of [[Component]] this data item is used for\r\n     * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n     */\r\n    //public _component!: OHLCSeries;\r\n    /**\r\n     * Constructor\r\n     */\r\n    function OHLCSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"OHLCSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return OHLCSeriesDataItem;\r\n}(_CandlestickSeries__WEBPACK_IMPORTED_MODULE_1__[\"CandlestickSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link IOHLCSeriesEvents} for a list of available Events\r\n * @see {@link IOHLCSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar OHLCSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(OHLCSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function OHLCSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"OHLCSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    OHLCSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"OHLC Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    OHLCSeries.prototype.createDataItem = function () {\r\n        return new OHLCSeriesDataItem();\r\n    };\r\n    OHLCSeries.prototype.validateCandlestick = function (dataItem) {\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var openLine_1 = column.openLine;\r\n            var highLowLine_1 = column.highLowLine;\r\n            var closeLine_1 = column.closeLine;\r\n            if (this.baseAxis == this.xAxis) {\r\n                var x = column.pixelWidth / 2;\r\n                highLowLine_1.x = x;\r\n                // TODO can these be removed ?\r\n                dataItem.getWorkingValue(this.yOpenField);\r\n                dataItem.getWorkingValue(this.yField);\r\n                var yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n                var yClose = this.yAxis.getY(dataItem, this.yField);\r\n                var yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n                var yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n                var pixelY = column.pixelY;\r\n                openLine_1.y1 = yOpen - pixelY;\r\n                openLine_1.y2 = yOpen - pixelY;\r\n                openLine_1.x1 = 0;\r\n                openLine_1.x2 = x;\r\n                closeLine_1.y1 = yClose - pixelY;\r\n                closeLine_1.y2 = yClose - pixelY;\r\n                closeLine_1.x1 = x;\r\n                closeLine_1.x2 = 2 * x;\r\n                highLowLine_1.y1 = yHigh - pixelY;\r\n                highLowLine_1.y2 = yLow - pixelY;\r\n            }\r\n            if (this.baseAxis == this.yAxis) {\r\n                var y = column.pixelHeight / 2;\r\n                highLowLine_1.y = y;\r\n                // TODO can these be removed ?\r\n                dataItem.getWorkingValue(this.xOpenField);\r\n                dataItem.getWorkingValue(this.xField);\r\n                var xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n                var xClose = this.xAxis.getX(dataItem, this.xField);\r\n                var xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n                var xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n                var pixelX = column.pixelX;\r\n                openLine_1.x1 = xOpen - pixelX;\r\n                openLine_1.x2 = xOpen - pixelX;\r\n                openLine_1.y1 = y;\r\n                openLine_1.y2 = 2 * y;\r\n                closeLine_1.x1 = xClose - pixelX;\r\n                closeLine_1.x2 = xClose - pixelX;\r\n                closeLine_1.y1 = 0;\r\n                closeLine_1.y2 = y;\r\n                highLowLine_1.x1 = xHigh - pixelX;\r\n                highLowLine_1.x2 = xLow - pixelX;\r\n            }\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__[\"each\"](this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    var rangeOpenLine = rangeColumn.openLine;\r\n                    rangeOpenLine.x = openLine_1.x;\r\n                    rangeOpenLine.y = openLine_1.y;\r\n                    rangeOpenLine.x1 = openLine_1.x1;\r\n                    rangeOpenLine.x2 = openLine_1.x2;\r\n                    rangeOpenLine.y1 = openLine_1.y1;\r\n                    rangeOpenLine.y2 = openLine_1.y2;\r\n                    var rangeCloseLine = rangeColumn.closeLine;\r\n                    rangeCloseLine.x = closeLine_1.x;\r\n                    rangeCloseLine.y = closeLine_1.y;\r\n                    rangeCloseLine.x1 = closeLine_1.x1;\r\n                    rangeCloseLine.x2 = closeLine_1.x2;\r\n                    rangeCloseLine.y1 = closeLine_1.y1;\r\n                    rangeCloseLine.y2 = closeLine_1.y2;\r\n                    var rangeHighLowLine = rangeColumn.highLowLine;\r\n                    rangeHighLowLine.x = highLowLine_1.x;\r\n                    rangeHighLowLine.y = highLowLine_1.y;\r\n                    rangeHighLowLine.x1 = highLowLine_1.x1;\r\n                    rangeHighLowLine.x2 = highLowLine_1.x2;\r\n                    rangeHighLowLine.y1 = highLowLine_1.y1;\r\n                    rangeHighLowLine.y2 = highLowLine_1.y2;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    OHLCSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(_elements_OHLC__WEBPACK_IMPORTED_MODULE_3__[\"OHLC\"]);\r\n        column.shouldClone = false;\r\n        column.copyFrom(this.columns.template);\r\n        var cw;\r\n        var ch;\r\n        var openLine = column.openLine;\r\n        var closeLine = column.closeLine;\r\n        var highLowLine = column.highLowLine;\r\n        if (this.baseAxis == this.yAxis) {\r\n            cw = w / 3;\r\n            ch = h;\r\n            highLowLine.y = h / 2;\r\n            highLowLine.x2 = w;\r\n            openLine.x = w / 3 * 2;\r\n            openLine.y2 = h / 2;\r\n            closeLine.x = w / 3;\r\n            closeLine.y2 = h;\r\n            closeLine.y1 = h / 2;\r\n        }\r\n        else {\r\n            cw = w;\r\n            ch = h / 3;\r\n            highLowLine.x = w / 2;\r\n            highLowLine.y2 = h;\r\n            openLine.y = h / 3 * 2;\r\n            openLine.x2 = w / 2;\r\n            closeLine.y = h / 3;\r\n            closeLine.x2 = w;\r\n            closeLine.x1 = w / 2;\r\n        }\r\n        column.width = cw;\r\n        column.height = ch;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__[\"copyProperties\"](this, marker, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__[\"copyProperties\"](this.columns.template, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        column.stroke = this.riseFromOpenState.properties.stroke;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.stroke;\r\n        legendDataItem.colorOrig = column.stroke;\r\n    };\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    OHLCSeries.prototype.createColumnTemplate = function () {\r\n        return new _elements_OHLC__WEBPACK_IMPORTED_MODULE_3__[\"OHLC\"]();\r\n    };\r\n    return OHLCSeries;\r\n}(_CandlestickSeries__WEBPACK_IMPORTED_MODULE_1__[\"CandlestickSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"OHLCSeries\"] = OHLCSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"OHLCSeriesDataItem\"] = OHLCSeriesDataItem;\r\n//# sourceMappingURL=OHLCSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9PSExDU2VyaWVzLmpzP2I2OTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUY7QUFDOUI7QUFDYjtBQUNPO0FBQ0k7QUFDQTtBQUNKO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyw0RUFBeUI7QUFDRztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLDBCQUEwQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlEQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLG1EQUFJO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBc0IsZUFBZSw2REFBZ0I7QUFDN0QsUUFBUSxpRUFBc0IsZ0NBQWdDLDZEQUFnQjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1EQUFJO0FBQ3ZCO0FBQ0E7QUFDQSxDQUFDLENBQUMsb0VBQWlCO0FBQ0c7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQVE7QUFDUix1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy9zZXJpZXMvT0hMQ1Nlcmllcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDYW5kbGVzdGljayBTZXJpZXMgbW9kdWxlLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBDYW5kbGVzdGlja1NlcmllcywgQ2FuZGxlc3RpY2tTZXJpZXNEYXRhSXRlbSB9IGZyb20gXCIuL0NhbmRsZXN0aWNrU2VyaWVzXCI7XHJcbmltcG9ydCB7IHZpc3VhbFByb3BlcnRpZXMgfSBmcm9tIFwiLi4vLi4vY29yZS9TcHJpdGVcIjtcclxuaW1wb3J0IHsgT0hMQyB9IGZyb20gXCIuLi9lbGVtZW50cy9PSExDXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuaW1wb3J0ICogYXMgJG9iamVjdCBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9PYmplY3RcIjtcclxuaW1wb3J0ICogYXMgJGl0ZXIgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvSXRlcmF0b3JcIjtcclxuaW1wb3J0ICogYXMgJHR5cGUgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvVHlwZVwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBEQVRBIElURU1cclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRGVmaW5lcyBhIFtbRGF0YUl0ZW1dXSBmb3IgW1tPSExDU2VyaWVzXV0uXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIERhdGFJdGVtfVxyXG4gKi9cclxudmFyIE9ITENTZXJpZXNEYXRhSXRlbSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhPSExDU2VyaWVzRGF0YUl0ZW0sIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIERlZmluZXMgYSB0eXBlIG9mIFtbQ29tcG9uZW50XV0gdGhpcyBkYXRhIGl0ZW0gaXMgdXNlZCBmb3JcclxuICAgICAqIEB0b2RvIERpc2FibGVkIHRvIHdvcmsgYXJvdW5kIFRTIGJ1ZyAoc2VlIGlmIHdlIGNhbiByZS1lbmFibGUgaXQgYWdhaW4pXHJcbiAgICAgKi9cclxuICAgIC8vcHVibGljIF9jb21wb25lbnQhOiBPSExDU2VyaWVzO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBPSExDU2VyaWVzRGF0YUl0ZW0oKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIk9ITENTZXJpZXNEYXRhSXRlbVwiO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gT0hMQ1Nlcmllc0RhdGFJdGVtO1xyXG59KENhbmRsZXN0aWNrU2VyaWVzRGF0YUl0ZW0pKTtcclxuZXhwb3J0IHsgT0hMQ1Nlcmllc0RhdGFJdGVtIH07XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRGVmaW5lcyBbW1Nlcmllc11dIGZvciBhIGNhbmRsZXN0aWNrIGdyYXBoLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJT0hMQ1Nlcmllc0V2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgRXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElPSExDU2VyaWVzQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEB0b2RvIEV4YW1wbGVcclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIE9ITENTZXJpZXMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoT0hMQ1NlcmllcywgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gT0hMQ1NlcmllcygpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiT0hMQ1Nlcmllc1wiO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNldHMgZGVmYXVsdHMgdGhhdCBpbnN0YW50aWF0ZSBzb21lIG9iamVjdHMgdGhhdCByZWx5IG9uIHBhcmVudCwgc28gdGhleVxyXG4gICAgICogY2Fubm90IGJlIHNldCBpbiBjb25zdHJ1Y3Rvci5cclxuICAgICAqL1xyXG4gICAgT0hMQ1Nlcmllcy5wcm90b3R5cGUuYXBwbHlJbnRlcm5hbERlZmF1bHRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuYXBwbHlJbnRlcm5hbERlZmF1bHRzLmNhbGwodGhpcyk7XHJcbiAgICAgICAgaWYgKCEkdHlwZS5oYXNWYWx1ZSh0aGlzLnJlYWRlclRpdGxlKSkge1xyXG4gICAgICAgICAgICB0aGlzLnJlYWRlclRpdGxlID0gdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJPSExDIFNlcmllc1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgbmV3L2VtcHR5IERhdGFJdGVtIG9mIHRoZSB0eXBlIGFwcHJvcHJpYXRlIGZvciB0aGlzIG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBAc2VlIHtAbGluayBEYXRhSXRlbX1cclxuICAgICAqIEByZXR1cm4gRGF0YSBJdGVtXHJcbiAgICAgKi9cclxuICAgIE9ITENTZXJpZXMucHJvdG90eXBlLmNyZWF0ZURhdGFJdGVtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgT0hMQ1Nlcmllc0RhdGFJdGVtKCk7XHJcbiAgICB9O1xyXG4gICAgT0hMQ1Nlcmllcy5wcm90b3R5cGUudmFsaWRhdGVDYW5kbGVzdGljayA9IGZ1bmN0aW9uIChkYXRhSXRlbSkge1xyXG4gICAgICAgIHZhciBjb2x1bW4gPSBkYXRhSXRlbS5jb2x1bW47XHJcbiAgICAgICAgaWYgKGNvbHVtbikge1xyXG4gICAgICAgICAgICB2YXIgb3BlbkxpbmVfMSA9IGNvbHVtbi5vcGVuTGluZTtcclxuICAgICAgICAgICAgdmFyIGhpZ2hMb3dMaW5lXzEgPSBjb2x1bW4uaGlnaExvd0xpbmU7XHJcbiAgICAgICAgICAgIHZhciBjbG9zZUxpbmVfMSA9IGNvbHVtbi5jbG9zZUxpbmU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJhc2VBeGlzID09IHRoaXMueEF4aXMpIHtcclxuICAgICAgICAgICAgICAgIHZhciB4ID0gY29sdW1uLnBpeGVsV2lkdGggLyAyO1xyXG4gICAgICAgICAgICAgICAgaGlnaExvd0xpbmVfMS54ID0geDtcclxuICAgICAgICAgICAgICAgIC8vIFRPRE8gY2FuIHRoZXNlIGJlIHJlbW92ZWQgP1xyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0uZ2V0V29ya2luZ1ZhbHVlKHRoaXMueU9wZW5GaWVsZCk7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5nZXRXb3JraW5nVmFsdWUodGhpcy55RmllbGQpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHlPcGVuID0gdGhpcy55QXhpcy5nZXRZKGRhdGFJdGVtLCB0aGlzLnlPcGVuRmllbGQpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHlDbG9zZSA9IHRoaXMueUF4aXMuZ2V0WShkYXRhSXRlbSwgdGhpcy55RmllbGQpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHlMb3cgPSB0aGlzLnlBeGlzLmdldFkoZGF0YUl0ZW0sIHRoaXMueUxvd0ZpZWxkKTtcclxuICAgICAgICAgICAgICAgIHZhciB5SGlnaCA9IHRoaXMueUF4aXMuZ2V0WShkYXRhSXRlbSwgdGhpcy55SGlnaEZpZWxkKTtcclxuICAgICAgICAgICAgICAgIHZhciBwaXhlbFkgPSBjb2x1bW4ucGl4ZWxZO1xyXG4gICAgICAgICAgICAgICAgb3BlbkxpbmVfMS55MSA9IHlPcGVuIC0gcGl4ZWxZO1xyXG4gICAgICAgICAgICAgICAgb3BlbkxpbmVfMS55MiA9IHlPcGVuIC0gcGl4ZWxZO1xyXG4gICAgICAgICAgICAgICAgb3BlbkxpbmVfMS54MSA9IDA7XHJcbiAgICAgICAgICAgICAgICBvcGVuTGluZV8xLngyID0geDtcclxuICAgICAgICAgICAgICAgIGNsb3NlTGluZV8xLnkxID0geUNsb3NlIC0gcGl4ZWxZO1xyXG4gICAgICAgICAgICAgICAgY2xvc2VMaW5lXzEueTIgPSB5Q2xvc2UgLSBwaXhlbFk7XHJcbiAgICAgICAgICAgICAgICBjbG9zZUxpbmVfMS54MSA9IHg7XHJcbiAgICAgICAgICAgICAgICBjbG9zZUxpbmVfMS54MiA9IDIgKiB4O1xyXG4gICAgICAgICAgICAgICAgaGlnaExvd0xpbmVfMS55MSA9IHlIaWdoIC0gcGl4ZWxZO1xyXG4gICAgICAgICAgICAgICAgaGlnaExvd0xpbmVfMS55MiA9IHlMb3cgLSBwaXhlbFk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuYmFzZUF4aXMgPT0gdGhpcy55QXhpcykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHkgPSBjb2x1bW4ucGl4ZWxIZWlnaHQgLyAyO1xyXG4gICAgICAgICAgICAgICAgaGlnaExvd0xpbmVfMS55ID0geTtcclxuICAgICAgICAgICAgICAgIC8vIFRPRE8gY2FuIHRoZXNlIGJlIHJlbW92ZWQgP1xyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0uZ2V0V29ya2luZ1ZhbHVlKHRoaXMueE9wZW5GaWVsZCk7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5nZXRXb3JraW5nVmFsdWUodGhpcy54RmllbGQpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHhPcGVuID0gdGhpcy54QXhpcy5nZXRYKGRhdGFJdGVtLCB0aGlzLnhPcGVuRmllbGQpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHhDbG9zZSA9IHRoaXMueEF4aXMuZ2V0WChkYXRhSXRlbSwgdGhpcy54RmllbGQpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHhMb3cgPSB0aGlzLnhBeGlzLmdldFgoZGF0YUl0ZW0sIHRoaXMueExvd0ZpZWxkKTtcclxuICAgICAgICAgICAgICAgIHZhciB4SGlnaCA9IHRoaXMueEF4aXMuZ2V0WChkYXRhSXRlbSwgdGhpcy54SGlnaEZpZWxkKTtcclxuICAgICAgICAgICAgICAgIHZhciBwaXhlbFggPSBjb2x1bW4ucGl4ZWxYO1xyXG4gICAgICAgICAgICAgICAgb3BlbkxpbmVfMS54MSA9IHhPcGVuIC0gcGl4ZWxYO1xyXG4gICAgICAgICAgICAgICAgb3BlbkxpbmVfMS54MiA9IHhPcGVuIC0gcGl4ZWxYO1xyXG4gICAgICAgICAgICAgICAgb3BlbkxpbmVfMS55MSA9IHk7XHJcbiAgICAgICAgICAgICAgICBvcGVuTGluZV8xLnkyID0gMiAqIHk7XHJcbiAgICAgICAgICAgICAgICBjbG9zZUxpbmVfMS54MSA9IHhDbG9zZSAtIHBpeGVsWDtcclxuICAgICAgICAgICAgICAgIGNsb3NlTGluZV8xLngyID0geENsb3NlIC0gcGl4ZWxYO1xyXG4gICAgICAgICAgICAgICAgY2xvc2VMaW5lXzEueTEgPSAwO1xyXG4gICAgICAgICAgICAgICAgY2xvc2VMaW5lXzEueTIgPSB5O1xyXG4gICAgICAgICAgICAgICAgaGlnaExvd0xpbmVfMS54MSA9IHhIaWdoIC0gcGl4ZWxYO1xyXG4gICAgICAgICAgICAgICAgaGlnaExvd0xpbmVfMS54MiA9IHhMb3cgLSBwaXhlbFg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJGl0ZXIuZWFjaCh0aGlzLmF4aXNSYW5nZXMuaXRlcmF0b3IoKSwgZnVuY3Rpb24gKGF4aXNSYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlQ29sdW1uID0gZGF0YUl0ZW0ucmFuZ2VzQ29sdW1ucy5nZXRLZXkoYXhpc1JhbmdlLnVpZCk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2VDb2x1bW4pIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2VPcGVuTGluZSA9IHJhbmdlQ29sdW1uLm9wZW5MaW5lO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlT3BlbkxpbmUueCA9IG9wZW5MaW5lXzEueDtcclxuICAgICAgICAgICAgICAgICAgICByYW5nZU9wZW5MaW5lLnkgPSBvcGVuTGluZV8xLnk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VPcGVuTGluZS54MSA9IG9wZW5MaW5lXzEueDE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VPcGVuTGluZS54MiA9IG9wZW5MaW5lXzEueDI7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VPcGVuTGluZS55MSA9IG9wZW5MaW5lXzEueTE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VPcGVuTGluZS55MiA9IG9wZW5MaW5lXzEueTI7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlQ2xvc2VMaW5lID0gcmFuZ2VDb2x1bW4uY2xvc2VMaW5lO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlQ2xvc2VMaW5lLnggPSBjbG9zZUxpbmVfMS54O1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlQ2xvc2VMaW5lLnkgPSBjbG9zZUxpbmVfMS55O1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlQ2xvc2VMaW5lLngxID0gY2xvc2VMaW5lXzEueDE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VDbG9zZUxpbmUueDIgPSBjbG9zZUxpbmVfMS54MjtcclxuICAgICAgICAgICAgICAgICAgICByYW5nZUNsb3NlTGluZS55MSA9IGNsb3NlTGluZV8xLnkxO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlQ2xvc2VMaW5lLnkyID0gY2xvc2VMaW5lXzEueTI7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlSGlnaExvd0xpbmUgPSByYW5nZUNvbHVtbi5oaWdoTG93TGluZTtcclxuICAgICAgICAgICAgICAgICAgICByYW5nZUhpZ2hMb3dMaW5lLnggPSBoaWdoTG93TGluZV8xLng7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2VIaWdoTG93TGluZS55ID0gaGlnaExvd0xpbmVfMS55O1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlSGlnaExvd0xpbmUueDEgPSBoaWdoTG93TGluZV8xLngxO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlSGlnaExvd0xpbmUueDIgPSBoaWdoTG93TGluZV8xLngyO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlSGlnaExvd0xpbmUueTEgPSBoaWdoTG93TGluZV8xLnkxO1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlSGlnaExvd0xpbmUueTIgPSBoaWdoTG93TGluZV8xLnkyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGVsZW1lbnRzIGluIHJlbGF0ZWQgbGVnZW5kIGNvbnRhaW5lciwgdGhhdCBtaW1pY3MgdGhlIGxvb2sgb2YgdGhpc1xyXG4gICAgICogU2VyaWVzLlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqIEBwYXJhbSBtYXJrZXIgIExlZ2VuZCBpdGVtIGNvbnRhaW5lclxyXG4gICAgICovXHJcbiAgICBPSExDU2VyaWVzLnByb3RvdHlwZS5jcmVhdGVMZWdlbmRNYXJrZXIgPSBmdW5jdGlvbiAobWFya2VyKSB7XHJcbiAgICAgICAgdmFyIHcgPSBtYXJrZXIucGl4ZWxXaWR0aDtcclxuICAgICAgICB2YXIgaCA9IG1hcmtlci5waXhlbEhlaWdodDtcclxuICAgICAgICBtYXJrZXIucmVtb3ZlQ2hpbGRyZW4oKTtcclxuICAgICAgICB2YXIgY29sdW1uID0gbWFya2VyLmNyZWF0ZUNoaWxkKE9ITEMpO1xyXG4gICAgICAgIGNvbHVtbi5zaG91bGRDbG9uZSA9IGZhbHNlO1xyXG4gICAgICAgIGNvbHVtbi5jb3B5RnJvbSh0aGlzLmNvbHVtbnMudGVtcGxhdGUpO1xyXG4gICAgICAgIHZhciBjdztcclxuICAgICAgICB2YXIgY2g7XHJcbiAgICAgICAgdmFyIG9wZW5MaW5lID0gY29sdW1uLm9wZW5MaW5lO1xyXG4gICAgICAgIHZhciBjbG9zZUxpbmUgPSBjb2x1bW4uY2xvc2VMaW5lO1xyXG4gICAgICAgIHZhciBoaWdoTG93TGluZSA9IGNvbHVtbi5oaWdoTG93TGluZTtcclxuICAgICAgICBpZiAodGhpcy5iYXNlQXhpcyA9PSB0aGlzLnlBeGlzKSB7XHJcbiAgICAgICAgICAgIGN3ID0gdyAvIDM7XHJcbiAgICAgICAgICAgIGNoID0gaDtcclxuICAgICAgICAgICAgaGlnaExvd0xpbmUueSA9IGggLyAyO1xyXG4gICAgICAgICAgICBoaWdoTG93TGluZS54MiA9IHc7XHJcbiAgICAgICAgICAgIG9wZW5MaW5lLnggPSB3IC8gMyAqIDI7XHJcbiAgICAgICAgICAgIG9wZW5MaW5lLnkyID0gaCAvIDI7XHJcbiAgICAgICAgICAgIGNsb3NlTGluZS54ID0gdyAvIDM7XHJcbiAgICAgICAgICAgIGNsb3NlTGluZS55MiA9IGg7XHJcbiAgICAgICAgICAgIGNsb3NlTGluZS55MSA9IGggLyAyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY3cgPSB3O1xyXG4gICAgICAgICAgICBjaCA9IGggLyAzO1xyXG4gICAgICAgICAgICBoaWdoTG93TGluZS54ID0gdyAvIDI7XHJcbiAgICAgICAgICAgIGhpZ2hMb3dMaW5lLnkyID0gaDtcclxuICAgICAgICAgICAgb3BlbkxpbmUueSA9IGggLyAzICogMjtcclxuICAgICAgICAgICAgb3BlbkxpbmUueDIgPSB3IC8gMjtcclxuICAgICAgICAgICAgY2xvc2VMaW5lLnkgPSBoIC8gMztcclxuICAgICAgICAgICAgY2xvc2VMaW5lLngyID0gdztcclxuICAgICAgICAgICAgY2xvc2VMaW5lLngxID0gdyAvIDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbHVtbi53aWR0aCA9IGN3O1xyXG4gICAgICAgIGNvbHVtbi5oZWlnaHQgPSBjaDtcclxuICAgICAgICAkb2JqZWN0LmNvcHlQcm9wZXJ0aWVzKHRoaXMsIG1hcmtlciwgdmlzdWFsUHJvcGVydGllcyk7XHJcbiAgICAgICAgJG9iamVjdC5jb3B5UHJvcGVydGllcyh0aGlzLmNvbHVtbnMudGVtcGxhdGUsIGNvbHVtbiwgdmlzdWFsUHJvcGVydGllcyk7XHJcbiAgICAgICAgY29sdW1uLnN0cm9rZSA9IHRoaXMucmlzZUZyb21PcGVuU3RhdGUucHJvcGVydGllcy5zdHJva2U7XHJcbiAgICAgICAgdmFyIGxlZ2VuZERhdGFJdGVtID0gbWFya2VyLmRhdGFJdGVtO1xyXG4gICAgICAgIGxlZ2VuZERhdGFJdGVtLmNvbG9yID0gY29sdW1uLnN0cm9rZTtcclxuICAgICAgICBsZWdlbmREYXRhSXRlbS5jb2xvck9yaWcgPSBjb2x1bW4uc3Ryb2tlO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhbiBlbGVtZW50IHRvIHVzZSBmb3IgQ2FuZGxlc3RpY2tcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIEByZXR1cm4gRWxlbWVudC5cclxuICAgICAqL1xyXG4gICAgT0hMQ1Nlcmllcy5wcm90b3R5cGUuY3JlYXRlQ29sdW1uVGVtcGxhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBPSExDKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE9ITENTZXJpZXM7XHJcbn0oQ2FuZGxlc3RpY2tTZXJpZXMpKTtcclxuZXhwb3J0IHsgT0hMQ1NlcmllcyB9O1xyXG4vKipcclxuICogUmVnaXN0ZXIgY2xhc3MgaW4gc3lzdGVtLCBzbyB0aGF0IGl0IGNhbiBiZSBpbnN0YW50aWF0ZWQgdXNpbmcgaXRzIG5hbWUgZnJvbVxyXG4gKiBhbnl3aGVyZS5cclxuICpcclxuICogQGlnbm9yZVxyXG4gKi9cclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJPSExDU2VyaWVzXCJdID0gT0hMQ1NlcmllcztcclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJPSExDU2VyaWVzRGF0YUl0ZW1cIl0gPSBPSExDU2VyaWVzRGF0YUl0ZW07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9ITENTZXJpZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js ***!
  \***********************************************************************************/
/*! exports provided: PercentSeriesDataItem, PercentSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PercentSeriesDataItem\", function() { return PercentSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PercentSeries\", function() { return PercentSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Series */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Label */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/Tick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/ColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Ease__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Ease */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Responsive */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js\");\n/**\r\n * Defines Percent Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PercentSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PercentSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an `id` attribute the the slice element and returns its id.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeriesDataItem.prototype.uidAttr = function () {\r\n        return this.slice.uidAttr();\r\n    };\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, 0, fields);\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        if (!noChangeValues) {\r\n            if (value) {\r\n                this.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n            }\r\n            else {\r\n                this.setWorkingValue(\"value\", 0, 0, 0);\r\n            }\r\n        }\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"category\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.properties.category;\r\n        },\r\n        /**\r\n         * Category.\r\n         *\r\n         * @param value  Category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"category\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"tick\", {\r\n        /**\r\n         * A Tick element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._tick) {\r\n                var tick_1 = this.component.ticks.create();\r\n                this._tick = tick_1;\r\n                this.addSprite(tick_1);\r\n                this._disposers.push(tick_1);\r\n                tick_1.parent = this.component.ticksContainer;\r\n                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__[\"Disposer\"](function () {\r\n                    if (_this.component) {\r\n                        _this.component.ticks.removeValue(tick_1);\r\n                    }\r\n                }));\r\n                tick_1.visible = this.visible;\r\n            }\r\n            return this._tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"label\", {\r\n        /**\r\n         * A Label element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this.addSprite(label_1);\r\n                this._label = label_1;\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.component.labelsContainer;\r\n                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__[\"Disposer\"](function () {\r\n                    if (_this.component) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n                label_1.visible = this.visible;\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"slice\", {\r\n        /**\r\n         * An element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._slice) {\r\n                var component_1 = this.component;\r\n                var slice_1 = component_1.slices.create();\r\n                this.addSprite(slice_1);\r\n                this._slice = slice_1;\r\n                this._disposers.push(slice_1);\r\n                slice_1.parent = component_1.slicesContainer;\r\n                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__[\"Disposer\"](function () {\r\n                    component_1.slices.removeValue(slice_1);\r\n                }));\r\n                slice_1.visible = this.visible;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    this.component.role = \"menu\";\r\n                    slice_1.role = \"menuitem\";\r\n                    slice_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.component.role = \"list\";\r\n                    slice_1.role = \"listitem\";\r\n                    slice_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (slice_1.focusable) {\r\n                    slice_1.events.on(\"focus\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"blur\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (slice_1.hoverable) {\r\n                    slice_1.events.on(\"over\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"out\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._slice;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Disabled in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (slice) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PercentSeriesDataItem;\r\n}(_Series__WEBPACK_IMPORTED_MODULE_1__[\"SeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nvar PercentSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PercentSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeries\";\r\n        _this._addAllDataItems = false;\r\n        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_8__[\"ColorSet\"]();\r\n        _this.colors.step = 1;\r\n        _this.isMeasured = true;\r\n        _this.calculatePercent = true;\r\n        var slicesContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_7__[\"Container\"]);\r\n        slicesContainer.shouldClone = false;\r\n        slicesContainer.isMeasured = false;\r\n        _this.slicesContainer = slicesContainer;\r\n        var ticksContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_7__[\"Container\"]);\r\n        ticksContainer.shouldClone = false;\r\n        ticksContainer.isMeasured = false;\r\n        ticksContainer.layout = \"none\";\r\n        _this.ticksContainer = ticksContainer;\r\n        var labelsContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_7__[\"Container\"]);\r\n        labelsContainer.shouldClone = false;\r\n        labelsContainer.isMeasured = false;\r\n        labelsContainer.layout = \"none\";\r\n        _this.labelsContainer = labelsContainer;\r\n        _this.alignLabels = false;\r\n        _this.bulletsContainer.toFront();\r\n        // Make all slices focusable\r\n        _this.skipFocusThreshold = 50;\r\n        var defaultState = _this.defaultState;\r\n        defaultState.transitionEasing = _core_utils_Ease__WEBPACK_IMPORTED_MODULE_11__[\"sinOut\"];\r\n        // Accessibility\r\n        _this.itemReaderText = \"{category}: {value.percent.formatNumber('#.#')}%\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a slice element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.createSlice = function () {\r\n        return new _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]();\r\n    };\r\n    /**\r\n     * Creates a tick element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    PercentSeries.prototype.createTick = function () {\r\n        return new _elements_Tick__WEBPACK_IMPORTED_MODULE_5__[\"Tick\"]();\r\n    };\r\n    /**\r\n     * Sreates label element.\r\n     *\r\n     * @return label\r\n     */\r\n    PercentSeries.prototype.createLabel = function () {\r\n        return new _core_elements_Label__WEBPACK_IMPORTED_MODULE_3__[\"Label\"]();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"slices\", {\r\n        /**\r\n         * A list of slice elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the slices. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"slices\": {\r\n         *       \"stroke\": \"#fff\",\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Slices\r\n         */\r\n        get: function () {\r\n            if (!this._slices) {\r\n                var slice = this.createSlice();\r\n                slice.applyOnClones = true;\r\n                this._disposers.push(slice);\r\n                this.initSlice(slice);\r\n                this._slices = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__[\"ListTemplate\"](slice);\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__[\"ListDisposer\"](this._slices));\r\n            }\r\n            return this._slices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"ticks\", {\r\n        /**\r\n         * A list of tick elements for the series. Ticks connect slice to its label.\r\n         *\r\n         * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"ticks\": {\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Ticks\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                this._disposers.push(tick);\r\n                this.initTick(tick);\r\n                this._ticks = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__[\"ListTemplate\"](tick);\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__[\"ListDisposer\"](this._ticks));\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"labels\", {\r\n        /**\r\n         * A list of slice label elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the labels. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"stroke\": \"#c00\",\r\n         *       \"fontSize\": 20\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Labels\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                label.applyOnClones = true;\r\n                this._disposers.push(label);\r\n                this.initLabel(label);\r\n                this._labels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__[\"ListTemplate\"](label);\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__[\"ListDisposer\"](this._labels));\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PercentSeries.prototype.createDataItem = function () {\r\n        return new PercentSeriesDataItem();\r\n    };\r\n    /**\r\n     * Creates and returns a new slice element.\r\n     *\r\n     * @param sliceType  Type of the slice element\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.initSlice = function (slice) {\r\n    };\r\n    PercentSeries.prototype.initLabel = function (label) {\r\n        label.text = \"{category}: {value.percent.formatNumber('#.0')}%\";\r\n        label.isMeasured = false;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    PercentSeries.prototype.initTick = function (label) {\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateDataItems = function () {\r\n        this.colors.reset();\r\n        if (this.patterns) {\r\n            this.patterns.reset();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.validateDataElement = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        if (slice) {\r\n            if (slice.fill == undefined) {\r\n                if (this.patterns) {\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"hasValue\"](slice.stroke)) {\r\n                        slice.stroke = this.colors.next();\r\n                    }\r\n                    slice.fill = this.patterns.next();\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"hasValue\"](slice.fillOpacity)) {\r\n                        slice.fill.backgroundOpacity = slice.fillOpacity;\r\n                    }\r\n                    if (slice.stroke instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__[\"Color\"]) {\r\n                        slice.fill.stroke = slice.stroke;\r\n                        slice.fill.fill = slice.stroke;\r\n                    }\r\n                }\r\n                else {\r\n                    slice.fill = this.colors.next();\r\n                }\r\n            }\r\n            else {\r\n                this.colors.currentStep += this.colors.step;\r\n            }\r\n            if (slice.stroke == undefined) {\r\n                slice.stroke = slice.fill;\r\n            }\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (slice) {\r\n            dataItem.bullets.each(function (key, bullet) {\r\n                if (bullet.fill == undefined) {\r\n                    bullet.fill = slice.fill;\r\n                }\r\n                if (bullet.stroke == undefined) {\r\n                    bullet.stroke = slice.stroke;\r\n                }\r\n            });\r\n        }\r\n        this.updateLegendValue(dataItem);\r\n    };\r\n    /**\r\n     * Validates (processes) data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        if (this.chart) {\r\n            this.chart.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Arranges slice labels according to position settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    PercentSeries.prototype.arrangeLabels = function (dataItems) {\r\n        for (var i = 0, len = dataItems.length; i < len; i++) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                if (label.pixelY - lh / 2 < -this.maxHeight / 2) {\r\n                    label.y = -this.maxHeight / 2 + lh / 2;\r\n                }\r\n                var nextLabel = this.getNextLabel(i + 1, dataItems);\r\n                var bottom = label.pixelY + lh;\r\n                if (nextLabel) {\r\n                    if (nextLabel.y < bottom) {\r\n                        nextLabel.y = bottom;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PercentSeries.prototype.arrangeLabels2 = function (dataItems) {\r\n        var previousTop = this.maxHeight / 2;\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                if (i == dataItems.length - 1) {\r\n                    previousTop += lh / 2;\r\n                }\r\n                if (label.pixelY + lh > previousTop) {\r\n                    label.y = previousTop - lh;\r\n                    previousTop = label.y;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the next label according to `index`.\r\n     *\r\n     * @param index      Current index\r\n     * @param dataItems  Data items\r\n     * @return Label element\r\n     */\r\n    PercentSeries.prototype.getNextLabel = function (index, dataItems) {\r\n        if (dataItems.length >= index) {\r\n            var nextDataItem = dataItems[index];\r\n            if (nextDataItem) {\r\n                if (nextDataItem.label) {\r\n                    if (nextDataItem.visible) {\r\n                        return nextDataItem.label;\r\n                    }\r\n                    else {\r\n                        return this.getNextLabel(index + 1, dataItems);\r\n                    }\r\n                }\r\n                else {\r\n                    return this.getNextLabel(index + 1, dataItems);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for slices.\r\n         *\r\n         * For each new subsequent slice, the chart will assign the next color in\r\n         * this set.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](marker.children.iterator(), function (child) {\r\n            var slice = dataItem.slice;\r\n            child.defaultState.properties.fill = slice.fill;\r\n            child.defaultState.properties.stroke = slice.stroke;\r\n            child.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n            child.fill = slice.fill;\r\n            child.stroke = slice.stroke;\r\n            child.fillOpacity = slice.fillOpacity;\r\n            child.strokeOpacity = slice.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = slice.fill;\r\n            legendDataItem.colorOrig = slice.fill;\r\n            child.addDisposer(slice.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = slice.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = slice.fill;\r\n                    legendDataItem.color = slice.fill;\r\n                    legendDataItem.colorOrig = slice.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = slice.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = slice.stroke;\r\n                }\r\n            }, undefined, false));\r\n        });\r\n    };\r\n    /**\r\n     * Repositions bullets when slice's size changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceScale = function (event) {\r\n        var _this = this;\r\n        var slice = event.target;\r\n        var dataItem = slice.dataItem;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](dataItem.bullets.iterator(), function (a) {\r\n            var value = a[1];\r\n            _this.positionBullet(value);\r\n        });\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceMove = function (event) {\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[PercentSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    PercentSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.slices.template.copyFrom(source.slices.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n        this.colors = source.colors.clone();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"alignLabels\", {\r\n        /**\r\n         * @return Align labels?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"alignLabels\");\r\n        },\r\n        /**\r\n         * Align labels into nice vertical columns?\r\n         *\r\n         * This will ensure that labels never overlap with each other.\r\n         *\r\n         * Arranging labels into columns makes them more readble, and better user\r\n         * experience.\r\n         *\r\n         * If set to `false` labels will be positioned at `label.radius` distance,\r\n         * and may, in some cases, overlap.\r\n         *\r\n         * @default true\r\n         * @param value  Align labels?\r\n         */\r\n        set: function (value) {\r\n            this.setAlignLabels(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    PercentSeries.prototype.setAlignLabels = function (value) {\r\n        this.setPropertyValue(\"alignLabels\", value, true);\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"ignoreZeroValues\", {\r\n        /**\r\n         * @return Ignore zero values\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"ignoreZeroValues\");\r\n        },\r\n        /**\r\n         * If set to `true` the chart will not show slices with zero values.\r\n         *\r\n         * @default false\r\n         * @since 4.7.9\r\n         * @param  value  Ignore zero values\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"ignoreZeroValues\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.updateLegendValue = function (dataItem) {\r\n        if (dataItem) {\r\n            var legendDataItem = dataItem.legendDataItem;\r\n            var legendSettings = dataItem.legendSettings;\r\n            if (legendDataItem && legendSettings) {\r\n                if (legendSettings) {\r\n                    if (legendSettings.labelText) {\r\n                        legendDataItem.label.text = legendSettings.labelText;\r\n                    }\r\n                    if (legendSettings.itemLabelText) {\r\n                        legendDataItem.label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    if (legendSettings.valueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    if (legendSettings.itemValueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return PercentSeries;\r\n}(_Series__WEBPACK_IMPORTED_MODULE_1__[\"Series\"]));\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_9__[\"registry\"].registeredClasses[\"PercentSeries\"] = PercentSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_9__[\"registry\"].registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable labels and ticks.\r\n */\r\n_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_14__[\"defaultRules\"].push({\r\n    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_14__[\"ResponsiveBreakpoints\"].maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof PercentSeries) {\r\n            var state = target.states.create(stateId);\r\n            var labelState = target.labels.template.states.create(stateId);\r\n            labelState.properties.disabled = true;\r\n            var tickState = target.ticks.template.states.create(stateId);\r\n            tickState.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js ***!
  \********************************************************************************************/
/*! exports provided: PictorialStackedSeriesDataItem, PictorialStackedSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PictorialStackedSeriesDataItem\", function() { return PictorialStackedSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PictorialStackedSeries\", function() { return PictorialStackedSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _PyramidSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PyramidSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/**\r\n * Defines Pictorial Stacked Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PictorialStackedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PictorialStackedSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PictorialStackedSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PictorialStackedSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PictorialStackedSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PictorialStackedSeriesDataItem;\r\n}(_PyramidSeries__WEBPACK_IMPORTED_MODULE_1__[\"PyramidSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a PictorialStacked series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPictorialStackedSeriesEvents} for a list of available Events\r\n * @see {@link IPictorialStackedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar PictorialStackedSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PictorialStackedSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PictorialStackedSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PictorialStackedSeries\";\r\n        _this.topWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"percent\"])(100);\r\n        _this.bottomWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__[\"percent\"])(100);\r\n        _this.valueIs = \"height\";\r\n        _this.applyTheme();\r\n        _this.startLocation = 0;\r\n        _this.endLocation = 1;\r\n        _this.align = \"center\";\r\n        _this.valign = \"middle\";\r\n        _this._maskSprite = _this.slicesContainer.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]);\r\n        _this._maskSprite.visible = false;\r\n        _this._maskSprite.zIndex = 100;\r\n        _this._maskSprite.shouldClone = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sizes the mask to fit the series.\r\n     *\r\n     * @ignore\r\n     */\r\n    PictorialStackedSeries.prototype.validateDataElements = function () {\r\n        var maxWidth = this.slicesContainer.maxWidth;\r\n        var maxHeight = this.slicesContainer.maxHeight;\r\n        var maskSprite = this._maskSprite;\r\n        //maskSprite.validatePosition(); // for some reason size of the maskSprite is 0x0 after we removed validatePosition in afterdraw\r\n        var pictureWidth = maskSprite.measuredWidth / maskSprite.scale;\r\n        var pictureHeight = maskSprite.measuredHeight / maskSprite.scale;\r\n        var scale = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"min\"](maxHeight / pictureHeight, maxWidth / pictureWidth);\r\n        if (scale == Infinity) {\r\n            scale = 1; // can't return here, won't draw legend properly\r\n        }\r\n        scale = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"max\"](0.001, scale);\r\n        var startLocation = this.startLocation;\r\n        var endLocation = this.endLocation;\r\n        var newWidth = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"min\"](maxWidth, pictureWidth * scale);\r\n        var newHeight = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"min\"](maxHeight, pictureHeight * scale);\r\n        maskSprite.scale = scale;\r\n        if (this.orientation == \"vertical\") {\r\n            this.topWidth = newWidth + 4;\r\n            this.bottomWidth = newWidth + 4;\r\n            this.pyramidHeight = newHeight * (endLocation - startLocation);\r\n            maskSprite.x = maxWidth / 2;\r\n            maskSprite.y = newHeight / 2;\r\n        }\r\n        else {\r\n            this.topWidth = newHeight + 4;\r\n            this.bottomWidth = newHeight + 4;\r\n            this.pyramidHeight = newWidth * (endLocation - startLocation);\r\n            maskSprite.valign = \"middle\";\r\n            maskSprite.x = newWidth / 2;\r\n            maskSprite.y = maxHeight / 2;\r\n        }\r\n        maskSprite.verticalCenter = \"middle\";\r\n        maskSprite.horizontalCenter = \"middle\";\r\n        _super.prototype.validateDataElements.call(this);\r\n        var y;\r\n        var x;\r\n        if (this.orientation == \"vertical\") {\r\n            if (this.valign == \"bottom\") {\r\n                y = (maxHeight - newHeight);\r\n            }\r\n            if (this.valign == \"middle\") {\r\n                y = (maxHeight - newHeight) / 2;\r\n            }\r\n            if (this.valign == \"top\") {\r\n                y = 0;\r\n            }\r\n            if (this.align == \"left\") {\r\n                x = -(maxWidth - newWidth) / 2;\r\n            }\r\n            if (this.align == \"center\") {\r\n                x = 0;\r\n            }\r\n            if (this.align == \"right\") {\r\n                x = (maxWidth - newWidth) / 2;\r\n            }\r\n            this.slices.template.dy = startLocation * newHeight;\r\n            if (this.alignLabels) {\r\n                this.slicesContainer.dx = x;\r\n            }\r\n        }\r\n        else {\r\n            if (this.valign == \"bottom\") {\r\n                y = (maxHeight - newHeight) / 2;\r\n            }\r\n            if (this.valign == \"middle\") {\r\n                y = 0;\r\n            }\r\n            if (this.valign == \"top\") {\r\n                y = -(maxHeight - newHeight) / 2;\r\n            }\r\n            if (this.align == \"left\") {\r\n                x = 0;\r\n            }\r\n            if (this.align == \"center\") {\r\n                x = (maxWidth - newWidth) / 2;\r\n            }\r\n            if (this.align == \"right\") {\r\n                x = (maxWidth - newWidth);\r\n            }\r\n            this.slices.template.dx = startLocation * newWidth;\r\n            if (this.alignLabels) {\r\n                this.slicesContainer.dy = y;\r\n            }\r\n        }\r\n        this.slicesContainer.x = x;\r\n        this.labelsContainer.x = x;\r\n        this.ticksContainer.x = x;\r\n        this.slicesContainer.y = y;\r\n        this.labelsContainer.y = y;\r\n        this.ticksContainer.y = y;\r\n        if (newWidth > 0 && newHeight > 0) {\r\n            this.slicesContainer.mask = maskSprite;\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PictorialStackedSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pyramid Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PictorialStackedSeries.prototype.createDataItem = function () {\r\n        return new PictorialStackedSeriesDataItem();\r\n    };\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"maskSprite\", {\r\n        /**\r\n         * A [[Sprite]] element that is used as a series mask.\r\n         *\r\n         * If set, this element's shape will be used to apply shape to the whole\r\n         * stacked pictorial series.\r\n         *\r\n         * You can use this element's `path` property to set an SVG path for the\r\n         * shape:\r\n         *\r\n         * ```TypeScript\r\n         * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n         * // ...\r\n         * series.maskSprite.path = iconPath;\r\n         * ```\r\n         * ```JavaScript\r\n         * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n         * // ...\r\n         * series.maskSprite.path = iconPath;\r\n         * ```\r\n         * ```JSON\r\n         * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n         * // ...\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     \"type\": \"PictorialStackedSeries\",\r\n         *     // ...\r\n         *     \"maskSprite\": {\r\n         *       \"path\": iconPath\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Mask sprite\r\n         */\r\n        get: function () {\r\n            return this._maskSprite;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Inits FunnelSlice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    PictorialStackedSeries.prototype.initSlice = function (slice) {\r\n        _super.prototype.initSlice.call(this, slice);\r\n        var hs = slice.states.getKey(\"hover\");\r\n        if (hs) {\r\n            hs.properties.expandDistance = 0;\r\n        }\r\n    };\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"startLocation\", {\r\n        /**\r\n         * @return  Start location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * Relative location to start series from.\r\n         *\r\n         * Range of values: 0 to 1.\r\n         *\r\n         * This setting indicates where actual slices will start relatively to the\r\n         * whole height/width of the series.\r\n         *\r\n         * For example, if we want slices to start at 30% from the top/left of the\r\n         * series, we can set `startLocation = 0.3`.\r\n         *\r\n         * To fill shape outside of the location range, use background of the\r\n         * property `slicesContainer`.\r\n         *\r\n         * ```TypeScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JavaScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"startLocation\": 0.2,\r\n         *     \"endLocation\": 0.8,\r\n         *     \"slicesContainer\": {\r\n         *       \"background\": {\r\n         *         \"fill\": \"#eee\"\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 0\r\n         * @since 4.1.13\r\n         * @param  value  Start location\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startLocation\", value)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"endLocation\", {\r\n        /**\r\n         * @return End location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Relative location to end series at.\r\n         *\r\n         * Range of values: 0 to 1.\r\n         *\r\n         * This setting indicates where actual slices will end relatively to the\r\n         * whole height/width of the series.\r\n         *\r\n         * For example, if we want slices to end at 70% from the top/left of the\r\n         * series, we can set `endLocation = 0.7`.\r\n         *\r\n         * To fill shape outside of the location range, use background of the\r\n         * property `slicesContainer`.\r\n         *\r\n         * ```TypeScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JavaScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"startLocation\": 0.2,\r\n         *     \"endLocation\": 0.8,\r\n         *     \"slicesContainer\": {\r\n         *       \"background\": {\r\n         *         \"fill\": \"#eee\"\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 1\r\n         * @since 4.1.13\r\n         * @param  value  End location\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endLocation\", value)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PictorialStackedSeries;\r\n}(_PyramidSeries__WEBPACK_IMPORTED_MODULE_1__[\"PyramidSeries\"]));\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PictorialStackedSeries\"] = PictorialStackedSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PictorialStackedSeriesDataItem\"] = PictorialStackedSeriesDataItem;\r\n//# sourceMappingURL=PictorialStackedSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js ***!
  \*******************************************************************************/
/*! exports provided: PieSeriesDataItem, PieSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieSeriesDataItem\", function() { return PieSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieSeries\", function() { return PieSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _PercentSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js\");\n/* harmony import */ var _core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Slice */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js\");\n/* harmony import */ var _axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axes/AxisLabelCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js\");\n/* harmony import */ var _elements_PieTick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../elements/PieTick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/**\r\n * Defines Pie Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeriesDataItem\";\r\n        _this.values.radiusValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieSeriesDataItem.prototype, \"radiusValue\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.values.radiusValue.value;\r\n        },\r\n        /**\r\n         * Slice's radius, if other than default.\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"radiusValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        return _super.prototype.hide.call(this, duration, delay, 0, [\"value\", \"radiusValue\"]);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        return _super.prototype.show.call(this, duration, delay, [\"value\", \"radiusValue\"]);\r\n    };\r\n    return PieSeriesDataItem;\r\n}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__[\"PercentSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar PieSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries\";\r\n        _this.alignLabels = true;\r\n        //this.startAngle = -90;\r\n        //this.endAngle = 270;\r\n        _this.layout = \"none\";\r\n        _this.labels.template.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__[\"percent\"])(5);\r\n        _this.addDisposer(_this.labels.template.events.on(\"enabled\", _this.invalidate, _this, false));\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * creates slice\r\n     */\r\n    PieSeries.prototype.createSlice = function () {\r\n        return new _core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__[\"Slice\"]();\r\n    };\r\n    /**\r\n     * creates tick\r\n     */\r\n    PieSeries.prototype.createTick = function () {\r\n        return new _elements_PieTick__WEBPACK_IMPORTED_MODULE_4__[\"PieTick\"]();\r\n    };\r\n    /**\r\n     * creates label\r\n     */\r\n    PieSeries.prototype.createLabel = function () {\r\n        return new _axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_3__[\"AxisLabelCircular\"]();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PieSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pie Slice Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PieSeries.prototype.createDataItem = function () {\r\n        return new PieSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits slice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    PieSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.05;\r\n        var defaultState = slice.defaultState;\r\n        defaultState.properties.shiftRadius = 0;\r\n        slice.togglable = true;\r\n        slice.events.on(\"toggled\", function (event) {\r\n            event.target.hideTooltip();\r\n        });\r\n        var activeState = slice.states.create(\"active\");\r\n        activeState.properties.shiftRadius = 0.10;\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieSeries.prototype.validate = function () {\r\n        this._leftItems = [];\r\n        this._rightItems = [];\r\n        this._currentStartAngle = this.startAngle;\r\n        this._arcRect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"getArcRect\"](this.startAngle, this.endAngle);\r\n        this._maxRadiusPercent = 0;\r\n        for (var i = this.startIndex; i < this.endIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var radiusValuePercent = dataItem.values.radiusValue.percent;\r\n            if (radiusValuePercent > this._maxRadiusPercent) {\r\n                this._maxRadiusPercent = radiusValuePercent;\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        if (this.alignLabels) {\r\n            if (this.startAngle > this.endAngle) {\r\n                this._rightItems.reverse();\r\n            }\r\n            else {\r\n                this._leftItems.reverse();\r\n            }\r\n            this._rightItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle > 270) {\r\n                    aAngle -= 360;\r\n                }\r\n                if (bAngle > 270) {\r\n                    bAngle -= 360;\r\n                }\r\n                if (aAngle < bAngle) {\r\n                    return -1;\r\n                }\r\n                else if (aAngle > bAngle) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            this._leftItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle < bAngle) {\r\n                    return 1;\r\n                }\r\n                else if (aAngle > bAngle) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            this.arrangeLabels(this._rightItems);\r\n            this.arrangeLabels2(this._rightItems);\r\n            this.arrangeLabels(this._leftItems);\r\n            this.arrangeLabels2(this._leftItems);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PieSeries.prototype.validateDataElement = function (dataItem) {\r\n        if (this.pixelRadius > 0) {\r\n            if (this.ignoreZeroValues && dataItem.value == 0) {\r\n                dataItem.__disabled = true;\r\n            }\r\n            else {\r\n                dataItem.__disabled = false;\r\n            }\r\n            // SLICE\r\n            var slice = dataItem.slice;\r\n            slice.radius = this.pixelRadius;\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](dataItem.radiusValue)) {\r\n                slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\r\n            }\r\n            if (!(slice.innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__[\"Percent\"])) {\r\n                slice.innerRadius = this.pixelInnerRadius;\r\n            }\r\n            slice.startAngle = this._currentStartAngle;\r\n            slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\r\n            // LABEL\r\n            if (!this.labels.template.disabled) {\r\n                var label = dataItem.label;\r\n                var tick = dataItem.tick;\r\n                tick.slice = slice;\r\n                tick.label = label;\r\n                var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\r\n                var point = void 0;\r\n                if (this.alignLabels) {\r\n                    var labelRadius = label.pixelRadius(slice.radius);\r\n                    var x = tick.length + labelRadius;\r\n                    label.dx = 0;\r\n                    label.dy = 0;\r\n                    label.verticalCenter = \"middle\";\r\n                    var arcRect = this._arcRect;\r\n                    // right half\r\n                    if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\r\n                        x += (arcRect.width + arcRect.x) * this.pixelRadius;\r\n                        label.horizontalCenter = \"left\";\r\n                        this._rightItems.push(dataItem);\r\n                    }\r\n                    // left half\r\n                    else {\r\n                        x -= arcRect.x * this.pixelRadius;\r\n                        label.horizontalCenter = \"right\";\r\n                        this._leftItems.push(dataItem);\r\n                        x *= -1;\r\n                    }\r\n                    var distance = slice.radius + tick.length + labelRadius;\r\n                    point = { x: x, y: slice.iy * distance };\r\n                    label.moveTo(point);\r\n                }\r\n                else {\r\n                    var depth = slice[\"depth\"];\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](depth)) {\r\n                        depth = 0;\r\n                    }\r\n                    label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\r\n                }\r\n            }\r\n            this._currentStartAngle += slice.arc;\r\n            // do this at the end, otherwise bullets won't be positioned properly\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius for the series' slices in pixels or [[Percent]].\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelRadius\", {\r\n        /**\r\n         * @return Radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelRadius != value) {\r\n                this._pixelRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Pixel inner radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelInnerRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelInnerRadius != value) {\r\n                this._pixelInnerRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"innerRadius\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius for the series' slices in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Redo so that users can set it\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var startAngle = this.getPropertyValue(\"startAngle\");\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](startAngle)) {\r\n                return startAngle;\r\n            }\r\n            else {\r\n                return this._startAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * Start angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"normalizeAngle\"](value), true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"endAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var endAngle = this.getPropertyValue(\"endAngle\");\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](endAngle)) {\r\n                return endAngle;\r\n            }\r\n            else {\r\n                return this._endAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * End angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    PieSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__[\"isNumber\"](locationY)) {\r\n            locationY = 1;\r\n        }\r\n        var angle = slice.startAngle + slice.arc * locationX;\r\n        bullet.x = locationY * slice.radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"cos\"](angle);\r\n        bullet.y = locationY * slice.radiusY * _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"sin\"](angle);\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PieSeries.prototype.handleSliceMove = function (event) {\r\n        if (!this.alignLabels) {\r\n            var slice = event.target;\r\n            var dataItem = slice.dataItem;\r\n            // moving textelement, as label dx and dy are already employed for aligning\r\n            //@labeltodo\r\n            if (dataItem) {\r\n                var label = dataItem.label;\r\n                if (label) {\r\n                    label.dx = label.fdx + slice.dx + slice.pixelX;\r\n                    label.dy = label.fdy + slice.dy + slice.pixelY;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"getArcRect\"](chart.startAngle, chart.endAngle, this.pixelRadius);\r\n            }\r\n            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__[\"getArcRect\"](this.startAngle, this.endAngle, this.pixelRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieSeries;\r\n}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__[\"PercentSeries\"]));\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"PieSeries\"] = PieSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;\r\n//# sourceMappingURL=PieSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js ***!
  \*********************************************************************************/
/*! exports provided: PieSeries3DDataItem, PieSeries3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieSeries3DDataItem\", function() { return PieSeries3DDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieSeries3D\", function() { return PieSeries3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _series_PieSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/PieSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js\");\n/* harmony import */ var _core_elements_3d_Slice3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/3d/Slice3D */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Slice3D.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieSeries3DDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieSeries3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries3DDataItem\";\r\n        _this.values.depthValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieSeries3DDataItem.prototype, \"depthValue\", {\r\n        /**\r\n         * @return Depth\r\n         */\r\n        get: function () {\r\n            return this.values[\"depthValue\"].value;\r\n        },\r\n        /**\r\n         * Slice depth (height).\r\n         *\r\n         * @param value  Depth\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"depthValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieSeries3DDataItem;\r\n}(_series_PieSeries__WEBPACK_IMPORTED_MODULE_1__[\"PieSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a slice series on a 3D pie chart.\r\n *\r\n * @see {@link IPieSeries3DEvents} for a list of available Events\r\n * @see {@link IPieSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar PieSeries3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieSeries3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries3D\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PieSeries3D.prototype.createDataItem = function () {\r\n        return new PieSeries3DDataItem();\r\n    };\r\n    /**\r\n     * creates slice\r\n     */\r\n    PieSeries3D.prototype.createSlice = function () {\r\n        return new _core_elements_3d_Slice3D__WEBPACK_IMPORTED_MODULE_2__[\"Slice3D\"]();\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PieSeries3D.prototype.validateDataElement = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        var depth = this.depth;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](depth)) {\r\n            depth = this.chart.depth;\r\n        }\r\n        var depthPercent = dataItem.values.depthValue.percent;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](depthPercent)) {\r\n            depthPercent = 100;\r\n        }\r\n        slice.depth = depthPercent * depth / 100;\r\n        var angle = this.angle;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__[\"isNumber\"](angle)) {\r\n            angle = this.chart.angle;\r\n        }\r\n        slice.angle = angle;\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieSeries3D.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        for (var i = this._workingStartIndex; i < this._workingEndIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var slice = dataItem.slice;\r\n            var startAngle = slice.startAngle;\r\n            // find quarter\r\n            //q0 || q1\r\n            if ((startAngle >= -90 && startAngle < 90)) {\r\n                slice.toFront();\r\n            }\r\n            //q2 || q3\r\n            else if ((startAngle >= 90)) {\r\n                slice.toBack();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth (height) of the pie slice in pixels.\r\n         *\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle of the view point of the 3D pie. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    PieSeries3D.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        bullet.y = bullet.pixelY - slice.depth;\r\n    };\r\n    return PieSeries3D;\r\n}(_series_PieSeries__WEBPACK_IMPORTED_MODULE_1__[\"PieSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PieSeries3D\"] = PieSeries3D;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PieSeries3DDataItem\"] = PieSeries3DDataItem;\r\n//# sourceMappingURL=PieSeries3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js ***!
  \***********************************************************************************/
/*! exports provided: PyramidSeriesDataItem, PyramidSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PyramidSeriesDataItem\", function() { return PyramidSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PyramidSeries\", function() { return PyramidSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FunnelSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FunnelSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/**\r\n * Defines Pyramid Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PyramidSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PyramidSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PyramidSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PyramidSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PyramidSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PyramidSeriesDataItem;\r\n}(_FunnelSeries__WEBPACK_IMPORTED_MODULE_1__[\"FunnelSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPyramidSeriesEvents} for a list of available Events\r\n * @see {@link IPyramidSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar PyramidSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PyramidSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PyramidSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PyramidSeries\";\r\n        _this.topWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(0);\r\n        _this.bottomWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(100);\r\n        _this.pyramidHeight = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__[\"percent\"])(100);\r\n        _this.valueIs = \"area\";\r\n        _this.sliceLinks.template.width = 0;\r\n        _this.sliceLinks.template.height = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PyramidSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pyramid Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PyramidSeries.prototype.createDataItem = function () {\r\n        return new PyramidSeriesDataItem();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PyramidSeries.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this._nextWidth = undefined;\r\n    };\r\n    /**\r\n     * [getNextValue description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     * @return [description]\r\n     */\r\n    PyramidSeries.prototype.getNextValue = function (dataItem) {\r\n        var index = dataItem.index;\r\n        var nextValue = dataItem.getWorkingValue(\"value\");\r\n        if (index < this.dataItems.length - 1) {\r\n            var nextItem = this.dataItems.getIndex(index + 1);\r\n            nextValue = nextItem.getWorkingValue(\"value\");\r\n        }\r\n        if (nextValue == 0) {\r\n            nextValue = 0.000001;\r\n        }\r\n        return nextValue;\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    PyramidSeries.prototype.validateDataElements = function () {\r\n        var _this = this;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        this.dataItems.each(function (dataItem) {\r\n            if (dataItem.value > 0) {\r\n                var relValue = dataItem.getWorkingValue(\"value\") / dataItem.value;\r\n                var sliceLink = dataItem.sliceLink;\r\n                if (_this.orientation == \"vertical\") {\r\n                    maxHeight -= (sliceLink.pixelHeight * relValue);\r\n                }\r\n                else {\r\n                    maxWidth -= (sliceLink.pixelWidth * relValue);\r\n                }\r\n            }\r\n        });\r\n        this._pyramidHeight = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"relativeToValue\"](this.pyramidHeight, maxHeight);\r\n        this._pyramidWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"relativeToValue\"](this.pyramidHeight, maxWidth);\r\n        if (this.orientation == \"vertical\") {\r\n            var y = (maxHeight - this._pyramidHeight) / 2;\r\n            this.slicesContainer.y = y;\r\n            this.labelsContainer.y = y;\r\n            this.ticksContainer.y = y;\r\n        }\r\n        else {\r\n            var x = (maxWidth - this._pyramidWidth) / 2;\r\n            this.slicesContainer.x = x;\r\n            this.labelsContainer.x = x;\r\n            this.ticksContainer.x = x;\r\n        }\r\n        _super.prototype.validateDataElements.call(this);\r\n    };\r\n    /**\r\n     * [decorateSlice description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    PyramidSeries.prototype.decorateSlice = function (dataItem) {\r\n        var sum = this.dataItem.values.value.absoluteSum;\r\n        if (sum == 0) {\r\n            return;\r\n        }\r\n        var slice = dataItem.slice;\r\n        var sliceLink = dataItem.sliceLink;\r\n        var label = dataItem.label;\r\n        var tick = dataItem.tick;\r\n        // TODO can this be removed ?\r\n        this.getNextValue(dataItem);\r\n        var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n        var pyramidWidth = this._pyramidWidth;\r\n        var pyramidHeight = this._pyramidHeight;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        var linkWidth = sliceLink.pixelWidth;\r\n        var linkHeight = sliceLink.pixelHeight;\r\n        if (dataItem.value == 0 && this.ignoreZeroValues) {\r\n            dataItem.__disabled = true;\r\n        }\r\n        else {\r\n            dataItem.__disabled = false;\r\n        }\r\n        if (this.orientation == \"vertical\") {\r\n            var topWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"relativeToValue\"](this.topWidth, maxWidth);\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__[\"isNumber\"](this._nextWidth)) {\r\n                this._nextWidth = topWidth;\r\n            }\r\n            var bottomWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"relativeToValue\"](this.bottomWidth, maxWidth);\r\n            var sliceTopWidth = this._nextWidth;\r\n            var angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);\r\n            var c = Math.tan(Math.PI / 2 - angle);\r\n            if (c == 0) {\r\n                c = 0.00000001;\r\n            }\r\n            var sliceHeight = void 0;\r\n            var sliceBottomWidth = void 0;\r\n            if (this.valueIs == \"area\") {\r\n                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;\r\n                var square = totalSquare * workingValue / sum;\r\n                var s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);\r\n                sliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;\r\n                if (sliceHeight > 0) {\r\n                    sliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;\r\n                }\r\n                else {\r\n                    sliceBottomWidth = sliceTopWidth;\r\n                }\r\n            }\r\n            else {\r\n                sliceHeight = pyramidHeight * workingValue / sum;\r\n                sliceBottomWidth = sliceTopWidth - sliceHeight * c;\r\n            }\r\n            slice.height = sliceHeight;\r\n            slice.width = maxWidth;\r\n            slice.bottomWidth = sliceBottomWidth;\r\n            slice.topWidth = sliceTopWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = slice.bottomWidth;\r\n            slice.y = this._nextY;\r\n            //slice.x = maxWidth / 2;\r\n            if (!this.alignLabels) {\r\n                label.x = maxWidth / 2;\r\n            }\r\n            else {\r\n                label.x = 0;\r\n            }\r\n            label.y = slice.pixelY + slice.pixelHeight * tick.locationY + slice.dy;\r\n            this._nextY += slice.pixelHeight + linkHeight * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n            sliceLink.y = this._nextY - linkHeight;\r\n            sliceLink.x = maxWidth / 2;\r\n        }\r\n        else {\r\n            var topWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"relativeToValue\"](this.topWidth, maxHeight);\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__[\"isNumber\"](this._nextWidth)) {\r\n                this._nextWidth = topWidth;\r\n            }\r\n            var bottomWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__[\"relativeToValue\"](this.bottomWidth, maxHeight);\r\n            var sliceTopWidth = this._nextWidth;\r\n            var angle = Math.atan2(pyramidWidth, topWidth - bottomWidth);\r\n            var c = Math.tan(Math.PI / 2 - angle);\r\n            if (c == 0) {\r\n                c = 0.00000001;\r\n            }\r\n            var sliceWidth = void 0;\r\n            var sliceBottomWidth = void 0;\r\n            if (this.valueIs == \"area\") {\r\n                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidWidth;\r\n                var square = totalSquare * workingValue / sum;\r\n                sliceWidth = (sliceTopWidth - Math.sqrt(sliceTopWidth * sliceTopWidth - 2 * square * c)) / c;\r\n                sliceBottomWidth = (2 * square - sliceWidth * sliceTopWidth) / sliceWidth;\r\n            }\r\n            else {\r\n                sliceWidth = pyramidWidth * workingValue / sum;\r\n                sliceBottomWidth = sliceTopWidth - sliceWidth * c;\r\n            }\r\n            slice.width = sliceWidth;\r\n            slice.height = maxHeight;\r\n            slice.bottomWidth = sliceBottomWidth;\r\n            slice.topWidth = sliceTopWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = slice.bottomWidth;\r\n            slice.x = this._nextY;\r\n            if (!this.alignLabels) {\r\n                label.y = maxHeight / 2;\r\n            }\r\n            else {\r\n                label.y = this.labelsContainer.measuredHeight;\r\n            }\r\n            label.x = slice.pixelX + slice.pixelWidth * tick.locationX + slice.dx;\r\n            this._nextY += slice.pixelWidth + linkWidth * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n            sliceLink.x = this._nextY - linkWidth;\r\n            sliceLink.y = maxHeight / 2;\r\n        }\r\n        this._nextWidth = slice.bottomWidth;\r\n    };\r\n    Object.defineProperty(PyramidSeries.prototype, \"topWidth\", {\r\n        /**\r\n         * @return {number | Percent}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"topWidth\");\r\n        },\r\n        /**\r\n         * Width of the pyramid's tip in pixels or relative (`Percent`).\r\n         *\r\n         * `0%` (default) means the pyramid will be perfectly pointy.\r\n         * `50%` will have a cut off / blunt top that is half the width of the chart.\r\n         * `100%` will take the whole width of the chart.\r\n         *\r\n         * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n         * `100%` and `bottomWidth` to `0%`.\r\n         *\r\n         * @default 0%\r\n         * @param {number | Percent}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"topWidth\", value, false, false, 10, false)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"pyramidHeight\", {\r\n        /**\r\n         * @return {number | Percent}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pyramidHeight\");\r\n        },\r\n        /**\r\n         * Height of pyramid\r\n         *\r\n         *\r\n         * @default 100%\r\n         * @param {number | Percent}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"pyramidHeight\", value, false, false, 10, false)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"bottomWidth\", {\r\n        /**\r\n         * @return {number | Percent}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomWidth\");\r\n        },\r\n        /**\r\n         * Width of the pyramid's bottom (bsae) in pixels or relative (`Percent`).\r\n         *\r\n         * `0%` means the pyramid's botto will be pointy.\r\n         * `50%` will have a cut off / blunt bottom that is half the width of the chart.\r\n         * `100%` (default) will take the whole width of the chart.\r\n         *\r\n         * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n         * `100%` and `bottomWidth` to `0%`.\r\n         *\r\n         * @param {number | Percent}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"bottomWidth\", value, false, false, 10, false)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"valueIs\", {\r\n        /**\r\n         * @return {\"area\" | \"height\"}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"valueIs\");\r\n        },\r\n        /**\r\n         * Indicates how slice's value will influence its size.\r\n         *\r\n         * `\"area\"` (default) means that the whole area of the pyramid (counting in\r\n         * modifications by `topWidth` and `bottomWidth`) will be divvied up between\r\n         * slices based on their value.\r\n         *\r\n         * With this setting at `\"area\"` the area of the trapezoids of each slice\r\n         * will represent their value relatively to values of the other slices.\r\n         *\r\n         * This is a correct way to depict \"weight\" of each slice based on their\r\n         * values.\r\n         *\r\n         * `\"height\"` means whole height (as opposed to area) of the pyramid will be\r\n         * divvied up between slices. Actual slice width or area is not counted in.\r\n         *\r\n         * From the data-viz standpoint this does not make a lot of sense, since\r\n         * slices with lesser values might appear more prominent if they are placed\r\n         * towards thick end of the pyramid since their areas will be bigger.\r\n         *\r\n         * @default \"area\"\r\n         * @param {\"area\" | \"height\"}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"valueIs\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PyramidSeries;\r\n}(_FunnelSeries__WEBPACK_IMPORTED_MODULE_1__[\"FunnelSeries\"]));\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"PyramidSeries\"] = PyramidSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"PyramidSeriesDataItem\"] = PyramidSeriesDataItem;\r\n//# sourceMappingURL=PyramidSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js ***!
  \***************************************************************************************/
/*! exports provided: RadarColumnSeriesDataItem, RadarColumnSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarColumnSeriesDataItem\", function() { return RadarColumnSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarColumnSeries\", function() { return RadarColumnSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axes/CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony import */ var _elements_RadarColumn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../elements/RadarColumn */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/**\r\n * Radar column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[RadarColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar RadarColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return RadarColumnSeriesDataItem;\r\n}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IRadarColumnSeriesEvents} for a list of available Events\r\n * @see {@link IRadarColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar RadarColumnSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarColumnSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates and returns a RadarColumn element to use as column in radar chart.\r\n     *\r\n     * @return RadarColumn.\r\n     */\r\n    RadarColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new _elements_RadarColumn__WEBPACK_IMPORTED_MODULE_4__[\"RadarColumn\"]();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarColumnSeries.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    RadarColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        if (dataItem) {\r\n            if (dataItem.column) {\r\n                dataItem.column.__disabled = true;\r\n            }\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    rangeColumn.__disabled = true;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    RadarColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        var _this = this;\r\n        var startAngle = this.chart.startAngle;\r\n        var endAngle = this.chart.endAngle;\r\n        var yField = this.yField;\r\n        var yOpenField = this.yOpenField;\r\n        var xField = this.xField;\r\n        var xOpenField = this.xOpenField;\r\n        var lAngle;\r\n        var rAngle;\r\n        var tRadius;\r\n        var bRadius;\r\n        var startLocation = this.getStartLocation(dataItem);\r\n        var endLocation = this.getEndLocation(dataItem);\r\n        var cellAngle = (endAngle - startAngle) / (this.dataItems.length * (this.end - this.start));\r\n        var radarColumn = dataItem.column;\r\n        if (!radarColumn) {\r\n            radarColumn = this.columns.create();\r\n            dataItem.column = radarColumn;\r\n            _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__[\"copyProperties\"](this, radarColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]); // need this \r\n            _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__[\"copyProperties\"](this.columns.template, radarColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]); // second time, no force, so that columns.template would override series properties\t\t\t\r\n            dataItem.addSprite(radarColumn);\r\n            radarColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n            this.setColumnStates(radarColumn);\r\n        }\r\n        var width = radarColumn.width;\r\n        var percentWidth = 100;\r\n        if (width instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__[\"Percent\"]) {\r\n            percentWidth = width.percent;\r\n        }\r\n        var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"round\"]((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n        startLocation += offset;\r\n        endLocation -= offset;\r\n        // two category axes\r\n        if ((this.xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_3__[\"CategoryAxis\"]) && (this.yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_3__[\"CategoryAxis\"])) {\r\n            tRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: this.yAxis.getX(dataItem, yField, 0, \"valueY\"), y: this.yAxis.getY(dataItem, yField, 0, \"valueY\") });\r\n            bRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: this.yAxis.getX(dataItem, yOpenField, 1, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, 1, \"valueY\") });\r\n            lAngle = this.xAxis.getAngle(dataItem, xOpenField, 0, \"valueX\");\r\n            rAngle = this.xAxis.getAngle(dataItem, xField, 1, \"valueX\");\r\n            startAngle = startAngle + startLocation * cellAngle;\r\n            endAngle = endAngle - (1 - endLocation) * cellAngle;\r\n        }\r\n        else if (this.baseAxis == this.xAxis) {\r\n            tRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: this.yAxis.getX(dataItem, yField, dataItem.locations[yField], \"valueY\"), y: this.yAxis.getY(dataItem, yField, dataItem.locations[yField], \"valueY\") });\r\n            bRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: this.yAxis.getX(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\") });\r\n            lAngle = this.xAxis.getAngle(dataItem, xOpenField, startLocation, \"valueX\");\r\n            rAngle = this.xAxis.getAngle(dataItem, xField, endLocation, \"valueX\");\r\n            startAngle = startAngle + startLocation * cellAngle;\r\n            endAngle = endAngle - (1 - endLocation) * cellAngle;\r\n        }\r\n        else {\r\n            tRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: this.yAxis.getX(dataItem, yField, startLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yField, startLocation, \"valueY\") });\r\n            bRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: this.yAxis.getX(dataItem, yOpenField, endLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, endLocation, \"valueY\") });\r\n            lAngle = this.xAxis.getAngle(dataItem, xField, dataItem.locations[xField], \"valueX\");\r\n            rAngle = this.xAxis.getAngle(dataItem, xOpenField, dataItem.locations[xOpenField], \"valueX\");\r\n        }\r\n        if (rAngle < lAngle) {\r\n            var temp = rAngle;\r\n            rAngle = lAngle;\r\n            lAngle = temp;\r\n        }\r\n        lAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](lAngle, startAngle, endAngle);\r\n        rAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"fitToRange\"](rAngle, startAngle, endAngle);\r\n        var slice = radarColumn.radarColumn;\r\n        slice.startAngle = lAngle;\r\n        var arc = rAngle - lAngle;\r\n        if (arc > 0) {\r\n            slice.arc = arc;\r\n            slice.radius = tRadius;\r\n            slice.innerRadius = bRadius;\r\n            radarColumn.__disabled = false;\r\n            radarColumn.parent = this.columnsContainer;\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (!rangeColumn) {\r\n                    rangeColumn = _this.columns.create();\r\n                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__[\"forceCopyProperties\"](_this.columns.template, rangeColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__[\"copyProperties\"](axisRange.contents, rangeColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]); // need this because 3d columns are not in the same container\r\n                    if (rangeColumn.dataItem) {\r\n                        _core_utils_Array__WEBPACK_IMPORTED_MODULE_11__[\"remove\"](rangeColumn.dataItem.sprites, rangeColumn);\r\n                    }\r\n                    dataItem.addSprite(rangeColumn);\r\n                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\t\t\t\t\t\r\n                    _this.setColumnStates(rangeColumn);\r\n                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n                }\r\n                var slice = rangeColumn.radarColumn;\r\n                slice.startAngle = lAngle;\r\n                slice.arc = arc;\r\n                slice.radius = tRadius;\r\n                slice.innerRadius = bRadius;\r\n                if (slice.invalid) {\r\n                    slice.paper = _this.paper;\r\n                    slice.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n                }\r\n                rangeColumn.__disabled = false;\r\n                rangeColumn.parent = axisRange.contents;\r\n            });\r\n        }\r\n        else {\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    RadarColumnSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (!stackKeyX) {\r\n            stackKeyX = \"valueX\";\r\n        }\r\n        if (!stackKeyY) {\r\n            stackKeyY = \"valueY\";\r\n        }\r\n        var x = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n        var y = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getDistance\"]({ x: x, y: y });\r\n        // hack to be able to determine angle later\r\n        if (radius == 0) {\r\n            radius = 0.00001;\r\n        }\r\n        var angle = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n        return { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"sin\"](angle) };\r\n    };\r\n    /**\r\n     * Returns an SVG path to be used as a mask for the series.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    RadarColumnSeries.prototype.getMaskPath = function () {\r\n        var renderer = this.yAxis.renderer;\r\n        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__[\"arc\"](renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n    };\r\n    RadarColumnSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {\r\n            bullet.visible = false;\r\n        }\r\n        bullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\r\n    };\r\n    RadarColumnSeries.prototype.setXAxis = function (axis) {\r\n        _super.prototype.setXAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarColumnSeries.prototype.setYAxis = function (axis) {\r\n        _super.prototype.setYAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarColumnSeries.prototype.updateRendererRefs = function () {\r\n        var rendererX = this.xAxis.renderer;\r\n        var rendererY = this.yAxis.renderer;\r\n        rendererX.axisRendererY = rendererY;\r\n    };\r\n    return RadarColumnSeries;\r\n}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"RadarColumnSeries\"] = RadarColumnSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"RadarColumnSeriesDataItem\"] = RadarColumnSeriesDataItem;\r\n//# sourceMappingURL=RadarColumnSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js ***!
  \*********************************************************************************/
/*! exports provided: RadarSeriesDataItem, RadarSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarSeriesDataItem\", function() { return RadarSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarSeries\", function() { return RadarSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _LineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Radar series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n//import { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\n//import { Sprite } from \"../../core/Sprite\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[RadarSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar RadarSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarSeriesDataItem\";\r\n        _this.setLocation(\"dateX\", 0, 0);\r\n        _this.setLocation(\"dateY\", 0, 0);\r\n        _this.setLocation(\"categoryX\", 0, 0);\r\n        _this.setLocation(\"categoryY\", 0, 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return RadarSeriesDataItem;\r\n}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__[\"LineSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a radar graph.\r\n *\r\n * @see {@link IRadarSeriesEvents} for a list of available Events\r\n * @see {@link IRadarSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar RadarSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarSeries\";\r\n        _this.connectEnds = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarSeries.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    RadarSeries.prototype.createDataItem = function () {\r\n        return new RadarSeriesDataItem();\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    RadarSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (!stackKeyX) {\r\n            stackKeyX = \"valueX\";\r\n        }\r\n        if (!stackKeyY) {\r\n            stackKeyY = \"valueY\";\r\n        }\r\n        var x = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n        var y = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"getDistance\"]({ x: x, y: y });\r\n        // hack to be able to determine angle later\r\n        if (radius == 0) {\r\n            radius = 0.00001;\r\n        }\r\n        var angle = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n        var startAngle = this.chart.startAngle;\r\n        var endAngle = this.chart.endAngle;\r\n        //\t\tangle = $math.fitToRange(angle, startAngle, endAngle);\r\n        if (angle < startAngle || angle > endAngle) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"cos\"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__[\"sin\"](angle) };\r\n        }\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @todo Description\r\n     * @param points    [description]\r\n     * @param dataItem  [description]\r\n     * @param xField    [description]\r\n     * @param yField    [description]\r\n     * @param backwards [description]\r\n     */\r\n    RadarSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {\r\n        var point = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], dataItem.locations[yField]);\r\n        if (point) {\r\n            points.push(point);\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG path to be used as a mask for the series.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    RadarSeries.prototype.getMaskPath = function () {\r\n        var renderer = this.yAxis.renderer;\r\n        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__[\"arc\"](renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n    };\r\n    /**\r\n     * [drawSegment description]\r\n     *\r\n     * @todo Description\r\n     * @param segment      [description]\r\n     * @param points       [description]\r\n     * @param closePoints  [description]\r\n     */\r\n    RadarSeries.prototype.drawSegment = function (segment, points, closePoints) {\r\n        var axis = this.yAxis;\r\n        var renderer = axis.renderer;\r\n        if (this.connectEnds && Math.abs(renderer.endAngle - renderer.startAngle) == 360) {\r\n            // adds one point to the beginning of closePoints array, if needed\r\n            if (this.dataFields[this._xOpenField] ||\r\n                this.dataFields[this._yOpenField] ||\r\n                this.stacked) {\r\n                points.push(points[0]);\r\n                if (closePoints.length > 0) {\r\n                    closePoints.unshift(closePoints[closePoints.length - 1]);\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.drawSegment.call(this, segment, points, closePoints);\r\n    };\r\n    Object.defineProperty(RadarSeries.prototype, \"connectEnds\", {\r\n        /**\r\n         * @return Connect?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"connectEnds\");\r\n        },\r\n        /**\r\n         * Should the last and and first data points be connected, forming a complete\r\n         * closed circle?\r\n         *\r\n         * @default true\r\n         * @param value  Connect?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"connectEnds\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RadarSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {\r\n            bullet.visible = false;\r\n        }\r\n        bullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\r\n    };\r\n    RadarSeries.prototype.setXAxis = function (axis) {\r\n        _super.prototype.setXAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarSeries.prototype.setYAxis = function (axis) {\r\n        _super.prototype.setYAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarSeries.prototype.updateRendererRefs = function () {\r\n        var rendererX = this.xAxis.renderer;\r\n        var rendererY = this.yAxis.renderer;\r\n        rendererX.axisRendererY = rendererY;\r\n    };\r\n    return RadarSeries;\r\n}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__[\"LineSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"RadarSeries\"] = RadarSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"RadarSeriesDataItem\"] = RadarSeriesDataItem;\r\n//# sourceMappingURL=RadarSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js ***!
  \************************************************************************************/
/*! exports provided: StepLineSeriesDataItem, StepLineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StepLineSeriesDataItem\", function() { return StepLineSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StepLineSeries\", function() { return StepLineSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _LineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js\");\n/* harmony import */ var _StepLineSeriesSegment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StepLineSeriesSegment */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/**\r\n * Step line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[StepLineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar StepLineSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(StepLineSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function StepLineSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"StepLineSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return StepLineSeriesDataItem;\r\n}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__[\"LineSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a step line graph.\r\n *\r\n * @see {@link IStepLineSeriesEvents} for a list of available Events\r\n * @see {@link IStepLineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar StepLineSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(StepLineSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function StepLineSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"StepLineSeries\";\r\n        _this.applyTheme();\r\n        _this.startLocation = 0;\r\n        _this.endLocation = 1;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    StepLineSeries.prototype.createDataItem = function () {\r\n        return new StepLineSeriesDataItem();\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @todo Description\r\n     * @param points     [description]\r\n     * @param dataItem   [description]\r\n     * @param xField     [description]\r\n     * @param yField     [description]\r\n     * @param backwards  [description]\r\n     */\r\n    StepLineSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {\r\n        var startLocationX;\r\n        var endLocationX;\r\n        var startLocationY;\r\n        var endLocationY;\r\n        if (this.baseAxis == this.xAxis) {\r\n            startLocationX = this.startLocation;\r\n            endLocationX = this.endLocation;\r\n            startLocationY = this.getAdjustedXLocation(dataItem, this.yOpenField);\r\n            endLocationY = this.getAdjustedXLocation(dataItem, this.yField);\r\n        }\r\n        if (this.baseAxis == this.yAxis) {\r\n            startLocationY = this.startLocation;\r\n            endLocationY = this.endLocation;\r\n            startLocationX = this.getAdjustedXLocation(dataItem, this.xOpenField);\r\n            endLocationX = this.getAdjustedXLocation(dataItem, this.xField);\r\n        }\r\n        var x0 = this.xAxis.getX(dataItem, xField, startLocationX);\r\n        var y0 = this.yAxis.getY(dataItem, yField, startLocationY);\r\n        var x1 = this.xAxis.getX(dataItem, xField, endLocationX);\r\n        var y1 = this.yAxis.getY(dataItem, yField, endLocationY);\r\n        x0 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"fitToRange\"](x0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        y0 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"fitToRange\"](y0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        x1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"fitToRange\"](x1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        y1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"fitToRange\"](y1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        // this might make an impression that points are duplicated, and they indeed are, but this is needed to handle gaps in data\r\n        if (!this.noRisers) {\r\n            if (points.length > 1) {\r\n                var prevPoint = points[points.length - 1];\r\n                if (this.baseAxis == this.xAxis) {\r\n                    if (backwards) {\r\n                        points.push({ x: prevPoint.x, y: y1 });\r\n                    }\r\n                    else {\r\n                        points.push({ x: x0, y: prevPoint.y });\r\n                    }\r\n                }\r\n                if (this.baseAxis == this.yAxis) {\r\n                    if (backwards) {\r\n                        points.push({ x: x1, y: prevPoint.y });\r\n                    }\r\n                    else {\r\n                        points.push({ x: prevPoint.x, y: y0 });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var point0 = { x: x0, y: y0 };\r\n        var point1 = { x: x1, y: y1 };\r\n        if (backwards) {\r\n            points.push(point1, point0);\r\n        }\r\n        else {\r\n            points.push(point0, point1);\r\n        }\r\n    };\r\n    /**\r\n     * Draws the line segment.\r\n     *\r\n     * @param segment     Segment\r\n     * @param points      Segment points\r\n     * @param closePoints Segment close points\r\n     */\r\n    StepLineSeries.prototype.drawSegment = function (segment, points, closePoints) {\r\n        var vertical = false;\r\n        if (this.yAxis == this.baseAxis) {\r\n            vertical = true;\r\n        }\r\n        segment.drawSegment(points, closePoints, this.tensionX, this.tensionY, this.noRisers, vertical);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    StepLineSeries.prototype.createSegment = function () {\r\n        return new _StepLineSeriesSegment__WEBPACK_IMPORTED_MODULE_2__[\"StepLineSeriesSegment\"]();\r\n    };\r\n    Object.defineProperty(StepLineSeries.prototype, \"noRisers\", {\r\n        /**\r\n         * @return No risers\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"noRisers\");\r\n        },\r\n        /**\r\n         * Specifies if step line series should draw only horizontal (or only\r\n         * vertical, depending on base axis) lines, instead of connecting them with\r\n         * vertical (or horizontal) lines.\r\n         *\r\n         * @default false\r\n         * @param value  No risers\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"noRisers\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StepLineSeries.prototype, \"startLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * start location of the step\r\n         *\r\n         * @param value Location (0-1)\r\n         * @default 0\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StepLineSeries.prototype, \"endLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Step end location.\r\n         *\r\n         * @param value Location (0-1)\r\n         * #default 1\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return StepLineSeries;\r\n}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__[\"LineSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"StepLineSeries\"] = StepLineSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"StepLineSeriesDataItem\"] = StepLineSeriesDataItem;\r\n//# sourceMappingURL=StepLineSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js ***!
  \*******************************************************************************************/
/*! exports provided: StepLineSeriesSegment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StepLineSeriesSegment\", function() { return StepLineSeriesSegment; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _LineSeriesSegment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineSeriesSegment */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link IStepLineSeriesSegmentEvents} for a list of available events\r\n * @see {@link IStepLineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nvar StepLineSeriesSegment = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(StepLineSeriesSegment, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function StepLineSeriesSegment() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"StepLineSeriesSegment\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the series segment.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param points       Points to connect\r\n     * @param closePoints  ?\r\n     * @param smoothnessX  Horizontal bezier setting (?)\r\n     * @param smoothnessY  Vertical bezier setting (?)\r\n     */\r\n    StepLineSeriesSegment.prototype.drawSegment = function (points, closePoints, smoothnessX, smoothnessY, noRisers, vertical) {\r\n        if (points.length > 0 && closePoints.length > 0) {\r\n            if (noRisers) {\r\n                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"](points[0]);\r\n                if (points.length > 0) {\r\n                    for (var i = 1; i < points.length; i++) {\r\n                        var point = points[i];\r\n                        if (i / 2 == Math.round(i / 2)) {\r\n                            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"](point);\r\n                        }\r\n                        else {\r\n                            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"](point);\r\n                        }\r\n                    }\r\n                }\r\n                this.strokeSprite.path = path;\r\n                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n                    path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"](points[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"polyline\"](points);\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"](closePoints[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"polyline\"](closePoints);\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"](points[0]);\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"closePath\"]();\r\n                    this.fillSprite.path = path;\r\n                }\r\n                else {\r\n                }\r\n            }\r\n            else {\r\n                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"](points[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"polyline\"](points);\r\n                this.strokeSprite.path = path;\r\n                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"](closePoints[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"polyline\"](closePoints);\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"lineTo\"](points[0]);\r\n                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"closePath\"]();\r\n                    this.fillSprite.path = path;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return StepLineSeriesSegment;\r\n}(_LineSeriesSegment__WEBPACK_IMPORTED_MODULE_1__[\"LineSeriesSegment\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"StepLineSeriesSegment\"] = StepLineSeriesSegment;\r\n//# sourceMappingURL=StepLineSeriesSegment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9TdGVwTGluZVNlcmllc1NlZ21lbnQuanM/YjY1NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0Q7QUFDVDtBQUNJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsbUNBQW1DO0FBQzVDLFNBQVMscUNBQXFDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyREFBWTtBQUN2QztBQUNBLG1DQUFtQyxtQkFBbUI7QUFDdEQ7QUFDQTtBQUNBLG9DQUFvQywyREFBWTtBQUNoRDtBQUNBO0FBQ0Esb0NBQW9DLDJEQUFZO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFO0FBQzlFLDJCQUEyQiwyREFBWSxjQUFjLDZEQUFjO0FBQ25FLDRCQUE0QiwyREFBWSxtQkFBbUIsNkRBQWM7QUFDekUsNEJBQTRCLDJEQUFZO0FBQ3hDLDRCQUE0Qiw4REFBZTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkRBQVksY0FBYyw2REFBYztBQUNuRTtBQUNBLDhFQUE4RTtBQUM5RSw0QkFBNEIsMkRBQVksbUJBQW1CLDZEQUFjO0FBQ3pFLDRCQUE0QiwyREFBWTtBQUN4Qyw0QkFBNEIsOERBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLG9FQUFpQjtBQUNjO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3Nlcmllcy9TdGVwTGluZVNlcmllc1NlZ21lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGluZSBzZXJpZXMgc2VnbWVudCBtb2R1bGUuXHJcbiAqIEB0b2RvIEFkZCBkZXNjcmlwdGlvbiBhYm91dCB3aGF0IHRoaXMgaXNcclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgTGluZVNlcmllc1NlZ21lbnQgfSBmcm9tIFwiLi9MaW5lU2VyaWVzU2VnbWVudFwiO1xyXG5pbXBvcnQgeyByZWdpc3RyeSB9IGZyb20gXCIuLi8uLi9jb3JlL1JlZ2lzdHJ5XCI7XHJcbmltcG9ydCAqIGFzICRwYXRoIGZyb20gXCIuLi8uLi9jb3JlL3JlbmRlcmluZy9QYXRoXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogUmVwcmVzZW50cyBhIGxpbmUgc2VyaWVzIHNlZ21lbnQuXHJcbiAqXHJcbiAqIEEgbGluZSBzZWdtZW50IGNhbiBiZSB1c2VkIHRvIGFwcGx5IGRpZmZlcmVudCBwcm9wZXJ0aWVzIHRvIGEgcGFydCBvZiB0aGVcclxuICogbGluZSBzZXJpZXMsIGJldHdlZW4gdHdvIGRhdGEgcG9pbnRzLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJU3RlcExpbmVTZXJpZXNTZWdtZW50RXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBldmVudHNcclxuICogQHNlZSB7QGxpbmsgSVN0ZXBMaW5lU2VyaWVzU2VnbWVudEFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAdG9kbyBFeGFtcGxlXHJcbiAqL1xyXG52YXIgU3RlcExpbmVTZXJpZXNTZWdtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKFN0ZXBMaW5lU2VyaWVzU2VnbWVudCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gU3RlcExpbmVTZXJpZXNTZWdtZW50KCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IFxyXG4gICAgICAgIC8vIEluaXRcclxuICAgICAgICBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiU3RlcExpbmVTZXJpZXNTZWdtZW50XCI7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBEcmF3cyB0aGUgc2VyaWVzIHNlZ21lbnQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIHBvaW50cyAgICAgICBQb2ludHMgdG8gY29ubmVjdFxyXG4gICAgICogQHBhcmFtIGNsb3NlUG9pbnRzICA/XHJcbiAgICAgKiBAcGFyYW0gc21vb3RobmVzc1ggIEhvcml6b250YWwgYmV6aWVyIHNldHRpbmcgKD8pXHJcbiAgICAgKiBAcGFyYW0gc21vb3RobmVzc1kgIFZlcnRpY2FsIGJlemllciBzZXR0aW5nICg/KVxyXG4gICAgICovXHJcbiAgICBTdGVwTGluZVNlcmllc1NlZ21lbnQucHJvdG90eXBlLmRyYXdTZWdtZW50ID0gZnVuY3Rpb24gKHBvaW50cywgY2xvc2VQb2ludHMsIHNtb290aG5lc3NYLCBzbW9vdGhuZXNzWSwgbm9SaXNlcnMsIHZlcnRpY2FsKSB7XHJcbiAgICAgICAgaWYgKHBvaW50cy5sZW5ndGggPiAwICYmIGNsb3NlUG9pbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgaWYgKG5vUmlzZXJzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGF0aCA9ICRwYXRoLm1vdmVUbyhwb2ludHNbMF0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBvaW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBvaW50ID0gcG9pbnRzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaSAvIDIgPT0gTWF0aC5yb3VuZChpIC8gMikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubW92ZVRvKHBvaW50KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubGluZVRvKHBvaW50KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuc3Ryb2tlU3ByaXRlLnBhdGggPSBwYXRoO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlsbE9wYWNpdHkgPiAwIHx8IHRoaXMuZmlsbFNwcml0ZS5maWxsT3BhY2l0eSA+IDApIHsgLy8gaGVscHMgdG8gYXZvaWQgZHJhd2luZyBmaWxsIG9iamVjdCBpZiBmaWxsIGlzIG5vdCB2aXNpYmxlXHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCA9ICRwYXRoLm1vdmVUbyhwb2ludHNbMF0pICsgJHBhdGgucG9seWxpbmUocG9pbnRzKTtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmxpbmVUbyhjbG9zZVBvaW50c1swXSkgKyAkcGF0aC5wb2x5bGluZShjbG9zZVBvaW50cyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCArPSAkcGF0aC5saW5lVG8ocG9pbnRzWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmNsb3NlUGF0aCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsbFNwcml0ZS5wYXRoID0gcGF0aDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhdGggPSAkcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKSArICRwYXRoLnBvbHlsaW5lKHBvaW50cyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0cm9rZVNwcml0ZS5wYXRoID0gcGF0aDtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZpbGxPcGFjaXR5ID4gMCB8fCB0aGlzLmZpbGxTcHJpdGUuZmlsbE9wYWNpdHkgPiAwKSB7IC8vIGhlbHBzIHRvIGF2b2lkIGRyYXdpbmcgZmlsbCBvYmplY3QgaWYgZmlsbCBpcyBub3QgdmlzaWJsZVxyXG4gICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGgubGluZVRvKGNsb3NlUG9pbnRzWzBdKSArICRwYXRoLnBvbHlsaW5lKGNsb3NlUG9pbnRzKTtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoICs9ICRwYXRoLmxpbmVUbyhwb2ludHNbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJHBhdGguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5maWxsU3ByaXRlLnBhdGggPSBwYXRoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiBTdGVwTGluZVNlcmllc1NlZ21lbnQ7XHJcbn0oTGluZVNlcmllc1NlZ21lbnQpKTtcclxuZXhwb3J0IHsgU3RlcExpbmVTZXJpZXNTZWdtZW50IH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIlN0ZXBMaW5lU2VyaWVzU2VnbWVudFwiXSA9IFN0ZXBMaW5lU2VyaWVzU2VnbWVudDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RlcExpbmVTZXJpZXNTZWdtZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js ***!
  \***********************************************************************************/
/*! exports provided: TreeMapSeriesDataItem, TreeMapSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TreeMapSeriesDataItem\", function() { return TreeMapSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TreeMapSeries\", function() { return TreeMapSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/**\r\n * TreeMap series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar TreeMapSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(TreeMapSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMapSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"TreeMapSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeMapSeriesDataItem.prototype, \"parentName\", {\r\n        /**\r\n         * Data for the this particular item.\r\n         *\r\n         * @param value  Item's data\r\n         */\r\n        //public set dataContext(value: Object) {\r\n        //\tthis._dataContext = value;\r\n        //}\r\n        /**\r\n         * @return Item's data\r\n         */\r\n        /*\r\n       public get dataContext(): Object {\r\n           // It's because data of tree series is TreeMapDataItems.\r\n           if (this._dataContext) {\r\n               return (<any>this._dataContext).dataContext;\r\n           }\r\n       }*/\r\n        /**\r\n         * The name of the item's parent item.\r\n         *\r\n         * @return Parent name\r\n         */\r\n        get: function () {\r\n            var treeMapDataItem = this.treeMapDataItem;\r\n            if (treeMapDataItem && treeMapDataItem.parent) {\r\n                return treeMapDataItem.parent.name;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapSeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * Item's numeric value.\r\n         *\r\n         * @readonly\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var treeMapDataItem = this.treeMapDataItem;\r\n            if (treeMapDataItem) {\r\n                return treeMapDataItem.value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapSeriesDataItem.prototype, \"treeMapDataItem\", {\r\n        /**\r\n         * A corresponding data item from the tree map.\r\n         *\r\n         * @readonly\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._dataContext;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    TreeMapSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        var treeMapDataItem = this.treeMapDataItem;\r\n        if (treeMapDataItem) {\r\n            treeMapDataItem.hide(duration);\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, toValue, fields);\r\n    };\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    TreeMapSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        var treeMapDataItem = this.treeMapDataItem;\r\n        if (treeMapDataItem) {\r\n            treeMapDataItem.show(duration, delay, fields);\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    return TreeMapSeriesDataItem;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines Series for a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapSeriesEvents} for a list of available Events\r\n * @see {@link ITreeMapSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar TreeMapSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(TreeMapSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMapSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"TreeMapSeries\";\r\n        _this.applyTheme();\r\n        _this.fillOpacity = 1;\r\n        _this.strokeOpacity = 1;\r\n        _this.minBulletDistance = 0;\r\n        _this.columns.template.tooltipText = \"{parentName} {name}: {value}\"; //@todo add format number?\r\n        _this.columns.template.configField = \"config\";\r\n        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__[\"InterfaceColorSet\"]();\r\n        _this.stroke = interfaceColors.getFor(\"background\");\r\n        _this.dataFields.openValueX = \"x0\";\r\n        _this.dataFields.valueX = \"x1\";\r\n        _this.dataFields.openValueY = \"y0\";\r\n        _this.dataFields.valueY = \"y1\";\r\n        _this.sequencedInterpolation = false;\r\n        _this.showOnInit = false;\r\n        // otherwise nodes don't stack nicely to each other\r\n        _this.columns.template.pixelPerfect = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Processes data item.\r\n     *\r\n     * @param dataItem     Data item\r\n     * @param dataContext  Raw data\r\n     * @param index        Index of the data item\r\n     */\r\n    TreeMapSeries.prototype.processDataItem = function (dataItem, dataContext) {\r\n        dataContext.seriesDataItem = dataItem; // save a reference here. dataContext is TreeMapDataItem and we need to know dataItem sometimes\r\n        _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    TreeMapSeries.prototype.createDataItem = function () {\r\n        return new TreeMapSeriesDataItem();\r\n    };\r\n    /**\r\n     * Shows series.\r\n     *\r\n     * @param duration  Duration of fade in (ms)\r\n     * @return Animation\r\n     */\r\n    TreeMapSeries.prototype.show = function (duration) {\r\n        if (this.preventShow) {\r\n            return;\r\n        }\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"isNumber\"](duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        this.dataItems.each(function (dataItem) {\r\n            //dataItem.treeMapDataItem.setWorkingValue(\"value\", dataItem.treeMapDataItem.values.value.value);\r\n            dataItem.show(duration);\r\n        });\r\n        return _super.prototype.showReal.call(this, interpolationDuration);\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of fade out (ms)\r\n     * @return Animation\r\n     */\r\n    TreeMapSeries.prototype.hide = function (duration) {\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"isNumber\"](duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        var animation = _super.prototype.hideReal.call(this, interpolationDuration);\r\n        this.dataItems.each(function (dataItem) {\r\n            //dataItem.treeMapDataItem.setWorkingValue(\"value\", 0);\r\n            dataItem.hide(duration);\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Process values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMapSeries.prototype.processValues = function () {\r\n        // Just overriding so that inherited method does not kick in.\r\n    };\r\n    /**\r\n     * Returns relative start location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    TreeMapSeries.prototype.getStartLocation = function (dataItem) {\r\n        return 0;\r\n    };\r\n    /**\r\n     * Returns relative end location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    TreeMapSeries.prototype.getEndLocation = function (dataItem) {\r\n        return 1;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    TreeMapSeries.prototype.dataChangeUpdate = function () {\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    TreeMapSeries.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Add empty data fields if the they are not set, so that XYSeries\r\n            // dataField check does not result in error.\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"hasValue\"](config.dataFields) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"isObject\"](config.dataFields)) {\r\n                config.dataFields = {};\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    TreeMapSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_6__[\"RoundedRectangle\"]);\r\n        column.shouldClone = false;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__[\"copyProperties\"](this, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"]);\r\n        //column.copyFrom(<any>this.columns.template);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.fill;\r\n        legendDataItem.colorOrig = column.fill;\r\n    };\r\n    TreeMapSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        _super.prototype.disableUnusedColumns.call(this, dataItem);\r\n        if (dataItem.column) {\r\n            dataItem.column.__disabled = false;\r\n        }\r\n    };\r\n    return TreeMapSeries;\r\n}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__[\"ColumnSeries\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"TreeMapSeries\"] = TreeMapSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"TreeMapSeriesDataItem\"] = TreeMapSeriesDataItem;\r\n//# sourceMappingURL=TreeMapSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js ***!
  \******************************************************************************/
/*! exports provided: XYSeriesDataItem, XYSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYSeriesDataItem\", function() { return XYSeriesDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYSeries\", function() { return XYSeries; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Series */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Dictionary */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _types_XYChart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../types/XYChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\");\n/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/DateAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Time */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/Options */ \"./node_modules/@amcharts/amcharts4/.internal/core/Options.js\");\n/**\r\n * XY series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYSeriesDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYSeriesDataItem\";\r\n        _this.values.customValue = {};\r\n        _this.values.valueX = { stack: 0 };\r\n        _this.values.valueY = { stack: 0 };\r\n        _this.values.openValueX = {};\r\n        _this.values.openValueY = {};\r\n        _this.values.dateX = {};\r\n        _this.values.dateY = {};\r\n        _this.values.openDateX = {};\r\n        _this.values.openDateY = {};\r\n        _this.setLocation(\"dateX\", 0.5, 0);\r\n        _this.setLocation(\"dateY\", 0.5, 0);\r\n        _this.setLocation(\"categoryX\", 0.5, 0);\r\n        _this.setLocation(\"categoryY\", 0.5, 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueX.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.customValue.value;\r\n        },\r\n        /**\r\n         * Item's custom numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"customValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueY.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateX\");\r\n        },\r\n        /**\r\n         * Item's date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateY\");\r\n        },\r\n        /**\r\n         * Item's date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryX;\r\n        },\r\n        /**\r\n         * Item's category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryY;\r\n        },\r\n        /**\r\n         * Item's category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueX.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueY.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateX\");\r\n        },\r\n        /**\r\n         * Item's open date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateY\");\r\n        },\r\n        /**\r\n         * Item's open date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryX;\r\n        },\r\n        /**\r\n         * Item's open category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryY;\r\n        },\r\n        /**\r\n         * Item's open category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Return smallest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) {  // dumped because of non smooth zooming\r\n        var min;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value < min || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](min)) {\r\n                min = value;\r\n            }\r\n        });\r\n        return min;\r\n        //}\r\n    };\r\n    /**\r\n     * Return biggest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) { // dumped because of non smooth zooming\r\n        var max;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__[\"each\"](fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value > max || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](max)) {\r\n                max = value;\r\n            }\r\n        });\r\n        return max;\r\n        //}\r\n    };\r\n    return XYSeriesDataItem;\r\n}(_Series__WEBPACK_IMPORTED_MODULE_1__[\"SeriesDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYSeries = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Indicates which of the series' `dataFields` to calculate aggregate values\r\n         * for.\r\n         *\r\n         * Available data fields for all [[XYSeries]] are:\r\n         * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n         *\r\n         * [[CandlestickSeries]] adds:\r\n         * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n         *\r\n         * Available options:\r\n         * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n         *\r\n         * Defaults are as follows:\r\n         * * `valueX`: `\"close\"`\r\n         * * `valueY`: `\"close\"`\r\n         * * `openValueX`: `\"open\"`\r\n         * * `openValueY`: `\"open\"`\r\n         * * `lowValueX`: `\"low\"`\r\n         * * `lowValueY`: `\"low\"`\r\n         * * `highValueX`: `\"high\"`\r\n         * * `highValueY`: `\"high\"`\r\n         *\r\n         * Is required only if data being plotted on a `DateAxis` and\r\n         * its `groupData` is set to `true`.\r\n         *\r\n         * ```TypeScript\r\n         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * let series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * var series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     \"groupData\": true\r\n         *   }],\r\n         *   \"yAxes\": [{\r\n         *     \"type\": \"ValueAxis\"\r\n         *   }],\r\n         *   \"series\": [{\r\n         *     \"type\": \"LineSeries\",\r\n         *     \"dataFields\": {\r\n         *       \"dateX\": \"date\",\r\n         *       \"valueY\": \"value\"\r\n         *     },\r\n         *     \"groupFields\": {\r\n         *       \"valueY\": \"average\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * The above setup will ensure, that if there are many data items within\r\n         * selected range, they will be grouped into aggregated data points, using\r\n         * average value of all the values.\r\n         *\r\n         * For example if we have 2 years worth of daily data (~700 data items), when\r\n         * fully zoomed out, the chart would show ~100 data items instead: one for\r\n         * each week in those two years.\r\n         *\r\n         * Grouping will occur automatically, based on current selection range, and\r\n         * will change dynamically when user zooms in/out the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         * @since 4.7.0\r\n         */\r\n        _this.groupFields = {};\r\n        /**\r\n         * X axis the series is attached to.\r\n         */\r\n        _this._xAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_5__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * Y axis the series is attached to.\r\n         */\r\n        _this._yAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_5__[\"MutableValueDisposer\"]();\r\n        /**\r\n         * [_xValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._xValueFields = [];\r\n        /**\r\n         * [_yValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._yValueFields = [];\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._baseInterval = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.dataGrouped = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.usesShowFields = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._dataSetChanged = false;\r\n        _this._maxxX = 100000;\r\n        _this._maxxY = 100000;\r\n        _this._propertiesChanged = false;\r\n        _this.className = \"XYSeries\";\r\n        _this.isMeasured = false;\r\n        _this.groupFields.valueX = \"close\";\r\n        _this.groupFields.valueY = \"close\";\r\n        _this.groupFields.customValue = \"close\";\r\n        _this.groupFields.openValueX = \"open\";\r\n        _this.groupFields.openValueY = \"open\";\r\n        _this.cursorTooltipEnabled = true;\r\n        _this.cursorHoverEnabled = true;\r\n        _this.excludeFromTotal = false;\r\n        _this.mainContainer.mask = new _core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"Sprite\"]();\r\n        _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\r\n        _this.stacked = false;\r\n        _this.snapTooltip = false;\r\n        _this._showBullets = false;\r\n        _this.tooltip.pointerOrientation = \"horizontal\";\r\n        _this.properties.stackToNegative = true;\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.setPropertyValue(\"maskBullets\", true);\r\n        _this.tooltip.events.on(\"hidden\", function () {\r\n            _this.returnBulletDefaultState();\r\n        }, undefined, false);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.observe(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__[\"visualProperties\"], function () {\r\n            if (_this.inited) {\r\n                _this._propertiesChanged = true;\r\n                if (_this.legendDataItem) {\r\n                    _this.legendDataItem.childrenCreated = false;\r\n                }\r\n                if (_this.chart && _this.chart.legend) {\r\n                    _this.chart.legend.invalidateDataItems();\r\n                }\r\n                _this.invalidate();\r\n            }\r\n        }, undefined, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    XYSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"X/Y Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    XYSeries.prototype.createDataItem = function () {\r\n        return new XYSeriesDataItem();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.resetExtremes = function () {\r\n        this._tmin.clear();\r\n        this._tmax.clear();\r\n        this._smin.clear();\r\n        this._smax.clear();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.dataChangeUpdate = function () {\r\n        this.dataGrouped = false;\r\n        this._baseInterval = {};\r\n        this._currentDataSetId = \"\";\r\n        this.resetExtremes();\r\n        if (this.xAxis) {\r\n            this.xAxis.seriesDataChangeUpdate(this);\r\n        }\r\n        if (this.yAxis) {\r\n            this.yAxis.seriesDataChangeUpdate(this);\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the series' data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateData = function () {\r\n        this._baseInterval = {};\r\n        var dataFields = this.dataFields;\r\n        if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n            this.usesShowFields = true;\r\n        }\r\n        else {\r\n            this.usesShowFields = false;\r\n        }\r\n        this.defineFields();\r\n        if (this.data.length > 0) {\r\n            this.dataChangeUpdate();\r\n        }\r\n        _super.prototype.validateData.call(this);\r\n        this.updateItemReaderText();\r\n        if (this.chart) {\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](this.dataFields[this._xField]) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](this.dataFields[this._yField])) {\r\n                throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n            }\r\n        }\r\n        // 4.7.21 solves 51540\r\n        if (this.inited && this.isHidden) {\r\n            this.hide(0);\r\n        }\r\n        this.dataGrouped = false;\r\n    };\r\n    /**\r\n     * Processes data item.\r\n     *\r\n     * @param dataItem     Data item\r\n     * @param dataContext  Raw data\r\n     * @param index        Index of the data item\r\n     */\r\n    XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\r\n        try {\r\n            _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n            this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n            this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n            this.setInitialWorkingValues(dataItem);\r\n        }\r\n        catch (e) {\r\n            if (this._chart) {\r\n                this._chart.raiseCriticalError(e);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * When validating raw data, instead of processing data item, we update it\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item\r\n     */\r\n    XYSeries.prototype.updateDataItem = function (dataItem) {\r\n        _super.prototype.updateDataItem.call(this, dataItem);\r\n        //dataItem.events.disable();\r\n        this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n        this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n        //dataItem.events.enable();\t\t\r\n    };\r\n    /**\r\n     * Inits data item's working values.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @param index     Data item's index\r\n     */\r\n    XYSeries.prototype.setInitialWorkingValues = function (dataItem) {\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis) {\r\n            var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n            if (dataItemsX) {\r\n                dataItemsX.clear();\r\n            }\r\n            if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) {\r\n                this.clearCatAxis(xAxis);\r\n            }\r\n        }\r\n        if (yAxis) {\r\n            var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n            if (dataItemsY) {\r\n                dataItemsY.clear();\r\n            }\r\n            if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) {\r\n                this.clearCatAxis(yAxis);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.clearCatAxis = function (axis) {\r\n        var uid = this.uid;\r\n        axis.dataItems.each(function (dataItem) {\r\n            if (dataItem.seriesDataItems[uid]) {\r\n                dataItem.seriesDataItems[uid] = [];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Sets up which data fields to use for data access.\r\n     */\r\n    XYSeries.prototype.defineFields = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            var xAxisFieldName = xAxis.axisFieldName;\r\n            var xField = (xAxisFieldName + \"X\");\r\n            var xOpenField = (\"open\" + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"capitalize\"](xAxisFieldName) + \"X\");\r\n            var yAxisFieldName = yAxis.axisFieldName;\r\n            var yField = (yAxisFieldName + \"Y\");\r\n            var yOpenField = (\"open\" + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"capitalize\"](yAxisFieldName) + \"Y\");\r\n            this._xField = xField;\r\n            this._yField = yField;\r\n            if (this.dataFields[xOpenField]) {\r\n                this._xOpenField = xOpenField;\r\n            }\r\n            if (this.dataFields[yOpenField]) {\r\n                this._yOpenField = yOpenField;\r\n            }\r\n            if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if ((xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) && (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"])) {\r\n                if (!this._yOpenField) {\r\n                    this._yOpenField = yField;\r\n                }\r\n            }\r\n            this._xValueFields = [];\r\n            this._yValueFields = [];\r\n            this.addValueField(xAxis, this._xValueFields, this._xField);\r\n            this.addValueField(xAxis, this._xValueFields, this._xOpenField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yOpenField);\r\n        }\r\n    };\r\n    /**\r\n     * [axis description]\r\n     *\r\n     * @todo Description\r\n     * @param axis    Axis\r\n     * @param fields  Fields (?)\r\n     * @param field   Field\r\n     */\r\n    XYSeries.prototype.addValueField = function (axis, fields, field) {\r\n        if (axis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n                fields.push(field);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets category field from the category axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setCategoryAxisField = function (field, axis) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.category;\r\n        }\r\n    };\r\n    /**\r\n     * Sets date field from the date axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setDateAxisField = function (field, axis) {\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.date;\r\n        }\r\n    };\r\n    /**\r\n     * Performs after-draw tasks, e.g. creates masks.\r\n     */\r\n    XYSeries.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.createMask();\r\n    };\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.createMask = function () {\r\n        // this mask from which we cut out ranges. does not work well if ranges overlap.\r\n        if (this.mainContainer.mask) {\r\n            var path_1 = this.getMaskPath();\r\n            // @todo: this approach won't work well on circluar or other non x/y axes\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.axisRanges.iterator(), function (range) {\r\n                if (range.axisFill.fillPath) {\r\n                    range.axisFill.validate();\r\n                    path_1 += range.axisFill.fillPath;\r\n                }\r\n            });\r\n            this.mainContainer.mask.path = path_1;\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    XYSeries.prototype.getMaskPath = function () {\r\n        if (this.xAxis && this.yAxis) {\r\n            return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_17__[\"rectToPath\"]({\r\n                x: 0,\r\n                y: 0,\r\n                width: this.xAxis.axisLength,\r\n                height: this.yAxis.axisLength\r\n            });\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns axis data field to use.\r\n     *\r\n     * @param axis  Axis\r\n     * @return Field name\r\n     */\r\n    XYSeries.prototype.getAxisField = function (axis) {\r\n        if (axis == this.xAxis) {\r\n            return this.xField;\r\n        }\r\n        if (axis == this.yAxis) {\r\n            return this.yField;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataItems = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            this._maxxX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"max\"](100000, chart.plotContainer.maxWidth * 2);\r\n            this._maxxY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"max\"](100000, chart.plotContainer.maxHeight * 2);\r\n        }\r\n        // this helps date axis to check which baseInterval we should use\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            xAxis.updateAxisBySeries();\r\n            yAxis.updateAxisBySeries();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n        if (xAxis && yAxis) {\r\n            xAxis.postProcessSeriesDataItems(this);\r\n            yAxis.postProcessSeriesDataItems(this);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data range.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataRange = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.dataRangeInvalid) {\r\n                xAxis.validateDataRange();\r\n            }\r\n            if (yAxis.dataRangeInvalid) {\r\n                yAxis.validateDataRange();\r\n            }\r\n        }\r\n        _super.prototype.validateDataRange.call(this);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validate = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.invalid) {\r\n                xAxis.validate();\r\n            }\r\n            if (yAxis.invalid) {\r\n                yAxis.validate();\r\n            }\r\n            this.y = yAxis.pixelY;\r\n            this.x = xAxis.pixelX;\r\n            this._showBullets = true;\r\n            var minBulletDistance = this.minBulletDistance;\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](minBulletDistance)) {\r\n                if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n        }\r\n        this.updateTooltip();\r\n        _super.prototype.validate.call(this);\r\n        var chart = this.chart;\r\n        var maskBullets = this.maskBullets;\r\n        if (chart && maskBullets) {\r\n            if (chart.className == \"XYChart\") {\r\n                if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n                    if (this.yAxis) {\r\n                        this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n                    }\r\n                    else {\r\n                        this.bulletsContainer.mask = undefined;\r\n                    }\r\n                }\r\n                if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n                    if (this.xAxis) {\r\n                        this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n                    }\r\n                    else {\r\n                        this.bulletsContainer.mask = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"xAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._xAxis.get()) {\r\n                    var axis = this.chart.xAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no X axes on chart.\");\r\n                    }\r\n                    this.xAxis = axis;\r\n                }\r\n                return this._xAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * X axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setXAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setXAxis = function (axis) {\r\n        var oldAxis = this._xAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._xAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._xAxis.set(axis, axis.registerSeries(this));\r\n            this.dataItemsByAxis.setKey(axis.uid, new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__[\"Dictionary\"]());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._yAxis.get()) {\r\n                    var axis = this.chart.yAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no Y axes on chart.\");\r\n                    }\r\n                    this.yAxis = axis;\r\n                }\r\n                return this._yAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * Y axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setYAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setYAxis = function (axis) {\r\n        var oldAxis = this._yAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._yAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._yAxis.set(axis, axis.registerSeries(this));\r\n            if (axis.chart instanceof _types_XYChart__WEBPACK_IMPORTED_MODULE_6__[\"XYChart\"]) {\r\n                axis.chart.handleYAxisSet(this);\r\n            }\r\n            this.dataItemsByAxis.setKey(axis.uid, new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__[\"Dictionary\"]());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (!this._baseAxis && xAxis && yAxis) {\r\n                if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"]) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"]) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (!this._baseAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n            }\r\n            return this._baseAxis;\r\n        },\r\n        /**\r\n         * The main (base) axis.\r\n         *\r\n         * This is the axis that series fills will go to, or grow animations will\r\n         * happen from.\r\n         *\r\n         * @param value  Axis\r\n         */\r\n        set: function (value) {\r\n            if (this._baseAxis != value) {\r\n                this._baseAxis = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds one or several (array) of data items to the existing data.\r\n     *\r\n     * @param rawDataItem One or many raw data item objects\r\n     */\r\n    XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\r\n        _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\r\n        var scrollbarSeries = this.scrollbarSeries;\r\n        if (scrollbarSeries) {\r\n            this.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n        }\r\n    };\r\n    XYSeries.prototype.setData = function (value) {\r\n        _super.prototype.setData.call(this, value);\r\n        if (this.scrollbarSeries) {\r\n            this.scrollbarSeries.setData(value);\r\n        }\r\n    };\r\n    /**\r\n     * Makes the chart use particular data set.\r\n     *\r\n     * If `id` is not provided or there is no such data set, main data will be\r\n     * used.\r\n     *\r\n     * @ignore\r\n     * @since 4.7.0\r\n     * @param  id  Data set id\r\n     */\r\n    XYSeries.prototype.setDataSet = function (id) {\r\n        var changed = _super.prototype.setDataSet.call(this, id);\r\n        if (changed) {\r\n            this._dataSetChanged = true;\r\n            var dataItems = this.dataItems;\r\n            this.resetExtremes();\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            this._prevStartIndex = undefined;\r\n            this._prevEndIndex = undefined;\r\n            this._startIndex = undefined;\r\n            this._endIndex = undefined;\r\n            if (!this.appeared) {\r\n                this.processValues(false); // this will slow down!\r\n            }\r\n            if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"] && xAxis == this.baseAxis) {\r\n                this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n                this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n                this.dispatch(\"extremeschanged\");\r\n            }\r\n            if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"] && yAxis == this.baseAxis) {\r\n                this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n                this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n                this.dispatch(\"extremeschanged\");\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Processes values after data items' were added.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    XYSeries.prototype.processValues = function (working) {\r\n        _super.prototype.processValues.call(this, working);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        var dataItems = this.dataItems;\r\n        var minX = Infinity;\r\n        var maxX = -Infinity;\r\n        var minY = Infinity;\r\n        var maxY = -Infinity;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var workingStartIndex = startIndex;\r\n        var workingEndIndex = endIndex;\r\n        if (!working) {\r\n            startIndex = 0;\r\n            endIndex = this.dataItems.length;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            this.getStackValue(dataItem, working);\r\n            var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n            var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n            minX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"min\"](dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n            minY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"min\"](dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n            maxX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"max\"](dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n            maxY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"max\"](dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n            // if it's stacked, pay attention to stack value\r\n            if (this.stacked) {\r\n                if (this.baseAxis == xAxis) {\r\n                    if (stackY < minY) {\r\n                        minY = stackY;\r\n                    }\r\n                    if (stackY > maxY) {\r\n                        maxY = stackY;\r\n                    }\r\n                }\r\n                if (this.baseAxis == yAxis) {\r\n                    if (stackX < minX) {\r\n                        minX = stackX;\r\n                    }\r\n                    if (stackX > maxX) {\r\n                        maxX = stackX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // this is mainly for value axis to calculate total and perecent.total of each series category\r\n        xAxis.processSeriesDataItems();\r\n        yAxis.processSeriesDataItems();\r\n        var xAxisId = xAxis.uid;\r\n        var yAxisId = yAxis.uid;\r\n        if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && (minX == Infinity || maxX == -Infinity)) {\r\n            this._smin.setKey(xAxisId, undefined);\r\n            this._smax.setKey(xAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && (minY == Infinity || maxY == -Infinity)) {\r\n            this._smin.setKey(yAxisId, undefined);\r\n            this._smax.setKey(yAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (!working) {\r\n            if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n                this._tmin.setKey(xAxisId, minX);\r\n                this._tmax.setKey(xAxisId, maxX);\r\n                this._tmin.setKey(yAxisId, minY);\r\n                this._tmax.setKey(yAxisId, maxY);\r\n                var stackedSeries = this.stackedSeries;\r\n                if (stackedSeries) {\r\n                    if (stackedSeries.isDisposed()) {\r\n                        this.stackedSeries = undefined;\r\n                    }\r\n                    else {\r\n                        stackedSeries.processValues(false);\r\n                    }\r\n                }\r\n                this.dispatchImmediately(\"extremeschanged\");\r\n            }\r\n        }\r\n        if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n            minX = Infinity;\r\n            maxX = -Infinity;\r\n            minY = Infinity;\r\n            maxY = -Infinity;\r\n            for (var i = workingStartIndex; i < workingEndIndex; i++) {\r\n                var dataItem = dataItems.getIndex(i);\r\n                this.getStackValue(dataItem, working);\r\n                var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n                var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n                minX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"min\"](dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n                minY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"min\"](dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n                maxX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"max\"](dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n                maxY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"max\"](dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n                // if it's stacked, pay attention to stack value\r\n                if (this.stacked) {\r\n                    if (this.baseAxis == xAxis) {\r\n                        if (stackY < minY) {\r\n                            minY = stackY;\r\n                        }\r\n                        if (stackY > maxY) {\r\n                            maxY = stackY;\r\n                        }\r\n                    }\r\n                    if (this.baseAxis == yAxis) {\r\n                        if (stackX < minX) {\r\n                            minX = stackX;\r\n                        }\r\n                        if (stackX > maxX) {\r\n                            maxX = stackX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && (minX == Infinity || maxX == -Infinity)) {\r\n            this._smin.setKey(xAxisId, undefined);\r\n            this._smax.setKey(xAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && (minY == Infinity || maxY == -Infinity)) {\r\n            this._smin.setKey(yAxisId, undefined);\r\n            this._smax.setKey(yAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n            this._smin.setKey(xAxisId, minX);\r\n            this._smax.setKey(xAxisId, maxX);\r\n            this._smin.setKey(yAxisId, minY);\r\n            this._smax.setKey(yAxisId, maxY);\r\n            if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n                /// new, helps to handle issues with change percent\r\n                var changed = false;\r\n                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && !(yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"])) {\r\n                    var tmin = this._tmin.getKey(yAxisId);\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](tmin) || ((this.usesShowFields || this._dataSetChanged) && minY < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n                        this._tmin.setKey(yAxisId, minY);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(yAxisId);\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](tmax) || ((this.usesShowFields || this._dataSetChanged) && maxY > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n                        this._tmax.setKey(yAxisId, maxY);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && !(xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"])) {\r\n                    var tmin = this._tmin.getKey(xAxisId);\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](tmin) || ((this.usesShowFields || this._dataSetChanged) && minX < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n                        this._tmin.setKey(xAxisId, minX);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(xAxisId);\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](tmax) || ((this.usesShowFields || this._dataSetChanged) && maxX > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n                        this._tmax.setKey(xAxisId, maxX);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (changed) {\r\n                    this.dispatchImmediately(\"extremeschanged\");\r\n                }\r\n                if (this.start == 0 && this.end == 1) {\r\n                    // yes, its ok. otherwise min/max won't be updated when zooming out\r\n                    this._dataSetChanged = false;\r\n                }\r\n                this.dispatchImmediately(\"selectionextremeschanged\");\r\n            }\r\n        }\r\n        if (!working && this.stacked) {\r\n            this.processValues(true);\r\n        }\r\n    };\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    XYSeries.prototype.hideTooltip = function (duration) {\r\n        _super.prototype.hideTooltip.call(this, duration);\r\n        this.returnBulletDefaultState();\r\n        this._prevTooltipDataItem = undefined;\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific position.\r\n     *\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        var dataItem;\r\n        if (this.visible && !this.isHiding && !this.isShowing) {\r\n            var xAxis = this._xAxis.get();\r\n            var yAxis = this._yAxis.get();\r\n            if (xAxis == this.baseAxis) {\r\n                dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n            }\r\n            if (yAxis == this.baseAxis) {\r\n                dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n            }\r\n            var point = this.showTooltipAtDataItem(dataItem);\r\n            if (point) {\r\n                return point;\r\n            }\r\n            // so that if tooltip is shown on columns or bullets for it not to be hidden\r\n            if (!this.tooltipText && !this.tooltipHTML) {\r\n                return;\r\n            }\r\n        }\r\n        this.hideTooltip();\r\n    };\r\n    XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\r\n        return dataItem.locations[field];\r\n    };\r\n    XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\r\n        return dataItem.locations[field];\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific dataItem.\r\n     *\r\n     * @param dataItem\r\n     */\r\n    XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\r\n        var e_1, _a;\r\n        var cursor = this.chart.cursor;\r\n        if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n            this.hideTooltip();\r\n            return;\r\n        }\r\n        this.returnBulletDefaultState(dataItem);\r\n        if (dataItem && dataItem.visible) {\r\n            this.updateLegendValue(dataItem);\r\n            if (this.cursorTooltipEnabled) {\r\n                this.tooltipDataItem = dataItem;\r\n                // todo: add tooltipXField and tooltipYField.\r\n                var tooltipXField = this.tooltipXField;\r\n                var tooltipYField = this.tooltipYField;\r\n                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](dataItem[tooltipXField]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](dataItem[tooltipYField])) {\r\n                    var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n                    if (tooltipPoint) {\r\n                        if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n                            // void\r\n                        }\r\n                        else {\r\n                            this.tooltipX = tooltipPoint.x;\r\n                            this.tooltipY = tooltipPoint.y;\r\n                            if (this._prevTooltipDataItem != dataItem) {\r\n                                this.dispatchImmediately(\"tooltipshownat\", {\r\n                                    type: \"tooltipshownat\",\r\n                                    target: this,\r\n                                    dataItem: dataItem\r\n                                });\r\n                                this._prevTooltipDataItem = dataItem;\r\n                            }\r\n                            if (this.cursorHoverEnabled) {\r\n                                try {\r\n                                    for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__values\"])(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                                        var sprite = _c.value;\r\n                                        if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n                                        }\r\n                                        else {\r\n                                            if (!sprite.interactions.isRealHover) {\r\n                                                sprite.dispatchImmediately(\"over\");\r\n                                                sprite.interactions.isRealHover = true;\r\n                                            }\r\n                                            sprite.isHover = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                                finally {\r\n                                    try {\r\n                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                                    }\r\n                                    finally { if (e_1) throw e_1.error; }\r\n                                }\r\n                            }\r\n                            if (this.showTooltip()) {\r\n                                return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"spritePointToSvg\"]({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.updateLegendValue(dataItem, true);\r\n        }\r\n    };\r\n    /**\r\n     * Returns default state to bullets when tooltip is shown at some other data\r\n     * item or hidden\r\n     */\r\n    XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\r\n        var e_2, _a;\r\n        if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n            try {\r\n                for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__values\"])(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var sprite = _c.value;\r\n                    if (!sprite.isDisposed()) {\r\n                        var fireEvent = sprite.interactions.isRealHover;\r\n                        sprite.isHover = false;\r\n                        if (fireEvent) {\r\n                            sprite.dispatchImmediately(\"out\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._prevTooltipDataItem = undefined;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bulletTemplate.xField;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bulletTemplate.yField;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](yField)) {\r\n            yField = this.yField;\r\n        }\r\n        if ((this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && !dataItem.hasValue([xField])) || (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && !dataItem.hasValue([yField]))) {\r\n            return false;\r\n        }\r\n        if (bulletTemplate.disabled) {\r\n            var disabledField = bulletTemplate.propertyFields.disabled;\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext && dataContext[disabledField] === false) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.updateTooltip = function () {\r\n        if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n            this.showTooltipAtDataItem(this.tooltipDataItem);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bullet.xField;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bullet.yField;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](yField)) {\r\n            yField = this.yField;\r\n        }\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if ((xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && !dataItem.hasValue([xField])) || (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && !dataItem.hasValue([yField]))) {\r\n            bullet.visible = false;\r\n        }\r\n        else {\r\n            var bulletLocationX = this.getBulletLocationX(bullet, xField);\r\n            var bulletLocationY = this.getBulletLocationY(bullet, yField);\r\n            var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n            if (point) {\r\n                var xOpenField = this.xOpenField;\r\n                var yOpenField = this.yOpenField;\r\n                var positionX = void 0;\r\n                var positionY = void 0;\r\n                if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"]) {\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        if (xAxis == this.baseAxis) {\r\n                            openValue = xAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = xAxis.baseInterval;\r\n                        var dateFormatter = xAxis.dateFormatter;\r\n                        openValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__[\"round\"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc).getTime();\r\n                        closeValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__[\"add\"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (xAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    }\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        openValue = xAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) {\r\n                    var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n                    var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n                    positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\r\n                    var openPositionX = void 0;\r\n                    if (xOpenField) {\r\n                        openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\r\n                    }\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](openPositionX)) {\r\n                        openPositionX = 1;\r\n                    }\r\n                    positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n                }\r\n                if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__[\"DateAxis\"]) {\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        if (yAxis == this.baseAxis) {\r\n                            openValue = yAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = yAxis.baseInterval;\r\n                        var dateFormatter = yAxis.dateFormatter;\r\n                        openValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__[\"round\"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc).getTime();\r\n                        closeValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__[\"add\"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (yAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    }\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        openValue = yAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__[\"CategoryAxis\"]) {\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\r\n                    var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n                    var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\r\n                    var openPositionY = void 0;\r\n                    if (yOpenField) {\r\n                        openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\r\n                    }\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](openPositionY)) {\r\n                        openPositionY = 1;\r\n                    }\r\n                    positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n                }\r\n                bullet.visible = true;\r\n                this.positionBulletReal(bullet, positionX, positionY);\r\n            }\r\n            else {\r\n                bullet.visible = false;\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n        bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n    };\r\n    /**\r\n     * returns bullet x location\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        var bulletLocation = bullet.locationX;\r\n        var dataItem = bullet.dataItem;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n     * Returns bullet x location\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        var bulletLocation = bullet.locationY;\r\n        var dataItem = bullet.dataItem;\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n     * This method must be called if you update Series' data fields that might\r\n     * affect stacking of the series.\r\n     *\r\n     * Since individual `dataField` changes are not being monitored, you need\r\n     * todo it manually for changes to take affect.\r\n     *\r\n     * @since 4.7.21\r\n     */\r\n    XYSeries.prototype.updateStacking = function () {\r\n        var _this = this;\r\n        this.invalidateDataItems();\r\n        if (this.chart) {\r\n            this.chart.series.each(function (series) {\r\n                if (series.baseAxis == _this.baseAxis) {\r\n                    series.stackedSeries = undefined;\r\n                    series.invalidateDataItems();\r\n                    series.invalidateProcessedData();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stacked\", {\r\n        /**\r\n         * @return Can be stacked?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stacked\");\r\n        },\r\n        /**\r\n         * Can items from this series be included into stacks?\r\n         *\r\n         * Note: proper stacking is only possible if series have the same number\r\n         * of data items. To ensure this, don't set data directly on series\r\n         * but do this on chart instead.\r\n         *\r\n         * @default false\r\n         * @param stacked  Can be stacked?\r\n         */\r\n        set: function (stacked) {\r\n            if (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n                this.updateStacking();\r\n                var xAxis = this.xAxis;\r\n                var yAxis = this.yAxis;\r\n                if (!stacked) {\r\n                    var field_1;\r\n                    if (xAxis != this.baseAxis && xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n                        field_1 = this.xField;\r\n                    }\r\n                    if (yAxis != this.baseAxis && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n                        field_1 = this.yField;\r\n                    }\r\n                    if (field_1) {\r\n                        this.dataItems.each(function (dataItem) {\r\n                            dataItem.setCalculatedValue(field_1, 0, \"stack\");\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\r\n        /**\r\n         * @return Should snap?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapTooltip\");\r\n        },\r\n        /**\r\n         * Should the nearest tooltip be shown if no data item is found on the\r\n         * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n         *\r\n         * @default false\r\n         * @param value  Should snap?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        var fields;\r\n        if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && this.xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n        }\r\n        if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && this.yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!_core_Options__WEBPACK_IMPORTED_MODULE_18__[\"options\"].animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var anim;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"indexed\"](this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            var realDuration = interpolationDuration;\r\n            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\r\n                realDuration = 0;\r\n                delay = 0;\r\n            }\r\n            if (_this.sequencedInterpolation && realDuration > 0) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            anim = dataItem.show(realDuration, delay, fields);\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.show(0, 0, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.show(0, 0, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        if (this.hidden) {\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            this.hidden = false;\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields;\r\n        var value;\r\n        var xAxis = this.xAxis;\r\n        if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n                value = xAxis.baseValue;\r\n            }\r\n            else {\r\n                value = xAxis.min;\r\n            }\r\n        }\r\n        var yAxis = this.yAxis;\r\n        if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"] && yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n                value = yAxis.baseValue;\r\n            }\r\n            else {\r\n                value = yAxis.min;\r\n            }\r\n        }\r\n        //if ($type.hasValue(fields)) {\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isNumber\"](duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!_core_Options__WEBPACK_IMPORTED_MODULE_18__[\"options\"].animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var delay = 0;\r\n        var anim;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"indexed\"](this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            var realDuration = interpolationDuration;\r\n            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\r\n                realDuration = 0;\r\n            }\r\n            if (realDuration == 0) {\r\n                dataItem.hide(0, 0, value, fields);\r\n            }\r\n            else {\r\n                if (_this.sequencedInterpolation && realDuration > 0) {\r\n                    delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n                }\r\n                anim = dataItem.hide(realDuration, delay, value, fields);\r\n            }\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.hide(0, 0, value, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.hide(0, 0, value, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.hide.call(this, interpolationDuration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n        this.validateDataElements();\r\n        //}\r\n        return animation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);\r\n        // to calculate stack values\r\n        var axisSeries = this.baseAxis.series;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](axisSeries.iterator(), function (series) {\r\n            if (series.stacked || series.stackedSeries) {\r\n                series.invalidateProcessedData();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * [getStackValue description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    XYSeries.prototype.getStackValue = function (dataItem, working) {\r\n        // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n        // if this series is not stacked or new stack begins, return.\r\n        var _this = this;\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!this.stacked || !xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        else {\r\n            // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n            var chart = this.chart;\r\n            var index = chart.series.indexOf(this);\r\n            var field_2;\r\n            if (xAxis != this.baseAxis && xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n                field_2 = this.xField;\r\n            }\r\n            if (yAxis != this.baseAxis && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__[\"ValueAxis\"]) {\r\n                field_2 = this.yField;\r\n            }\r\n            if (!field_2) {\r\n                return;\r\n            }\r\n            //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n            dataItem.setCalculatedValue(field_2, 0, \"stack\");\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"eachContinue\"](chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\r\n                // stacking is only possible if both axes are the same\r\n                if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\r\n                    // saving value\r\n                    prevSeries.stackedSeries = _this;\r\n                    var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n                    if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\r\n                        var value = dataItem.getValue(field_2);\r\n                        var prevValue = void 0;\r\n                        var prevRealValue = prevDataItem.getValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\r\n                        if (working) {\r\n                            prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\r\n                        }\r\n                        else {\r\n                            prevValue = prevDataItem.getValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\r\n                        }\r\n                        if (_this.stackToNegative) {\r\n                            if ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n                                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (!prevSeries.stacked) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\r\n        /**\r\n         * @return Stack to base line\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stackToNegative\");\r\n        },\r\n        /**\r\n         * This setting indicates how negative values are treated in stacked stacked\r\n         * series.\r\n         *\r\n         * If set to `true` (default), negative values will stack on the base line.\r\n         *\r\n         * If set to `false`, negative value will stack in relation to the previous\r\n         * value in the stack.\r\n         *\r\n         * @since 4.9.34\r\n         * @param  value  Stack to base line\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"stackToNegative\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xField\", {\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yField\", {\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\r\n        /**\r\n         * [xOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\r\n        /**\r\n         * [yOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipXField) {\r\n                return this._tooltipXField;\r\n            }\r\n            return this._xField;\r\n        },\r\n        /**\r\n         * [tooltipXField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipXField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipYField) {\r\n                return this._tooltipYField;\r\n            }\r\n            return this._yField;\r\n        },\r\n        /**\r\n         * [tooltipYField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipYField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns lowest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.min = function (axis) {\r\n        return this._tmin.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.max = function (axis) {\r\n        return this._tmax.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns lowest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMin = function (axis) {\r\n        var value = this._smin.getKey(axis.uid);\r\n        // not good, because bad if there are no items with values in selection\r\n        //if (!$type.isNumber(value)) {\r\n        //value = this.min(axis);\r\n        //}\t\t\r\n        return value;\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMax = function (axis) {\r\n        var value = this._smax.getKey(axis.uid);\r\n        // not good, because bad if there are no items with values in selection\r\n        //if (!$type.isNumber(value)) {\r\n        //value = this.max(axis);\r\n        //}\r\n        return value;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYSeries.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up base axes\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](config.baseAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isString\"](config.baseAxis)) {\r\n                if (this.map.hasKey(config.baseAxis)) {\r\n                    config.baseAxis = this.map.getKey(config.baseAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n                    delete config.baseAxis;\r\n                }\r\n            }\r\n            // Set up axes\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](config.xAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isString\"](config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](config.yAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isString\"](config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            // Set up axis ranges\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](config.axisRanges) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isArray\"](config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](range.type)) {\r\n                        range.type = \"AxisDataItem\";\r\n                    }\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](range.axis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isString\"](range.axis) && this.map.hasKey(range.axis)) {\r\n                        range.component = this.map.getKey(range.axis);\r\n                    }\r\n                    else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](range.component) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isString\"](range.component) && this.map.hasKey(range.component)) {\r\n                        range.component = this.map.getKey(range.component);\r\n                    }\r\n                }\r\n            }\r\n            // Parse date fields based on the series fields\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"hasValue\"](config.dataFields) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__[\"isObject\"](config.dataFields)) {\r\n                this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (this.xAxis && this.yAxis) {\r\n            var x = this.xAxis.getX(dataItem, xKey, locationX);\r\n            var y = this.yAxis.getY(dataItem, yKey, locationY);\r\n            x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"fitToRange\"](x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__[\"fitToRange\"](y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            return { x: x, y: y };\r\n        }\r\n    };\r\n    /**\r\n     * Updates item reader text based on the type and set up of axis.\r\n     */\r\n    XYSeries.prototype.updateItemReaderText = function () {\r\n        // We do not want to overwrite this if `itemReaderText` was changed by\r\n        // user code.\r\n        if (this._itemReaderTextChanged) {\r\n            return;\r\n        }\r\n        var text = \"\";\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_16__[\"each\"](this.dataFields, function (key, val) {\r\n            text += \"{\" + key + \"} \";\r\n        });\r\n        this.itemReaderText = text;\r\n        this._itemReaderTextChanged = false;\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should display a tooltip for chart's cursor.\r\n         *\r\n         * If set to `true` (default), the tooltips set for all series item's\r\n         * elements like columns and bullets will be automatically shown\r\n         * when [[XYCursor]] passes over category/date, even if its not hovered\r\n         * directly over the item.\r\n         *\r\n         * Set this to `false` to disable such behavior and display item-specific\r\n         * tooltips only when hovered directly over them\r\n         *\r\n         * @default true\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\r\n        /**\r\n         * @return Hover enabled?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorHoverEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should apply hover state on bullets/columns/etc when\r\n         * cursor is over the data item.\r\n         *\r\n         * If set to `true` (default) and chart cursor is enabled on th chart,\r\n         * hovering over date/category will trigger hover states on related Series\r\n         * items like bullets and columns.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         * @param  value  Hover enabled?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorHoverEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\r\n        /**\r\n         * @return Exclude from totals?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"excludeFromTotal\");\r\n        },\r\n        /**\r\n         * Indicates if series' values should be excluded when calculating totals.\r\n         *\r\n         * @default false\r\n         * @since 4.4.9\r\n         * @param  value  Exclude from totals?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"excludeFromTotal\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if series' tooltip should be hidden while series axis range is\r\n         * animating (zooming).\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return Mask bullets?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Indicates if series' bullets should be masked.\r\n         *\r\n         * @default true\r\n         * @since 4.7.17\r\n         * @param  value  Mask bullets?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maskBullets\", value);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                if (value) {\r\n                    this.bulletsContainer.parent = chart.bulletsContainer;\r\n                }\r\n                else {\r\n                    this.bulletsContainer.parent = chart.axisBulletsContainer;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    XYSeries.prototype.copyFrom = function (source) {\r\n        this.groupFields = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"copyProperties\"](source.groupFields, {});\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    XYSeries.prototype.dispose = function () {\r\n        if (this.scrollbarSeries) {\r\n            this.scrollbarSeries.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return XYSeries;\r\n}(_Series__WEBPACK_IMPORTED_MODULE_1__[\"Series\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_9__[\"registry\"].registeredClasses[\"XYSeries\"] = XYSeries;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_9__[\"registry\"].registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n//# sourceMappingURL=XYSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js ***!
  \*********************************************************************************/
/*! exports provided: ChordDiagramDataItem, ChordDiagram */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChordDiagramDataItem\", function() { return ChordDiagramDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChordDiagram\", function() { return ChordDiagram; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FlowDiagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagram */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _elements_ChordNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/ChordNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js\");\n/* harmony import */ var _elements_ChordLink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../elements/ChordLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/**\r\n * Chord diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo rearange notes after dragged\r\n/**\r\n * Defines a [[DataItem]] for [[ChordDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ChordDiagramDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ChordDiagramDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordDiagramDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordDiagramDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ChordDiagramDataItem;\r\n}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagramDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Chord Diagram chart.\r\n *\r\n * @see {@link IChordDiagramEvents} for a list of available Events\r\n * @see {@link IChordDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/chord-diagram/} for documentation\r\n * @important\r\n */\r\nvar ChordDiagram = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(ChordDiagram, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordDiagram() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * [valueAngle description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.valueAngle = 0;\r\n        _this.className = \"ChordDiagram\";\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(80);\r\n        _this.innerRadius = -15;\r\n        _this.nodePadding = 5;\r\n        var chordContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__[\"Container\"]);\r\n        chordContainer.align = \"center\";\r\n        chordContainer.valign = \"middle\";\r\n        chordContainer.shouldClone = false;\r\n        chordContainer.layout = \"absolute\";\r\n        _this.chordContainer = chordContainer;\r\n        _this.nodesContainer.parent = chordContainer;\r\n        _this.linksContainer.parent = chordContainer;\r\n        _this.chartContainer.events.on(\"maxsizechanged\", _this.invalidate, _this, false);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Redraws the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordDiagram.prototype.validate = function () {\r\n        var _this = this;\r\n        var chartContainer = this.chartContainer;\r\n        var endAngle = this.endAngle;\r\n        var startAngle = this.startAngle + this.nodePadding / 2;\r\n        var rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__[\"getArcRect\"](this.startAngle, this.endAngle, 1);\r\n        var innerRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__[\"getCommonRectangle\"]([rect, innerRect]);\r\n        var maxRadius = Math.min(chartContainer.innerWidth / rect.width, chartContainer.innerHeight / rect.height);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](maxRadius)) {\r\n            maxRadius = 0;\r\n        }\r\n        var radius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__[\"relativeRadiusToValue\"](this.radius, maxRadius);\r\n        var pixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__[\"relativeRadiusToValue\"](this.innerRadius, radius, true);\r\n        var total = this.dataItem.values.value.sum;\r\n        var count = 0;\r\n        var newTotal = 0;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            _this.getNodeValue(node);\r\n            count++;\r\n            var value = node.total;\r\n            if (node.total / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            newTotal += value;\r\n        });\r\n        this.valueAngle = (endAngle - this.startAngle - this.nodePadding * count) / newTotal;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            var slice = node.slice;\r\n            slice.radius = radius;\r\n            slice.innerRadius = pixelInnerRadius;\r\n            var value = node.total;\r\n            if (node.total / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            node.adjustedTotal = value;\r\n            var arc;\r\n            if (_this.nonRibbon) {\r\n                arc = (endAngle - _this.startAngle) / count - _this.nodePadding;\r\n            }\r\n            else {\r\n                arc = _this.valueAngle * value;\r\n            }\r\n            slice.arc = arc;\r\n            slice.startAngle = startAngle;\r\n            node.trueStartAngle = startAngle;\r\n            node.parent = _this.nodesContainer;\r\n            node.validate(); // otherwise flickers - nodes are already created, but not yet positioned etc.\r\n            startAngle += arc + _this.nodePadding;\r\n        });\r\n        this.chordContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n        this.chordContainer.invalidateLayout();\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ChordDiagram.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Chord diagram\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new data item.\r\n     *\r\n     * @return Data item\r\n     */\r\n    ChordDiagram.prototype.createDataItem = function () {\r\n        return new ChordDiagramDataItem();\r\n    };\r\n    Object.defineProperty(ChordDiagram.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n         * top center. (at -90 degrees)\r\n         *\r\n         * You can use `startAngle` to change this setting.\r\n         *\r\n         * E.g. setting this to 0 will make the radial axis start horizontally to\r\n         * the right, as opposed to vertical.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  Start angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n         * where it has started, forming a full 360 circle. (at 270 degrees)\r\n         *\r\n         * You can use `endAngle` to end the circle somewhere else.\r\n         *\r\n         * E.g. setting this to 180 will make the radar face end at horizontal line\r\n         * to the left off the center.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  End angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the Radar face.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the Chord nodes.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"nonRibbon\", {\r\n        /**\r\n         * @return Non-ribbon\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nonRibbon\");\r\n        },\r\n        /**\r\n         *\r\n         * If you set this to true, all the lines will be of the same width. This is done by making middleLine of a ChordLink visible.\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"nonRibbon\", value, true);\r\n            this.links.template.middleLine.strokeOpacity = 1;\r\n            this.links.template.link.fillOpacity = 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    ChordDiagram.prototype.createNode = function () {\r\n        var node = new _elements_ChordNode__WEBPACK_IMPORTED_MODULE_5__[\"ChordNode\"]();\r\n        this._disposers.push(node);\r\n        return node;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ChordDiagram.prototype.createLink = function () {\r\n        var link = new _elements_ChordLink__WEBPACK_IMPORTED_MODULE_6__[\"ChordLink\"]();\r\n        this._disposers.push(link);\r\n        return link;\r\n    };\r\n    return ChordDiagram;\r\n}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagram\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"ChordDiagram\"] = ChordDiagram;\r\n//# sourceMappingURL=ChordDiagram.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL0Nob3JkRGlhZ3JhbS5qcz8xYzBmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lFO0FBQ2Q7QUFDRjtBQUNGO0FBQ0c7QUFDQTtBQUNDO0FBQ0o7QUFDQTtBQUNFO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsZ0VBQW1CO0FBQ1c7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywwQkFBMEI7QUFDbkMsU0FBUyw0QkFBNEI7QUFDckMsU0FBUyxrRUFBa0U7QUFDM0U7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUVBQU87QUFDOUI7QUFDQTtBQUNBLDhEQUE4RCx5REFBUztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyREFBZ0I7QUFDbkMseUJBQXlCO0FBQ3pCLGVBQWUsbUVBQXdCO0FBQ3ZDO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0EscUJBQXFCLHdFQUE0QjtBQUNqRCwrQkFBK0Isd0VBQTRCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFFBQVEseURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLFNBQVM7QUFDVCwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEseURBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkRBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkRBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsd0RBQVc7QUFDVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NoYXJ0cy90eXBlcy9DaG9yZERpYWdyYW0uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ2hvcmQgZGlhZ3JhbSBtb2R1bGUuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEZsb3dEaWFncmFtLCBGbG93RGlhZ3JhbURhdGFJdGVtIH0gZnJvbSBcIi4vRmxvd0RpYWdyYW1cIjtcclxuaW1wb3J0IHsgcGVyY2VudCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL1BlcmNlbnRcIjtcclxuaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSBcIi4uLy4uL2NvcmUvQ29udGFpbmVyXCI7XHJcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL2NvcmUvUmVnaXN0cnlcIjtcclxuaW1wb3J0IHsgQ2hvcmROb2RlIH0gZnJvbSBcIi4uL2VsZW1lbnRzL0Nob3JkTm9kZVwiO1xyXG5pbXBvcnQgeyBDaG9yZExpbmsgfSBmcm9tIFwiLi4vZWxlbWVudHMvQ2hvcmRMaW5rXCI7XHJcbmltcG9ydCAqIGFzICRpdGVyIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0l0ZXJhdG9yXCI7XHJcbmltcG9ydCAqIGFzICRtYXRoIGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL01hdGhcIjtcclxuaW1wb3J0ICogYXMgJHR5cGUgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvVHlwZVwiO1xyXG5pbXBvcnQgKiBhcyAkdXRpbHMgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvVXRpbHNcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogREFUQSBJVEVNXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLy9AdG9kbyByZWFyYW5nZSBub3RlcyBhZnRlciBkcmFnZ2VkXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGEgW1tEYXRhSXRlbV1dIGZvciBbW0Nob3JkRGlhZ3JhbV1dLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBEYXRhSXRlbX1cclxuICovXHJcbnZhciBDaG9yZERpYWdyYW1EYXRhSXRlbSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhDaG9yZERpYWdyYW1EYXRhSXRlbSwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ2hvcmREaWFncmFtRGF0YUl0ZW0oKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkNob3JkRGlhZ3JhbURhdGFJdGVtXCI7XHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIHJldHVybiBDaG9yZERpYWdyYW1EYXRhSXRlbTtcclxufShGbG93RGlhZ3JhbURhdGFJdGVtKSk7XHJcbmV4cG9ydCB7IENob3JkRGlhZ3JhbURhdGFJdGVtIH07XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ3JlYXRlcyBhIENob3JkIERpYWdyYW0gY2hhcnQuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElDaG9yZERpYWdyYW1FdmVudHN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEV2ZW50c1xyXG4gKiBAc2VlIHtAbGluayBJQ2hvcmREaWFncmFtQWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y0L2NoYXJ0LXR5cGVzL2Nob3JkLWRpYWdyYW0vfSBmb3IgZG9jdW1lbnRhdGlvblxyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgQ2hvcmREaWFncmFtID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKENob3JkRGlhZ3JhbSwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ2hvcmREaWFncmFtKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IFxyXG4gICAgICAgIC8vIEluaXRcclxuICAgICAgICBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFt2YWx1ZUFuZ2xlIGRlc2NyaXB0aW9uXVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICAgICAqIEB0b2RvIERlc2NyaXB0aW9uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgX3RoaXMudmFsdWVBbmdsZSA9IDA7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJDaG9yZERpYWdyYW1cIjtcclxuICAgICAgICBfdGhpcy5zdGFydEFuZ2xlID0gLTkwO1xyXG4gICAgICAgIF90aGlzLmVuZEFuZ2xlID0gMjcwO1xyXG4gICAgICAgIF90aGlzLnJhZGl1cyA9IHBlcmNlbnQoODApO1xyXG4gICAgICAgIF90aGlzLmlubmVyUmFkaXVzID0gLTE1O1xyXG4gICAgICAgIF90aGlzLm5vZGVQYWRkaW5nID0gNTtcclxuICAgICAgICB2YXIgY2hvcmRDb250YWluZXIgPSBfdGhpcy5jaGFydENvbnRhaW5lci5jcmVhdGVDaGlsZChDb250YWluZXIpO1xyXG4gICAgICAgIGNob3JkQ29udGFpbmVyLmFsaWduID0gXCJjZW50ZXJcIjtcclxuICAgICAgICBjaG9yZENvbnRhaW5lci52YWxpZ24gPSBcIm1pZGRsZVwiO1xyXG4gICAgICAgIGNob3JkQ29udGFpbmVyLnNob3VsZENsb25lID0gZmFsc2U7XHJcbiAgICAgICAgY2hvcmRDb250YWluZXIubGF5b3V0ID0gXCJhYnNvbHV0ZVwiO1xyXG4gICAgICAgIF90aGlzLmNob3JkQ29udGFpbmVyID0gY2hvcmRDb250YWluZXI7XHJcbiAgICAgICAgX3RoaXMubm9kZXNDb250YWluZXIucGFyZW50ID0gY2hvcmRDb250YWluZXI7XHJcbiAgICAgICAgX3RoaXMubGlua3NDb250YWluZXIucGFyZW50ID0gY2hvcmRDb250YWluZXI7XHJcbiAgICAgICAgX3RoaXMuY2hhcnRDb250YWluZXIuZXZlbnRzLm9uKFwibWF4c2l6ZWNoYW5nZWRcIiwgX3RoaXMuaW52YWxpZGF0ZSwgX3RoaXMsIGZhbHNlKTtcclxuICAgICAgICAvLyBBcHBseSB0aGVtZVxyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlZHJhd3MgdGhlIGNoYXJ0LlxyXG4gICAgICpcclxuICAgICAqIEBpZ25vcmUgRXhjbHVkZSBmcm9tIGRvY3NcclxuICAgICAqL1xyXG4gICAgQ2hvcmREaWFncmFtLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBjaGFydENvbnRhaW5lciA9IHRoaXMuY2hhcnRDb250YWluZXI7XHJcbiAgICAgICAgdmFyIGVuZEFuZ2xlID0gdGhpcy5lbmRBbmdsZTtcclxuICAgICAgICB2YXIgc3RhcnRBbmdsZSA9IHRoaXMuc3RhcnRBbmdsZSArIHRoaXMubm9kZVBhZGRpbmcgLyAyO1xyXG4gICAgICAgIHZhciByZWN0ID0gJG1hdGguZ2V0QXJjUmVjdCh0aGlzLnN0YXJ0QW5nbGUsIHRoaXMuZW5kQW5nbGUsIDEpO1xyXG4gICAgICAgIHZhciBpbm5lclJlY3QgPSB7IHg6IDAsIHk6IDAsIHdpZHRoOiAwLCBoZWlnaHQ6IDAgfTtcclxuICAgICAgICByZWN0ID0gJG1hdGguZ2V0Q29tbW9uUmVjdGFuZ2xlKFtyZWN0LCBpbm5lclJlY3RdKTtcclxuICAgICAgICB2YXIgbWF4UmFkaXVzID0gTWF0aC5taW4oY2hhcnRDb250YWluZXIuaW5uZXJXaWR0aCAvIHJlY3Qud2lkdGgsIGNoYXJ0Q29udGFpbmVyLmlubmVySGVpZ2h0IC8gcmVjdC5oZWlnaHQpO1xyXG4gICAgICAgIGlmICghJHR5cGUuaXNOdW1iZXIobWF4UmFkaXVzKSkge1xyXG4gICAgICAgICAgICBtYXhSYWRpdXMgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcmFkaXVzID0gJHV0aWxzLnJlbGF0aXZlUmFkaXVzVG9WYWx1ZSh0aGlzLnJhZGl1cywgbWF4UmFkaXVzKTtcclxuICAgICAgICB2YXIgcGl4ZWxJbm5lclJhZGl1cyA9ICR1dGlscy5yZWxhdGl2ZVJhZGl1c1RvVmFsdWUodGhpcy5pbm5lclJhZGl1cywgcmFkaXVzLCB0cnVlKTtcclxuICAgICAgICB2YXIgdG90YWwgPSB0aGlzLmRhdGFJdGVtLnZhbHVlcy52YWx1ZS5zdW07XHJcbiAgICAgICAgdmFyIGNvdW50ID0gMDtcclxuICAgICAgICB2YXIgbmV3VG90YWwgPSAwO1xyXG4gICAgICAgICRpdGVyLmVhY2godGhpcy5fc29ydGVkLCBmdW5jdGlvbiAoc3RyTm9kZSkge1xyXG4gICAgICAgICAgICB2YXIgbm9kZSA9IHN0ck5vZGVbMV07XHJcbiAgICAgICAgICAgIF90aGlzLmdldE5vZGVWYWx1ZShub2RlKTtcclxuICAgICAgICAgICAgY291bnQrKztcclxuICAgICAgICAgICAgdmFyIHZhbHVlID0gbm9kZS50b3RhbDtcclxuICAgICAgICAgICAgaWYgKG5vZGUudG90YWwgLyB0b3RhbCA8IF90aGlzLm1pbk5vZGVTaXplKSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRvdGFsICogX3RoaXMubWluTm9kZVNpemU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbmV3VG90YWwgKz0gdmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy52YWx1ZUFuZ2xlID0gKGVuZEFuZ2xlIC0gdGhpcy5zdGFydEFuZ2xlIC0gdGhpcy5ub2RlUGFkZGluZyAqIGNvdW50KSAvIG5ld1RvdGFsO1xyXG4gICAgICAgICRpdGVyLmVhY2godGhpcy5fc29ydGVkLCBmdW5jdGlvbiAoc3RyTm9kZSkge1xyXG4gICAgICAgICAgICB2YXIgbm9kZSA9IHN0ck5vZGVbMV07XHJcbiAgICAgICAgICAgIHZhciBzbGljZSA9IG5vZGUuc2xpY2U7XHJcbiAgICAgICAgICAgIHNsaWNlLnJhZGl1cyA9IHJhZGl1cztcclxuICAgICAgICAgICAgc2xpY2UuaW5uZXJSYWRpdXMgPSBwaXhlbElubmVyUmFkaXVzO1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBub2RlLnRvdGFsO1xyXG4gICAgICAgICAgICBpZiAobm9kZS50b3RhbCAvIHRvdGFsIDwgX3RoaXMubWluTm9kZVNpemUpIHtcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gdG90YWwgKiBfdGhpcy5taW5Ob2RlU2l6ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBub2RlLmFkanVzdGVkVG90YWwgPSB2YWx1ZTtcclxuICAgICAgICAgICAgdmFyIGFyYztcclxuICAgICAgICAgICAgaWYgKF90aGlzLm5vblJpYmJvbikge1xyXG4gICAgICAgICAgICAgICAgYXJjID0gKGVuZEFuZ2xlIC0gX3RoaXMuc3RhcnRBbmdsZSkgLyBjb3VudCAtIF90aGlzLm5vZGVQYWRkaW5nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYXJjID0gX3RoaXMudmFsdWVBbmdsZSAqIHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHNsaWNlLmFyYyA9IGFyYztcclxuICAgICAgICAgICAgc2xpY2Uuc3RhcnRBbmdsZSA9IHN0YXJ0QW5nbGU7XHJcbiAgICAgICAgICAgIG5vZGUudHJ1ZVN0YXJ0QW5nbGUgPSBzdGFydEFuZ2xlO1xyXG4gICAgICAgICAgICBub2RlLnBhcmVudCA9IF90aGlzLm5vZGVzQ29udGFpbmVyO1xyXG4gICAgICAgICAgICBub2RlLnZhbGlkYXRlKCk7IC8vIG90aGVyd2lzZSBmbGlja2VycyAtIG5vZGVzIGFyZSBhbHJlYWR5IGNyZWF0ZWQsIGJ1dCBub3QgeWV0IHBvc2l0aW9uZWQgZXRjLlxyXG4gICAgICAgICAgICBzdGFydEFuZ2xlICs9IGFyYyArIF90aGlzLm5vZGVQYWRkaW5nO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuY2hvcmRDb250YWluZXIuZGVmaW5lZEJCb3ggPSB7IHg6IHJhZGl1cyAqIHJlY3QueCwgeTogcmFkaXVzICogcmVjdC55LCB3aWR0aDogcmFkaXVzICogcmVjdC53aWR0aCwgaGVpZ2h0OiByYWRpdXMgKiByZWN0LmhlaWdodCB9O1xyXG4gICAgICAgIHRoaXMuY2hvcmRDb250YWluZXIuaW52YWxpZGF0ZUxheW91dCgpO1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGUuY2FsbCh0aGlzKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFNldHMgZGVmYXVsdHMgdGhhdCBpbnN0YW50aWF0ZSBzb21lIG9iamVjdHMgdGhhdCByZWx5IG9uIHBhcmVudCwgc28gdGhleVxyXG4gICAgICogY2Fubm90IGJlIHNldCBpbiBjb25zdHJ1Y3Rvci5cclxuICAgICAqL1xyXG4gICAgQ2hvcmREaWFncmFtLnByb3RvdHlwZS5hcHBseUludGVybmFsRGVmYXVsdHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5hcHBseUludGVybmFsRGVmYXVsdHMuY2FsbCh0aGlzKTtcclxuICAgICAgICAvLyBBZGQgYSBkZWZhdWx0IHNjcmVlbiByZWFkZXIgdGl0bGUgZm9yIGFjY2Vzc2liaWxpdHlcclxuICAgICAgICAvLyBUaGlzIHdpbGwgYmUgb3ZlcnJpZGRlbiBpbiBzY3JlZW4gcmVhZGVyIGlmIHRoZXJlIGFyZSBhbnkgYHRpdGxlc2Agc2V0XHJcbiAgICAgICAgaWYgKCEkdHlwZS5oYXNWYWx1ZSh0aGlzLnJlYWRlclRpdGxlKSkge1xyXG4gICAgICAgICAgICB0aGlzLnJlYWRlclRpdGxlID0gdGhpcy5sYW5ndWFnZS50cmFuc2xhdGUoXCJDaG9yZCBkaWFncmFtXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW5kIHJldHVybnMgYSBuZXcgZGF0YSBpdGVtLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm4gRGF0YSBpdGVtXHJcbiAgICAgKi9cclxuICAgIENob3JkRGlhZ3JhbS5wcm90b3R5cGUuY3JlYXRlRGF0YUl0ZW0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDaG9yZERpYWdyYW1EYXRhSXRlbSgpO1xyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDaG9yZERpYWdyYW0ucHJvdG90eXBlLCBcInN0YXJ0QW5nbGVcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gU3RhcnQgYW5nbGUgKGRlZ3JlZXMpXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJzdGFydEFuZ2xlXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU3RhcnRpbmcgYW5nbGUgb2YgdGhlIFJhZGFyIGZhY2UuIChkZWdyZWVzKVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogTm9ybWFsbHksIGEgY2lyY3VsYXIgcmFkYXIgZmFjZSBiZWdpbnMgKHRoZSByYWRpYWwgYXhpcyBpcyBkcmF3bikgYXQgdGhlXHJcbiAgICAgICAgICogdG9wIGNlbnRlci4gKGF0IC05MCBkZWdyZWVzKVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogWW91IGNhbiB1c2UgYHN0YXJ0QW5nbGVgIHRvIGNoYW5nZSB0aGlzIHNldHRpbmcuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBFLmcuIHNldHRpbmcgdGhpcyB0byAwIHdpbGwgbWFrZSB0aGUgcmFkaWFsIGF4aXMgc3RhcnQgaG9yaXpvbnRhbGx5IHRvXHJcbiAgICAgICAgICogdGhlIHJpZ2h0LCBhcyBvcHBvc2VkIHRvIHZlcnRpY2FsLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRm9yIGEgcGVyZmVjdCBjaXJjbGUgdGhlIGFic29sdXRlIHN1bSBvZiBgc3RhcnRBbmdsZWAgYW5kIGBlbmRBbmdsZWBcclxuICAgICAgICAgKiBuZWVkcyB0byBiZSAzNjAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBIb3dldmVyLCBpdCdzICoqbm90KiogbmVjZXNzYXJ5IHRvIGRvIHNvLiBZb3UgY2FuIHNldCB0aG9zZSB0byBsZXNzZXJcclxuICAgICAgICAgKiBudW1iZXJzLCB0byBjcmVhdGUgc2VtaS1jaXJjbGVzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRS5nLiBgc3RhcnRBbmdsZSA9IC05MGAgd2l0aCBgZW5kQW5nbGUgPSAwYCB3aWxsIGNyZWF0ZSBhIHJhZGFyIGZhY2UgdGhhdFxyXG4gICAgICAgICAqIGxvb2tzIGxpa2UgYSBxdWFydGVyIG9mIGEgY2lyY2xlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGRlZmF1bHQgLTkwXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBTdGFydCBhbmdsZSAoZGVncmVlcylcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJzdGFydEFuZ2xlXCIsIHZhbHVlLCB0cnVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDaG9yZERpYWdyYW0ucHJvdG90eXBlLCBcImVuZEFuZ2xlXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIEVuZCBhbmdsZSAoZGVncmVlcylcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImVuZEFuZ2xlXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU3RhcnRpbmcgYW5nbGUgb2YgdGhlIFJhZGFyIGZhY2UuIChkZWdyZWVzKVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogTm9ybWFsbHksIGEgY2lyY3VsYXIgcmFkYXIgZmFjZSBlbmRzICh0aGUgcmFkaWFsIGF4aXMgaXMgZHJhd24pIGV4YWN0bHlcclxuICAgICAgICAgKiB3aGVyZSBpdCBoYXMgc3RhcnRlZCwgZm9ybWluZyBhIGZ1bGwgMzYwIGNpcmNsZS4gKGF0IDI3MCBkZWdyZWVzKVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogWW91IGNhbiB1c2UgYGVuZEFuZ2xlYCB0byBlbmQgdGhlIGNpcmNsZSBzb21ld2hlcmUgZWxzZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEUuZy4gc2V0dGluZyB0aGlzIHRvIDE4MCB3aWxsIG1ha2UgdGhlIHJhZGFyIGZhY2UgZW5kIGF0IGhvcml6b250YWwgbGluZVxyXG4gICAgICAgICAqIHRvIHRoZSBsZWZ0IG9mZiB0aGUgY2VudGVyLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRm9yIGEgcGVyZmVjdCBjaXJjbGUgdGhlIGFic29sdXRlIHN1bSBvZiBgc3RhcnRBbmdsZWAgYW5kIGBlbmRBbmdsZWBcclxuICAgICAgICAgKiBuZWVkcyB0byBiZSAzNjAuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBIb3dldmVyLCBpdCdzICoqbm90KiogbmVjZXNzYXJ5IHRvIGRvIHNvLiBZb3UgY2FuIHNldCB0aG9zZSB0byBsZXNzZXJcclxuICAgICAgICAgKiBudW1iZXJzLCB0byBjcmVhdGUgc2VtaS1jaXJjbGVzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogRS5nLiBgc3RhcnRBbmdsZSA9IC05MGAgd2l0aCBgZW5kQW5nbGUgPSAwYCB3aWxsIGNyZWF0ZSBhIHJhZGFyIGZhY2UgdGhhdFxyXG4gICAgICAgICAqIGxvb2tzIGxpa2UgYSBxdWFydGVyIG9mIGEgY2lyY2xlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGRlZmF1bHQgLTkwXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBFbmQgYW5nbGUgKGRlZ3JlZXMpXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwiZW5kQW5nbGVcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENob3JkRGlhZ3JhbS5wcm90b3R5cGUsIFwicmFkaXVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIE91dGVyIHJhZGl1c1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwicmFkaXVzXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogT3V0ZXIgcmFkaXVzIG9mIHRoZSBSYWRhciBmYWNlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhpcyBjYW4gZWl0aGVyIGJlIGluIGFic29sdXRlIHBpeGVsIHZhbHVlLCBvciByZWxhdGl2ZSBbW1BlcmNlbnRdXS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgT3V0ZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQZXJjZW50UHJvcGVydHkoXCJyYWRpdXNcIiwgdmFsdWUsIHRydWUsIGZhbHNlLCAxMCwgZmFsc2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENob3JkRGlhZ3JhbS5wcm90b3R5cGUsIFwiaW5uZXJSYWRpdXNcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gSW5uZXIgcmFkaXVzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJpbm5lclJhZGl1c1wiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIElubmVyIHJhZGl1cyBvZiB0aGUgQ2hvcmQgbm9kZXMuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIGNhbiBlaXRoZXIgYmUgaW4gYWJzb2x1dGUgcGl4ZWwgdmFsdWUsIG9yIHJlbGF0aXZlIFtbUGVyY2VudF1dLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBPdXRlciByYWRpdXNcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBlcmNlbnRQcm9wZXJ0eShcImlubmVyUmFkaXVzXCIsIHZhbHVlLCB0cnVlLCBmYWxzZSwgMTAsIGZhbHNlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDaG9yZERpYWdyYW0ucHJvdG90eXBlLCBcIm5vblJpYmJvblwiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBOb24tcmliYm9uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJub25SaWJib25cIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIElmIHlvdSBzZXQgdGhpcyB0byB0cnVlLCBhbGwgdGhlIGxpbmVzIHdpbGwgYmUgb2YgdGhlIHNhbWUgd2lkdGguIFRoaXMgaXMgZG9uZSBieSBtYWtpbmcgbWlkZGxlTGluZSBvZiBhIENob3JkTGluayB2aXNpYmxlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwibm9uUmliYm9uXCIsIHZhbHVlLCB0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5saW5rcy50ZW1wbGF0ZS5taWRkbGVMaW5lLnN0cm9rZU9wYWNpdHkgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLmxpbmtzLnRlbXBsYXRlLmxpbmsuZmlsbE9wYWNpdHkgPSAwO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIENob3JkRGlhZ3JhbS5wcm90b3R5cGUuY3JlYXRlTm9kZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgbm9kZSA9IG5ldyBDaG9yZE5vZGUoKTtcclxuICAgICAgICB0aGlzLl9kaXNwb3NlcnMucHVzaChub2RlKTtcclxuICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgQ2hvcmREaWFncmFtLnByb3RvdHlwZS5jcmVhdGVMaW5rID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBsaW5rID0gbmV3IENob3JkTGluaygpO1xyXG4gICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKGxpbmspO1xyXG4gICAgICAgIHJldHVybiBsaW5rO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBDaG9yZERpYWdyYW07XHJcbn0oRmxvd0RpYWdyYW0pKTtcclxuZXhwb3J0IHsgQ2hvcmREaWFncmFtIH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkNob3JkRGlhZ3JhbVwiXSA9IENob3JkRGlhZ3JhbTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hvcmREaWFncmFtLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js ***!
  \********************************************************************************/
/*! exports provided: FlowDiagramDataItem, FlowDiagram */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagramDataItem\", function() { return FlowDiagramDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagram\", function() { return FlowDiagram; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Chart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Dictionary */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../elements/FlowDiagramNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js\");\n/* harmony import */ var _elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../elements/FlowDiagramLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js\");\n/* harmony import */ var _core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/fills/LinearGradientModifier */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradientModifier.js\");\n/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/ColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Number */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js\");\n/* harmony import */ var _core_utils_Order__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Order */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/**\r\n * FlowDiagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo rearange notes after dragged\r\n/**\r\n * Defines a [[DataItem]] for [[FlowDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar FlowDiagramDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FlowDiagramDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagramDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FlowDiagramDataItem\";\r\n        _this.values.value = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"fromName\", {\r\n        /**\r\n         * @return name\r\n         */\r\n        get: function () {\r\n            return this.properties.fromName;\r\n        },\r\n        /**\r\n         * Source node's name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"fromName\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"toName\", {\r\n        /**\r\n         * @return name\r\n         */\r\n        get: function () {\r\n            return this.properties.toName;\r\n        },\r\n        /**\r\n         * Destination node's name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"toName\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Node color\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_10__[\"toColor\"])(value));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.value.value;\r\n        },\r\n        /**\r\n         * Link's value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"link\", {\r\n        /**\r\n         * A visual element, representing link between the source and target nodes.\r\n         *\r\n         * Link's actual thickness will be determined by `value` of this link and\r\n         * `value` of the source node.\r\n         *\r\n         * @readonly\r\n         * @return Link element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._link) {\r\n                var link_1 = this.component.links.create();\r\n                this._link = link_1;\r\n                this.addSprite(link_1);\r\n                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_15__[\"Disposer\"](function () {\r\n                    if (_this.component) {\r\n                        _this.component.links.removeValue(link_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._link;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FlowDiagramDataItem;\r\n}(_Chart__WEBPACK_IMPORTED_MODULE_1__[\"ChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Pie chart\r\n * @see {@link IFlowDiagramEvents} for a list of available Events\r\n * @see {@link IFlowDiagramAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar FlowDiagram = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(FlowDiagram, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagram() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A Color Set to use when applying/generating colors for each subsequent\r\n         * node.\r\n         */\r\n        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_9__[\"ColorSet\"]();\r\n        _this.className = \"FlowDiagram\";\r\n        _this.nodePadding = 20;\r\n        _this.sortBy = \"none\";\r\n        _this.sequencedInterpolation = true;\r\n        _this.colors.step = 2;\r\n        _this.minNodeSize = 0.02;\r\n        var linksContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__[\"Container\"]);\r\n        linksContainer.shouldClone = false;\r\n        linksContainer.layout = \"none\";\r\n        linksContainer.isMeasured = false;\r\n        _this.linksContainer = linksContainer;\r\n        var nodesContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__[\"Container\"]);\r\n        nodesContainer.shouldClone = false;\r\n        nodesContainer.layout = \"none\";\r\n        nodesContainer.isMeasured = false;\r\n        _this.nodesContainer = nodesContainer;\r\n        // this data item holds sums, averages, etc\r\n        _this.dataItem = _this.createDataItem();\r\n        _this.dataItem.component = _this;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    FlowDiagram.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.dataItem.dispose();\r\n    };\r\n    /**\r\n     * (Re)validates chart's data, effectively causing the chart to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagram.prototype.validateData = function () {\r\n        var _this = this;\r\n        if (this._parseDataFrom == 0) {\r\n            this.nodes.clear();\r\n        }\r\n        this.sortNodes();\r\n        this.colors.reset();\r\n        _super.prototype.validateData.call(this);\r\n        var sum = 0;\r\n        var count = 0;\r\n        var low;\r\n        var high;\r\n        // build blocks\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](this.dataItems.iterator(), function (dataItem) {\r\n            var fromName = dataItem.fromName;\r\n            if (fromName) {\r\n                var node = _this.nodes.getKey(fromName);\r\n                if (!node) {\r\n                    node = _this.nodes.create(fromName);\r\n                    node.name = fromName;\r\n                    node.chart = _this;\r\n                    node.dataItem = dataItem;\r\n                }\r\n                dataItem.fromNode = node;\r\n                dataItem.fromNode.outgoingDataItems.push(dataItem);\r\n            }\r\n            var toName = dataItem.toName;\r\n            if (toName) {\r\n                var node = _this.nodes.getKey(toName);\r\n                if (!node) {\r\n                    node = _this.nodes.create(toName);\r\n                    node.name = toName;\r\n                    node.chart = _this;\r\n                    node.dataItem = dataItem;\r\n                }\r\n                dataItem.toNode = node;\r\n                dataItem.toNode.incomingDataItems.push(dataItem);\r\n            }\r\n            if (!dataItem.fromNode) {\r\n                var strokeModifier = new _core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_8__[\"LinearGradientModifier\"]();\r\n                strokeModifier.opacities = [0, 1];\r\n                dataItem.link.strokeModifier = strokeModifier;\r\n            }\r\n            if (!dataItem.toNode) {\r\n                var fillModifier = new _core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_8__[\"LinearGradientModifier\"]();\r\n                fillModifier.opacities = [1, 0];\r\n                dataItem.link.strokeModifier = fillModifier;\r\n            }\r\n            var value = dataItem.value;\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](value)) {\r\n                sum += value;\r\n                count++;\r\n                if (low > value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](low)) {\r\n                    low = value;\r\n                }\r\n                if (high < value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](high)) {\r\n                    high = value;\r\n                }\r\n            }\r\n        });\r\n        var key = \"value\";\r\n        this.dataItem.setCalculatedValue(key, high, \"high\");\r\n        this.dataItem.setCalculatedValue(key, low, \"low\");\r\n        this.dataItem.setCalculatedValue(key, sum, \"sum\");\r\n        this.dataItem.setCalculatedValue(key, sum / count, \"average\");\r\n        this.dataItem.setCalculatedValue(key, count, \"count\");\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](this.nodes.iterator(), function (strNode) {\r\n            var node = strNode[1];\r\n            if (node.fill instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_10__[\"Color\"]) {\r\n                node.color = node.fill;\r\n            }\r\n            if (node.color == undefined) {\r\n                node.color = _this.colors.next();\r\n            }\r\n            if (node.dataItem.color != undefined) {\r\n                node.color = node.dataItem.color;\r\n            }\r\n            if (!node.dataItem.visible) {\r\n                node.hide(0);\r\n            }\r\n            _this.getNodeValue(node);\r\n        });\r\n        this.sortNodes();\r\n        this.feedLegend();\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagram.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Sorts nodes by either their values or names, based on `sortBy` setting.\r\n     */\r\n    FlowDiagram.prototype.sortNodes = function () {\r\n        if (this.sortBy == \"name\") {\r\n            this._sorted = this.nodes.sortedIterator();\r\n        }\r\n        else if (this.sortBy == \"value\") {\r\n            this._sorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"sort\"](this.nodes.iterator(), function (x, y) { return _core_utils_Order__WEBPACK_IMPORTED_MODULE_14__[\"reverse\"](_core_utils_Number__WEBPACK_IMPORTED_MODULE_13__[\"order\"](x[1].total, y[1].total)); });\r\n        }\r\n        else {\r\n            this._sorted = this.nodes.iterator();\r\n        }\r\n    };\r\n    /**\r\n     * Updates a cummulative value of the node.\r\n     *\r\n     * A node's value is determined by summing values of all of the incoming\r\n     * links or all of the outgoing links, whichever results in bigger number.\r\n     *\r\n     * @param node  Node value\r\n     */\r\n    FlowDiagram.prototype.getNodeValue = function (node) {\r\n        // todo: totalIncomming totalOutgoing, total\r\n        var incomingTotal = 0;\r\n        var outgoingTotal = 0;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](node.incomingDataItems.iterator(), function (dataItem) {\r\n            var value = dataItem.getWorkingValue(\"value\");\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](value)) {\r\n                incomingTotal += value;\r\n            }\r\n        });\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__[\"each\"](node.outgoingDataItems.iterator(), function (dataItem) {\r\n            var value = dataItem.getWorkingValue(\"value\");\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"](value)) {\r\n                outgoingTotal += value;\r\n            }\r\n        });\r\n        node.total = incomingTotal + outgoingTotal;\r\n        node.totalIncoming = incomingTotal;\r\n        node.totalOutgoing = outgoingTotal;\r\n    };\r\n    ;\r\n    /**\r\n     * Changes the sort type of the nodes.\r\n     *\r\n     * This will actually reshuffle nodes using nice animation.\r\n     */\r\n    FlowDiagram.prototype.changeSorting = function () {\r\n        this.sortNodes();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    FlowDiagram.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Flow diagram\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new data item.\r\n     *\r\n     * @return Data item\r\n     */\r\n    FlowDiagram.prototype.createDataItem = function () {\r\n        return new FlowDiagramDataItem();\r\n    };\r\n    Object.defineProperty(FlowDiagram.prototype, \"nodePadding\", {\r\n        /**\r\n         * @return Padding (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nodePadding\");\r\n        },\r\n        /**\r\n         * Padding for node square in pixels.\r\n         *\r\n         * Padding will add extra space around node's name label.\r\n         *\r\n         * @param value Padding (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"nodePadding\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagram.prototype, \"sortBy\", {\r\n        /**\r\n         * @returns Node sorting\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"sortBy\");\r\n        },\r\n        /**\r\n         * Sort nodes by \"name\" or \"value\" or do not sort at all. If not sorted, nodes will appear in the same order as they are in the data.\r\n         * @default \"none\"\r\n         * @param value  Node sorting\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"sortBy\", value);\r\n            this.changeSorting();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagram.prototype, \"minNodeSize\", {\r\n        /**\r\n         * @returns min node size\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minNodeSize\");\r\n        },\r\n        /**\r\n         * Sometimes nodes can get very small if their value is little. With this setting you\r\n         * can set min size of a node (this is relative value from the total size of all nodes)\r\n         * @default 0.02\r\n         * @param value  Node sorting\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minNodeSize\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagram.prototype, \"nodes\", {\r\n        /**\r\n         * A list of chart's nodes.\r\n         *\r\n         * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n         */\r\n        get: function () {\r\n            if (!this._nodes) {\r\n                var template = this.createNode();\r\n                template.events.on(\"hit\", function (event) {\r\n                    event.target.handleHit(event);\r\n                });\r\n                this._nodes = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__[\"DictionaryTemplate\"](template);\r\n                this._disposers.push(new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__[\"DictionaryDisposer\"](this._nodes));\r\n            }\r\n            return this._nodes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.createNode = function () {\r\n        var node = new _elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_6__[\"FlowDiagramNode\"]();\r\n        this._disposers.push(node);\r\n        return node;\r\n    };\r\n    Object.defineProperty(FlowDiagram.prototype, \"links\", {\r\n        /**\r\n         * A list of chart's links.\r\n         *\r\n         * @param {ListTemplate<this[\"_link\"]>}\r\n         */\r\n        get: function () {\r\n            if (!this._links) {\r\n                this._links = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__[\"ListTemplate\"](this.createLink());\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__[\"ListDisposer\"](this._links));\r\n            }\r\n            return this._links;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.createLink = function () {\r\n        var link = new _elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_7__[\"FlowDiagramLink\"]();\r\n        this._disposers.push(link);\r\n        return link;\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            this.nodes.each(function (key, node) {\r\n                legendData_1.push(node);\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"name\";\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.nodes.clear();\r\n    };\r\n    return FlowDiagram;\r\n}(_Chart__WEBPACK_IMPORTED_MODULE_1__[\"Chart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_5__[\"registry\"].registeredClasses[\"FlowDiagram\"] = FlowDiagram;\r\n//# sourceMappingURL=FlowDiagram.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL0Zsb3dEaWFncmFtLmpzPzBiMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dEO0FBQ21CO0FBQ2tCO0FBQ3BDO0FBQ0Y7QUFDZTtBQUNBO0FBQzZCO0FBQ3RDO0FBQ0c7QUFDTDtBQUNKO0FBQ0k7QUFDRjtBQUNJO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGtFQUFPO0FBQzdDLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDhEQUFRO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDLENBQUMsb0RBQWE7QUFDZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUJBQXlCO0FBQ2xDLFNBQVMsMkJBQTJCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDZEQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCx5REFBUztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCx5REFBUztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBEQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLG1HQUFzQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxtR0FBc0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWM7QUFDOUI7QUFDQTtBQUNBLG9DQUFvQywwREFBYztBQUNsRDtBQUNBO0FBQ0EscUNBQXFDLDBEQUFjO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBEQUFVO0FBQ2xCO0FBQ0EscUNBQXFDLHdEQUFLO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwwREFBVSx5Q0FBeUMsUUFBUSwwREFBYyxDQUFDLHlEQUFhLDBCQUEwQixFQUFFO0FBQzlJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBEQUFVO0FBQ2xCO0FBQ0EsZ0JBQWdCLDBEQUFjO0FBQzlCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUSwwREFBVTtBQUNsQjtBQUNBLGdCQUFnQiwwREFBYztBQUM5QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMERBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGtDQUFrQyx5RUFBa0I7QUFDcEQseUNBQXlDLHlFQUFrQjtBQUMzRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIseUVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZEQUFZO0FBQzlDLHlDQUF5Qyw2REFBWTtBQUNyRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIseUVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLDRDQUFLO0FBQ2dCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL0Zsb3dEaWFncmFtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEZsb3dEaWFncmFtIG1vZHVsZS5cclxuICovXHJcbmltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBJTVBPUlRTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuaW1wb3J0IHsgQ2hhcnQsIENoYXJ0RGF0YUl0ZW0gfSBmcm9tIFwiLi4vQ2hhcnRcIjtcclxuaW1wb3J0IHsgTGlzdFRlbXBsYXRlLCBMaXN0RGlzcG9zZXIgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9MaXN0XCI7XHJcbmltcG9ydCB7IERpY3Rpb25hcnlUZW1wbGF0ZSwgRGljdGlvbmFyeURpc3Bvc2VyIH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvRGljdGlvbmFyeVwiO1xyXG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tIFwiLi4vLi4vY29yZS9Db250YWluZXJcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgeyBGbG93RGlhZ3JhbU5vZGUgfSBmcm9tIFwiLi4vZWxlbWVudHMvRmxvd0RpYWdyYW1Ob2RlXCI7XHJcbmltcG9ydCB7IEZsb3dEaWFncmFtTGluayB9IGZyb20gXCIuLi9lbGVtZW50cy9GbG93RGlhZ3JhbUxpbmtcIjtcclxuaW1wb3J0IHsgTGluZWFyR3JhZGllbnRNb2RpZmllciB9IGZyb20gXCIuLi8uLi9jb3JlL3JlbmRlcmluZy9maWxscy9MaW5lYXJHcmFkaWVudE1vZGlmaWVyXCI7XHJcbmltcG9ydCB7IENvbG9yU2V0IH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvQ29sb3JTZXRcIjtcclxuaW1wb3J0IHsgdG9Db2xvciwgQ29sb3IgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9Db2xvclwiO1xyXG5pbXBvcnQgKiBhcyAkaXRlciBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9JdGVyYXRvclwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbmltcG9ydCAqIGFzICRudW1iZXIgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvTnVtYmVyXCI7XHJcbmltcG9ydCAqIGFzICRvcmRlciBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9PcmRlclwiO1xyXG5pbXBvcnQgeyBEaXNwb3NlciB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL0Rpc3Bvc2VyXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIERBVEEgSVRFTVxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8vQHRvZG8gcmVhcmFuZ2Ugbm90ZXMgYWZ0ZXIgZHJhZ2dlZFxyXG4vKipcclxuICogRGVmaW5lcyBhIFtbRGF0YUl0ZW1dXSBmb3IgW1tGbG93RGlhZ3JhbV1dLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBEYXRhSXRlbX1cclxuICovXHJcbnZhciBGbG93RGlhZ3JhbURhdGFJdGVtID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEZsb3dEaWFncmFtRGF0YUl0ZW0sIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIEZsb3dEaWFncmFtRGF0YUl0ZW0oKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkZsb3dEaWFncmFtRGF0YUl0ZW1cIjtcclxuICAgICAgICBfdGhpcy52YWx1ZXMudmFsdWUgPSB7fTtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsb3dEaWFncmFtRGF0YUl0ZW0ucHJvdG90eXBlLCBcImZyb21OYW1lXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIG5hbWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcGVydGllcy5mcm9tTmFtZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNvdXJjZSBub2RlJ3MgbmFtZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgTmFtZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHkoXCJmcm9tTmFtZVwiLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRmxvd0RpYWdyYW1EYXRhSXRlbS5wcm90b3R5cGUsIFwidG9OYW1lXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIG5hbWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcGVydGllcy50b05hbWU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBEZXN0aW5hdGlvbiBub2RlJ3MgbmFtZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgTmFtZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHkoXCJ0b05hbWVcIiwgdmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsb3dEaWFncmFtRGF0YUl0ZW0ucHJvdG90eXBlLCBcImNvbG9yXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIGNvbG9yXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb3BlcnRpZXMuY29sb3I7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBOb2RlIGNvbG9yXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgIE5hbWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5KFwiY29sb3JcIiwgdG9Db2xvcih2YWx1ZSkpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsb3dEaWFncmFtRGF0YUl0ZW0ucHJvdG90eXBlLCBcInZhbHVlXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIFZhbHVlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbHVlcy52YWx1ZS52YWx1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIExpbmsncyB2YWx1ZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgVmFsdWVcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFZhbHVlKFwidmFsdWVcIiwgdmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsb3dEaWFncmFtRGF0YUl0ZW0ucHJvdG90eXBlLCBcImxpbmtcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgdmlzdWFsIGVsZW1lbnQsIHJlcHJlc2VudGluZyBsaW5rIGJldHdlZW4gdGhlIHNvdXJjZSBhbmQgdGFyZ2V0IG5vZGVzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogTGluaydzIGFjdHVhbCB0aGlja25lc3Mgd2lsbCBiZSBkZXRlcm1pbmVkIGJ5IGB2YWx1ZWAgb2YgdGhpcyBsaW5rIGFuZFxyXG4gICAgICAgICAqIGB2YWx1ZWAgb2YgdGhlIHNvdXJjZSBub2RlLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHJlYWRvbmx5XHJcbiAgICAgICAgICogQHJldHVybiBMaW5rIGVsZW1lbnRcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9saW5rKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbGlua18xID0gdGhpcy5jb21wb25lbnQubGlua3MuY3JlYXRlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saW5rID0gbGlua18xO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGRTcHJpdGUobGlua18xKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKG5ldyBEaXNwb3NlcihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5jb21wb25lbnQubGlua3MucmVtb3ZlVmFsdWUobGlua18xKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xpbms7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gRmxvd0RpYWdyYW1EYXRhSXRlbTtcclxufShDaGFydERhdGFJdGVtKSk7XHJcbmV4cG9ydCB7IEZsb3dEaWFncmFtRGF0YUl0ZW0gfTtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgUGllIGNoYXJ0XHJcbiAqIEBzZWUge0BsaW5rIElGbG93RGlhZ3JhbUV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgRXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElGbG93RGlhZ3JhbUFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG52YXIgRmxvd0RpYWdyYW0gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoRmxvd0RpYWdyYW0sIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIEZsb3dEaWFncmFtKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IFxyXG4gICAgICAgIC8vIEluaXRcclxuICAgICAgICBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgQ29sb3IgU2V0IHRvIHVzZSB3aGVuIGFwcGx5aW5nL2dlbmVyYXRpbmcgY29sb3JzIGZvciBlYWNoIHN1YnNlcXVlbnRcclxuICAgICAgICAgKiBub2RlLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIF90aGlzLmNvbG9ycyA9IG5ldyBDb2xvclNldCgpO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiRmxvd0RpYWdyYW1cIjtcclxuICAgICAgICBfdGhpcy5ub2RlUGFkZGluZyA9IDIwO1xyXG4gICAgICAgIF90aGlzLnNvcnRCeSA9IFwibm9uZVwiO1xyXG4gICAgICAgIF90aGlzLnNlcXVlbmNlZEludGVycG9sYXRpb24gPSB0cnVlO1xyXG4gICAgICAgIF90aGlzLmNvbG9ycy5zdGVwID0gMjtcclxuICAgICAgICBfdGhpcy5taW5Ob2RlU2l6ZSA9IDAuMDI7XHJcbiAgICAgICAgdmFyIGxpbmtzQ29udGFpbmVyID0gX3RoaXMuY2hhcnRDb250YWluZXIuY3JlYXRlQ2hpbGQoQ29udGFpbmVyKTtcclxuICAgICAgICBsaW5rc0NvbnRhaW5lci5zaG91bGRDbG9uZSA9IGZhbHNlO1xyXG4gICAgICAgIGxpbmtzQ29udGFpbmVyLmxheW91dCA9IFwibm9uZVwiO1xyXG4gICAgICAgIGxpbmtzQ29udGFpbmVyLmlzTWVhc3VyZWQgPSBmYWxzZTtcclxuICAgICAgICBfdGhpcy5saW5rc0NvbnRhaW5lciA9IGxpbmtzQ29udGFpbmVyO1xyXG4gICAgICAgIHZhciBub2Rlc0NvbnRhaW5lciA9IF90aGlzLmNoYXJ0Q29udGFpbmVyLmNyZWF0ZUNoaWxkKENvbnRhaW5lcik7XHJcbiAgICAgICAgbm9kZXNDb250YWluZXIuc2hvdWxkQ2xvbmUgPSBmYWxzZTtcclxuICAgICAgICBub2Rlc0NvbnRhaW5lci5sYXlvdXQgPSBcIm5vbmVcIjtcclxuICAgICAgICBub2Rlc0NvbnRhaW5lci5pc01lYXN1cmVkID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMubm9kZXNDb250YWluZXIgPSBub2Rlc0NvbnRhaW5lcjtcclxuICAgICAgICAvLyB0aGlzIGRhdGEgaXRlbSBob2xkcyBzdW1zLCBhdmVyYWdlcywgZXRjXHJcbiAgICAgICAgX3RoaXMuZGF0YUl0ZW0gPSBfdGhpcy5jcmVhdGVEYXRhSXRlbSgpO1xyXG4gICAgICAgIF90aGlzLmRhdGFJdGVtLmNvbXBvbmVudCA9IF90aGlzO1xyXG4gICAgICAgIC8vIEFwcGx5IHRoZW1lXHJcbiAgICAgICAgX3RoaXMuYXBwbHlUaGVtZSgpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIEZsb3dEaWFncmFtLnByb3RvdHlwZS5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuZGlzcG9zZS5jYWxsKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZGF0YUl0ZW0uZGlzcG9zZSgpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogKFJlKXZhbGlkYXRlcyBjaGFydCdzIGRhdGEsIGVmZmVjdGl2ZWx5IGNhdXNpbmcgdGhlIGNoYXJ0IHRvIHJlZHJhdy5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIEZsb3dEaWFncmFtLnByb3RvdHlwZS52YWxpZGF0ZURhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICBpZiAodGhpcy5fcGFyc2VEYXRhRnJvbSA9PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZXMuY2xlYXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zb3J0Tm9kZXMoKTtcclxuICAgICAgICB0aGlzLmNvbG9ycy5yZXNldCgpO1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGVEYXRhLmNhbGwodGhpcyk7XHJcbiAgICAgICAgdmFyIHN1bSA9IDA7XHJcbiAgICAgICAgdmFyIGNvdW50ID0gMDtcclxuICAgICAgICB2YXIgbG93O1xyXG4gICAgICAgIHZhciBoaWdoO1xyXG4gICAgICAgIC8vIGJ1aWxkIGJsb2Nrc1xyXG4gICAgICAgICRpdGVyLmVhY2godGhpcy5kYXRhSXRlbXMuaXRlcmF0b3IoKSwgZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgIHZhciBmcm9tTmFtZSA9IGRhdGFJdGVtLmZyb21OYW1lO1xyXG4gICAgICAgICAgICBpZiAoZnJvbU5hbWUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBub2RlID0gX3RoaXMubm9kZXMuZ2V0S2V5KGZyb21OYW1lKTtcclxuICAgICAgICAgICAgICAgIGlmICghbm9kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBfdGhpcy5ub2Rlcy5jcmVhdGUoZnJvbU5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUubmFtZSA9IGZyb21OYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUuY2hhcnQgPSBfdGhpcztcclxuICAgICAgICAgICAgICAgICAgICBub2RlLmRhdGFJdGVtID0gZGF0YUl0ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5mcm9tTm9kZSA9IG5vZGU7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5mcm9tTm9kZS5vdXRnb2luZ0RhdGFJdGVtcy5wdXNoKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdG9OYW1lID0gZGF0YUl0ZW0udG9OYW1lO1xyXG4gICAgICAgICAgICBpZiAodG9OYW1lKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IF90aGlzLm5vZGVzLmdldEtleSh0b05hbWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCFub2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IF90aGlzLm5vZGVzLmNyZWF0ZSh0b05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUubmFtZSA9IHRvTmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBub2RlLmNoYXJ0ID0gX3RoaXM7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5kYXRhSXRlbSA9IGRhdGFJdGVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0udG9Ob2RlID0gbm9kZTtcclxuICAgICAgICAgICAgICAgIGRhdGFJdGVtLnRvTm9kZS5pbmNvbWluZ0RhdGFJdGVtcy5wdXNoKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWRhdGFJdGVtLmZyb21Ob2RlKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3Ryb2tlTW9kaWZpZXIgPSBuZXcgTGluZWFyR3JhZGllbnRNb2RpZmllcigpO1xyXG4gICAgICAgICAgICAgICAgc3Ryb2tlTW9kaWZpZXIub3BhY2l0aWVzID0gWzAsIDFdO1xyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0ubGluay5zdHJva2VNb2RpZmllciA9IHN0cm9rZU1vZGlmaWVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghZGF0YUl0ZW0udG9Ob2RlKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsbE1vZGlmaWVyID0gbmV3IExpbmVhckdyYWRpZW50TW9kaWZpZXIoKTtcclxuICAgICAgICAgICAgICAgIGZpbGxNb2RpZmllci5vcGFjaXRpZXMgPSBbMSwgMF07XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5saW5rLnN0cm9rZU1vZGlmaWVyID0gZmlsbE1vZGlmaWVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGRhdGFJdGVtLnZhbHVlO1xyXG4gICAgICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIodmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICBzdW0gKz0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICBjb3VudCsrO1xyXG4gICAgICAgICAgICAgICAgaWYgKGxvdyA+IHZhbHVlIHx8ICEkdHlwZS5pc051bWJlcihsb3cpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG93ID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoaGlnaCA8IHZhbHVlIHx8ICEkdHlwZS5pc051bWJlcihoaWdoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZ2ggPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHZhciBrZXkgPSBcInZhbHVlXCI7XHJcbiAgICAgICAgdGhpcy5kYXRhSXRlbS5zZXRDYWxjdWxhdGVkVmFsdWUoa2V5LCBoaWdoLCBcImhpZ2hcIik7XHJcbiAgICAgICAgdGhpcy5kYXRhSXRlbS5zZXRDYWxjdWxhdGVkVmFsdWUoa2V5LCBsb3csIFwibG93XCIpO1xyXG4gICAgICAgIHRoaXMuZGF0YUl0ZW0uc2V0Q2FsY3VsYXRlZFZhbHVlKGtleSwgc3VtLCBcInN1bVwiKTtcclxuICAgICAgICB0aGlzLmRhdGFJdGVtLnNldENhbGN1bGF0ZWRWYWx1ZShrZXksIHN1bSAvIGNvdW50LCBcImF2ZXJhZ2VcIik7XHJcbiAgICAgICAgdGhpcy5kYXRhSXRlbS5zZXRDYWxjdWxhdGVkVmFsdWUoa2V5LCBjb3VudCwgXCJjb3VudFwiKTtcclxuICAgICAgICAkaXRlci5lYWNoKHRoaXMubm9kZXMuaXRlcmF0b3IoKSwgZnVuY3Rpb24gKHN0ck5vZGUpIHtcclxuICAgICAgICAgICAgdmFyIG5vZGUgPSBzdHJOb2RlWzFdO1xyXG4gICAgICAgICAgICBpZiAobm9kZS5maWxsIGluc3RhbmNlb2YgQ29sb3IpIHtcclxuICAgICAgICAgICAgICAgIG5vZGUuY29sb3IgPSBub2RlLmZpbGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG5vZGUuY29sb3IgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBub2RlLmNvbG9yID0gX3RoaXMuY29sb3JzLm5leHQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobm9kZS5kYXRhSXRlbS5jb2xvciAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIG5vZGUuY29sb3IgPSBub2RlLmRhdGFJdGVtLmNvbG9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghbm9kZS5kYXRhSXRlbS52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICBub2RlLmhpZGUoMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgX3RoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc29ydE5vZGVzKCk7XHJcbiAgICAgICAgdGhpcy5mZWVkTGVnZW5kKCk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBbaGFuZGxlRGF0YUl0ZW1Xb3JraW5nVmFsdWVDaGFuZ2UgZGVzY3JpcHRpb25dXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBGbG93RGlhZ3JhbS5wcm90b3R5cGUuaGFuZGxlRGF0YUl0ZW1Xb3JraW5nVmFsdWVDaGFuZ2UgPSBmdW5jdGlvbiAoZGF0YUl0ZW0sIG5hbWUpIHtcclxuICAgICAgICB0aGlzLmludmFsaWRhdGUoKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFNvcnRzIG5vZGVzIGJ5IGVpdGhlciB0aGVpciB2YWx1ZXMgb3IgbmFtZXMsIGJhc2VkIG9uIGBzb3J0QnlgIHNldHRpbmcuXHJcbiAgICAgKi9cclxuICAgIEZsb3dEaWFncmFtLnByb3RvdHlwZS5zb3J0Tm9kZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc29ydEJ5ID09IFwibmFtZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NvcnRlZCA9IHRoaXMubm9kZXMuc29ydGVkSXRlcmF0b3IoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5zb3J0QnkgPT0gXCJ2YWx1ZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NvcnRlZCA9ICRpdGVyLnNvcnQodGhpcy5ub2Rlcy5pdGVyYXRvcigpLCBmdW5jdGlvbiAoeCwgeSkgeyByZXR1cm4gJG9yZGVyLnJldmVyc2UoJG51bWJlci5vcmRlcih4WzFdLnRvdGFsLCB5WzFdLnRvdGFsKSk7IH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc29ydGVkID0gdGhpcy5ub2Rlcy5pdGVyYXRvcigpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgYSBjdW1tdWxhdGl2ZSB2YWx1ZSBvZiB0aGUgbm9kZS5cclxuICAgICAqXHJcbiAgICAgKiBBIG5vZGUncyB2YWx1ZSBpcyBkZXRlcm1pbmVkIGJ5IHN1bW1pbmcgdmFsdWVzIG9mIGFsbCBvZiB0aGUgaW5jb21pbmdcclxuICAgICAqIGxpbmtzIG9yIGFsbCBvZiB0aGUgb3V0Z29pbmcgbGlua3MsIHdoaWNoZXZlciByZXN1bHRzIGluIGJpZ2dlciBudW1iZXIuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG5vZGUgIE5vZGUgdmFsdWVcclxuICAgICAqL1xyXG4gICAgRmxvd0RpYWdyYW0ucHJvdG90eXBlLmdldE5vZGVWYWx1ZSA9IGZ1bmN0aW9uIChub2RlKSB7XHJcbiAgICAgICAgLy8gdG9kbzogdG90YWxJbmNvbW1pbmcgdG90YWxPdXRnb2luZywgdG90YWxcclxuICAgICAgICB2YXIgaW5jb21pbmdUb3RhbCA9IDA7XHJcbiAgICAgICAgdmFyIG91dGdvaW5nVG90YWwgPSAwO1xyXG4gICAgICAgICRpdGVyLmVhY2gobm9kZS5pbmNvbWluZ0RhdGFJdGVtcy5pdGVyYXRvcigpLCBmdW5jdGlvbiAoZGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgdmFyIHZhbHVlID0gZGF0YUl0ZW0uZ2V0V29ya2luZ1ZhbHVlKFwidmFsdWVcIik7XHJcbiAgICAgICAgICAgIGlmICgkdHlwZS5pc051bWJlcih2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIGluY29taW5nVG90YWwgKz0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAkaXRlci5lYWNoKG5vZGUub3V0Z29pbmdEYXRhSXRlbXMuaXRlcmF0b3IoKSwgZnVuY3Rpb24gKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGRhdGFJdGVtLmdldFdvcmtpbmdWYWx1ZShcInZhbHVlXCIpO1xyXG4gICAgICAgICAgICBpZiAoJHR5cGUuaXNOdW1iZXIodmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICBvdXRnb2luZ1RvdGFsICs9IHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbm9kZS50b3RhbCA9IGluY29taW5nVG90YWwgKyBvdXRnb2luZ1RvdGFsO1xyXG4gICAgICAgIG5vZGUudG90YWxJbmNvbWluZyA9IGluY29taW5nVG90YWw7XHJcbiAgICAgICAgbm9kZS50b3RhbE91dGdvaW5nID0gb3V0Z29pbmdUb3RhbDtcclxuICAgIH07XHJcbiAgICA7XHJcbiAgICAvKipcclxuICAgICAqIENoYW5nZXMgdGhlIHNvcnQgdHlwZSBvZiB0aGUgbm9kZXMuXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyB3aWxsIGFjdHVhbGx5IHJlc2h1ZmZsZSBub2RlcyB1c2luZyBuaWNlIGFuaW1hdGlvbi5cclxuICAgICAqL1xyXG4gICAgRmxvd0RpYWdyYW0ucHJvdG90eXBlLmNoYW5nZVNvcnRpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5zb3J0Tm9kZXMoKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFNldHMgZGVmYXVsdHMgdGhhdCBpbnN0YW50aWF0ZSBzb21lIG9iamVjdHMgdGhhdCByZWx5IG9uIHBhcmVudCwgc28gdGhleVxyXG4gICAgICogY2Fubm90IGJlIHNldCBpbiBjb25zdHJ1Y3Rvci5cclxuICAgICAqL1xyXG4gICAgRmxvd0RpYWdyYW0ucHJvdG90eXBlLmFwcGx5SW50ZXJuYWxEZWZhdWx0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmFwcGx5SW50ZXJuYWxEZWZhdWx0cy5jYWxsKHRoaXMpO1xyXG4gICAgICAgIC8vIEFkZCBhIGRlZmF1bHQgc2NyZWVuIHJlYWRlciB0aXRsZSBmb3IgYWNjZXNzaWJpbGl0eVxyXG4gICAgICAgIC8vIFRoaXMgd2lsbCBiZSBvdmVycmlkZGVuIGluIHNjcmVlbiByZWFkZXIgaWYgdGhlcmUgYXJlIGFueSBgdGl0bGVzYCBzZXRcclxuICAgICAgICBpZiAoISR0eXBlLmhhc1ZhbHVlKHRoaXMucmVhZGVyVGl0bGUpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVhZGVyVGl0bGUgPSB0aGlzLmxhbmd1YWdlLnRyYW5zbGF0ZShcIkZsb3cgZGlhZ3JhbVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuZCByZXR1cm5zIGEgbmV3IGRhdGEgaXRlbS5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJuIERhdGEgaXRlbVxyXG4gICAgICovXHJcbiAgICBGbG93RGlhZ3JhbS5wcm90b3R5cGUuY3JlYXRlRGF0YUl0ZW0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBGbG93RGlhZ3JhbURhdGFJdGVtKCk7XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsb3dEaWFncmFtLnByb3RvdHlwZSwgXCJub2RlUGFkZGluZ1wiLCB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQHJldHVybiBQYWRkaW5nIChweClcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcIm5vZGVQYWRkaW5nXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUGFkZGluZyBmb3Igbm9kZSBzcXVhcmUgaW4gcGl4ZWxzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogUGFkZGluZyB3aWxsIGFkZCBleHRyYSBzcGFjZSBhcm91bmQgbm9kZSdzIG5hbWUgbGFiZWwuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgUGFkZGluZyAocHgpXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwibm9kZVBhZGRpbmdcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsb3dEaWFncmFtLnByb3RvdHlwZSwgXCJzb3J0QnlcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm5zIE5vZGUgc29ydGluZ1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwic29ydEJ5XCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU29ydCBub2RlcyBieSBcIm5hbWVcIiBvciBcInZhbHVlXCIgb3IgZG8gbm90IHNvcnQgYXQgYWxsLiBJZiBub3Qgc29ydGVkLCBub2RlcyB3aWxsIGFwcGVhciBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGV5IGFyZSBpbiB0aGUgZGF0YS5cclxuICAgICAgICAgKiBAZGVmYXVsdCBcIm5vbmVcIlxyXG4gICAgICAgICAqIEBwYXJhbSB2YWx1ZSAgTm9kZSBzb3J0aW5nXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eVZhbHVlKFwic29ydEJ5XCIsIHZhbHVlKTtcclxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTb3J0aW5nKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRmxvd0RpYWdyYW0ucHJvdG90eXBlLCBcIm1pbk5vZGVTaXplXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJucyBtaW4gbm9kZSBzaXplXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5VmFsdWUoXCJtaW5Ob2RlU2l6ZVwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNvbWV0aW1lcyBub2RlcyBjYW4gZ2V0IHZlcnkgc21hbGwgaWYgdGhlaXIgdmFsdWUgaXMgbGl0dGxlLiBXaXRoIHRoaXMgc2V0dGluZyB5b3VcclxuICAgICAgICAgKiBjYW4gc2V0IG1pbiBzaXplIG9mIGEgbm9kZSAodGhpcyBpcyByZWxhdGl2ZSB2YWx1ZSBmcm9tIHRoZSB0b3RhbCBzaXplIG9mIGFsbCBub2RlcylcclxuICAgICAgICAgKiBAZGVmYXVsdCAwLjAyXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlICBOb2RlIHNvcnRpbmdcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJtaW5Ob2RlU2l6ZVwiLCB2YWx1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRmxvd0RpYWdyYW0ucHJvdG90eXBlLCBcIm5vZGVzXCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIGxpc3Qgb2YgY2hhcnQncyBub2Rlcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSB7RGljdGlvbmFyeVRlbXBsYXRlPHN0cmluZywgdGhpc1tcIl9ub2RlXCJdPn1cclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9ub2Rlcykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gdGhpcy5jcmVhdGVOb2RlKCk7XHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZS5ldmVudHMub24oXCJoaXRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmhhbmRsZUhpdChldmVudCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX25vZGVzID0gbmV3IERpY3Rpb25hcnlUZW1wbGF0ZSh0ZW1wbGF0ZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kaXNwb3NlcnMucHVzaChuZXcgRGljdGlvbmFyeURpc3Bvc2VyKHRoaXMuX25vZGVzKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVzO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIEZsb3dEaWFncmFtLnByb3RvdHlwZS5jcmVhdGVOb2RlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBub2RlID0gbmV3IEZsb3dEaWFncmFtTm9kZSgpO1xyXG4gICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKG5vZGUpO1xyXG4gICAgICAgIHJldHVybiBub2RlO1xyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGbG93RGlhZ3JhbS5wcm90b3R5cGUsIFwibGlua3NcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgbGlzdCBvZiBjaGFydCdzIGxpbmtzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHtMaXN0VGVtcGxhdGU8dGhpc1tcIl9saW5rXCJdPn1cclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9saW5rcykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbGlua3MgPSBuZXcgTGlzdFRlbXBsYXRlKHRoaXMuY3JlYXRlTGluaygpKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKG5ldyBMaXN0RGlzcG9zZXIodGhpcy5fbGlua3MpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGlua3M7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgRmxvd0RpYWdyYW0ucHJvdG90eXBlLmNyZWF0ZUxpbmsgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGxpbmsgPSBuZXcgRmxvd0RpYWdyYW1MaW5rKCk7XHJcbiAgICAgICAgdGhpcy5fZGlzcG9zZXJzLnB1c2gobGluayk7XHJcbiAgICAgICAgcmV0dXJuIGxpbms7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXR1cHMgdGhlIGxlZ2VuZCB0byB1c2UgdGhlIGNoYXJ0J3MgZGF0YS5cclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgRmxvd0RpYWdyYW0ucHJvdG90eXBlLmZlZWRMZWdlbmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGxlZ2VuZCA9IHRoaXMubGVnZW5kO1xyXG4gICAgICAgIGlmIChsZWdlbmQpIHtcclxuICAgICAgICAgICAgdmFyIGxlZ2VuZERhdGFfMSA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLm5vZGVzLmVhY2goZnVuY3Rpb24gKGtleSwgbm9kZSkge1xyXG4gICAgICAgICAgICAgICAgbGVnZW5kRGF0YV8xLnB1c2gobm9kZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsZWdlbmQuZGF0YSA9IGxlZ2VuZERhdGFfMTtcclxuICAgICAgICAgICAgbGVnZW5kLmRhdGFGaWVsZHMubmFtZSA9IFwibmFtZVwiO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgRmxvd0RpYWdyYW0ucHJvdG90eXBlLmRpc3Bvc2VEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuZGlzcG9zZURhdGEuY2FsbCh0aGlzKTtcclxuICAgICAgICB0aGlzLm5vZGVzLmNsZWFyKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEZsb3dEaWFncmFtO1xyXG59KENoYXJ0KSk7XHJcbmV4cG9ydCB7IEZsb3dEaWFncmFtIH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkZsb3dEaWFncmFtXCJdID0gRmxvd0RpYWdyYW07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZsb3dEaWFncmFtLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js ***!
  \*******************************************************************************/
/*! exports provided: GaugeChartDataItem, GaugeChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GaugeChartDataItem\", function() { return GaugeChartDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GaugeChart\", function() { return GaugeChart; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _RadarChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RadarChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _elements_ClockHand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/ClockHand */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Module for building Gauge charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar GaugeChartDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(GaugeChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"GaugeChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return GaugeChartDataItem;\r\n}(_RadarChart__WEBPACK_IMPORTED_MODULE_1__[\"RadarChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\r\nvar GaugeChart = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(GaugeChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"GaugeChart\";\r\n        _this.startAngle = 180;\r\n        _this.endAngle = 360;\r\n        _this.hands = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__[\"ListTemplate\"](new _elements_ClockHand__WEBPACK_IMPORTED_MODULE_3__[\"ClockHand\"]());\r\n        _this.hands.events.on(\"inserted\", _this.processHand, _this, false);\r\n        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__[\"ListDisposer\"](_this.hands));\r\n        _this._disposers.push(_this.hands.template);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    GaugeChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Gauge chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Decorates a [[ClockHand]] when it is added to the chart.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    GaugeChart.prototype.processHand = function (event) {\r\n        var hand = event.newValue;\r\n        if (!hand.axis) {\r\n            hand.axis = this.xAxes.getIndex(0);\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    GaugeChart.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"hands\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"hands\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    return GaugeChart;\r\n}(_RadarChart__WEBPACK_IMPORTED_MODULE_1__[\"RadarChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"GaugeChart\"] = GaugeChart;\r\n//# sourceMappingURL=GaugeChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL0dhdWdlQ2hhcnQuanM/Nzk3YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzhEO0FBQ0s7QUFDakI7QUFDSDtBQUNBO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLDhEQUFrQjtBQUNVO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsd0JBQXdCO0FBQ2pDLFNBQVMsMEJBQTBCO0FBQ25DLFNBQVMsZ0VBQWdFO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw2REFBWSxLQUFLLDZEQUFTO0FBQ3BEO0FBQ0Esa0NBQWtDLDZEQUFZO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyxzREFBVTtBQUNVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL0dhdWdlQ2hhcnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTW9kdWxlIGZvciBidWlsZGluZyBHYXVnZSBjaGFydHMuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IFJhZGFyQ2hhcnQsIFJhZGFyQ2hhcnREYXRhSXRlbSB9IGZyb20gXCIuL1JhZGFyQ2hhcnRcIjtcclxuaW1wb3J0IHsgTGlzdFRlbXBsYXRlLCBMaXN0RGlzcG9zZXIgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9MaXN0XCI7XHJcbmltcG9ydCB7IENsb2NrSGFuZCB9IGZyb20gXCIuLi9lbGVtZW50cy9DbG9ja0hhbmRcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIERBVEEgSVRFTVxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGEgW1tEYXRhSXRlbV1dIGZvciBbW0dhdWdlQ2hhcnRdXS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgRGF0YUl0ZW19XHJcbiAqL1xyXG52YXIgR2F1Z2VDaGFydERhdGFJdGVtID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKEdhdWdlQ2hhcnREYXRhSXRlbSwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gR2F1Z2VDaGFydERhdGFJdGVtKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJHYXVnZUNoYXJ0RGF0YUl0ZW1cIjtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEdhdWdlQ2hhcnREYXRhSXRlbTtcclxufShSYWRhckNoYXJ0RGF0YUl0ZW0pKTtcclxuZXhwb3J0IHsgR2F1Z2VDaGFydERhdGFJdGVtIH07XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ3JlYXRlcyBhIEdhdWdlIGNoYXJ0LlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJR2F1Z2VDaGFydEV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgRXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElHYXVnZUNoYXJ0QWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y0L2NoYXJ0LXR5cGVzL2dhdWdlLWNoYXJ0L30gZm9yIGRvY3VtZW50YXRpb25cclxuICogQGltcG9ydGFudFxyXG4gKi9cclxudmFyIEdhdWdlQ2hhcnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoR2F1Z2VDaGFydCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gR2F1Z2VDaGFydCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBcclxuICAgICAgICAvLyBJbml0XHJcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5jbGFzc05hbWUgPSBcIkdhdWdlQ2hhcnRcIjtcclxuICAgICAgICBfdGhpcy5zdGFydEFuZ2xlID0gMTgwO1xyXG4gICAgICAgIF90aGlzLmVuZEFuZ2xlID0gMzYwO1xyXG4gICAgICAgIF90aGlzLmhhbmRzID0gbmV3IExpc3RUZW1wbGF0ZShuZXcgQ2xvY2tIYW5kKCkpO1xyXG4gICAgICAgIF90aGlzLmhhbmRzLmV2ZW50cy5vbihcImluc2VydGVkXCIsIF90aGlzLnByb2Nlc3NIYW5kLCBfdGhpcywgZmFsc2UpO1xyXG4gICAgICAgIF90aGlzLl9kaXNwb3NlcnMucHVzaChuZXcgTGlzdERpc3Bvc2VyKF90aGlzLmhhbmRzKSk7XHJcbiAgICAgICAgX3RoaXMuX2Rpc3Bvc2Vycy5wdXNoKF90aGlzLmhhbmRzLnRlbXBsYXRlKTtcclxuICAgICAgICAvLyBBcHBseSB0aGVtZVxyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNldHMgZGVmYXVsdHMgdGhhdCBpbnN0YW50aWF0ZSBzb21lIG9iamVjdHMgdGhhdCByZWx5IG9uIHBhcmVudCwgc28gdGhleVxyXG4gICAgICogY2Fubm90IGJlIHNldCBpbiBjb25zdHJ1Y3Rvci5cclxuICAgICAqL1xyXG4gICAgR2F1Z2VDaGFydC5wcm90b3R5cGUuYXBwbHlJbnRlcm5hbERlZmF1bHRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuYXBwbHlJbnRlcm5hbERlZmF1bHRzLmNhbGwodGhpcyk7XHJcbiAgICAgICAgLy8gQWRkIGEgZGVmYXVsdCBzY3JlZW4gcmVhZGVyIHRpdGxlIGZvciBhY2Nlc3NpYmlsaXR5XHJcbiAgICAgICAgLy8gVGhpcyB3aWxsIGJlIG92ZXJyaWRkZW4gaW4gc2NyZWVuIHJlYWRlciBpZiB0aGVyZSBhcmUgYW55IGB0aXRsZXNgIHNldFxyXG4gICAgICAgIGlmICghJHR5cGUuaGFzVmFsdWUodGhpcy5yZWFkZXJUaXRsZSkpIHtcclxuICAgICAgICAgICAgdGhpcy5yZWFkZXJUaXRsZSA9IHRoaXMubGFuZ3VhZ2UudHJhbnNsYXRlKFwiR2F1Z2UgY2hhcnRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogRGVjb3JhdGVzIGEgW1tDbG9ja0hhbmRdXSB3aGVuIGl0IGlzIGFkZGVkIHRvIHRoZSBjaGFydC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgIEV2ZW50XHJcbiAgICAgKi9cclxuICAgIEdhdWdlQ2hhcnQucHJvdG90eXBlLnByb2Nlc3NIYW5kID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgdmFyIGhhbmQgPSBldmVudC5uZXdWYWx1ZTtcclxuICAgICAgICBpZiAoIWhhbmQuYXhpcykge1xyXG4gICAgICAgICAgICBoYW5kLmF4aXMgPSB0aGlzLnhBeGVzLmdldEluZGV4KDApO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBzb3J0IGVsZW1lbnQncyBKU09OIGNvbmZpZyBwcm9wZXJ0aWVzLCBzbyB0aGF0XHJcbiAgICAgKiBzb21lIHByb3BlcnRpZXMgdGhhdCBhYnNvbHV0ZWx5IG5lZWQgdG8gYmUgcHJvY2Vzc2VkIGxhc3QsIGNhbiBiZSBwdXQgYXRcclxuICAgICAqIHRoZSBlbmQuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICogQHBhcmFtIGEgIEVsZW1lbnQgMVxyXG4gICAgICogQHBhcmFtIGIgIEVsZW1lbnQgMlxyXG4gICAgICogQHJldHVybiBTb3J0aW5nIG51bWJlclxyXG4gICAgICovXHJcbiAgICBHYXVnZUNoYXJ0LnByb3RvdHlwZS5jb25maWdPcmRlciA9IGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICAgICAgaWYgKGEgPT0gYikge1xyXG4gICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gTXVzdCBjb21lIGxhc3RcclxuICAgICAgICBlbHNlIGlmIChhID09IFwiaGFuZHNcIikge1xyXG4gICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYiA9PSBcImhhbmRzXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuY29uZmlnT3JkZXIuY2FsbCh0aGlzLCBhLCBiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEdhdWdlQ2hhcnQ7XHJcbn0oUmFkYXJDaGFydCkpO1xyXG5leHBvcnQgeyBHYXVnZUNoYXJ0IH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIkdhdWdlQ2hhcnRcIl0gPSBHYXVnZUNoYXJ0O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1HYXVnZUNoYXJ0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js ***!
  \*********************************************************************************/
/*! exports provided: PercentChartDataItem, PercentChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PercentChartDataItem\", function() { return PercentChartDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PercentChart\", function() { return PercentChart; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _SerialChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SerialChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js\");\n/* harmony import */ var _series_PercentSeries__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../series/PercentSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/**\r\n * Percent chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PercentChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PercentChartDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PercentChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PercentChartDataItem;\r\n}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__[\"SerialChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This is a base class for \"percent-based\" chart types like Pie and Funnel.\r\n *\r\n * @see {@link IPercentChartEvents} for a list of available Events\r\n * @see {@link IPercentChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for Pie chart documentation\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for Sliced chart documentation\r\n */\r\nvar PercentChart = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PercentChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PercentChart\";\r\n        _this.align = \"none\";\r\n        _this.valign = \"none\";\r\n        // so that the chart is always drawn, even the legend wants all the space\r\n        _this.chartContainer.minHeight = 50;\r\n        _this.chartContainer.minWidth = 50;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates chart data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentChart.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        this.feedLegend();\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    PercentChart.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_4__[\"each\"](this.series.iterator(), function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_4__[\"each\"](series.dataItems.iterator(), function (dataItem) {\r\n                        if (!dataItem.hiddenInLegend) {\r\n                            legendData_1.push(dataItem);\r\n                            if (!dataItem.legendSettings) {\r\n                                dataItem.legendSettings = series.legendSettings;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"category\";\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new [[PercentSeries]].\r\n     *\r\n     * @return New series\r\n     */\r\n    PercentChart.prototype.createSeries = function () {\r\n        return new _series_PercentSeries__WEBPACK_IMPORTED_MODULE_2__[\"PercentSeries\"]();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    PercentChart.prototype.setLegend = function (legend) {\r\n        _super.prototype.setLegend.call(this, legend);\r\n        if (legend) {\r\n            legend.labels.template.text = \"{category}\";\r\n            legend.valueLabels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n            legend.itemContainers.template.events.on(\"over\", function (event) {\r\n                var percentSeriesDataItem = event.target.dataItem.dataContext;\r\n                if (percentSeriesDataItem.visible && !percentSeriesDataItem.isHiding) {\r\n                    var slice = percentSeriesDataItem.slice;\r\n                    slice.dispatchImmediately(\"over\");\r\n                    slice.isHover = true;\r\n                    slice.interactions.isRealHover = true;\r\n                }\r\n            });\r\n            legend.itemContainers.template.events.on(\"out\", function (event) {\r\n                var percentSeriesDataItem = event.target.dataItem.dataContext;\r\n                var slice = percentSeriesDataItem.slice;\r\n                slice.dispatchImmediately(\"out\");\r\n                slice.isHover = false;\r\n            });\r\n        }\r\n    };\r\n    return PercentChart;\r\n}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__[\"SerialChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @hidden\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PercentChart\"] = PercentChart;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PercentChartDataItem\"] = PercentChartDataItem;\r\n//# sourceMappingURL=PercentChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL1BlcmNlbnRDaGFydC5qcz81NWEwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lFO0FBQ1Q7QUFDVDtBQUNJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLGdFQUFtQjtBQUNXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMEJBQTBCO0FBQ25DLFNBQVMsNEJBQTRCO0FBQ3JDLFNBQVMsOERBQThEO0FBQ3ZFLFNBQVMsaUVBQWlFO0FBQzFFO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlEQUFVO0FBQ3RCO0FBQ0Esb0JBQW9CLHlEQUFVO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtRUFBYTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxTQUFTO0FBQ3JELGlEQUFpRCxrQ0FBa0M7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyx3REFBVztBQUNXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUFRO0FBQ1IsdURBQVE7QUFDUiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM0Ly5pbnRlcm5hbC9jaGFydHMvdHlwZXMvUGVyY2VudENoYXJ0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFBlcmNlbnQgY2hhcnQgbW9kdWxlLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBTZXJpYWxDaGFydCwgU2VyaWFsQ2hhcnREYXRhSXRlbSB9IGZyb20gXCIuL1NlcmlhbENoYXJ0XCI7XHJcbmltcG9ydCB7IFBlcmNlbnRTZXJpZXMgfSBmcm9tIFwiLi4vc2VyaWVzL1BlcmNlbnRTZXJpZXNcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkaXRlciBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9JdGVyYXRvclwiO1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBEQVRBIElURU1cclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogRGVmaW5lcyBhIFtbRGF0YUl0ZW1dXSBmb3IgW1tQZXJjZW50Q2hhcnRdXS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgRGF0YUl0ZW19XHJcbiAqL1xyXG52YXIgUGVyY2VudENoYXJ0RGF0YUl0ZW0gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoUGVyY2VudENoYXJ0RGF0YUl0ZW0sIF9zdXBlcik7XHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIFBlcmNlbnRDaGFydERhdGFJdGVtKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJQZXJjZW50Q2hhcnREYXRhSXRlbVwiO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUGVyY2VudENoYXJ0RGF0YUl0ZW07XHJcbn0oU2VyaWFsQ2hhcnREYXRhSXRlbSkpO1xyXG5leHBvcnQgeyBQZXJjZW50Q2hhcnREYXRhSXRlbSB9O1xyXG4vKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIFRoaXMgaXMgYSBiYXNlIGNsYXNzIGZvciBcInBlcmNlbnQtYmFzZWRcIiBjaGFydCB0eXBlcyBsaWtlIFBpZSBhbmQgRnVubmVsLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBJUGVyY2VudENoYXJ0RXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBFdmVudHNcclxuICogQHNlZSB7QGxpbmsgSVBlcmNlbnRDaGFydEFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NC9jaGFydC10eXBlcy9waWUtY2hhcnQvfSBmb3IgUGllIGNoYXJ0IGRvY3VtZW50YXRpb25cclxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjQvY2hhcnQtdHlwZXMvc2xpY2VkLWNoYXJ0L30gZm9yIFNsaWNlZCBjaGFydCBkb2N1bWVudGF0aW9uXHJcbiAqL1xyXG52YXIgUGVyY2VudENoYXJ0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKFBlcmNlbnRDaGFydCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gUGVyY2VudENoYXJ0KCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IFxyXG4gICAgICAgIC8vIEluaXRcclxuICAgICAgICBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiUGVyY2VudENoYXJ0XCI7XHJcbiAgICAgICAgX3RoaXMuYWxpZ24gPSBcIm5vbmVcIjtcclxuICAgICAgICBfdGhpcy52YWxpZ24gPSBcIm5vbmVcIjtcclxuICAgICAgICAvLyBzbyB0aGF0IHRoZSBjaGFydCBpcyBhbHdheXMgZHJhd24sIGV2ZW4gdGhlIGxlZ2VuZCB3YW50cyBhbGwgdGhlIHNwYWNlXHJcbiAgICAgICAgX3RoaXMuY2hhcnRDb250YWluZXIubWluSGVpZ2h0ID0gNTA7XHJcbiAgICAgICAgX3RoaXMuY2hhcnRDb250YWluZXIubWluV2lkdGggPSA1MDtcclxuICAgICAgICAvLyBBcHBseSB0aGVtZVxyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIChSZSl2YWxpZGF0ZXMgY2hhcnQgZGF0YS5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIFBlcmNlbnRDaGFydC5wcm90b3R5cGUudmFsaWRhdGVEYXRhID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudmFsaWRhdGVEYXRhLmNhbGwodGhpcyk7XHJcbiAgICAgICAgdGhpcy5mZWVkTGVnZW5kKCk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBTZXR1cHMgdGhlIGxlZ2VuZCB0byB1c2UgdGhlIGNoYXJ0J3MgZGF0YS5cclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgUGVyY2VudENoYXJ0LnByb3RvdHlwZS5mZWVkTGVnZW5kID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBsZWdlbmQgPSB0aGlzLmxlZ2VuZDtcclxuICAgICAgICBpZiAobGVnZW5kKSB7XHJcbiAgICAgICAgICAgIHZhciBsZWdlbmREYXRhXzEgPSBbXTtcclxuICAgICAgICAgICAgJGl0ZXIuZWFjaCh0aGlzLnNlcmllcy5pdGVyYXRvcigpLCBmdW5jdGlvbiAoc2VyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXNlcmllcy5oaWRkZW5JbkxlZ2VuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICRpdGVyLmVhY2goc2VyaWVzLmRhdGFJdGVtcy5pdGVyYXRvcigpLCBmdW5jdGlvbiAoZGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhSXRlbS5oaWRkZW5JbkxlZ2VuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVnZW5kRGF0YV8xLnB1c2goZGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhSXRlbS5sZWdlbmRTZXR0aW5ncykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtLmxlZ2VuZFNldHRpbmdzID0gc2VyaWVzLmxlZ2VuZFNldHRpbmdzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsZWdlbmQuZGF0YSA9IGxlZ2VuZERhdGFfMTtcclxuICAgICAgICAgICAgbGVnZW5kLmRhdGFGaWVsZHMubmFtZSA9IFwiY2F0ZWdvcnlcIjtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgbmV3IFtbUGVyY2VudFNlcmllc11dLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm4gTmV3IHNlcmllc1xyXG4gICAgICovXHJcbiAgICBQZXJjZW50Q2hhcnQucHJvdG90eXBlLmNyZWF0ZVNlcmllcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFBlcmNlbnRTZXJpZXMoKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgUGVyY2VudENoYXJ0LnByb3RvdHlwZS5zZXRMZWdlbmQgPSBmdW5jdGlvbiAobGVnZW5kKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5zZXRMZWdlbmQuY2FsbCh0aGlzLCBsZWdlbmQpO1xyXG4gICAgICAgIGlmIChsZWdlbmQpIHtcclxuICAgICAgICAgICAgbGVnZW5kLmxhYmVscy50ZW1wbGF0ZS50ZXh0ID0gXCJ7Y2F0ZWdvcnl9XCI7XHJcbiAgICAgICAgICAgIGxlZ2VuZC52YWx1ZUxhYmVscy50ZW1wbGF0ZS50ZXh0ID0gXCJ7dmFsdWUucGVyY2VudC5mb3JtYXROdW1iZXIoJyMuMCcpfSVcIjtcclxuICAgICAgICAgICAgbGVnZW5kLml0ZW1Db250YWluZXJzLnRlbXBsYXRlLmV2ZW50cy5vbihcIm92ZXJcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGVyY2VudFNlcmllc0RhdGFJdGVtID0gZXZlbnQudGFyZ2V0LmRhdGFJdGVtLmRhdGFDb250ZXh0O1xyXG4gICAgICAgICAgICAgICAgaWYgKHBlcmNlbnRTZXJpZXNEYXRhSXRlbS52aXNpYmxlICYmICFwZXJjZW50U2VyaWVzRGF0YUl0ZW0uaXNIaWRpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2xpY2UgPSBwZXJjZW50U2VyaWVzRGF0YUl0ZW0uc2xpY2U7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpY2UuZGlzcGF0Y2hJbW1lZGlhdGVseShcIm92ZXJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpY2UuaXNIb3ZlciA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgc2xpY2UuaW50ZXJhY3Rpb25zLmlzUmVhbEhvdmVyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGxlZ2VuZC5pdGVtQ29udGFpbmVycy50ZW1wbGF0ZS5ldmVudHMub24oXCJvdXRcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGVyY2VudFNlcmllc0RhdGFJdGVtID0gZXZlbnQudGFyZ2V0LmRhdGFJdGVtLmRhdGFDb250ZXh0O1xyXG4gICAgICAgICAgICAgICAgdmFyIHNsaWNlID0gcGVyY2VudFNlcmllc0RhdGFJdGVtLnNsaWNlO1xyXG4gICAgICAgICAgICAgICAgc2xpY2UuZGlzcGF0Y2hJbW1lZGlhdGVseShcIm91dFwiKTtcclxuICAgICAgICAgICAgICAgIHNsaWNlLmlzSG92ZXIgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiBQZXJjZW50Q2hhcnQ7XHJcbn0oU2VyaWFsQ2hhcnQpKTtcclxuZXhwb3J0IHsgUGVyY2VudENoYXJ0IH07XHJcbi8qKlxyXG4gKiBSZWdpc3RlciBjbGFzcyBpbiBzeXN0ZW0sIHNvIHRoYXQgaXQgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyBpdHMgbmFtZSBmcm9tXHJcbiAqIGFueXdoZXJlLlxyXG4gKlxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5yZWdpc3RyeS5yZWdpc3RlcmVkQ2xhc3Nlc1tcIlBlcmNlbnRDaGFydFwiXSA9IFBlcmNlbnRDaGFydDtcclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJQZXJjZW50Q2hhcnREYXRhSXRlbVwiXSA9IFBlcmNlbnRDaGFydERhdGFJdGVtO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QZXJjZW50Q2hhcnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js ***!
  \*****************************************************************************/
/*! exports provided: PieChartDataItem, PieChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieChartDataItem\", function() { return PieChartDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieChart\", function() { return PieChart; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _PercentChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _series_PieSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../series/PieSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Pie chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieChartDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PieChartDataItem;\r\n}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__[\"PercentChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Pie chart.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"PieSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChartEvents} for a list of available Events\r\n * @see {@link IPieChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nvar PieChart = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PieChart\";\r\n        // Set defaults\r\n        _this.innerRadius = 0;\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(80);\r\n        _this.align = \"none\";\r\n        _this.valign = \"none\";\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        var seriesContainer = _this.seriesContainer;\r\n        seriesContainer.isMeasured = true;\r\n        seriesContainer.valign = \"middle\";\r\n        seriesContainer.align = \"center\";\r\n        seriesContainer.layout = \"absolute\";\r\n        seriesContainer.width = undefined;\r\n        seriesContainer.height = undefined;\r\n        // so that the pie is always drawn, even the legend wants all the space\r\n        _this.chartContainer.minHeight = 50;\r\n        _this.chartContainer.minWidth = 50;\r\n        _this.chartContainer.events.on(\"maxsizechanged\", _this.updateRadius, _this, false); // need this for the chart to change radius if legend is removed/disabled\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PieChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pie chart\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the chart, causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieChart.prototype.validateLayout = function () {\r\n        _super.prototype.validateLayout.call(this);\r\n        this.updateRadius();\r\n    };\r\n    /**\r\n     * Decorates a new [[Series]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PieChart.prototype.handleSeriesAdded = function (event) {\r\n        _super.prototype.handleSeriesAdded.call(this, event);\r\n        this._chartPixelRadius = undefined;\r\n        this.updateSeriesAngles();\r\n    };\r\n    PieChart.prototype.updateSeriesAngles = function () {\r\n        var _this = this;\r\n        this.series.each(function (series) {\r\n            series._startAngleInternal = _this.startAngle;\r\n            series._endAngleInternal = _this.endAngle;\r\n            //series.defaultState.properties.startAngle = this.startAngle;\r\n            //series.defaultState.properties.endAngle = this.endAngle;\r\n        });\r\n    };\r\n    /**\r\n     * Recalculates pie's radius, based on a number of criteria.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieChart.prototype.updateRadius = function () {\r\n        var chartCont = this.chartContainer;\r\n        var rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getArcRect\"](this.startAngle, this.endAngle, 1);\r\n        var innerRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        var innerRadius = this.innerRadius;\r\n        if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"Percent\"]) {\r\n            innerRect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getArcRect\"](this.startAngle, this.endAngle, innerRadius.value);\r\n        }\r\n        // @todo handle this when innerRadius set in pixels (do it for radar also)\r\n        rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__[\"getCommonRectangle\"]([rect, innerRect]);\r\n        var maxRadius = Math.min(chartCont.innerWidth / rect.width, chartCont.innerHeight / rect.height);\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](maxRadius)) {\r\n            maxRadius = 0;\r\n        }\r\n        var chartRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeRadiusToValue\"](this.radius, maxRadius);\r\n        var chartPixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeRadiusToValue\"](this.innerRadius, maxRadius);\r\n        var seriesRadius = (chartRadius - chartPixelInnerRadius) / this.series.length;\r\n        if (chartRadius != this._chartPixelRadius || chartPixelInnerRadius != this._chartPixelInnerRadius) {\r\n            this._chartPixelRadius = chartRadius;\r\n            this._chartPixelInnerRadius = chartPixelInnerRadius;\r\n            //@todo: make it possible to set series radius in percent\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__[\"indexed\"](this.series.iterator()), function (a) {\r\n                var i = a[0];\r\n                var series = a[1];\r\n                var radius = chartPixelInnerRadius + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeRadiusToValue\"](series.radius, chartRadius - chartPixelInnerRadius);\r\n                var innerRadius = chartPixelInnerRadius + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__[\"relativeRadiusToValue\"](series.innerRadius, chartRadius - chartPixelInnerRadius);\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](radius)) {\r\n                    radius = chartPixelInnerRadius + seriesRadius * (i + 1);\r\n                }\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__[\"isNumber\"](innerRadius)) {\r\n                    innerRadius = chartPixelInnerRadius + seriesRadius * i;\r\n                }\r\n                series.pixelRadius = radius;\r\n                series.pixelInnerRadius = innerRadius;\r\n            });\r\n            this.seriesContainer.definedBBox = { x: chartRadius * rect.x, y: chartRadius * rect.y, width: chartRadius * rect.width, height: chartRadius * rect.height };\r\n            this.seriesContainer.invalidateLayout();\r\n            this.bulletsContainer.x = this.seriesContainer.x;\r\n            this.bulletsContainer.y = this.seriesContainer.y;\r\n        }\r\n    };\r\n    Object.defineProperty(PieChart.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius (px or relative)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Sets radius of the pie chart.\r\n         *\r\n         * Setting to a number will mean a fixed pixel radius.\r\n         *\r\n         * Setting to an instance of [[Percent]] will mean a relative radius to\r\n         * available space.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.radius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JavaScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.radius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // Set pie chart to be at 50% of the available space\r\n         *   \"radius\": \"50%\"\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 80%\r\n         * @param value  Radius (px or relative)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n                this.invalidateLayout();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Relative inner radius (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Sets relative inner radius (to create a donut chart).\r\n         *\r\n         * Setting to a number will mean a fixed pixel radius.\r\n         *\r\n         * Setting to an instance of [[Percent]] will mean a relative radius to\r\n         * available space.\r\n         *\r\n         * NOTE: it's not related to `radius`.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.innerRadius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JavaScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.innerRadius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // Set pie chart to be at 50% of the available space\r\n         *   \"innerRadius\": \"50%\"\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 0\r\n         * @param value  Relative inner radius (0-1)\r\n         * @todo Setting things like `innerRadius` modifies `slice.radius` and it then looks like it is not the same value as in default state\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new [[PieSeries]].\r\n     *\r\n     * @return New series\r\n     */\r\n    PieChart.prototype.createSeries = function () {\r\n        return new _series_PieSeries__WEBPACK_IMPORTED_MODULE_3__[\"PieSeries\"]();\r\n    };\r\n    Object.defineProperty(PieChart.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Pie circle. (degrees)\r\n         *\r\n         * Normally, a pie chart begins (the left side of the first slice is drawn)\r\n         * at the top center. (at -90 degrees)\r\n         *\r\n         * You can use `startAngle` to change this setting.\r\n         *\r\n         * E.g. setting this to 0 will make the first slice be drawn to the right.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set to those lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * NOTE: This setting is not supported in a 3D pie chart.\r\n         *\r\n         * @default -90\r\n         * @param value  Start angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startAngle\", value)) {\r\n                this.updateRadius();\r\n                this.updateSeriesAngles();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the Pie circle. (degrees)\r\n         *\r\n         * Normally, a pie chart ends (the right side of the last slice is drawn)\r\n         * at the top center. (at 270 degrees)\r\n         *\r\n         * You can use `endAngle` to change this setting.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set to those lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * NOTE: This setting is not supported in a 3D pie chart.\r\n         *\r\n         * @default 270\r\n         * @param value  End angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endAngle\", value)) {\r\n                this.updateRadius();\r\n                this.updateSeriesAngles();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieChart;\r\n}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__[\"PercentChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"PieChart\"] = PieChart;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_4__[\"registry\"].registeredClasses[\"PieChartDataItem\"] = PieChartDataItem;\r\n//# sourceMappingURL=PieChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js ***!
  \*******************************************************************************/
/*! exports provided: PieChart3DDataItem, PieChart3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieChart3DDataItem\", function() { return PieChart3DDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieChart3D\", function() { return PieChart3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _PieChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PieChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js\");\n/* harmony import */ var _series_PieSeries3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../series/PieSeries3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/**\r\n * 3D Pie chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieChart3DDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieChart3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieChart3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PieChart3DDataItem;\r\n}(_PieChart__WEBPACK_IMPORTED_MODULE_1__[\"PieChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nvar PieChart3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(PieChart3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3D() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PieChart3D\";\r\n        _this.depth = 20;\r\n        _this.angle = 10;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieChart3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth of the 3D pie in pixels.\r\n         *\r\n         * This will determine \"height\" of the pie.\r\n         *\r\n         * @default 20\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"depth\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n         *\r\n         * @default 10\r\n         * @param value  Angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"fitToRange\"](value, 0, 90);\r\n            if (this.setPropertyValue(\"angle\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a new Series.\r\n     *\r\n     * @return New series\r\n     */\r\n    PieChart3D.prototype.createSeries = function () {\r\n        return new _series_PieSeries3D__WEBPACK_IMPORTED_MODULE_2__[\"PieSeries3D\"]();\r\n    };\r\n    return PieChart3D;\r\n}(_PieChart__WEBPACK_IMPORTED_MODULE_1__[\"PieChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"PieChart3D\"] = PieChart3D;\r\n//# sourceMappingURL=PieChart3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js ***!
  \*******************************************************************************/
/*! exports provided: RadarChartDataItem, RadarChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarChartDataItem\", function() { return RadarChartDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarChart\", function() { return RadarChart; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _XYChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _series_RadarSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../series/RadarSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Circle */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/AxisRendererCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js\");\n/* harmony import */ var _axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/AxisRendererRadial */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/**\r\n * Radar chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[RadarChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar RadarChartDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return RadarChartDataItem;\r\n}(_XYChart__WEBPACK_IMPORTED_MODULE_1__[\"XYChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Radar chart.\r\n *\r\n * @see {@link IRadarChartEvents} for a list of available Events\r\n * @see {@link IRadarChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/radar-chart/} for documentation\r\n * @important\r\n */\r\nvar RadarChart = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(RadarChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Defines X axis renderer type.\r\n         */\r\n        _this._axisRendererX = _axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_7__[\"AxisRendererCircular\"];\r\n        /**\r\n         * Defines Y axis renderer type.\r\n         */\r\n        _this._axisRendererY = _axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_8__[\"AxisRendererRadial\"];\r\n        /**\r\n         * used by cursor. We adjust innerradius if start and end angle are close to each other\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.innerRadiusModifyer = 1;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.mr = 1;\r\n        _this.className = \"RadarChart\";\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(80);\r\n        _this.innerRadius = 0;\r\n        var radarContainer = _this.plotContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__[\"Container\"]);\r\n        radarContainer.shouldClone = false;\r\n        radarContainer.layout = \"absolute\";\r\n        radarContainer.align = \"center\";\r\n        radarContainer.valign = \"middle\";\r\n        _this.seriesContainer.parent = radarContainer;\r\n        _this.radarContainer = radarContainer;\r\n        _this.bulletsContainer.parent = radarContainer;\r\n        _this.axisBulletsContainer = radarContainer;\r\n        _this._cursorContainer = radarContainer;\r\n        _this.chartContainer.events.on(\"maxsizechanged\", _this.invalidate, _this, false); // need this for the chart to change radius if legend is removed/disabled\r\n        _this._bulletMask = radarContainer.createChild(_core_elements_Circle__WEBPACK_IMPORTED_MODULE_5__[\"Circle\"]);\r\n        _this._bulletMask.shouldClone = false;\r\n        _this._bulletMask.element = _this.paper.add(\"path\");\r\n        _this._bulletMask.opacity = 0;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    RadarChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Radar chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Decorates Axis with required properties for this chart.\r\n     *\r\n     * @param axis  Axis\r\n     */\r\n    RadarChart.prototype.processAxis = function (axis) {\r\n        _super.prototype.processAxis.call(this, axis);\r\n        var renderer = axis.renderer;\r\n        renderer.gridContainer.parent = renderer;\r\n        renderer.breakContainer.parent = renderer;\r\n        axis.parent = this.radarContainer;\r\n        renderer.toBack();\r\n    };\r\n    /**\r\n     * Updates all X axes after range change event.\r\n     */\r\n    RadarChart.prototype.handleXAxisRangeChange = function () {\r\n        _super.prototype.handleXAxisRangeChange.call(this);\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.yAxes.iterator(), function (axis) {\r\n            axis.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Updates all Y axes after range change event.\r\n     */\r\n    RadarChart.prototype.handleYAxisRangeChange = function () {\r\n        _super.prototype.handleYAxisRangeChange.call(this);\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.xAxes.iterator(), function (axis) {\r\n            axis.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    RadarChart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up cursor\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__[\"hasValue\"](config.cursor) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__[\"hasValue\"](config.cursor.type)) {\r\n                config.cursor.type = \"RadarCursor\";\r\n            }\r\n            // Set up series\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__[\"hasValue\"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__[\"isArray\"](config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    config.series[i].type = config.series[i].type || \"RadarSeries\";\r\n                }\r\n            }\r\n            // Set up axes\r\n            /*if ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n                for (let i = 0, len = config.xAxes.length; i < len; i++) {\r\n                    config.xAxes[i].type = config.xAxes[i].type || \"AxisRendererCircular\";\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n                for (let i = 0, len = config.yAxes.length; i < len; i++) {\r\n                    config.yAxes[i].type = config.yAxes[i].type || \"AxisRendererRadial\";\r\n                }\r\n            }*/\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Does calculations before drawing the chart.\r\n     */\r\n    RadarChart.prototype.beforeDraw = function () {\r\n        _super.prototype.beforeDraw.call(this);\r\n        var plotContainer = this.plotContainer;\r\n        var rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getArcRect\"](this.startAngle, this.endAngle, 1);\r\n        var innerRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        var wr = plotContainer.innerWidth / rect.width;\r\n        var hr = plotContainer.innerHeight / rect.height;\r\n        var innerRadius = this.innerRadius;\r\n        if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"Percent\"]) {\r\n            var value = innerRadius.value;\r\n            var mr = Math.min(wr, hr);\r\n            this.mr = mr;\r\n            value = Math.max(mr * value, mr - Math.min(plotContainer.innerHeight, plotContainer.innerWidth)) / mr;\r\n            innerRect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getArcRect\"](this.startAngle, this.endAngle, value);\r\n            this.innerRadiusModifyer = value / innerRadius.value;\r\n            innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(value * 100);\r\n        }\r\n        // @todo handle this when innerRadius set in pixels (do it for pie also)\r\n        rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__[\"getCommonRectangle\"]([rect, innerRect]);\r\n        var maxRadius = Math.min(plotContainer.innerWidth / rect.width, plotContainer.innerHeight / rect.height);\r\n        var diameter = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](this.radius, maxRadius) * 2 || 0;\r\n        var radius = diameter / 2;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        this._pixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__[\"relativeRadiusToValue\"](innerRadius, radius);\r\n        this._bulletMask.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__[\"arc\"](startAngle, endAngle - startAngle, radius, this._pixelInnerRadius);\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.xAxes.iterator(), function (axis) {\r\n            if (axis.renderer.useChartAngles) {\r\n                axis.renderer.startAngle = startAngle;\r\n                axis.renderer.endAngle = endAngle;\r\n            }\r\n            axis.width = diameter;\r\n            axis.height = diameter;\r\n            //axis.renderer.width = diameter;\r\n            //axis.renderer.height = diameter;\r\n            axis.renderer.pixelRadiusReal = radius;\r\n            //axis.renderer.innerRadius = innerRadius;\r\n        });\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this.yAxes.iterator(), function (axis) {\r\n            axis.renderer.startAngle = startAngle;\r\n            axis.renderer.endAngle = endAngle;\r\n            axis.width = diameter;\r\n            axis.height = diameter;\r\n            //axis.renderer.width = diameter;\r\n            //axis.renderer.height = diameter;\r\n            axis.renderer.pixelRadiusReal = radius;\r\n            //axis.renderer.innerRadius = innerRadius;\r\n        });\r\n        var cursor = this.cursor;\r\n        if (cursor) {\r\n            cursor.width = diameter;\r\n            cursor.height = diameter;\r\n            cursor.startAngle = startAngle;\r\n            cursor.endAngle = endAngle;\r\n        }\r\n        this.radarContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n        this.radarContainer.validatePosition();\r\n    };\r\n    /**\r\n     * Creates and returns a new Series, suitable for RadarChart.\r\n     *\r\n     * @return New Series\r\n     */\r\n    RadarChart.prototype.createSeries = function () {\r\n        return new _series_RadarSeries__WEBPACK_IMPORTED_MODULE_3__[\"RadarSeries\"]();\r\n    };\r\n    Object.defineProperty(RadarChart.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n         * top center. (at -90 degrees)\r\n         *\r\n         * You can use `startAngle` to change this setting.\r\n         *\r\n         * E.g. setting this to 0 will make the radial axis start horizontally to\r\n         * the right, as opposed to vertical.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  Start angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n         * where it has started, forming a full 360 circle. (at 270 degrees)\r\n         *\r\n         * You can use `endAngle` to end the circle somewhere else.\r\n         *\r\n         * E.g. setting this to 180 will make the radar face end at horizontal line\r\n         * to the left off the center.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  End angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the Radar face.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Inner radius in pixels\r\n         */\r\n        get: function () {\r\n            return this._pixelInnerRadius;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the radar face.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * If set in Percent, it will be relative to `radius`. (outer radius)\r\n         *\r\n         * @param value Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Triggers (re)rendering of the horizontal (X) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis Axis\r\n     */\r\n    RadarChart.prototype.updateXAxis = function (renderer) {\r\n        //do not call super!\r\n        if (renderer) {\r\n            renderer.processRenderer();\r\n        }\r\n    };\r\n    /**\r\n     * Triggers (re)rendering of the vertical (Y) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis Axis\r\n     */\r\n    RadarChart.prototype.updateYAxis = function (renderer) {\r\n        // do not call super!\r\n        if (renderer) {\r\n            renderer.processRenderer();\r\n        }\r\n    };\r\n    return RadarChart;\r\n}(_XYChart__WEBPACK_IMPORTED_MODULE_1__[\"XYChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_6__[\"registry\"].registeredClasses[\"RadarChart\"] = RadarChart;\r\n//# sourceMappingURL=RadarChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js ***!
  \**********************************************************************************/
/*! exports provided: SankeyDiagramDataItem, SankeyDiagram */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SankeyDiagramDataItem\", function() { return SankeyDiagramDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SankeyDiagram\", function() { return SankeyDiagram; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _FlowDiagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagram */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _elements_SankeyNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../elements/SankeyNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js\");\n/* harmony import */ var _elements_SankeyLink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/SankeyLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js\");\n/* harmony import */ var _core_utils_Animation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Animation */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Object */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js\");\n/**\r\n * Sankey diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo rearange notes after dragged\r\n/**\r\n * Defines a [[DataItem]] for [[SankeyDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SankeyDiagramDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(SankeyDiagramDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyDiagramDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SankeyDiagramDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SankeyDiagramDataItem;\r\n}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagramDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Sankey Diagram chart.\r\n *\r\n * @see {@link ISankeyDiagramEvents} for a list of available Events\r\n * @see {@link ISankeyDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sankey-diagram/} for documentation\r\n * @important\r\n */\r\nvar SankeyDiagram = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(SankeyDiagram, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyDiagram() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SankeyDiagram\";\r\n        _this.orientation = \"horizontal\";\r\n        _this.nodeAlign = \"middle\";\r\n        _this.nodesContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100);\r\n        _this.nodesContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100);\r\n        _this.linksContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100);\r\n        _this.linksContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__[\"percent\"])(100);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates chart's data, effectively causing the chart to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyDiagram.prototype.validateData = function () {\r\n        var _this = this;\r\n        _super.prototype.validateData.call(this);\r\n        this._levelCount = 0;\r\n        this.nodes.each(function (key, node) {\r\n            node.level = undefined;\r\n        });\r\n        this.nodes.each(function (key, node) {\r\n            node.level = _this.getNodeLevel(node, 0);\r\n            _this._levelCount = _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__[\"max\"](_this._levelCount, node.level);\r\n        });\r\n    };\r\n    /**\r\n     * Returns node's highest level.\r\n     *\r\n     * @param node   Node\r\n     * @param level  Current level\r\n     * @return New level\r\n     */\r\n    SankeyDiagram.prototype.getNodeLevel = function (node, level) {\r\n        var _this = this;\r\n        //@todo solve circular so\r\n        var levels = [level];\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](node.incomingDataItems.iterator(), function (link) {\r\n            if (link.fromNode) {\r\n                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](link.fromNode.level)) {\r\n                    levels.push(link.fromNode.level + 1);\r\n                }\r\n                else {\r\n                    levels.push(_this.getNodeLevel(link.fromNode, level + 1));\r\n                }\r\n            }\r\n        });\r\n        return Math.max.apply(Math, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__spread\"])(levels));\r\n    };\r\n    /**\r\n     * Calculates relation between pixel height and total value.\r\n     *\r\n     * In Sankey the actual thickness of links and height of nodes will depend\r\n     * on their values.\r\n     */\r\n    SankeyDiagram.prototype.calculateValueHeight = function () {\r\n        var _this = this;\r\n        // calculate sums of each level\r\n        this._levelSum = {};\r\n        this._levelNodesCount = {};\r\n        this.maxSum = 0;\r\n        var total = this.dataItem.values.value.sum;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            _this.getNodeValue(node);\r\n        });\r\n        this.nodes.each(function (key, node) {\r\n            var level = node.level;\r\n            var value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n            if (value / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](_this._levelSum[level])) {\r\n                _this._levelSum[level] += value;\r\n            }\r\n            else {\r\n                _this._levelSum[level] = value;\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](_this._levelNodesCount[level])) {\r\n                _this._levelNodesCount[level]++;\r\n            }\r\n            else {\r\n                _this._levelNodesCount[level] = 1;\r\n            }\r\n        });\r\n        var availableHeight;\r\n        if (this.orientation == \"horizontal\") {\r\n            availableHeight = this.chartContainer.maxHeight - 1;\r\n        }\r\n        else {\r\n            availableHeight = this.chartContainer.maxWidth - 1;\r\n        }\r\n        var maxSumLevel;\r\n        var minHeight;\r\n        _core_utils_Object__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this._levelSum, function (key, value) {\r\n            var realValue = value;\r\n            var levelNodeCount = _this._levelNodesCount[key];\r\n            var valueHeight = (availableHeight - (levelNodeCount - 1) * _this.nodePadding) / realValue;\r\n            if (valueHeight == Infinity) {\r\n                valueHeight = 0;\r\n            }\r\n            if (minHeight > valueHeight || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](minHeight)) {\r\n                minHeight = valueHeight;\r\n                _this.maxSum = realValue;\r\n                maxSumLevel = _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"toNumber\"](key);\r\n            }\r\n        });\r\n        this._maxSumLevel = maxSumLevel;\r\n        var maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n        var valueHeight = (availableHeight - (maxSumLevelNodeCount - 1) * this.nodePadding) / this.maxSum;\r\n        if (valueHeight == Infinity) {\r\n            valueHeight = 0;\r\n        }\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](this.valueHeight)) {\r\n            this.valueHeight = valueHeight;\r\n        }\r\n        else {\r\n            var finalHeight = void 0;\r\n            try {\r\n                finalHeight = this._heightAnimation.animationOptions[0].to;\r\n            }\r\n            catch (err) {\r\n            }\r\n            // without animations it will be non-smooth as maxValue jumps from one column to another\r\n            if (finalHeight != valueHeight) {\r\n                var duration = this.interpolationDuration;\r\n                try {\r\n                    duration = this.nodes.template.states.getKey(\"active\").transitionDuration;\r\n                }\r\n                catch (err) {\r\n                }\r\n                this._heightAnimation = new _core_utils_Animation__WEBPACK_IMPORTED_MODULE_6__[\"Animation\"](this, { property: \"valueHeight\", from: this.valueHeight, to: valueHeight }, duration, this.interpolationEasing).start();\r\n                this._disposers.push(this._heightAnimation);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Redraws the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyDiagram.prototype.validate = function () {\r\n        var _this = this;\r\n        _super.prototype.validate.call(this);\r\n        this.calculateValueHeight();\r\n        var container = this.nodesContainer;\r\n        var nextCoordinate = {};\r\n        var maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n        var total = this.dataItem.values.value.sum;\r\n        var availableHeight;\r\n        if (this.orientation == \"horizontal\") {\r\n            availableHeight = this.chartContainer.maxHeight - 1;\r\n        }\r\n        else {\r\n            availableHeight = this.chartContainer.maxWidth - 1;\r\n        }\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            var level = node.level;\r\n            var levelCoordinate = 0;\r\n            var nodeCount = _this._levelNodesCount[level];\r\n            switch (_this.nodeAlign) {\r\n                case \"bottom\":\r\n                    levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight - (nodeCount - maxSumLevelNodeCount) * _this.nodePadding;\r\n                    break;\r\n                case \"middle\":\r\n                    levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight / 2 - (nodeCount - maxSumLevelNodeCount) * _this.nodePadding / 2;\r\n                    break;\r\n            }\r\n            if (_this.maxSum == 0) {\r\n                switch (_this.nodeAlign) {\r\n                    case \"bottom\":\r\n                        levelCoordinate = availableHeight - nodeCount * (_this.minNodeSize * availableHeight + _this.nodePadding);\r\n                        break;\r\n                    case \"middle\":\r\n                        levelCoordinate = availableHeight / 2 - nodeCount / 2 * (_this.minNodeSize * availableHeight + _this.nodePadding);\r\n                        break;\r\n                }\r\n            }\r\n            node.parent = container;\r\n            var delta;\r\n            var x;\r\n            var y;\r\n            var value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n            if (value / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            if (_this.orientation == \"horizontal\") {\r\n                delta = (_this.innerWidth - node.pixelWidth) / _this._levelCount;\r\n                x = delta * node.level;\r\n                y = nextCoordinate[level] || levelCoordinate;\r\n                var h = value * _this.valueHeight;\r\n                if (total == 0 && h == 0) {\r\n                    h = _this.minNodeSize * availableHeight;\r\n                }\r\n                node.height = h;\r\n                node.minX = x;\r\n                node.maxX = x;\r\n                nextCoordinate[level] = y + h + _this.nodePadding;\r\n            }\r\n            else {\r\n                delta = (_this.innerHeight - node.pixelHeight) / _this._levelCount;\r\n                x = nextCoordinate[level] || levelCoordinate;\r\n                y = delta * node.level;\r\n                var w = value * _this.valueHeight;\r\n                if (total == 0 && w == 0) {\r\n                    w = _this.minNodeSize * availableHeight;\r\n                }\r\n                node.width = w;\r\n                node.minY = y;\r\n                node.maxY = y;\r\n                nextCoordinate[level] = x + w + _this.nodePadding;\r\n            }\r\n            node.x = x;\r\n            node.y = y;\r\n        });\r\n    };\r\n    /**\r\n     * Performs actual operations to reveal this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param duration Fade in duration (ms)\r\n     * @return Fade in duration (ms)\r\n     */\r\n    SankeyDiagram.prototype.showReal = function (duration) {\r\n        var _this = this;\r\n        if (this.preventShow) {\r\n            return;\r\n        }\r\n        if (this.interpolationDuration > 0) {\r\n            var container_1 = this.nodesContainer;\r\n            var i_1 = 0;\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this.links.iterator(), function (link) {\r\n                link.hide(0);\r\n            });\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this._sorted, function (strNode) {\r\n                var node = strNode[1];\r\n                var property;\r\n                if (_this.orientation == \"horizontal\") {\r\n                    node.dx = -(container_1.pixelWidth - node.pixelWidth) / Math.max(_this._levelCount, 1);\r\n                    property = \"dx\";\r\n                }\r\n                else {\r\n                    node.dy = -(container_1.pixelHeight - node.pixelHeight) / Math.max(_this._levelCount, 1);\r\n                    property = \"dy\";\r\n                }\r\n                var delay = 0;\r\n                var duration = _this.interpolationDuration;\r\n                if (_this.sequencedInterpolation) {\r\n                    delay = _this.sequencedInterpolationDelay * i_1 + duration * i_1 / _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"length\"](_this.nodes.iterator());\r\n                }\r\n                node.opacity = 0;\r\n                node.invalidateLinks();\r\n                node.animate([{ property: \"opacity\", from: 0, to: 1 }, { property: property, to: 0 }], _this.interpolationDuration, _this.interpolationEasing).delay(delay);\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](node.outgoingDataItems.iterator(), function (dataItem) {\r\n                    var animation = dataItem.link.show(_this.interpolationDuration);\r\n                    if (animation && !animation.isFinished()) {\r\n                        animation.delay(delay);\r\n                    }\r\n                });\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](node.incomingDataItems.iterator(), function (dataItem) {\r\n                    if (!dataItem.fromNode) {\r\n                        var animation = dataItem.link.show(_this.interpolationDuration);\r\n                        if (animation && !animation.isFinished()) {\r\n                            animation.delay(delay);\r\n                        }\r\n                    }\r\n                });\r\n                i_1++;\r\n            });\r\n        }\r\n        return _super.prototype.showReal.call(this);\r\n    };\r\n    /**\r\n     * Changes the sort type of the nodes.\r\n     *\r\n     * This will actually reshuffle nodes using nice animation.\r\n     */\r\n    SankeyDiagram.prototype.changeSorting = function () {\r\n        var _this = this;\r\n        this.sortNodes();\r\n        var nextCoordinate = {};\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__[\"each\"](this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            var level = node.level;\r\n            var levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight / 2;\r\n            var property;\r\n            var nodeHeight;\r\n            if (_this.orientation == \"horizontal\") {\r\n                property = \"y\";\r\n                nodeHeight = node.pixelHeight;\r\n            }\r\n            else {\r\n                property = \"x\";\r\n                nodeHeight = node.pixelWidth;\r\n            }\r\n            node.animate({ property: property, to: nextCoordinate[level] || levelCoordinate }, _this.interpolationDuration, _this.interpolationEasing);\r\n            nextCoordinate[level] = (nextCoordinate[level] || levelCoordinate) + nodeHeight + _this.nodePadding;\r\n            node.invalidateLinks();\r\n        });\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    SankeyDiagram.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Sankey diagram\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new data item.\r\n     *\r\n     * @return Data item\r\n     */\r\n    SankeyDiagram.prototype.createDataItem = function () {\r\n        return new SankeyDiagramDataItem();\r\n    };\r\n    Object.defineProperty(SankeyDiagram.prototype, \"nodeAlign\", {\r\n        /**\r\n         * @returns Returns nodeAlign value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nodeAlign\");\r\n        },\r\n        /**\r\n         * How to align nodes. In case layout is vertical, top means left and bottom means right\r\n         *\r\n         * @param value  Node sorting\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"nodeAlign\", value);\r\n            this.changeSorting();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyDiagram.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the chart: \"horizontal\" or \"vertical\";\r\n         *\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n            var nameLabel = this.nodes.template.nameLabel;\r\n            if (value == \"vertical\") {\r\n                this.nodes.template.width = undefined;\r\n                nameLabel.label.horizontalCenter = \"middle\";\r\n                nameLabel.locationX = 0.5;\r\n            }\r\n            else {\r\n                this.nodes.template.height = undefined;\r\n                nameLabel.label.horizontalCenter = \"left\";\r\n                nameLabel.locationX = 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    SankeyDiagram.prototype.createNode = function () {\r\n        var node = new _elements_SankeyNode__WEBPACK_IMPORTED_MODULE_4__[\"SankeyNode\"]();\r\n        this._disposers.push(node);\r\n        return node;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    SankeyDiagram.prototype.createLink = function () {\r\n        var link = new _elements_SankeyLink__WEBPACK_IMPORTED_MODULE_5__[\"SankeyLink\"]();\r\n        this._disposers.push(link);\r\n        return link;\r\n    };\r\n    Object.defineProperty(SankeyDiagram.prototype, \"valueHeight\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._valueHeight;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (value != this._valueHeight) {\r\n                this._valueHeight = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    SankeyDiagram.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this._sorted = this.nodes.iterator();\r\n    };\r\n    return SankeyDiagram;\r\n}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__[\"FlowDiagram\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_3__[\"registry\"].registeredClasses[\"SankeyDiagram\"] = SankeyDiagram;\r\n//# sourceMappingURL=SankeyDiagram.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js ***!
  \********************************************************************************/
/*! exports provided: SlicedChartDataItem, SlicedChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlicedChartDataItem\", function() { return SlicedChartDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlicedChart\", function() { return SlicedChart; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _PercentChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Sliced chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SlicedChartDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(SlicedChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SlicedChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SlicedChartDataItem;\r\n}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__[\"PercentChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar SlicedChart = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(SlicedChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SlicedChart\";\r\n        _this.seriesContainer.layout = \"horizontal\";\r\n        _this.padding(15, 15, 15, 15);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    SlicedChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Sliced chart\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the chart, causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SlicedChart.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    return SlicedChart;\r\n}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__[\"PercentChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"SlicedChart\"] = SlicedChart;\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;\r\n//# sourceMappingURL=SlicedChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL1NsaWNlZENoYXJ0LmpzPzFjOWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29FO0FBQ3JCO0FBQ0E7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJLHVEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsa0VBQW9CO0FBQ1M7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5QkFBeUI7QUFDbEMsU0FBUywyQkFBMkI7QUFDcEMsU0FBUyxpRUFBaUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5REFBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsMERBQVk7QUFDUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBUTtBQUNSLHVEQUFRO0FBQ1IiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY2hhcnRzL3R5cGVzL1NsaWNlZENoYXJ0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFNsaWNlZCBjaGFydCBtb2R1bGUuXHJcbiAqL1xyXG5pbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogSU1QT1JUU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IFBlcmNlbnRDaGFydCwgUGVyY2VudENoYXJ0RGF0YUl0ZW0gfSBmcm9tIFwiLi9QZXJjZW50Q2hhcnRcIjtcclxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vY29yZS9SZWdpc3RyeVwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9UeXBlXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIERBVEEgSVRFTVxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBEZWZpbmVzIGEgW1tEYXRhSXRlbV1dIGZvciBbW1NsaWNlZENoYXJ0XV0uXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIERhdGFJdGVtfVxyXG4gKi9cclxudmFyIFNsaWNlZENoYXJ0RGF0YUl0ZW0gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoU2xpY2VkQ2hhcnREYXRhSXRlbSwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gU2xpY2VkQ2hhcnREYXRhSXRlbSgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiU2xpY2VkQ2hhcnREYXRhSXRlbVwiO1xyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gU2xpY2VkQ2hhcnREYXRhSXRlbTtcclxufShQZXJjZW50Q2hhcnREYXRhSXRlbSkpO1xyXG5leHBvcnQgeyBTbGljZWRDaGFydERhdGFJdGVtIH07XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIE1BSU4gQ0xBU1NcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG4vKipcclxuICogQ3JlYXRlcyBhIFNsaWNlZCBjaGFydC5cclxuICpcclxuICogQHNlZSB7QGxpbmsgSVNsaWNlZENoYXJ0RXZlbnRzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBFdmVudHNcclxuICogQHNlZSB7QGxpbmsgSVNsaWNlZENoYXJ0QWRhcHRlcnN9IGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIEFkYXB0ZXJzXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y0L2NoYXJ0LXR5cGVzL3NsaWNlZC1jaGFydC99IGZvciBkb2N1bWVudGF0aW9uXHJcbiAqIEBpbXBvcnRhbnRcclxuICovXHJcbnZhciBTbGljZWRDaGFydCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhTbGljZWRDaGFydCwgX3N1cGVyKTtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gU2xpY2VkQ2hhcnQoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gXHJcbiAgICAgICAgLy8gSW5pdFxyXG4gICAgICAgIF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2xhc3NOYW1lID0gXCJTbGljZWRDaGFydFwiO1xyXG4gICAgICAgIF90aGlzLnNlcmllc0NvbnRhaW5lci5sYXlvdXQgPSBcImhvcml6b250YWxcIjtcclxuICAgICAgICBfdGhpcy5wYWRkaW5nKDE1LCAxNSwgMTUsIDE1KTtcclxuICAgICAgICAvLyBBcHBseSB0aGVtZVxyXG4gICAgICAgIF90aGlzLmFwcGx5VGhlbWUoKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNldHMgZGVmYXVsdHMgdGhhdCBpbnN0YW50aWF0ZSBzb21lIG9iamVjdHMgdGhhdCByZWx5IG9uIHBhcmVudCwgc28gdGhleVxyXG4gICAgICogY2Fubm90IGJlIHNldCBpbiBjb25zdHJ1Y3Rvci5cclxuICAgICAqL1xyXG4gICAgU2xpY2VkQ2hhcnQucHJvdG90eXBlLmFwcGx5SW50ZXJuYWxEZWZhdWx0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmFwcGx5SW50ZXJuYWxEZWZhdWx0cy5jYWxsKHRoaXMpO1xyXG4gICAgICAgIC8vIEFkZCBhIGRlZmF1bHQgc2NyZWVuIHJlYWRlciB0aXRsZSBmb3IgYWNjZXNzaWJpbGl0eVxyXG4gICAgICAgIC8vIFRoaXMgd2lsbCBiZSBvdmVycmlkZGVuIGluIHNjcmVlbiByZWFkZXIgaWYgdGhlcmUgYXJlIGFueSBgdGl0bGVzYCBzZXRcclxuICAgICAgICBpZiAoISR0eXBlLmhhc1ZhbHVlKHRoaXMucmVhZGVyVGl0bGUpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVhZGVyVGl0bGUgPSB0aGlzLmxhbmd1YWdlLnRyYW5zbGF0ZShcIlNsaWNlZCBjaGFydFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiAoUmUpdmFsaWRhdGVzIHRoZSBjaGFydCwgY2F1c2luZyBpdCB0byByZWRyYXcuXHJcbiAgICAgKlxyXG4gICAgICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gICAgICovXHJcbiAgICBTbGljZWRDaGFydC5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS52YWxpZGF0ZS5jYWxsKHRoaXMpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBTbGljZWRDaGFydDtcclxufShQZXJjZW50Q2hhcnQpKTtcclxuZXhwb3J0IHsgU2xpY2VkQ2hhcnQgfTtcclxuLyoqXHJcbiAqIFJlZ2lzdGVyIGNsYXNzIGluIHN5c3RlbSwgc28gdGhhdCBpdCBjYW4gYmUgaW5zdGFudGlhdGVkIHVzaW5nIGl0cyBuYW1lIGZyb21cclxuICogYW55d2hlcmUuXHJcbiAqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbnJlZ2lzdHJ5LnJlZ2lzdGVyZWRDbGFzc2VzW1wiU2xpY2VkQ2hhcnRcIl0gPSBTbGljZWRDaGFydDtcclxucmVnaXN0cnkucmVnaXN0ZXJlZENsYXNzZXNbXCJTbGljZWRDaGFydERhdGFJdGVtXCJdID0gU2xpY2VkQ2hhcnREYXRhSXRlbTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2xpY2VkQ2hhcnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js ***!
  \****************************************************************************/
/*! exports provided: TreeMapDataItem, TreeMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TreeMapDataItem\", function() { return TreeMapDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TreeMap\", function() { return TreeMap; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _XYChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Dictionary */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../series/TreeMapSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js\");\n/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/ColorSet */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js\");\n/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/interaction/Mouse */ \"./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/**\r\n * TreeMap chart module.\r\n *\r\n * Parts of the functionality used in this module are taken from D3.js library\r\n * (https://d3js.org/)\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMap]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar TreeMapDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(TreeMapDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMapDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Required for squarify functionality.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.rows = [];\r\n        _this.className = \"TreeMapDataItem\";\r\n        _this.values.value = {};\r\n        _this.values.x0 = {};\r\n        _this.values.y0 = {};\r\n        _this.values.x1 = {};\r\n        _this.values.y1 = {};\r\n        _this.hasChildren.children = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a duration (ms) the Data Item should take to animate from one\r\n     * value to another.\r\n     *\r\n     * If the duration is not specified via parameter, this method will try to\r\n     * request a default duration from the related `Component`.\r\n     *\r\n     * @param duration  Default duration (ms)\r\n     * @return Duration (ms)\r\n     */\r\n    TreeMapDataItem.prototype.getDuration = function () {\r\n        return 0;\r\n    };\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var value = 0;\r\n            if (!this.children || this.children.length == 0) {\r\n                value = this.values[\"value\"].workingValue;\r\n            }\r\n            else {\r\n                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.children.iterator(), function (child) {\r\n                    var childValue = child.value;\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isNumber\"](childValue)) {\r\n                        value += childValue;\r\n                    }\r\n                });\r\n            }\r\n            return value;\r\n            /*\r\n            let value = this.values[\"value\"].workingValue;\r\n    \r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n                if (this.children) {\r\n                    $iter.each(this.children.iterator(), (child) => {\r\n                        if ($type.isNumber(child.value)) {\r\n                            value += child.value;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            return value;*/\r\n        },\r\n        /**\r\n         * Numeric value of the item.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"percent\", {\r\n        /**\r\n         * Percent value of a node\r\n         */\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.value / this.parent.value * 100;\r\n            }\r\n            return 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"x0\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.values.x0.value;\r\n        },\r\n        /**\r\n         * Item's X position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  X\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"x0\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"x1\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.values.x1.value;\r\n        },\r\n        /**\r\n         * Item's X position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  X\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"x1\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"y0\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.values.y0.value;\r\n        },\r\n        /**\r\n         * Item's Y position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  Y\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"y0\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"y1\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.values.y1.value;\r\n        },\r\n        /**\r\n         * Item's Y position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  Y\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"y1\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.properties.name;\r\n        },\r\n        /**\r\n         * Item's name.\r\n         *\r\n         * @param name  Name\r\n         */\r\n        set: function (name) {\r\n            this.setProperty(\"name\", name);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"children\", {\r\n        /**\r\n         * @return Item's children\r\n         */\r\n        get: function () {\r\n            return this.properties.children;\r\n        },\r\n        /**\r\n         * A list of item's sub-children.\r\n         *\r\n         * Having children means that the TreeMap chat will automatically be\r\n         * \"drillable\". Clicking on an item with children will zoom to the item, then\r\n         * display its children.\r\n         *\r\n         * Treemap can have any level of nesting.\r\n         *\r\n         * @param children  Item's children\r\n         */\r\n        set: function (children) {\r\n            this.setProperty(\"children\", children);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"level\", {\r\n        /**\r\n         * Depth level in the treemap hierarchy.\r\n         *\r\n         * The top-level item will have level set at 0. Its children will have\r\n         * level 1, and so on.\r\n         *\r\n         * @readonly\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            if (!this.parent) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return this.parent.level + 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            var color = this.properties.color;\r\n            if (color == undefined) {\r\n                if (this.parent) {\r\n                    color = this.parent.color;\r\n                }\r\n            }\r\n            if (color == undefined) {\r\n                if (this.component) {\r\n                    color = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        /**\r\n         * Item's color.\r\n         *\r\n         * If not set, will use parent's color, or, if that is not set either,\r\n         * automatically assigned color from chart's color set. (`chart.colors`)\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"fill\", {\r\n        /**\r\n         * @ignore\r\n         * For the legend to work properly\r\n         */\r\n        get: function () {\r\n            return this.color;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"series\", {\r\n        get: function () {\r\n            return this._series;\r\n        },\r\n        /**\r\n         * Series of children data items\r\n         * @todo: proper descrition\r\n         */\r\n        set: function (series) {\r\n            if (series != this._series) {\r\n                if (this._series) {\r\n                    this.component.series.removeValue(this._series);\r\n                    this._series.dispose();\r\n                }\r\n                this._series = series;\r\n                this._disposers.push(series);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    TreeMapDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        this.setWorkingValue(\"value\", 0);\r\n        if (this.children) {\r\n            this.children.each(function (child) {\r\n                child.hide(duration, delay, toValue, fields);\r\n            });\r\n        }\r\n        var seriesDataItem = this.seriesDataItem;\r\n        if (seriesDataItem) {\r\n            seriesDataItem.bullets.each(function (key, value) {\r\n                value.hide();\r\n                value.preventShow = true;\r\n            });\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, toValue, fields);\r\n    };\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    TreeMapDataItem.prototype.show = function (duration, delay, fields) {\r\n        this.setWorkingValue(\"value\", this.values.value.value);\r\n        if (this.children) {\r\n            this.children.each(function (child) {\r\n                child.show(duration, delay, fields);\r\n            });\r\n        }\r\n        var seriesDataItem = this.seriesDataItem;\r\n        if (seriesDataItem) {\r\n            seriesDataItem.bullets.each(function (key, value) {\r\n                value.preventShow = false;\r\n            });\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    return TreeMapDataItem;\r\n}(_XYChart__WEBPACK_IMPORTED_MODULE_1__[\"XYChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapEvents} for a list of available Events\r\n * @see {@link ITreeMapAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/} for documentation\r\n */\r\nvar TreeMap = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(TreeMap, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMap() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * An algorithm used to divide area into squares based on their value.\r\n         *\r\n         * Available options: squarify (default), binaryTree, slice, dice, sliceDice.\r\n         *\r\n         * ```TypeScript\r\n         * chart.layoutAlgorithm = chart.sliceDice;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.layoutAlgorithm = chart.sliceDice;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"layoutAlgorithm\": \"sliceDice\",\r\n         *   // ...\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/#Area_division_methods} For more info and examples.\r\n         * @default squarify\r\n         */\r\n        _this.layoutAlgorithm = _this.squarify;\r\n        /**\r\n         * Is the chart zoomable?\r\n         *\r\n         * If the chart is `zoomable`, and items have sub-items, the chart will\r\n         * drill-down to sub-items when click on their parent item.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.zoomable = true;\r\n        _this.className = \"TreeMap\";\r\n        _this._usesData = true;\r\n        _this.maxLevels = 2;\r\n        _this.currentLevel = 0;\r\n        _this.hideParentColumns = false;\r\n        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__[\"ColorSet\"]();\r\n        _this.sorting = \"descending\";\r\n        // create two value axes for the chart\r\n        var xAxis = _this.xAxes.push(new _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__[\"ValueAxis\"]());\r\n        xAxis.title.disabled = true;\r\n        xAxis.strictMinMax = true;\r\n        var xRenderer = xAxis.renderer;\r\n        xRenderer.inside = true;\r\n        xRenderer.labels.template.disabled = true;\r\n        xRenderer.ticks.template.disabled = true;\r\n        xRenderer.grid.template.disabled = true;\r\n        xRenderer.axisFills.template.disabled = true;\r\n        xRenderer.minGridDistance = 100;\r\n        xRenderer.line.disabled = true;\r\n        xRenderer.baseGrid.disabled = true;\r\n        //xRenderer.inversed = true;\r\n        var yAxis = _this.yAxes.push(new _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__[\"ValueAxis\"]());\r\n        yAxis.title.disabled = true;\r\n        yAxis.strictMinMax = true;\r\n        var yRenderer = yAxis.renderer;\r\n        yRenderer.inside = true;\r\n        yRenderer.labels.template.disabled = true;\r\n        yRenderer.ticks.template.disabled = true;\r\n        yRenderer.grid.template.disabled = true;\r\n        yRenderer.axisFills.template.disabled = true;\r\n        yRenderer.minGridDistance = 100;\r\n        yRenderer.line.disabled = true;\r\n        yRenderer.baseGrid.disabled = true;\r\n        yRenderer.inversed = true;\r\n        // shortcuts\r\n        _this.xAxis = xAxis;\r\n        _this.yAxis = yAxis;\r\n        var template = new _series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_5__[\"TreeMapSeries\"]();\r\n        _this.seriesTemplates = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__[\"DictionaryTemplate\"](template);\r\n        template.virtualParent = _this;\r\n        _this._disposers.push(new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__[\"DictionaryDisposer\"](_this.seriesTemplates));\r\n        _this._disposers.push(template);\r\n        _this.zoomOutButton.events.on(\"hit\", function () {\r\n            _this.zoomToChartDataItem(_this._homeDataItem);\r\n        }, undefined, false);\r\n        _this.seriesTemplates.events.on(\"insertKey\", function (event) {\r\n            event.newValue.isTemplate = true;\r\n        }, undefined, false);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeMap.prototype, \"navigationBar\", {\r\n        /**\r\n         * Returns navigationBar if it is added to a chart\r\n         */\r\n        get: function () {\r\n            return this._navigationBar;\r\n        },\r\n        /**\r\n         * A navigation bar used to show \"breadcrumb\" control, indicating current\r\n         * drill-down path.\r\n         */\r\n        set: function (navigationBar) {\r\n            var _this = this;\r\n            if (this._navigationBar != navigationBar) {\r\n                this._navigationBar = navigationBar;\r\n                navigationBar.parent = this;\r\n                navigationBar.toBack();\r\n                navigationBar.links.template.events.on(\"hit\", function (event) {\r\n                    var dataItem = event.target.dataItem.dataContext;\r\n                    if (!dataItem.isDisposed()) {\r\n                        _this.zoomToChartDataItem(dataItem);\r\n                        _this.createTreeSeries(dataItem);\r\n                    }\r\n                }, undefined, true);\r\n                this._disposers.push(navigationBar);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * (Re)validates chart's data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMap.prototype.validateData = function () {\r\n        this.series.clear();\r\n        this._tempSeries = [];\r\n        _super.prototype.validateData.call(this);\r\n        if (this._homeDataItem) {\r\n            this._homeDataItem.dispose();\r\n        }\r\n        var homeDataItem = this.dataItems.template.clone(); // cant' use createDataItem here!\r\n        this._homeDataItem = homeDataItem;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.dataItems.iterator(), function (dataItem) {\r\n            dataItem.parent = homeDataItem;\r\n        });\r\n        homeDataItem.children = this.dataItems;\r\n        homeDataItem.x0 = 0;\r\n        homeDataItem.y0 = 0;\r\n        homeDataItem.name = this._homeText;\r\n        var maxX = 1000;\r\n        var maxY = Math.round((maxX * this.pixelHeight / this.pixelWidth) / 10) * 10 || 1000;\r\n        homeDataItem.x1 = maxX;\r\n        homeDataItem.y1 = maxY;\r\n        this.xAxis.min = 0;\r\n        this.xAxis.max = maxX;\r\n        this.xAxis.getMinMax();\r\n        this.yAxis.min = 0;\r\n        this.yAxis.max = maxY;\r\n        this.yAxis.getMinMax();\r\n        this.layoutItems(homeDataItem);\r\n        this.createTreeSeries(homeDataItem);\r\n        this.feedLegend();\r\n    };\r\n    /**\r\n     * Layouts and sizes all items according to their value and\r\n     * `layoutAlgorithm`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Parent data item\r\n     */\r\n    TreeMap.prototype.layoutItems = function (parent, sorting) {\r\n        if (parent) {\r\n            var children = parent.children;\r\n            if (!sorting) {\r\n                sorting = this.sorting;\r\n            }\r\n            if (sorting == \"ascending\") {\r\n                children.values.sort(function (a, b) {\r\n                    return a.value - b.value;\r\n                });\r\n            }\r\n            if (sorting == \"descending\") {\r\n                children.values.sort(function (a, b) {\r\n                    return b.value - a.value;\r\n                });\r\n            }\r\n            this._updateDataItemIndexes(0);\r\n            this.layoutAlgorithm(parent);\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var node = children.getIndex(i);\r\n                if (node.children) {\r\n                    this.layoutItems(node);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new treemap series.\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  Data item to create series out of\r\n     */\r\n    TreeMap.prototype.createTreeSeries = function (dataItem) {\r\n        var _this = this;\r\n        this._tempSeries = [];\r\n        var navigationData = [dataItem];\r\n        // create parent series and navigation data\r\n        var parentDataItem = dataItem.parent;\r\n        while (parentDataItem != undefined) {\r\n            this.initSeries(parentDataItem);\r\n            navigationData.push(parentDataItem);\r\n            parentDataItem = parentDataItem.parent;\r\n        }\r\n        navigationData.reverse();\r\n        if (this.navigationBar) {\r\n            this.navigationBar.data = navigationData;\r\n        }\r\n        // create series and children series\r\n        this.createTreeSeriesReal(dataItem);\r\n        // add those which are not in the list\r\n        _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__[\"each\"](this._tempSeries, function (series) {\r\n            if (_this.series.indexOf(series) == -1) {\r\n                _this.series.push(series);\r\n            }\r\n            series.zIndex = series.level;\r\n        });\r\n    };\r\n    /**\r\n     * [createTreeSeriesReal description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    TreeMap.prototype.createTreeSeriesReal = function (dataItem) {\r\n        if (dataItem.children) {\r\n            var level = dataItem.level;\r\n            if (level < this.currentLevel + this.maxLevels) {\r\n                this.initSeries(dataItem);\r\n                for (var i = 0; i < dataItem.children.length; i++) {\r\n                    var child = dataItem.children.getIndex(i);\r\n                    if (child.children) {\r\n                        this.createTreeSeriesReal(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeMap.prototype.setData = function (value) {\r\n        this.currentLevel = 0;\r\n        this.currentlyZoomed = undefined;\r\n        this.xAxis.start = 0;\r\n        this.xAxis.end = 1;\r\n        this.yAxis.start = 0;\r\n        this.yAxis.end = 1;\r\n        _super.prototype.setData.call(this, value);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Overriding, as tree map series are created on the fly all the time\r\n     */\r\n    TreeMap.prototype.seriesAppeared = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Initializes the treemap series.\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  Chart data item\r\n     */\r\n    TreeMap.prototype.initSeries = function (dataItem) {\r\n        var _this = this;\r\n        if (!dataItem.series) {\r\n            var series = void 0;\r\n            var template = this.seriesTemplates.getKey(dataItem.level.toString());\r\n            if (template) {\r\n                series = template.clone();\r\n            }\r\n            else {\r\n                series = this.series.create();\r\n            }\r\n            // for the legend to get {value}\r\n            series.dataItem.dataContext = dataItem;\r\n            series.name = dataItem.name;\r\n            series.parentDataItem = dataItem;\r\n            dataItem.series = series;\r\n            var level = dataItem.level;\r\n            series.level = level;\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext) {\r\n                series.config = dataContext.config;\r\n            }\r\n            this.dataUsers.removeValue(series); // series do not use data directly, that's why we remove it\r\n            series.data = dataItem.children.values;\r\n            series.fill = dataItem.color;\r\n            series.columnsContainer.hide(0);\r\n            series.bulletsContainer.hide(0);\r\n            series.columns.template.adapter.add(\"fill\", function (fill, target) {\r\n                var dataItem = target.dataItem;\r\n                if (dataItem) {\r\n                    var treeMapDataItem = dataItem.treeMapDataItem;\r\n                    if (treeMapDataItem) {\r\n                        target.fill = treeMapDataItem.color;\r\n                        target.adapter.remove(\"fill\"); //@todo: make it possible adapters applied once?\r\n                        return treeMapDataItem.color;\r\n                    }\r\n                }\r\n            });\r\n            if (this.zoomable && (dataItem.level > this.currentLevel || (dataItem.children && dataItem.children.length > 0))) {\r\n                series.columns.template.cursorOverStyle = _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_7__[\"MouseCursorStyle\"].pointer;\r\n                if (this.zoomable) {\r\n                    series.columns.template.events.on(\"hit\", function (event) {\r\n                        var seriesDataItem = event.target.dataItem;\r\n                        if (dataItem.level > _this.currentLevel) {\r\n                            _this.zoomToChartDataItem(seriesDataItem.treeMapDataItem.parent);\r\n                        }\r\n                        else {\r\n                            _this.zoomToSeriesDataItem(seriesDataItem);\r\n                        }\r\n                    }, this, undefined);\r\n                }\r\n            }\r\n        }\r\n        this._tempSeries.push(dataItem.series);\r\n    };\r\n    /**\r\n     * Toggles bullets so that labels that belong to current drill level are\r\n     * shown.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     */\r\n    TreeMap.prototype.toggleBullets = function (duration) {\r\n        var _this = this;\r\n        // hide all series which are not in tempSeries\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.series.iterator(), function (series) {\r\n            if (_this._tempSeries.indexOf(series) == -1) {\r\n                //series.hideReal(duration);\r\n                series.columnsContainer.hide();\r\n                series.bulletsContainer.hide(duration);\r\n            }\r\n            else {\r\n                //series.showReal(duration);\r\n                series.columnsContainer.show();\r\n                series.bulletsContainer.show(duration);\r\n                series.dataItems.each(function (dataItem) {\r\n                    dataItem.bullets.each(function (key, bullet) {\r\n                        bullet.show();\r\n                    });\r\n                });\r\n                if (series.level < _this.currentLevel) {\r\n                    if (_this.hideParentColumns) {\r\n                        series.columnsContainer.hide();\r\n                    }\r\n                    series.bulletsContainer.hide(duration);\r\n                }\r\n                else if (series.level == _this.currentLevel) {\r\n                    if (_this.maxLevels > 1) {\r\n                        series.dataItems.each(function (dataItem) {\r\n                            if (dataItem.treeMapDataItem.children) {\r\n                                dataItem.bullets.each(function (key, bullet) {\r\n                                    bullet.hide();\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Zooms to particular item in series.\r\n     *\r\n     * @param dataItem  Data item\r\n     */\r\n    TreeMap.prototype.zoomToSeriesDataItem = function (dataItem) {\r\n        this.zoomToChartDataItem(dataItem.treeMapDataItem);\r\n    };\r\n    /**\r\n     * Zooms to particular item. If dataItem is not specified, the chart will zoom-out.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    TreeMap.prototype.zoomToChartDataItem = function (dataItem) {\r\n        var _this = this;\r\n        if (!dataItem) {\r\n            dataItem = this._homeDataItem;\r\n        }\r\n        var zoomOutButton = this.zoomOutButton;\r\n        // this is needed because if there is only one fist level, it wont' be shown\r\n        if (zoomOutButton) {\r\n            if (dataItem != this._homeDataItem) {\r\n                zoomOutButton.show();\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n        if (dataItem && dataItem.children) {\r\n            this.xAxis.zoomToValues(dataItem.x0, dataItem.x1);\r\n            this.yAxis.zoomToValues(dataItem.y0, dataItem.y1);\r\n            this.currentLevel = dataItem.level;\r\n            this.currentlyZoomed = dataItem;\r\n            this.createTreeSeries(dataItem);\r\n            var rangeChangeAnimation = this.xAxis.rangeChangeAnimation || this.yAxis.rangeChangeAnimation;\r\n            if (rangeChangeAnimation && !rangeChangeAnimation.isDisposed() && !rangeChangeAnimation.isFinished()) {\r\n                this._dataDisposers.push(rangeChangeAnimation);\r\n                rangeChangeAnimation.events.once(\"animationended\", function () {\r\n                    _this.toggleBullets();\r\n                });\r\n            }\r\n            else {\r\n                this.toggleBullets();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    TreeMap.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"TreeMap chart\");\r\n        }\r\n        //this.homeText = this.language.translate(\"Home\");\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    TreeMap.prototype.createDataItem = function () {\r\n        return new TreeMapDataItem();\r\n    };\r\n    Object.defineProperty(TreeMap.prototype, \"maxLevels\", {\r\n        /**\r\n         * @return Maximum drill-down level\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLevels\");\r\n        },\r\n        /**\r\n         * Maximum number of levels the chart will display initially.\r\n         *\r\n         * @default 2\r\n         * @param value  Maximum drill-down level\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLevels\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMap.prototype, \"currentLevel\", {\r\n        /**\r\n         * @return Current level\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"currentLevel\");\r\n        },\r\n        /**\r\n         * Current drill-down level the chart is at.\r\n         *\r\n         * @param value  Current level\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"currentLevel\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMap.prototype, \"hideParentColumns\", {\r\n        /**\r\n         * @return Hide?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideParentColumns\");\r\n        },\r\n        /**\r\n         * If set to `true`, columns of parent nodes will be hidden when user\r\n         * drills-down into deeper levels.\r\n         *\r\n         * @sice 4.7.4\r\n         * @default false\r\n         * @param  value  Hide?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideParentColumns\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMap.prototype, \"sorting\", {\r\n        get: function () {\r\n            return this.getPropertyValue(\"sorting\");\r\n        },\r\n        /**\r\n         * Sorting direction of treemap items.\r\n         *\r\n         * Available options: \"none\", \"ascending\", and \"descending\" (default).\r\n         *\r\n         * @default \"descending\"\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"sorting\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a new series of the suitable type.\r\n     *\r\n     * @return new series\r\n     */\r\n    TreeMap.prototype.createSeries = function () {\r\n        return new _series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_5__[\"TreeMapSeries\"]();\r\n    };\r\n    Object.defineProperty(TreeMap.prototype, \"homeText\", {\r\n        /**\r\n         * @return Home text\r\n         */\r\n        get: function () {\r\n            return this._homeText;\r\n        },\r\n        /**\r\n         * A text displayed on the \"home\" button which is used to go back to level 0\r\n         * after drill into sub-items.\r\n         *\r\n         * @param value  Home text\r\n         */\r\n        set: function (value) {\r\n            this._homeText = value;\r\n            if (this._homeDataItem) {\r\n                this._homeDataItem.name = this._homeText;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    TreeMap.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Instantiate layout algorithm\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](config[\"layoutAlgorithm\"]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"isString\"](config[\"layoutAlgorithm\"])) {\r\n                switch (config[\"layoutAlgorithm\"]) {\r\n                    case \"squarify\":\r\n                        config[\"layoutAlgorithm\"] = this.squarify;\r\n                        break;\r\n                    case \"binaryTree\":\r\n                        config[\"layoutAlgorithm\"] = this.binaryTree;\r\n                        break;\r\n                    case \"slice\":\r\n                        config[\"layoutAlgorithm\"] = this.slice;\r\n                        break;\r\n                    case \"dice\":\r\n                        config[\"layoutAlgorithm\"] = this.dice;\r\n                        break;\r\n                    case \"sliceDice\":\r\n                        config[\"layoutAlgorithm\"] = this.sliceDice;\r\n                        break;\r\n                    default:\r\n                        delete config[\"layoutAlgorithm\"];\r\n                        break;\r\n                }\r\n            }\r\n            // Set type for navigation bar\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](config.navigationBar) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](config.navigationBar.type)) {\r\n                config.navigationBar.type = \"NavigationBar\";\r\n            }\r\n            _super.prototype.processConfig.call(this, config);\r\n        }\r\n    };\r\n    /**\r\n     * Measures the size of container and informs its children of how much size\r\n     * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n     * properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMap.prototype.validateLayout = function () {\r\n        _super.prototype.validateLayout.call(this);\r\n        this.layoutItems(this.currentlyZoomed);\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMap.prototype.validateDataItems = function () {\r\n        _super.prototype.validateDataItems.call(this);\r\n        this.layoutItems(this._homeDataItem);\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.series.iterator(), function (series) {\r\n            series.validateRawData();\r\n        });\r\n        this.zoomToChartDataItem(this._homeDataItem);\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * TREEMAP LAYOUT FUNCTIONS\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * The functions below are from D3.js library (https://d3js.org/)\r\n     *\r\n     * --------------------------------------------------------------------------\r\n     * Copyright 2017 Mike Bostock\r\n     *\r\n     * Redistribution and use in source and binary forms, with or without\r\n     * modification, are permitted provided that the following conditions are met:\r\n     *\r\n     * 1. Redistributions of source code must retain the above copyright notice,\r\n     *    this list of conditions and the following disclaimer.\r\n     *\r\n     * 2. Redistributions in binary form must reproduce the above copyright\r\n     *    notice,this list of conditions and the following disclaimer in the\r\n     *    documentation and/or other materials provided with the distribution.\r\n     *\r\n     * 3. Neither the name of the copyright holder nor the names of its\r\n     *    contributors may be used to endorse or promote products derived from\r\n     *    this software without specific prior written permission.\r\n     *\r\n     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n     * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n     * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n     * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n     * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n     * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n     * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n     * POSSIBILITY OF SUCH DAMAGE.\r\n     * --------------------------------------------------------------------------\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Treemap layout algorithm: binaryTree.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.binaryTree = function (parent) {\r\n        var nodes = parent.children, i, n = nodes.length, sum, sums = new Array(n + 1);\r\n        for (sums[0] = sum = i = 0; i < n; ++i) {\r\n            sums[i + 1] = sum += nodes.getIndex(i).value;\r\n        }\r\n        partition(0, n, parent.value, parent.x0, parent.y0, parent.x1, parent.y1);\r\n        function partition(i, j, value, x0, y0, x1, y1) {\r\n            if (i >= j - 1) {\r\n                var node = nodes.getIndex(i);\r\n                node.x0 = x0;\r\n                node.y0 = y0;\r\n                node.x1 = x1;\r\n                node.y1 = y1;\r\n                return;\r\n            }\r\n            var valueOffset = sums[i], valueTarget = (value / 2) + valueOffset, k = i + 1, hi = j - 1;\r\n            while (k < hi) {\r\n                var mid = k + hi >>> 1;\r\n                if (sums[mid] < valueTarget) {\r\n                    k = mid + 1;\r\n                }\r\n                else {\r\n                    hi = mid;\r\n                }\r\n            }\r\n            if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) {\r\n                --k;\r\n            }\r\n            var valueLeft = sums[k] - valueOffset, valueRight = value - valueLeft;\r\n            if ((x1 - x0) > (y1 - y0)) {\r\n                var xk = (x0 * valueRight + x1 * valueLeft) / value;\r\n                partition(i, k, valueLeft, x0, y0, xk, y1);\r\n                partition(k, j, valueRight, xk, y0, x1, y1);\r\n            }\r\n            else {\r\n                var yk = (y0 * valueRight + y1 * valueLeft) / value;\r\n                partition(i, k, valueLeft, x0, y0, x1, yk);\r\n                partition(k, j, valueRight, x0, yk, x1, y1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.slice = function (parent) {\r\n        var x0 = parent.x0;\r\n        var x1 = parent.x1;\r\n        var y0 = parent.y0;\r\n        var y1 = parent.y1;\r\n        var nodes = parent.children;\r\n        var node;\r\n        var i = -1;\r\n        var n = nodes.length;\r\n        var k = parent.value && (y1 - y0) / parent.value;\r\n        while (++i < n) {\r\n            node = nodes.getIndex(i);\r\n            node.x0 = x0;\r\n            node.x1 = x1;\r\n            node.y0 = y0;\r\n            y0 += node.value * k;\r\n            node.y1 = y0;\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: dice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.dice = function (parent) {\r\n        var x0 = parent.x0;\r\n        var x1 = parent.x1;\r\n        var y0 = parent.y0;\r\n        var y1 = parent.y1;\r\n        var nodes = parent.children, node, i = -1, n = nodes.length, k = parent.value && (x1 - x0) / parent.value;\r\n        while (++i < n) {\r\n            node = nodes.getIndex(i);\r\n            node.y0 = y0;\r\n            node.y1 = y1;\r\n            node.x0 = x0;\r\n            x0 += node.value * k;\r\n            node.x1 = x0;\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: slideDice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.sliceDice = function (parent) {\r\n        if (parent.level & 1) {\r\n            this.slice(parent);\r\n        }\r\n        else {\r\n            this.dice(parent);\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: squarify.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.squarify = function (parent) {\r\n        var ratio = (1 + Math.sqrt(5)) / 2;\r\n        var x0 = parent.x0;\r\n        var x1 = parent.x1;\r\n        var y0 = parent.y0;\r\n        var y1 = parent.y1;\r\n        var nodes = parent.children;\r\n        var nodeValue;\r\n        var i0 = 0;\r\n        var i1 = 0;\r\n        var n = nodes.length;\r\n        var dx;\r\n        var dy;\r\n        var value = parent.value;\r\n        var sumValue;\r\n        var minValue;\r\n        var maxValue;\r\n        var newRatio;\r\n        var minRatio;\r\n        var alpha;\r\n        var beta;\r\n        while (i0 < n) {\r\n            dx = x1 - x0;\r\n            dy = y1 - y0;\r\n            // Find the next non-empty node.\r\n            do {\r\n                sumValue = nodes.getIndex(i1++).value;\r\n            } while (!sumValue && i1 < n);\r\n            minValue = maxValue = sumValue;\r\n            alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\r\n            beta = sumValue * sumValue * alpha;\r\n            minRatio = Math.max(maxValue / beta, beta / minValue);\r\n            // Keep adding nodes while the aspect ratio maintains or improves.\r\n            for (; i1 < n; ++i1) {\r\n                sumValue += nodeValue = nodes.getIndex(i1).value;\r\n                if (nodeValue < minValue) {\r\n                    minValue = nodeValue;\r\n                }\r\n                if (nodeValue > maxValue) {\r\n                    maxValue = nodeValue;\r\n                }\r\n                beta = sumValue * sumValue * alpha;\r\n                newRatio = Math.max(maxValue / beta, beta / minValue);\r\n                if (newRatio > minRatio) {\r\n                    sumValue -= nodeValue;\r\n                    break;\r\n                }\r\n                minRatio = newRatio;\r\n            }\r\n            // Position and record the row orientation.\r\n            var row = this.dataItems.template.clone();\r\n            row.value = sumValue;\r\n            row.dice = dx < dy;\r\n            row.children = nodes.slice(i0, i1);\r\n            row.x0 = x0;\r\n            row.y0 = y0;\r\n            row.x1 = x1;\r\n            row.y1 = y1;\r\n            if (row.dice) {\r\n                row.y1 = value ? (y0 += (dy * sumValue) / value) : y1;\r\n                this.dice(row);\r\n            }\r\n            else {\r\n                row.x1 = value ? (x0 += (dx * sumValue) / value) : x1;\r\n                this.slice(row);\r\n            }\r\n            value -= sumValue;\r\n            i0 = i1;\r\n        }\r\n    };\r\n    TreeMap.prototype.handleSeriesAdded2 = function () {\r\n        // void\r\n    };\r\n    /**\r\n     * [handleDataItemValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    TreeMap.prototype.handleDataItemValueChange = function (dataItem, name) {\r\n        if (name == \"value\") {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    TreeMap.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        if (name == \"value\") {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    TreeMap.prototype.getLegendLevel = function (dataItem) {\r\n        if (!dataItem) {\r\n            return;\r\n        }\r\n        if (!dataItem.children) {\r\n            return;\r\n        }\r\n        if (dataItem.children.length > 1) {\r\n            return dataItem;\r\n        }\r\n        else if (dataItem.children.length == 1) {\r\n            var child = dataItem.children.getIndex(0);\r\n            if (child.children) {\r\n                return this.getLegendLevel(child);\r\n            }\r\n            else {\r\n                return dataItem;\r\n            }\r\n        }\r\n        else {\r\n            return dataItem;\r\n        }\r\n    };\r\n    Object.defineProperty(TreeMap.prototype, \"homeDataItem\", {\r\n        /**\r\n         * A data item associated with top node.\r\n         *\r\n         * @since 4.8.2\r\n         */\r\n        get: function () {\r\n            return this._homeDataItem;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    TreeMap.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            legend.dataFields.name = \"name\";\r\n            var legendParent = this.getLegendLevel(this._homeDataItem);\r\n            if (legendParent) {\r\n                var legendData_1 = [];\r\n                legendParent.children.each(function (dataItem) {\r\n                    //if (!dataItem.hiddenInLegend) {\r\n                    legendData_1.push(dataItem);\r\n                    //}\r\n                });\r\n                legend.data = legendData_1;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    TreeMap.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this._homeDataItem = undefined;\r\n        this.series.clear();\r\n        if (this.navigationBar) {\r\n            this.navigationBar.disposeData();\r\n        }\r\n        this.xAxis.disposeData();\r\n        this.yAxis.disposeData();\r\n    };\r\n    /**\r\n     * Since this chart uses hierarchical data, we need to remove childrent\r\n     * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n     *\r\n     * @return Export\r\n     */\r\n    TreeMap.prototype.getExporting = function () {\r\n        var _this = this;\r\n        var exporting = _super.prototype.getExporting.call(this);\r\n        exporting.adapter.add(\"formatDataFields\", function (info) {\r\n            if (info.format == \"csv\" || info.format == \"xlsx\") {\r\n                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__[\"hasValue\"](_this.dataFields.children)) {\r\n                    delete info.dataFields[_this.dataFields.children];\r\n                }\r\n            }\r\n            return info;\r\n        });\r\n        return exporting;\r\n    };\r\n    return TreeMap;\r\n}(_XYChart__WEBPACK_IMPORTED_MODULE_1__[\"XYChart\"]));\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_2__[\"registry\"].registeredClasses[\"TreeMap\"] = TreeMap;\r\n//# sourceMappingURL=TreeMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js ***!
  \****************************************************************************/
/*! exports provided: XYChartDataItem, XYChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYChartDataItem\", function() { return XYChartDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYChart\", function() { return XYChart; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _SerialChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SerialChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js\");\n/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/DateAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\");\n/* harmony import */ var _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/AxisRendererX */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js\");\n/* harmony import */ var _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/AxisRendererY */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js\");\n/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../axes/CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony import */ var _series_XYSeries__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../series/XYSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js\");\n/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Disposer */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js\");\n/* harmony import */ var _core_elements_ZoomOutButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/elements/ZoomOutButton */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/ZoomOutButton.js\");\n/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Percent */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../elements/XYChartScrollbar */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../core/utils/Array */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js\");\n/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../core/utils/Number */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js\");\n/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../core/utils/Responsive */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js\");\n/**\r\n * XY Chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYChartDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return XYChartDataItem;\r\n}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__[\"SerialChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates an XY chart, and any derivative chart, like Serial, Date-based, etc.\r\n *\r\n * Basically this is a chart type, that is used to display any chart\r\n * information in a square plot area.\r\n *\r\n * The horizontal and vertical scale is determined by the type of Axis.\r\n *\r\n * The plot types are determined by type of Series.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * let series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"XYChart\");\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * var series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Category axis\r\n * \t\"xAxes\": [{\r\n * \t\t\"type\": \"CategoryAxis\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Value axis\r\n * \t\"yAxes\": [{\r\n * \t\t\"type\": \"ValueAxis\"\r\n * \t}],\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"ColumnSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"categoryX\": \"country\",\r\n * \t\t\t\"valueY\": \"visits\"\r\n * \t\t},\r\n * \t\t\"name\": \"Web Traffic\"\r\n * \t}],\r\n *\r\n * \t// Cursor\r\n * \t\"cursor\": {},\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"USA\",\r\n * \t\t\"visits\": 3025\r\n * \t}, {\r\n * \t\t\"country\": \"China\",\r\n * \t\t\"visits\": 1882\r\n * \t}, {\r\n * \t\t\"country\": \"Japan\",\r\n * \t\t\"visits\": 1809\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"XYChart\");\r\n * ```\r\n *\r\n *\r\n * @see {@link IXYChartEvents} for a list of available Events\r\n * @see {@link IXYChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nvar XYChart = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Defines the type of horizontal axis rederer.\r\n         */\r\n        _this._axisRendererX = _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_7__[\"AxisRendererX\"];\r\n        /**\r\n         * Defines the type of vertical axis rederer.\r\n         */\r\n        _this._axisRendererY = _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_8__[\"AxisRendererY\"];\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._seriesPoints = [];\r\n        _this.className = \"XYChart\";\r\n        // Set defaults\r\n        //this.margin(10, 10, 10, 10);\r\n        _this.maskBullets = true;\r\n        _this.arrangeTooltips = true;\r\n        // Create main chart container\r\n        var chartContainer = _this.chartContainer;\r\n        chartContainer.layout = \"vertical\";\r\n        _this.padding(15, 15, 15, 15);\r\n        // Create top axes container\r\n        var topAxesCont = chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        topAxesCont.shouldClone = false;\r\n        topAxesCont.layout = \"vertical\";\r\n        topAxesCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        topAxesCont.zIndex = 1;\r\n        _this.topAxesContainer = topAxesCont;\r\n        // Create vertical axes and plot area container\r\n        // Plot area and vertical axes share the whole width of the chart,\r\n        // so we need to put then into a separate container so that layouting\r\n        // engine takes care of the positioning\r\n        var yAxesAndPlotCont = chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        yAxesAndPlotCont.shouldClone = false;\r\n        yAxesAndPlotCont.layout = \"horizontal\";\r\n        yAxesAndPlotCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        yAxesAndPlotCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        yAxesAndPlotCont.zIndex = 0;\r\n        _this.yAxesAndPlotContainer = yAxesAndPlotCont;\r\n        // Create a container for bottom axes\r\n        var bottomAxesCont = chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        bottomAxesCont.shouldClone = false;\r\n        bottomAxesCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        bottomAxesCont.layout = \"vertical\";\r\n        bottomAxesCont.zIndex = 1;\r\n        _this.bottomAxesContainer = bottomAxesCont;\r\n        // Create a container for left-side axes\r\n        var leftAxesCont = yAxesAndPlotCont.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        leftAxesCont.shouldClone = false;\r\n        leftAxesCont.layout = \"horizontal\";\r\n        leftAxesCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        leftAxesCont.contentAlign = \"right\";\r\n        leftAxesCont.events.on(\"transformed\", _this.updateXAxesMargins, _this, false);\r\n        leftAxesCont.zIndex = 1;\r\n        _this.leftAxesContainer = leftAxesCont;\r\n        // Create a container for plot area\r\n        var plotCont = yAxesAndPlotCont.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        plotCont.shouldClone = false;\r\n        plotCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        plotCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        // Create transparend background for plot container so that hover works\r\n        // on all of it\r\n        plotCont.background.fillOpacity = 0;\r\n        _this.plotContainer = plotCont;\r\n        // must go below plot container\r\n        _this.mouseWheelBehavior = \"none\";\r\n        _this._cursorContainer = plotCont;\r\n        // Create a container for right-side axes\r\n        var rightAxesCont = yAxesAndPlotCont.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        rightAxesCont.shouldClone = false;\r\n        rightAxesCont.layout = \"horizontal\";\r\n        rightAxesCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        rightAxesCont.zIndex = 1;\r\n        rightAxesCont.events.on(\"transformed\", _this.updateXAxesMargins, _this, false);\r\n        _this.rightAxesContainer = rightAxesCont;\r\n        _this.seriesContainer.parent = plotCont;\r\n        _this.bulletsContainer.parent = plotCont;\r\n        var zoomOutButton = plotCont.createChild(_core_elements_ZoomOutButton__WEBPACK_IMPORTED_MODULE_12__[\"ZoomOutButton\"]);\r\n        zoomOutButton.shouldClone = false;\r\n        zoomOutButton.align = \"right\";\r\n        zoomOutButton.valign = \"top\";\r\n        zoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n        zoomOutButton.marginTop = 5;\r\n        zoomOutButton.marginRight = 5;\r\n        zoomOutButton.hide(0);\r\n        _this.zoomOutButton = zoomOutButton;\r\n        // Create a container for bullets\r\n        var axisBulletsContainer = _this.plotContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        axisBulletsContainer.shouldClone = false;\r\n        axisBulletsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        axisBulletsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__[\"percent\"])(100);\r\n        axisBulletsContainer.isMeasured = false;\r\n        axisBulletsContainer.zIndex = 4;\r\n        axisBulletsContainer.layout = \"none\";\r\n        _this.axisBulletsContainer = axisBulletsContainer;\r\n        _this._bulletMask = _this.plotContainer;\r\n        _this.events.on(\"beforedatavalidated\", function () {\r\n            _this.series.each(function (series) {\r\n                series.dataGrouped = false;\r\n                series._baseInterval = {};\r\n            });\r\n        }, _this, false);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    XYChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        this.zoomOutButton.exportable = false;\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"X/Y chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Draws the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.seriesContainer.toFront();\r\n        this.bulletsContainer.toFront();\r\n        if (this.maskBullets) {\r\n            this.bulletsContainer.mask = this._bulletMask;\r\n        }\r\n        this.updateSeriesLegend();\r\n    };\r\n    /**\r\n     * Triggers a redrawing of all chart's series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.updatePlotElements = function () {\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.series.iterator(), function (series) {\r\n            series.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Triggers data (re)validation which in turn can cause a redraw of the\r\n     * whole chart or just aprticular series / elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.validateData = function () {\r\n        // tell axes that data changed\r\n        if (this._parseDataFrom == 0) {\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.xAxes.iterator(), function (axis) {\r\n                axis.dataChangeUpdate();\r\n            });\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.yAxes.iterator(), function (axis) {\r\n                axis.dataChangeUpdate();\r\n            });\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.series.iterator(), function (series) {\r\n                series.dataChangeUpdate();\r\n            });\r\n        }\r\n        _super.prototype.validateData.call(this);\r\n    };\r\n    /**\r\n     * Updates margins for horizontal axes based on settings and available space.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.updateXAxesMargins = function () {\r\n        var leftAxesWidth = this.leftAxesContainer.measuredWidth;\r\n        var rightAxesWidth = this.rightAxesContainer.measuredWidth;\r\n        var bottomAxesCont = this.bottomAxesContainer;\r\n        if (bottomAxesCont.paddingLeft != leftAxesWidth || bottomAxesCont.paddingRight != rightAxesWidth) {\r\n            bottomAxesCont.paddingLeft = leftAxesWidth;\r\n            bottomAxesCont.paddingRight = rightAxesWidth;\r\n        }\r\n        var topAxesCont = this.topAxesContainer;\r\n        if (topAxesCont.paddingLeft != leftAxesWidth || topAxesCont.paddingRight != rightAxesWidth) {\r\n            topAxesCont.paddingLeft = leftAxesWidth;\r\n            topAxesCont.paddingRight = rightAxesWidth;\r\n        }\r\n    };\r\n    /**\r\n     * Triggers a re-initialization of this element.\r\n     *\r\n     * Will result in complete redrawing of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.reinit = function () {\r\n        _super.prototype.reinit.call(this);\r\n        this.series.each(function (series) {\r\n            series.appeared = false;\r\n        });\r\n    };\r\n    /**\r\n     * Triggers an update on the horizontal axis when one of its properties\r\n     * change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event An event object\r\n     */\r\n    XYChart.prototype.handleXAxisChange = function (event) {\r\n        this.updateXAxis(event.target);\r\n    };\r\n    /**\r\n     * Triggers an update on the vertical axis when one of its properties\r\n     * change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event An event object\r\n     */\r\n    XYChart.prototype.handleYAxisChange = function (event) {\r\n        this.updateYAxis(event.target);\r\n    };\r\n    /**\r\n     * Sets up a new horizontal (X) axis when it is added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Axis insert event\r\n     */\r\n    XYChart.prototype.processXAxis = function (event) {\r\n        var axis = event.newValue;\r\n        axis.chart = this;\r\n        if (!axis.renderer) {\r\n            axis.renderer = new this._axisRendererX();\r\n            axis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleXAxisChange, this, false);\r\n        }\r\n        axis.axisLetter = \"X\";\r\n        axis.events.on(\"startendchanged\", this.handleXAxisRangeChange, this, false);\r\n        //axis.events.on(\"endchanged\", this.handleXAxisRangeChange, this, false);\r\n        // Although axis does not use data directly, we set dataProvider here\r\n        // (but not add to chart data users) to hold up rendering before data\r\n        // is parsed (system handles this)\r\n        axis.dataProvider = this;\r\n        this.updateXAxis(axis.renderer);\r\n        this.processAxis(axis);\r\n    };\r\n    /**\r\n     * Sets up a new vertical (Y) axis when it is added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Axis insert event\r\n     */\r\n    XYChart.prototype.processYAxis = function (event) {\r\n        var axis = event.newValue;\r\n        axis.chart = this;\r\n        if (!axis.renderer) {\r\n            axis.renderer = new this._axisRendererY();\r\n            axis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleYAxisChange, this, false);\r\n        }\r\n        axis.axisLetter = \"Y\";\r\n        axis.events.on(\"startendchanged\", this.handleYAxisRangeChange, this, false);\r\n        //axis.events.on(\"endchanged\", this.handleYAxisRangeChange, this, false);\r\n        // Although axis does not use data directly, we set dataProvider here\r\n        // (but not add to chart data users) to hold up rendering before data\r\n        // is parsed (system handles this)\r\n        axis.dataProvider = this;\r\n        this.updateYAxis(axis.renderer);\r\n        this.processAxis(axis);\r\n    };\r\n    /**\r\n     * Updates horizontal (X) scrollbar and other horizontal axis whenever axis'\r\n     * value range changes.\r\n     */\r\n    XYChart.prototype.handleXAxisRangeChange = function () {\r\n        var range = this.getCommonAxisRange(this.xAxes);\r\n        if (this.scrollbarX) {\r\n            this.zoomAxes(this.xAxes, range, true);\r\n        }\r\n        this.toggleZoomOutButton();\r\n        this.updateScrollbar(this.scrollbarX, range);\r\n    };\r\n    /**\r\n     * Shows or hides the Zoom Out button depending on whether the chart is fully\r\n     * zoomed out or not.\r\n     */\r\n    XYChart.prototype.toggleZoomOutButton = function () {\r\n        if (this.zoomOutButton) {\r\n            var show_1 = false;\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"eachContinue\"](this.xAxes.iterator(), function (axis) {\r\n                if (axis.toggleZoomOutButton) {\r\n                    if (axis.maxZoomCount > 0) {\r\n                        var minZoomFactor = axis.maxZoomFactor / axis.maxZoomCount;\r\n                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"round\"](axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"round\"](axis.start, 3) > 0 || _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"round\"](axis.end, 3) < 1) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"eachContinue\"](this.yAxes.iterator(), function (axis) {\r\n                if (axis.toggleZoomOutButton) {\r\n                    if (axis.maxZoomCount > 0) {\r\n                        var minZoomFactor = axis.maxZoomFactor / axis.maxZoomCount;\r\n                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"round\"](axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"round\"](axis.start, 3) > 0 || _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"round\"](axis.end, 3) < 1) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            });\r\n            if (!this.seriesAppeared) {\r\n                show_1 = false;\r\n            }\r\n            if (show_1) {\r\n                this.zoomOutButton.show();\r\n            }\r\n            else {\r\n                this.zoomOutButton.hide();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * moved this check to a separate method so that we could override it in TreeMapSeries\r\n     */\r\n    XYChart.prototype.seriesAppeared = function () {\r\n        var appeared = false;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.series.iterator(), function (series) {\r\n            if (!series.appeared) {\r\n                appeared = false;\r\n                return false;\r\n            }\r\n        });\r\n        return appeared;\r\n    };\r\n    /**\r\n     * Updates vertical (Y) scrollbar and other horizontal axis whenever axis'\r\n     * value range changes.\r\n     */\r\n    XYChart.prototype.handleYAxisRangeChange = function () {\r\n        var range = this.getCommonAxisRange(this.yAxes);\r\n        if (this.scrollbarY) {\r\n            this.zoomAxes(this.yAxes, range, true);\r\n        }\r\n        this.toggleZoomOutButton();\r\n        this.updateScrollbar(this.scrollbarY, range);\r\n    };\r\n    /**\r\n     * Updates a relative scrollbar whenever data range of the axis changes.\r\n     *\r\n     * @param scrollbar  Scrollbar instance\r\n     * @param range      New data (values) range of the axis\r\n     */\r\n    XYChart.prototype.updateScrollbar = function (scrollbar, range) {\r\n        if (scrollbar) {\r\n            scrollbar.skipRangeEvents();\r\n            scrollbar.start = range.start;\r\n            scrollbar.end = range.end;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a common range of values between a list of axes.\r\n     *\r\n     * This is used to synchronize the zoom between multiple axes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axes  A list of axes\r\n     * @return Common value range\r\n     */\r\n    XYChart.prototype.getCommonAxisRange = function (axes) {\r\n        var start;\r\n        var end;\r\n        axes.each(function (axis) {\r\n            if (!axis.zoomable || (axis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__[\"ValueAxis\"] && axis.syncWithAxis)) {\r\n            }\r\n            else {\r\n                var axisStart = axis.start;\r\n                var axisEnd = axis.end;\r\n                if (axis.renderer.inversed) {\r\n                    axisStart = 1 - axis.end;\r\n                    axisEnd = 1 - axis.start;\r\n                }\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isNumber\"](start) || (axisStart < start)) {\r\n                    start = axisStart;\r\n                }\r\n                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isNumber\"](end) || (axisEnd > end)) {\r\n                    end = axisEnd;\r\n                }\r\n            }\r\n        });\r\n        return { start: start, end: end };\r\n    };\r\n    /**\r\n     * Triggers (re)rendering of the horizontal (X) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     */\r\n    XYChart.prototype.updateXAxis = function (renderer) {\r\n        var axis = renderer.axis;\r\n        if (renderer.opposite) {\r\n            axis.parent = this.topAxesContainer;\r\n            axis.toFront();\r\n        }\r\n        else {\r\n            axis.parent = this.bottomAxesContainer;\r\n            axis.toBack();\r\n        }\r\n        if (axis.renderer) {\r\n            axis.renderer.processRenderer();\r\n        }\r\n    };\r\n    /**\r\n     * Triggers (re)rendering of the vertical (Y) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     */\r\n    XYChart.prototype.updateYAxis = function (renderer) {\r\n        var axis = renderer.axis;\r\n        if (renderer.opposite) {\r\n            axis.parent = this.rightAxesContainer;\r\n            axis.toBack();\r\n        }\r\n        else {\r\n            axis.parent = this.leftAxesContainer;\r\n            axis.toFront();\r\n        }\r\n        if (axis.renderer) {\r\n            axis.renderer.processRenderer();\r\n        }\r\n    };\r\n    /**\r\n     * Decorates an Axis for use with this chart, e.g. sets proper renderer\r\n     * and containers for placement.\r\n     *\r\n     * @param axis  Axis\r\n     */\r\n    XYChart.prototype.processAxis = function (axis) {\r\n        var _this = this;\r\n        // Value axis does not use data directly, only category axis does\r\n        if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__[\"CategoryAxis\"]) {\r\n            this._dataUsers.moveValue(axis);\r\n        }\r\n        var renderer = axis.renderer;\r\n        renderer.gridContainer.parent = this.plotContainer;\r\n        renderer.gridContainer.toBack();\r\n        renderer.breakContainer.parent = this.plotContainer;\r\n        renderer.breakContainer.toFront();\r\n        renderer.breakContainer.zIndex = 10;\r\n        axis.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__[\"Disposer\"](function () {\r\n            _this.dataUsers.removeValue(axis);\r\n        }));\r\n        renderer.bulletsContainer.parent = this.axisBulletsContainer;\r\n        this._disposers.push(axis.events.on(\"positionchanged\", function () {\r\n            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToSprite\"]({ x: 0, y: 0 }, axis, _this.axisBulletsContainer);\r\n            if (axis.renderer instanceof _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_8__[\"AxisRendererY\"]) {\r\n                renderer.bulletsContainer.y = point.y;\r\n            }\r\n            if (axis.renderer instanceof _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_7__[\"AxisRendererX\"]) {\r\n                renderer.bulletsContainer.x = point.x;\r\n            }\r\n        }, undefined, false));\r\n        this.plotContainer.events.on(\"maxsizechanged\", function () {\r\n            if (_this.inited) {\r\n                axis.invalidateDataItems();\r\n                _this.updateSeriesMasks();\r\n            }\r\n        }, axis, false);\r\n    };\r\n    /**\r\n     * This is done because for some reason IE doesn't change mask if path of a\r\n     * mask changes.\r\n     */\r\n    XYChart.prototype.updateSeriesMasks = function () {\r\n        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"isIE\"]()) {\r\n            this.series.each(function (series) {\r\n                var mask = series.mainContainer.mask;\r\n                series.mainContainer.mask = undefined;\r\n                series.mainContainer.mask = mask;\r\n            });\r\n        }\r\n    };\r\n    XYChart.prototype.handleSeriesRemoved = function (event) {\r\n        var series = event.oldValue;\r\n        if (series) {\r\n            if (series.xAxis) {\r\n                series.xAxis.series.removeValue(series);\r\n                series.xAxis.invalidateProcessedData();\r\n            }\r\n            if (series.yAxis) {\r\n                series.yAxis.series.removeValue(series);\r\n                series.yAxis.invalidateProcessedData();\r\n            }\r\n            // otherwise extremes won't change\r\n            this.series.each(function (series) {\r\n                series.resetExtremes();\r\n            });\r\n        }\r\n        _super.prototype.handleSeriesRemoved.call(this, event);\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"xAxes\", {\r\n        /**\r\n         * A list of horizontal (X) axes.\r\n         *\r\n         * @return List of axes\r\n         */\r\n        get: function () {\r\n            if (!this._xAxes) {\r\n                this._xAxes = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"List\"]();\r\n                this._xAxes.events.on(\"inserted\", this.processXAxis, this, false);\r\n                this._xAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"ListDisposer\"](this._xAxes, false));\r\n            }\r\n            return this._xAxes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.handleAxisRemoval = function (event) {\r\n        var axis = event.oldValue;\r\n        this.dataUsers.removeValue(axis); // need to remove, as it might not be disposed\r\n        if (axis.autoDispose) {\r\n            axis.dispose();\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"yAxes\", {\r\n        /**\r\n         * A list of vertical (Y) axes.\r\n         *\r\n         * @return List of axes\r\n         */\r\n        get: function () {\r\n            if (!this._yAxes) {\r\n                this._yAxes = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"List\"]();\r\n                this._yAxes.events.on(\"inserted\", this.processYAxis, this, false);\r\n                this._yAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__[\"ListDisposer\"](this._yAxes, false));\r\n            }\r\n            return this._yAxes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new [[XYSeries]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    XYChart.prototype.handleSeriesAdded = function (event) {\r\n        try {\r\n            _super.prototype.handleSeriesAdded.call(this, event);\r\n            var series = event.newValue;\r\n            if (this.xAxes.length == 0 || this.yAxes.length == 0) {\r\n                _core_Registry__WEBPACK_IMPORTED_MODULE_14__[\"registry\"].removeFromInvalidComponents(series);\r\n                series.dataInvalid = false;\r\n            }\r\n            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"used\"](series.xAxis); // this is enough to get axis, handled in getter\r\n            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"used\"](series.yAxis); // this is enough to get axis, handled in getter\r\n            series.maskBullets = series.maskBullets;\r\n            if (series.fill == undefined) {\r\n                if (this.patterns) {\r\n                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](series.stroke)) {\r\n                        series.stroke = this.colors.next();\r\n                    }\r\n                    series.fill = this.patterns.next();\r\n                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](series.fillOpacity)) {\r\n                        series.fill.backgroundOpacity = series.fillOpacity;\r\n                    }\r\n                    if (series.stroke instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__[\"Color\"]) {\r\n                        series.fill.stroke = series.stroke;\r\n                        series.fill.fill = series.stroke;\r\n                    }\r\n                }\r\n                else {\r\n                    series.fill = this.colors.next();\r\n                }\r\n            }\r\n            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](series.stroke)) {\r\n                series.stroke = series.fill;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.raiseCriticalError(e);\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"cursor\", {\r\n        /**\r\n         * @return Cursor\r\n         */\r\n        get: function () {\r\n            return this._cursor;\r\n        },\r\n        /**\r\n         * Chart's [[Cursor]].\r\n         *\r\n         * @param cursor  Cursor\r\n         */\r\n        set: function (cursor) {\r\n            if (this._cursor != cursor) {\r\n                if (this._cursor) {\r\n                    this.removeDispose(this._cursor);\r\n                }\r\n                this._cursor = cursor;\r\n                if (cursor) {\r\n                    // TODO this is wrong, fix it\r\n                    this._disposers.push(cursor);\r\n                    cursor.chart = this;\r\n                    cursor.shouldClone = false;\r\n                    cursor.parent = this._cursorContainer;\r\n                    cursor.events.on(\"cursorpositionchanged\", this.handleCursorPositionChange, this, false);\r\n                    cursor.events.on(\"zoomstarted\", this.handleCursorZoomStart, this, false);\r\n                    cursor.events.on(\"zoomended\", this.handleCursorZoomEnd, this, false);\r\n                    cursor.events.on(\"panstarted\", this.handleCursorPanStart, this, false);\r\n                    cursor.events.on(\"panning\", this.handleCursorPanning, this, false);\r\n                    cursor.events.on(\"panended\", this.handleCursorPanEnd, this, false);\r\n                    cursor.events.on(\"behaviorcanceled\", this.handleCursorCanceled, this, false);\r\n                    cursor.events.on(\"hidden\", this.handleHideCursor, this, false);\r\n                    cursor.zIndex = Number.MAX_SAFE_INTEGER - 1;\r\n                    if (this.tapToActivate) {\r\n                        // We need this in order to setup cursor properly\r\n                        this.setTapToActivate(this.tapToActivate);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Performs tasks when the cursor's position changes, e.g. shows proper\r\n     * tooltips on axes and series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.handleCursorPositionChange = function () {\r\n        var cursor = this.cursor;\r\n        if (cursor.visible && !cursor.isHiding) {\r\n            var xPosition_1 = this.cursor.xPosition;\r\n            var yPosition_1 = this.cursor.yPosition;\r\n            this.showSeriesTooltip({\r\n                x: xPosition_1,\r\n                y: yPosition_1\r\n            });\r\n            var exceptAxes_1 = [];\r\n            var snapToSeries = cursor.snapToSeries;\r\n            if (snapToSeries && !cursor.downPoint) {\r\n                if (snapToSeries instanceof _series_XYSeries__WEBPACK_IMPORTED_MODULE_10__[\"XYSeries\"]) {\r\n                    snapToSeries = [snapToSeries];\r\n                }\r\n                var dataItems_1 = [];\r\n                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"each\"](snapToSeries, function (snpSeries) {\r\n                    if (!snpSeries.isHidden && !snpSeries.isHiding) {\r\n                        var xAxis = snpSeries.xAxis;\r\n                        var yAxis = snpSeries.yAxis;\r\n                        if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__[\"ValueAxis\"] && !(xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__[\"DateAxis\"]) && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__[\"ValueAxis\"] && !(yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__[\"DateAxis\"])) {\r\n                            snpSeries.dataItems.each(function (dataItem) {\r\n                                dataItems_1.push(dataItem);\r\n                            });\r\n                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"move\"](exceptAxes_1, snpSeries.yAxis);\r\n                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"move\"](exceptAxes_1, snpSeries.xAxis);\r\n                        }\r\n                        else {\r\n                            if (snpSeries.baseAxis == snpSeries.xAxis) {\r\n                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"move\"](exceptAxes_1, snpSeries.yAxis);\r\n                                dataItems_1.push(xAxis.getSeriesDataItem(snpSeries, xAxis.toAxisPosition(xPosition_1), true));\r\n                            }\r\n                            if (snpSeries.baseAxis == snpSeries.yAxis) {\r\n                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"move\"](exceptAxes_1, snpSeries.xAxis);\r\n                                dataItems_1.push(yAxis.getSeriesDataItem(snpSeries, yAxis.toAxisPosition(yPosition_1), true));\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                var closestDataItem_1 = this.getClosest(dataItems_1, xPosition_1, yPosition_1);\r\n                if (closestDataItem_1) {\r\n                    this.series.each(function (series) {\r\n                        var closestSeries = closestDataItem_1.component;\r\n                        if (series != closestSeries) {\r\n                            series.hideTooltip();\r\n                            if (series.xAxis != closestSeries.xAxis) {\r\n                                series.xAxis.hideTooltip();\r\n                            }\r\n                            if (series.yAxis != closestSeries.yAxis) {\r\n                                series.yAxis.hideTooltip();\r\n                            }\r\n                        }\r\n                    });\r\n                    closestDataItem_1.component.showTooltipAtDataItem(closestDataItem_1);\r\n                    cursor.handleSnap(closestDataItem_1.component);\r\n                }\r\n            }\r\n            //}\r\n            this._seriesPoints = [];\r\n            if (this._cursorXPosition != xPosition_1) {\r\n                this.showAxisTooltip(this.xAxes, xPosition_1, exceptAxes_1);\r\n            }\r\n            if (this._cursorYPosition != yPosition_1) {\r\n                this.showAxisTooltip(this.yAxes, yPosition_1, exceptAxes_1);\r\n            }\r\n            if (this.arrangeTooltips) {\r\n                this.sortSeriesTooltips(this._seriesPoints);\r\n            }\r\n            if (this.legend) {\r\n                this.legend.afterDraw();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Finds closest data item to position out of the array of items.\r\n     *\r\n     * @since 4.9.29\r\n     * @param   dataItems  Array of items\r\n     * @param              xPosition X position\r\n     * @param              yPosition Y position\r\n     * @return             Data item\r\n     */\r\n    XYChart.prototype.getClosest = function (dataItems, xPosition, yPosition) {\r\n        var minDistance = Infinity;\r\n        var closestDataItem;\r\n        _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"eachContinue\"](dataItems, function (dataItem) {\r\n            if (dataItem) {\r\n                var xAxis = dataItem.component.xAxis;\r\n                var yAxis = dataItem.component.yAxis;\r\n                var xPos = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.toAxisPosition(xPosition)));\r\n                var yPos = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.toAxisPosition(yPosition)));\r\n                var xField = dataItem.component.xField;\r\n                var yField = dataItem.component.yField;\r\n                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__[\"ValueAxis\"] && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isNumber\"](dataItem.getValue(xField))) {\r\n                    return true;\r\n                }\r\n                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__[\"ValueAxis\"] && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isNumber\"](dataItem.getValue(yField))) {\r\n                    return true;\r\n                }\r\n                var dxPosition = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.getPositionX(dataItem, xField, dataItem.locations[xField], \"valueX\")));\r\n                var dyPosition = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.getPositionY(dataItem, yField, dataItem.locations[yField], \"valueY\")));\r\n                var distance = Math.sqrt(Math.pow(xPos - dxPosition, 2) + Math.pow(yPos - dyPosition, 2));\r\n                if (distance < minDistance) {\r\n                    minDistance = distance;\r\n                    closestDataItem = dataItem;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n        return closestDataItem;\r\n    };\r\n    /**\r\n     * Hides all cursor-related tooltips when the cursor itself is hidden.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.handleHideCursor = function () {\r\n        this.hideObjectTooltip(this.xAxes);\r\n        this.hideObjectTooltip(this.yAxes);\r\n        this.hideObjectTooltip(this.series);\r\n        this._cursorXPosition = undefined;\r\n        this._cursorYPosition = undefined;\r\n        this.updateSeriesLegend();\r\n    };\r\n    /**\r\n     * Updates values for each series' legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.updateSeriesLegend = function () {\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.series.iterator(), function (series) {\r\n            series.updateLegendValue();\r\n        });\r\n    };\r\n    /**\r\n     * Hides a tooltip for a list of objects.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprites  A list of sprites to hide tooltip for\r\n     */\r\n    XYChart.prototype.hideObjectTooltip = function (sprites) {\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](sprites.iterator(), function (sprite) {\r\n            sprite.hideTooltip(0);\r\n        });\r\n    };\r\n    /**\r\n     * Shows a tooltip for all chart's series, using specific coordinates as a\r\n     * reference point.\r\n     *\r\n     * The tooltip might be shown at different coordinates depending on the\r\n     * actual data point's position, overlapping with other tooltips, etc.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Reference point\r\n     */\r\n    XYChart.prototype.showSeriesTooltip = function (position) {\r\n        var _this = this;\r\n        if (!position) {\r\n            this.series.each(function (series) {\r\n                series.hideTooltip();\r\n            });\r\n            return;\r\n        }\r\n        var seriesPoints = [];\r\n        this.series.each(function (series) {\r\n            //if (series.tooltipText || series.tooltipHTML) { // not good, bullets are not hovered then\r\n            if ((series.xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__[\"DateAxis\"] && series.xAxis.snapTooltip) || (series.yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__[\"DateAxis\"] && series.yAxis.snapTooltip)) {\r\n                // void\r\n            }\r\n            else {\r\n                var point = series.showTooltipAtPosition(position.x, position.y);\r\n                if (point) {\r\n                    series.tooltip.setBounds(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spriteRectToSvg\"]({ x: 0, y: 0, width: _this.pixelWidth, height: _this.pixelHeight }, _this));\r\n                    seriesPoints.push({ series: series, point: point });\r\n                }\r\n            }\r\n            //}\r\n        });\r\n        if (this.arrangeTooltips) {\r\n            this.sortSeriesTooltips(seriesPoints);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.sortSeriesTooltips = function (seriesPoints) {\r\n        if (seriesPoints.length > 0) {\r\n            var cursor_1 = this.cursor;\r\n            if (cursor_1 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isNumber\"](cursor_1.maxTooltipDistance)) {\r\n                var cursorPoint_1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToSvg\"]({ x: cursor_1.point.x, y: cursor_1.point.y }, cursor_1);\r\n                var nearestSeries_1;\r\n                var nearestPoint_1;\r\n                var smallestDistance_1 = Infinity;\r\n                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"each\"](seriesPoints, function (seriesPoint) {\r\n                    var series = seriesPoint.series;\r\n                    var fixedPoint = seriesPoint.point;\r\n                    if (fixedPoint) {\r\n                        var point = { x: fixedPoint.x, y: fixedPoint.y };\r\n                        var distance = Math.abs(_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"getDistance\"](point, cursorPoint_1));\r\n                        if (distance < smallestDistance_1) {\r\n                            nearestPoint_1 = point;\r\n                            smallestDistance_1 = distance;\r\n                            nearestSeries_1 = series;\r\n                        }\r\n                    }\r\n                });\r\n                var newSeriesPoints_1 = [];\r\n                if (nearestSeries_1) {\r\n                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"each\"](seriesPoints, function (seriesPoint) {\r\n                        if (Math.abs(_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"getDistance\"](seriesPoint.point, nearestPoint_1)) <= Math.abs(cursor_1.maxTooltipDistance)) {\r\n                            newSeriesPoints_1.push({ series: seriesPoint.series, point: seriesPoint.point });\r\n                        }\r\n                        else {\r\n                            var tooltipDataItem = seriesPoint.series.tooltipDataItem;\r\n                            if (tooltipDataItem) {\r\n                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"each\"](tooltipDataItem.sprites, function (sprite) {\r\n                                    sprite.isHover = false;\r\n                                    sprite.handleOutReal(); // to avoid flicker\r\n                                });\r\n                            }\r\n                            seriesPoint.series.hideTooltip(0);\r\n                        }\r\n                    });\r\n                    if (cursor_1.maxTooltipDistance < 0) {\r\n                        if (newSeriesPoints_1.length > 0) {\r\n                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"each\"](newSeriesPoints_1, function (np) {\r\n                                if (nearestSeries_1 != np.series) {\r\n                                    np.series.hideTooltip(0);\r\n                                }\r\n                            });\r\n                        }\r\n                        newSeriesPoints_1 = [{ series: nearestSeries_1, point: nearestPoint_1 }];\r\n                    }\r\n                }\r\n                seriesPoints = newSeriesPoints_1;\r\n            }\r\n            var topLeft_1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToSvg\"]({ x: -0.5, y: -0.5 }, this.plotContainer);\r\n            var bottomRight_1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToSvg\"]({ x: this.plotContainer.pixelWidth + 0.5, y: this.plotContainer.pixelHeight + 0.5 }, this.plotContainer);\r\n            var sum_1 = 0;\r\n            var filteredSeriesPoints_1 = [];\r\n            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__[\"each\"](seriesPoints, function (seriesPoint) {\r\n                var point = seriesPoint.point;\r\n                if (point && _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"isInRectangle\"](point, { x: topLeft_1.x, y: topLeft_1.y, width: bottomRight_1.x - topLeft_1.x, height: bottomRight_1.y - topLeft_1.y })) {\r\n                    filteredSeriesPoints_1.push({ point: point, series: seriesPoint.series });\r\n                    sum_1 += point.y;\r\n                }\r\n            });\r\n            seriesPoints = filteredSeriesPoints_1;\r\n            var firstSeries = this.series.getIndex(0);\r\n            var inversed = false;\r\n            if (firstSeries && firstSeries.yAxis && firstSeries.yAxis.renderer.inversed) {\r\n                inversed = true;\r\n            }\r\n            if (inversed) {\r\n                seriesPoints.sort(function (a, b) { return _core_utils_Number__WEBPACK_IMPORTED_MODULE_21__[\"order\"](a.point.y, b.point.y); });\r\n            }\r\n            else {\r\n                seriesPoints.sort(function (a, b) { return _core_utils_Number__WEBPACK_IMPORTED_MODULE_21__[\"order\"](b.point.y, a.point.y); });\r\n                seriesPoints.reverse();\r\n            }\r\n            var averageY = sum_1 / seriesPoints.length;\r\n            var maxY = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"svgPointToDocument\"]({ x: 0, y: 0 }, this.svgContainer.SVGContainer).y;\r\n            if (seriesPoints.length > 0) {\r\n                var top_1 = topLeft_1.y;\r\n                var bottom = bottomRight_1.y;\r\n                // TODO is this needed ?\r\n                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToDocument\"]({ x: 0, y: top_1 }, this);\r\n                var dropped = false;\r\n                if (averageY > top_1 + (bottom - top_1) / 2) {\r\n                    var nextHeight = bottom;\r\n                    for (var i = seriesPoints.length - 1; i >= 0; i--) {\r\n                        var series = seriesPoints[i].series;\r\n                        var tooltip = series.tooltip;\r\n                        var pointY = seriesPoints[i].point.y;\r\n                        tooltip.setBounds({ x: 0, y: -maxY, width: this.pixelWidth, height: nextHeight + maxY });\r\n                        if (tooltip.invalid) {\r\n                            tooltip.validate();\r\n                        }\r\n                        tooltip.toBack();\r\n                        nextHeight = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToSvg\"]({ x: 0, y: tooltip.label.pixelY - tooltip.pixelY + pointY - tooltip.pixelMarginTop }, tooltip).y;\r\n                        if (nextHeight < -maxY) {\r\n                            dropped = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (averageY <= top_1 + (bottom - top_1) / 2 || dropped) {\r\n                    var nextY = top_1;\r\n                    for (var i = 0, len = seriesPoints.length; i < len; i++) {\r\n                        var series = seriesPoints[i].series;\r\n                        var pointY = seriesPoints[i].point.y;\r\n                        var tooltip = series.tooltip;\r\n                        tooltip.setBounds({ x: 0, y: nextY, width: this.pixelWidth, height: bottom });\r\n                        if (tooltip.invalid) {\r\n                            tooltip.validate();\r\n                        }\r\n                        tooltip.toBack();\r\n                        nextY = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"spritePointToSvg\"]({ x: 0, y: tooltip.label.pixelY + tooltip.label.measuredHeight - tooltip.pixelY + pointY + tooltip.pixelMarginBottom }, tooltip).y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Shows tooltips for a list of axes at specific position.\r\n     *\r\n     * Position might be X coordinate for horizontal axes, and Y coordinate for\r\n     * vertical axes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axes      List of axes to show tooltip on\r\n     * @param position  Position (px)\r\n     */\r\n    XYChart.prototype.showAxisTooltip = function (axes, position, except) {\r\n        var _this = this;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](axes.iterator(), function (axis) {\r\n            if (!except || except.indexOf(axis) == -1) {\r\n                if (_this.dataItems.length > 0 || axis.dataItems.length > 0) {\r\n                    axis.showTooltipAtPosition(position);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Recalculates the value range for the axis taking into account zoom level & inversed.\r\n     *\r\n     * @param axis   Axis\r\n     * @param range  Range\r\n     * @return Modified range\r\n     */\r\n    XYChart.prototype.getUpdatedRange = function (axis, range) {\r\n        if (!axis) {\r\n            return;\r\n        }\r\n        var start;\r\n        var end;\r\n        var inversed = axis.renderer.inversed;\r\n        if (inversed) {\r\n            _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"invertRange\"](range);\r\n            start = 1 - axis.end;\r\n            end = 1 - axis.start;\r\n        }\r\n        else {\r\n            start = axis.start;\r\n            end = axis.end;\r\n        }\r\n        var difference = end - start;\r\n        return {\r\n            start: start + range.start * difference,\r\n            end: start + range.end * difference\r\n        };\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user finishes zooming using chart\r\n     * cursor, e.g. zooms axes.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorZoomEnd = function (event) {\r\n        var cursor = this.cursor;\r\n        var behavior = cursor.behavior;\r\n        if (behavior == \"zoomX\" || behavior == \"zoomXY\") {\r\n            var xRange = cursor.xRange;\r\n            if (xRange && this.xAxes.length > 0) {\r\n                xRange = this.getUpdatedRange(this.xAxes.getIndex(0), xRange);\r\n                xRange.priority = \"start\";\r\n                this.zoomAxes(this.xAxes, xRange);\r\n            }\r\n        }\r\n        if (behavior == \"zoomY\" || behavior == \"zoomXY\") {\r\n            var yRange = cursor.yRange;\r\n            if (yRange && this.yAxes.length > 0) {\r\n                yRange = this.getUpdatedRange(this.yAxes.getIndex(0), yRange);\r\n                yRange.priority = \"start\";\r\n                this.zoomAxes(this.yAxes, yRange);\r\n            }\r\n        }\r\n        this.handleHideCursor();\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorPanStart = function (event) {\r\n        var xAxis = this.xAxes.getIndex(0);\r\n        if (xAxis) {\r\n            this._panStartXRange = { start: xAxis.start, end: xAxis.end };\r\n        }\r\n        var yAxis = this.yAxes.getIndex(0);\r\n        if (yAxis) {\r\n            this._panStartYRange = { start: yAxis.start, end: yAxis.end };\r\n        }\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user ends panning\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorPanEnd = function (event) {\r\n        var cursor = this.cursor;\r\n        var behavior = cursor.behavior;\r\n        if (this._panEndXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n            var panEndRange = this._panEndXRange;\r\n            var delta = 0;\r\n            if (panEndRange.start < 0) {\r\n                delta = panEndRange.start;\r\n            }\r\n            if (panEndRange.end > 1) {\r\n                delta = panEndRange.end - 1;\r\n            }\r\n            this.zoomAxes(this.xAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, true);\r\n            this._panEndXRange = undefined;\r\n            this._panStartXRange = undefined;\r\n        }\r\n        if (this._panEndYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n            var panEndRange = this._panEndYRange;\r\n            var delta = 0;\r\n            if (panEndRange.start < 0) {\r\n                delta = panEndRange.start;\r\n            }\r\n            if (panEndRange.end > 1) {\r\n                delta = panEndRange.end - 1;\r\n            }\r\n            this.zoomAxes(this.yAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, true);\r\n            this._panEndYRange = undefined;\r\n            this._panStartYRange = undefined;\r\n        }\r\n    };\r\n    XYChart.prototype.handleCursorCanceled = function () {\r\n        this._panEndXRange = undefined;\r\n        this._panStartXRange = undefined;\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorPanning = function (event) {\r\n        var cursor = this.cursor;\r\n        var behavior = cursor.behavior;\r\n        var maxPanOut = cursor.maxPanOut;\r\n        if (this._panStartXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n            var panStartRange = this._panStartXRange;\r\n            var range = cursor.xRange;\r\n            var axisRange = this.getCommonAxisRange(this.xAxes);\r\n            var difference = (panStartRange.end - panStartRange.start);\r\n            var delta = range.start * (axisRange.end - axisRange.start);\r\n            var newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n            var newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n            if (newStart <= 0) {\r\n                newEnd = newStart + difference;\r\n            }\r\n            if (newEnd >= 1) {\r\n                newStart = newEnd - difference;\r\n            }\r\n            var newRange = {\r\n                start: newStart,\r\n                end: newEnd\r\n            };\r\n            this._panEndXRange = newRange;\r\n            this.zoomAxes(this.xAxes, newRange, false, false, cursor.maxPanOut);\r\n        }\r\n        if (this._panStartYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n            var panStartRange = this._panStartYRange;\r\n            var range = cursor.yRange;\r\n            var axisRange = this.getCommonAxisRange(this.yAxes);\r\n            var difference = panStartRange.end - panStartRange.start;\r\n            var delta = range.start * (axisRange.end - axisRange.start);\r\n            var newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n            var newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n            if (newStart <= 0) {\r\n                newEnd = newStart + difference;\r\n            }\r\n            if (newEnd >= 1) {\r\n                newStart = newEnd - difference;\r\n            }\r\n            var newRange = {\r\n                start: newStart,\r\n                end: newEnd\r\n            };\r\n            this._panEndYRange = newRange;\r\n            this.zoomAxes(this.yAxes, newRange, false, false, cursor.maxPanOut);\r\n        }\r\n        this.handleHideCursor();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.handleYAxisSet = function (series) {\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user starts zooming using chart\r\n     * cursor, e.g. zooms axes.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorZoomStart = function (event) {\r\n        // Nothing here\r\n        // This method is here only as a \"placeholder\" for extending classes to\r\n        // override if necessary\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"scrollbarX\", {\r\n        /**\r\n         * @return Scrollbar\r\n         */\r\n        get: function () {\r\n            return this._scrollbarX;\r\n        },\r\n        /**\r\n         * Horizontal (X) scrollbar.\r\n         *\r\n         * @param scrollbar Scrollbar\r\n         */\r\n        set: function (scrollbar) {\r\n            var _this = this;\r\n            if (this._scrollbarX) {\r\n                this.removeDispose(this._scrollbarX);\r\n            }\r\n            this._scrollbarX = scrollbar;\r\n            if (scrollbar) {\r\n                this._disposers.push(scrollbar);\r\n                scrollbar.parent = this.topAxesContainer;\r\n                scrollbar.shouldClone = false;\r\n                scrollbar.startGrip.exportable = false;\r\n                scrollbar.endGrip.exportable = false;\r\n                scrollbar.toBack();\r\n                scrollbar.orientation = \"horizontal\";\r\n                scrollbar.events.on(\"rangechanged\", this.handleXScrollbarChange, this, false);\r\n                // accessibility related\r\n                scrollbar.adapter.add(\"positionValue\", function (arg) {\r\n                    var xAxis = _this.xAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        arg.value = xAxis.getPositionLabel(xAxis.renderer.inversed\r\n                            ? 1 - arg.position\r\n                            : arg.position);\r\n                    }\r\n                    return arg;\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"scrollbarY\", {\r\n        /**\r\n         * @return Scrollbar\r\n         */\r\n        get: function () {\r\n            return this._scrollbarY;\r\n        },\r\n        /**\r\n         * Vertical (Y) scrollbar.\r\n         *\r\n         * @param scrollbar Scrollbar\r\n         */\r\n        set: function (scrollbar) {\r\n            var _this = this;\r\n            if (this._scrollbarY) {\r\n                this.removeDispose(this._scrollbarY);\r\n            }\r\n            this._scrollbarY = scrollbar;\r\n            if (scrollbar) {\r\n                this._disposers.push(scrollbar);\r\n                scrollbar.parent = this.rightAxesContainer;\r\n                scrollbar.startGrip.exportable = false;\r\n                scrollbar.shouldClone = false;\r\n                scrollbar.endGrip.exportable = false;\r\n                scrollbar.toFront();\r\n                scrollbar.orientation = \"vertical\";\r\n                scrollbar.events.on(\"rangechanged\", this.handleYScrollbarChange, this, false);\r\n                // accessibility related\r\n                scrollbar.adapter.add(\"positionValue\", function (arg) {\r\n                    var yAxis = _this.yAxes.getIndex(0);\r\n                    if (yAxis) {\r\n                        arg.value = yAxis.getPositionLabel(arg.position);\r\n                    }\r\n                    return arg;\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Zooms axes affected by the horizontal (X) scrollbar when the selection\r\n     * on it changes.\r\n     *\r\n     * @param event Scrollbar range change event\r\n     */\r\n    XYChart.prototype.handleXScrollbarChange = function (event) {\r\n        if (this.inited) {\r\n            var scrollbar = event.target;\r\n            var range = scrollbar.range;\r\n            if (range.start == 0) {\r\n                range.priority = \"start\";\r\n            }\r\n            if (range.end == 1) {\r\n                range.priority = \"end\";\r\n            }\r\n            range = this.zoomAxes(this.xAxes, range);\r\n            scrollbar.fixRange(range);\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axes affected by the vertical (Y) scrollbar when the selection\r\n     * on it changes.\r\n     *\r\n     * @param event Scrollbar range change event\r\n     */\r\n    XYChart.prototype.handleYScrollbarChange = function (event) {\r\n        if (this.inited) {\r\n            var scrollbar = event.target;\r\n            var range = scrollbar.range;\r\n            if (range.end == 1) {\r\n                range.priority = \"end\";\r\n            }\r\n            if (range.start == 0) {\r\n                range.priority = \"start\";\r\n            }\r\n            range = this.zoomAxes(this.yAxes, range);\r\n            scrollbar.fixRange(range);\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axes that are affected by to specific relative range.\r\n     *\r\n     * @param axes       List of axes to zoom\r\n     * @param range      Range of values to zoom to (0-1)\r\n     * @param instantly  If set to `true` will skip zooming animation\r\n     * @return Recalculated range that is common to all involved axes\r\n     */\r\n    XYChart.prototype.zoomAxes = function (axes, range, instantly, round, declination) {\r\n        var realRange = { start: 0, end: 1 };\r\n        this.showSeriesTooltip(); // hides\r\n        if (!this.dataInvalid) {\r\n            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](axes.iterator(), function (axis) {\r\n                if (axis.zoomable) {\r\n                    if (axis.renderer.inversed) {\r\n                        range = _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"invertRange\"](range);\r\n                    }\r\n                    axis.hideTooltip(0);\r\n                    if (round) {\r\n                        //let diff = range.end - range.start;\r\n                        if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__[\"CategoryAxis\"]) {\r\n                            var cellWidth = axis.getCellEndPosition(0) - axis.getCellStartPosition(0);\r\n                            range.start = axis.roundPosition(range.start + cellWidth / 2 - (axis.startLocation) * cellWidth, axis.startLocation);\r\n                            range.end = axis.roundPosition(range.end - cellWidth / 2 + (1 - axis.endLocation) * cellWidth, axis.endLocation);\r\n                        }\r\n                        else {\r\n                            range.start = axis.roundPosition(range.start + 0.0001, 0, axis.startLocation);\r\n                            range.end = axis.roundPosition(range.end + 0.0001, 0, axis.endLocation);\r\n                        }\r\n                    }\r\n                    var axisRange = axis.zoom(range, instantly, instantly, declination);\r\n                    if (axis.renderer.inversed) {\r\n                        axisRange = _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__[\"invertRange\"](axisRange);\r\n                    }\r\n                    realRange = axisRange;\r\n                }\r\n            });\r\n        }\r\n        return realRange;\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return Mask bullet container?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Indicates if bullet container is masked.\r\n         *\r\n         * If it is set to `true`, any bullets that do not fit into bullet container\r\n         * will be clipped off. Settting to `false` will allow bullets to \"spill out\"\r\n         * of the plot area so they are not cut off.\r\n         *\r\n         * @param value Mask bullet container?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"maskBullets\", value, true) && this.bulletsContainer) {\r\n                if (value) {\r\n                    this.bulletsContainer.mask = this._bulletMask;\r\n                }\r\n                else {\r\n                    this.bulletsContainer.mask = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"arrangeTooltips\", {\r\n        /**\r\n         * @return Arrange tooltips?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"arrangeTooltips\");\r\n        },\r\n        /**\r\n         * Indicates if chart should arrange series tooltips so that they would not\r\n         * overlap.\r\n         *\r\n         * If set to `true` (default), the chart will adjust vertical positions of\r\n         * all simultaneously shown tooltips to avoid overlapping.\r\n         *\r\n         * However, if you have a vertically-arranged chart, it might not make sense,\r\n         * because tooltips would most probably not be aligned horizontally. In this\r\n         * case it would probably be a good idea to set this setting to `false`.\r\n         *\r\n         * @default true\r\n         * @param value Arrange tooltips?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"arrangeTooltips\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles mouse wheel event.\r\n     *\r\n     * @param event  Original event\r\n     */\r\n    XYChart.prototype.handleWheel = function (event) {\r\n        var plotContainer = this.plotContainer;\r\n        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"documentPointToSvg\"](event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n        var plotPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"svgPointToSprite\"](svgPoint, plotContainer);\r\n        var shift = event.shift.y;\r\n        this.handleWheelReal(shift, this.mouseWheelBehavior, plotPoint);\r\n    };\r\n    /**\r\n     * Handles mouse wheel event.\r\n     *\r\n     * @param event  Original event\r\n     */\r\n    XYChart.prototype.handleHorizontalWheel = function (event) {\r\n        var plotContainer = this.plotContainer;\r\n        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"documentPointToSvg\"](event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n        var plotPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__[\"svgPointToSprite\"](svgPoint, plotContainer);\r\n        this.handleWheelReal(event.shift.x, this.horizontalMouseWheelBehavior, plotPoint);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.handleWheelReal = function (shift, mouseWheelBehavior, plotPoint) {\r\n        if (shift != 0) {\r\n            var plotContainer = this.plotContainer;\r\n            var rangeX = this.getCommonAxisRange(this.xAxes);\r\n            var rangeY = this.getCommonAxisRange(this.yAxes);\r\n            var shiftStep = 0.1;\r\n            var maxPanOut = 0;\r\n            if (mouseWheelBehavior == \"panX\" || mouseWheelBehavior == \"panXY\") {\r\n                var differenceX = rangeX.end - rangeX.start;\r\n                var newStartX = Math.max(-maxPanOut, rangeX.start + shiftStep * shift / 100 * (rangeX.end - rangeX.start));\r\n                var newEndX = Math.min(rangeX.end + shiftStep * shift / 100 * (rangeX.end - rangeX.start), 1 + maxPanOut);\r\n                if (newStartX <= 0) {\r\n                    newEndX = newStartX + differenceX;\r\n                }\r\n                if (newEndX >= 1) {\r\n                    newStartX = newEndX - differenceX;\r\n                }\r\n                this.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });\r\n            }\r\n            if (mouseWheelBehavior == \"panY\" || mouseWheelBehavior == \"panXY\") {\r\n                shift *= -1;\r\n                var differenceY = rangeY.end - rangeY.start;\r\n                var newStartY = Math.max(-maxPanOut, rangeY.start + shiftStep * shift / 100 * (rangeY.end - rangeY.start));\r\n                var newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * (rangeY.end - rangeY.start), 1 + maxPanOut);\r\n                if (newStartY <= 0) {\r\n                    newEndY = newStartY + differenceY;\r\n                }\r\n                if (newEndY >= 1) {\r\n                    newStartY = newEndY - differenceY;\r\n                }\r\n                this.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });\r\n            }\r\n            if (mouseWheelBehavior == \"zoomX\" || mouseWheelBehavior == \"zoomXY\") {\r\n                var locationX = plotPoint.x / plotContainer.maxWidth;\r\n                var location2X = this.xAxes.getIndex(0).toAxisPosition(locationX);\r\n                var newStartX = Math.max(-maxPanOut, rangeX.start - shiftStep * (rangeX.end - rangeX.start) * shift / 100 * locationX);\r\n                newStartX = Math.min(newStartX, location2X);\r\n                var newEndX = Math.min(rangeX.end + shiftStep * (rangeX.end - rangeX.start) * shift / 100 * (1 - locationX), 1 + maxPanOut);\r\n                newEndX = Math.max(newEndX, location2X);\r\n                this.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });\r\n            }\r\n            if (mouseWheelBehavior == \"zoomY\" || mouseWheelBehavior == \"zoomXY\") {\r\n                var locationY = plotPoint.y / plotContainer.maxHeight;\r\n                var location2Y = this.yAxes.getIndex(0).toAxisPosition(locationY);\r\n                var newStartY = Math.max(-maxPanOut, rangeY.start - shiftStep * (rangeY.end - rangeY.start) * shift / 100 * (1 - locationY));\r\n                newStartY = Math.min(newStartY, location2Y);\r\n                var newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * locationY * (rangeY.end - rangeY.start), 1 + maxPanOut);\r\n                newEndY = Math.max(newEndY, location2Y);\r\n                this.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"mouseWheelBehavior\", {\r\n        /**\r\n         * @return Mouse wheel behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"mouseWheelBehavior\");\r\n        },\r\n        /**\r\n         * Specifies action for when mouse wheel is used when over the chart.\r\n         *\r\n         * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`,`\"panXY\"`, `\"none\"` (default).\r\n         *\r\n         * You can control sensitivity of wheel zooming via `mouseOptions`.\r\n         *\r\n         * @default \"none\"\r\n         * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n         * @param mouse wheel behavior\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n                if (value != \"none\") {\r\n                    this._mouseWheelDisposer = this.plotContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this.plotContainer.wheelable = false;\r\n                        this.plotContainer.hoverable = false;\r\n                        this._mouseWheelDisposer.dispose();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"horizontalMouseWheelBehavior\", {\r\n        /**\r\n         * @return Horizontal mouse wheel behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"horizontalMouseWheelBehavior\");\r\n        },\r\n        /**\r\n         * Specifies action for when horizontal mouse wheel is used when over the chart.\r\n         *\r\n         * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`, `\"panXY\"`, `\"none\"` (default).\r\n         *\r\n         * @default \"none\"\r\n         * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n         * @param mouse wheel behavior\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"horizontalMouseWheelBehavior\", value)) {\r\n                if (value != \"none\") {\r\n                    this._mouseWheelDisposer2 = this.plotContainer.events.on(\"wheel\", this.handleHorizontalWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer2);\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer2) {\r\n                        this.plotContainer.wheelable = false;\r\n                        this.plotContainer.hoverable = false;\r\n                        this._mouseWheelDisposer2.dispose();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n     * so that particular chart types can popuplate this setting with their\r\n     * own type-specific data fields so they are parsed properly.\r\n     *\r\n     * @param fields  Array of date fields\r\n     * @return Array of date fields populated with chart's date fields\r\n     */\r\n    XYChart.prototype.dataSourceDateFields = function (fields) {\r\n        var _this = this;\r\n        // Process parent\r\n        fields = _super.prototype.dataSourceDateFields.call(this, fields);\r\n        // Check if we have any series with date-fields\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.series.iterator(), function (series) {\r\n            fields = _this.populateDataSourceFields(fields, series.dataFields, [\"dateX\", \"dateY\", \"openDateX\", \"openDateY\"]);\r\n        });\r\n        return fields;\r\n    };\r\n    /**\r\n     * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n     * so that particular chart types can popuplate this setting with their\r\n     * own type-specific data fields so they are parsed properly.\r\n     *\r\n     * @param value  Array of number fields\r\n     * @return Array of number fields populated with chart's number fields\r\n     */\r\n    XYChart.prototype.dataSourceNumberFields = function (fields) {\r\n        var _this = this;\r\n        fields = _super.prototype.dataSourceDateFields.call(this, fields);\r\n        // Check if we have any series with date-fields\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__[\"each\"](this.series.iterator(), function (series) {\r\n            fields = _this.populateDataSourceFields(fields, series.dataFields, [\"valueX\", \"valueY\", \"openValueX\", \"openValueY\"]);\r\n        });\r\n        return fields;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Save axis ranges for later processing\r\n            var xAxes = [];\r\n            var yAxes = [];\r\n            // Set up axes\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.xAxes) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isArray\"](config.xAxes)) {\r\n                for (var i = 0, len = config.xAxes.length; i < len; i++) {\r\n                    if (!config.xAxes[i].type) {\r\n                        throw Error(\"[XYChart error] No type set for xAxes[\" + i + \"].\");\r\n                    }\r\n                    else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.xAxes[i][\"axisRanges\"])) {\r\n                        // Maybe convert string dates?\r\n                        for (var x = 0, len_1 = config.xAxes[i][\"axisRanges\"].length; x < len_1; x++) {\r\n                            var range = config.xAxes[i][\"axisRanges\"][x];\r\n                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](range.date) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isString\"](range.date)) {\r\n                                range.date = this.dateFormatter.parse(range.date);\r\n                            }\r\n                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](range.endDate) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isString\"](range.endDate)) {\r\n                                range.endDate = this.dateFormatter.parse(range.endDate);\r\n                            }\r\n                        }\r\n                        xAxes.push({\r\n                            axisRanges: config.xAxes[i][\"axisRanges\"],\r\n                            index: i\r\n                        });\r\n                        delete (config.xAxes[i][\"axisRanges\"]);\r\n                    }\r\n                }\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.yAxes) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isArray\"](config.yAxes)) {\r\n                for (var i = 0, len = config.yAxes.length; i < len; i++) {\r\n                    if (!config.yAxes[i].type) {\r\n                        throw Error(\"[XYChart error] No type set for yAxes[\" + i + \"].\");\r\n                    }\r\n                    else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.yAxes[i][\"axisRanges\"])) {\r\n                        // Maybe convert string dates?\r\n                        for (var x = 0, len_2 = config.yAxes[i][\"axisRanges\"].length; x < len_2; x++) {\r\n                            var range = config.yAxes[i][\"axisRanges\"][x];\r\n                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](range.date) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isString\"](range.date)) {\r\n                                range.date = this.dateFormatter.parse(range.date);\r\n                            }\r\n                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](range.endDate) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isString\"](range.endDate)) {\r\n                                range.endDate = this.dateFormatter.parse(range.endDate);\r\n                            }\r\n                        }\r\n                        yAxes.push({\r\n                            axisRanges: config.yAxes[i][\"axisRanges\"],\r\n                            index: i\r\n                        });\r\n                        delete (config.yAxes[i][\"axisRanges\"]);\r\n                    }\r\n                }\r\n            }\r\n            // Set up series\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isArray\"](config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    config.series[i].type = config.series[i].type || \"LineSeries\";\r\n                }\r\n            }\r\n            // Set up cursor\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.cursor) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.cursor.type)) {\r\n                config.cursor.type = \"XYCursor\";\r\n            }\r\n            // Set up scrollbars\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.scrollbarX) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.scrollbarX.type)) {\r\n                config.scrollbarX.type = \"Scrollbar\";\r\n            }\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.scrollbarY) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"hasValue\"](config.scrollbarY.type)) {\r\n                config.scrollbarY.type = \"Scrollbar\";\r\n            }\r\n            _super.prototype.processConfig.call(this, config);\r\n            // Finish up with ranges.\r\n            // We need to do this here because series are processed last in JSON\r\n            // config. Therefore their respective objects are not yet are available\r\n            // when axis (and respectively their ranges) are being processed.\r\n            if (yAxes.length) {\r\n                for (var i = 0, len = yAxes.length; i < len; i++) {\r\n                    this.yAxes.getIndex(yAxes[i].index).config = {\r\n                        axisRanges: yAxes[i].axisRanges\r\n                    };\r\n                }\r\n            }\r\n            if (xAxes.length) {\r\n                for (var i = 0, len = xAxes.length; i < len; i++) {\r\n                    this.xAxes.getIndex(xAxes[i].index).config = {\r\n                        axisRanges: xAxes[i].axisRanges\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    XYChart.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"scrollbarX\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"scrollbarX\") {\r\n            return -1;\r\n        }\r\n        else if (a == \"scrollbarY\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"scrollbarY\") {\r\n            return -1;\r\n        }\r\n        else if (a == \"cursor\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"cursor\") {\r\n            return -1;\r\n        }\r\n        else if (a == \"series\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"series\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new Series of type suitable for this chart.\r\n     *\r\n     * @return New series\r\n     */\r\n    XYChart.prototype.createSeries = function () {\r\n        return new _series_XYSeries__WEBPACK_IMPORTED_MODULE_10__[\"XYSeries\"]();\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"zoomOutButton\", {\r\n        /**\r\n         * @return Zoom out button\r\n         */\r\n        get: function () {\r\n            return this._zoomOutButton;\r\n        },\r\n        /**\r\n         * A [[Button]] element that is used for zooming out the chart.\r\n         *\r\n         * This button appears only when chart is zoomed in, and disappears\r\n         * autoamatically when it is zoome dout.\r\n         *\r\n         * @param button  Zoom out button\r\n         */\r\n        set: function (button) {\r\n            var _this = this;\r\n            this._zoomOutButton = button;\r\n            if (button) {\r\n                button.events.on(\"hit\", function () {\r\n                    _this.zoomAxes(_this.xAxes, { start: 0, end: 1 });\r\n                    _this.zoomAxes(_this.yAxes, { start: 0, end: 1 });\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[XYChart]].\r\n     *\r\n     * @param source Source XYChart\r\n     */\r\n    XYChart.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        source.xAxes.each(function (axis) {\r\n            _this.xAxes.push(axis.clone());\r\n        });\r\n        source.yAxes.each(function (axis) {\r\n            _this.yAxes.push(axis.clone());\r\n        });\r\n        //this.xAxes.copyFrom(source.xAxes);\r\n        //this.yAxes.copyFrom(source.yAxes);\r\n        _super.prototype.copyFrom.call(this, source);\r\n        //this.zoomOutButton.copyFrom(source.zoomOutButton);\r\n        if (source.cursor) {\r\n            this.cursor = source.cursor.clone();\r\n        }\r\n        if (source.scrollbarX) {\r\n            this.scrollbarX = source.scrollbarX.clone();\r\n        }\r\n        if (source.scrollbarY) {\r\n            this.scrollbarY = source.scrollbarY.clone();\r\n        }\r\n        //@todo copy all container properties\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        var scrollbarX = this.scrollbarX;\r\n        if (scrollbarX && scrollbarX instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__[\"XYChartScrollbar\"]) {\r\n            scrollbarX.scrollbarChart.disposeData();\r\n        }\r\n        var scrollbarY = this.scrollbarY;\r\n        if (scrollbarY && scrollbarY instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__[\"XYChartScrollbar\"]) {\r\n            scrollbarY.scrollbarChart.disposeData();\r\n        }\r\n        this.xAxes.each(function (axis) {\r\n            if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__[\"CategoryAxis\"]) {\r\n                axis.disposeData();\r\n            }\r\n        });\r\n        this.yAxes.each(function (axis) {\r\n            if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__[\"CategoryAxis\"]) {\r\n                axis.disposeData();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Adds one or several (array) of data items to the existing data.\r\n     *\r\n     * @param rawDataItem One or many raw data item objects\r\n     */\r\n    XYChart.prototype.addData = function (rawDataItem, removeCount) {\r\n        if (this.scrollbarX instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__[\"XYChartScrollbar\"]) {\r\n            this.addScrollbarData(this.scrollbarX, removeCount);\r\n        }\r\n        if (this.scrollbarY instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__[\"XYChartScrollbar\"]) {\r\n            this.addScrollbarData(this.scrollbarY, removeCount);\r\n        }\r\n        _super.prototype.addData.call(this, rawDataItem, removeCount);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.addScrollbarData = function (scrollbar, removeCount) {\r\n        var chart = scrollbar.scrollbarChart;\r\n        chart._parseDataFrom = chart.data.length;\r\n        chart.invalidateData();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.removeScrollbarData = function (scrollbar, removeCount) {\r\n        var chart = scrollbar.scrollbarChart;\r\n        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__[\"isNumber\"](removeCount)) {\r\n            while (removeCount > 0) {\r\n                var dataItem = this.dataItems.getIndex(0);\r\n                if (dataItem) {\r\n                    chart.dataItems.remove(dataItem);\r\n                }\r\n                chart.dataUsers.each(function (dataUser) {\r\n                    var dataItem = dataUser.dataItems.getIndex(0);\r\n                    if (dataItem) {\r\n                        dataUser.dataItems.remove(dataItem);\r\n                    }\r\n                });\r\n                chart._parseDataFrom--;\r\n                removeCount--;\r\n            }\r\n            chart.invalidateData();\r\n        }\r\n    };\r\n    /**\r\n     * Removes elements from the beginning of data\r\n     *\r\n     * @param count number of elements to remove\r\n     */\r\n    XYChart.prototype.removeData = function (count) {\r\n        if (this.scrollbarX instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__[\"XYChartScrollbar\"]) {\r\n            this.removeScrollbarData(this.scrollbarX, count);\r\n        }\r\n        if (this.scrollbarY instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__[\"XYChartScrollbar\"]) {\r\n            this.removeScrollbarData(this.scrollbarY, count);\r\n        }\r\n        _super.prototype.removeData.call(this, count);\r\n    };\r\n    /**\r\n     * @param  value  Tap to activate?\r\n     */\r\n    XYChart.prototype.setTapToActivate = function (value) {\r\n        _super.prototype.setTapToActivate.call(this, value);\r\n        if (this.cursor) {\r\n            this.cursor.interactions.isTouchProtected = value;\r\n            this.plotContainer.interactions.isTouchProtected = value;\r\n        }\r\n    };\r\n    XYChart.prototype.handleTapToActivate = function () {\r\n        _super.prototype.handleTapToActivate.call(this);\r\n        if (this.cursor) {\r\n            this.cursor.interactions.isTouchProtected = false;\r\n            this.plotContainer.interactions.isTouchProtected = false;\r\n        }\r\n    };\r\n    XYChart.prototype.handleTapToActivateDeactivation = function () {\r\n        _super.prototype.handleTapToActivateDeactivation.call(this);\r\n        if (this.cursor) {\r\n            this.cursor.interactions.isTouchProtected = true;\r\n            this.plotContainer.interactions.isTouchProtected = true;\r\n        }\r\n    };\r\n    return XYChart;\r\n}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__[\"SerialChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_14__[\"registry\"].registeredClasses[\"XYChart\"] = XYChart;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Remove horizontal scrollbar on narrow charts.\r\n */\r\n_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__[\"defaultRules\"].push({\r\n    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__[\"ResponsiveBreakpoints\"].maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof XYChart && target.scrollbarX) {\r\n            var state = target.states.create(stateId);\r\n            var sbstate = target.scrollbarX.states.create(stateId);\r\n            sbstate.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove vertical scrollbar on short charts.\r\n */\r\n_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__[\"defaultRules\"].push({\r\n    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__[\"ResponsiveBreakpoints\"].maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof XYChart && target.scrollbarY) {\r\n            var state = target.states.create(stateId);\r\n            var sbstate = target.scrollbarY.states.create(stateId);\r\n            sbstate.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=XYChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js ***!
  \******************************************************************************/
/*! exports provided: XYChart3DDataItem, XYChart3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYChart3DDataItem\", function() { return XYChart3DDataItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XYChart3D\", function() { return XYChart3D; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _XYChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\");\n/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ \"./node_modules/@amcharts/amcharts4/.internal/core/Container.js\");\n/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Sprite */ \"./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js\");\n/* harmony import */ var _axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../axes/AxisRendererX3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js\");\n/* harmony import */ var _axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/AxisRendererY3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js\");\n/* harmony import */ var _series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../series/ColumnSeries3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Registry */ \"./node_modules/@amcharts/amcharts4/.internal/core/Registry.js\");\n/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js\");\n/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Utils */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js\");\n/**\r\n * Module for building 3D serial charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYChart3DDataItem = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYChart3DDataItem, _super);\r\n    function XYChart3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYChart3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return XYChart3DDataItem;\r\n}(_XYChart__WEBPACK_IMPORTED_MODULE_1__[\"XYChartDataItem\"]));\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a 3D XY chart.\r\n *\r\n * @see {@link IXYChart3DEvents} for a list of available Events\r\n * @see {@link IXYChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nvar XYChart3D = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(XYChart3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChart3D() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Type of the axis renderer to use for X axes.\r\n         */\r\n        _this._axisRendererX = _axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_4__[\"AxisRendererX3D\"];\r\n        /**\r\n         * Type of the axis renderer to use for Y axes.\r\n         */\r\n        _this._axisRendererY = _axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_5__[\"AxisRendererY3D\"];\r\n        _this.className = \"XYChart3D\";\r\n        // Set defaults\r\n        _this.depth = 30;\r\n        _this.angle = 30;\r\n        // Creeate container for columns\r\n        var columnsContainer = _this.seriesContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"]);\r\n        columnsContainer.shouldClone = false;\r\n        columnsContainer.isMeasured = false;\r\n        columnsContainer.layout = \"none\";\r\n        _this.columnsContainer = columnsContainer;\r\n        _this.columnsContainer.mask = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_3__[\"Sprite\"]);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This is done because for some reason IE doesn't change mask if path of a\r\n     * mask changes.\r\n     */\r\n    XYChart3D.prototype.updateSeriesMasks = function () {\r\n        _super.prototype.updateSeriesMasks.call(this);\r\n        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__[\"isIE\"]()) {\r\n            var columnsContainer = this.columnsContainer;\r\n            var mask = columnsContainer.mask;\r\n            columnsContainer.mask = undefined;\r\n            columnsContainer.mask = mask;\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth of the 3D chart / columns in pixels.\r\n         *\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value);\r\n            this.fixLayout();\r\n            this.invalidateDataUsers();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle the chart is viewed at.\r\n         *\r\n         * @todo Description (review)\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n            this.fixLayout();\r\n            this.invalidateDataUsers();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart3D.prototype, \"dx3D\", {\r\n        /**\r\n         * A calculated horizontal 3D offset (px).\r\n         *\r\n         * @readonly\r\n         * @return Offset (px)\r\n         */\r\n        get: function () {\r\n            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"cos\"](this.angle) * this.depth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart3D.prototype, \"dy3D\", {\r\n        /**\r\n         * A calculated vertical 3D offset (px).\r\n         *\r\n         * @readonly\r\n         * @return Offset (px)\r\n         */\r\n        get: function () {\r\n            return -_core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"sin\"](this.angle) * this.depth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * (Re)validates layout\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart3D.prototype.validateLayout = function () {\r\n        _super.prototype.validateLayout.call(this);\r\n        this.fixColumns();\r\n    };\r\n    /**\r\n     * Updates the layout (padding and scrollbar positions) to accommodate for\r\n     * 3D depth and angle.\r\n     */\r\n    XYChart3D.prototype.fixLayout = function () {\r\n        this.chartContainer.marginTop = -this.dy3D;\r\n        this.chartContainer.paddingRight = this.dx3D;\r\n        if (this.scrollbarX) {\r\n            this.scrollbarX.dy = this.dy3D;\r\n            this.scrollbarX.dx = this.dx3D;\r\n        }\r\n        if (this.scrollbarY) {\r\n            this.scrollbarY.dy = this.dy3D;\r\n            this.scrollbarY.dx = this.dx3D;\r\n        }\r\n        this.fixColumns();\r\n        _super.prototype.fixLayout.call(this);\r\n    };\r\n    /**\r\n     * Updates column positions, offset and dimensions based on chart's angle\r\n     * and depth.\r\n     */\r\n    XYChart3D.prototype.fixColumns = function () {\r\n        var _this = this;\r\n        var count = 1;\r\n        var i = 0;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.series.iterator(), function (series) {\r\n            if (series instanceof _series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_6__[\"ColumnSeries3D\"]) {\r\n                if (!series.clustered && i > 0) {\r\n                    count++;\r\n                }\r\n                series.depthIndex = count - 1;\r\n                i++;\r\n            }\r\n        });\r\n        var s = 0;\r\n        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__[\"each\"](this.series.iterator(), function (series) {\r\n            if (series instanceof _series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_6__[\"ColumnSeries3D\"]) {\r\n                series.depth = _this.depth / (count);\r\n                series.angle = _this.angle;\r\n                if (series.columnsContainer == _this.columnsContainer) {\r\n                    series.dx = _this.depth / (count) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"cos\"](_this.angle) * (series.depthIndex);\r\n                    series.dy = -_this.depth / (count) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__[\"sin\"](_this.angle) * (series.depthIndex);\r\n                }\r\n                var inversed_1 = false;\r\n                if ((series.baseAxis == series.xAxis && series.xAxis.renderer.inversed) || (series.baseAxis == series.yAxis && series.yAxis.renderer.inversed)) {\r\n                    inversed_1 = true;\r\n                }\r\n                var i_1 = 1;\r\n                series.dataItems.each(function (dataItem) {\r\n                    var column = dataItem.column;\r\n                    if (column) {\r\n                        if (inversed_1) {\r\n                            column.zIndex = 1000 * (1000 - i_1) + s - series.depthIndex * 100;\r\n                        }\r\n                        else {\r\n                            column.zIndex = 1000 * i_1 + s - series.depthIndex * 100;\r\n                        }\r\n                    }\r\n                    i_1++;\r\n                });\r\n                if (inversed_1) {\r\n                    s--;\r\n                }\r\n                else {\r\n                    s++;\r\n                }\r\n            }\r\n        });\r\n        this.maskColumns();\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChart3D.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"hasValue\"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__[\"isArray\"](config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    config.series[i].type = config.series[i].type || \"ColumnSeries3D\";\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    XYChart3D.prototype.maskColumns = function () {\r\n        var w = this.plotContainer.pixelWidth;\r\n        var h = this.plotContainer.pixelHeight;\r\n        var dx = this.dx3D;\r\n        var dy = this.dy3D;\r\n        var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"moveTo\"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"lineTo\"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"lineTo\"]({ x: w + dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"lineTo\"]({ x: w + dx, y: h + dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"lineTo\"]({ x: w, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"lineTo\"]({ x: w, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"lineTo\"]({ x: 0, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__[\"closePath\"]();\r\n        var columnsContainer = this.columnsContainer;\r\n        if (columnsContainer && columnsContainer.mask) {\r\n            columnsContainer.mask.path = path;\r\n        }\r\n    };\r\n    return XYChart3D;\r\n}(_XYChart__WEBPACK_IMPORTED_MODULE_1__[\"XYChart\"]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n_core_Registry__WEBPACK_IMPORTED_MODULE_7__[\"registry\"].registeredClasses[\"XYChart3D\"] = XYChart3D;\r\n//# sourceMappingURL=XYChart3D.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js ***!
  \************************************************************************************/
/*! exports provided: QuadraticCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QuadraticCurve\", function() { return QuadraticCurve; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Line */ \"./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js\");\n/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Color */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js\");\n/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Path */ \"./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js\");\n/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Math */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js\");\n/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ \"./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js\");\n/**\r\n * Functionality for drawing quadratic curves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IQuadraticCurveEvents} for a list of available events\r\n * @see {@link IQuadraticCurveAdapters} for a list of available Adapters\r\n */\r\nvar QuadraticCurve = /** @class */ (function (_super) {\r\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"])(QuadraticCurve, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function QuadraticCurve() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"QuadraticCurve\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.pixelPerfect = false;\r\n        _this.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_2__[\"color\"])();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the waved line.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    QuadraticCurve.prototype.draw = function () {\r\n        //super.draw();\r\n        if (_utils_Type__WEBPACK_IMPORTED_MODULE_5__[\"isNumber\"](this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy)) {\r\n            var p1 = { x: this.x1, y: this.y1 };\r\n            var p2 = { x: this.x2, y: this.y2 };\r\n            var cp = { x: this.cpx, y: this.cpy };\r\n            var d = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"moveTo\"](p1) + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__[\"quadraticCurveTo\"](p2, cp);\r\n            this.path = d;\r\n        }\r\n    };\r\n    Object.defineProperty(QuadraticCurve.prototype, \"cpx\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cpx\");\r\n        },\r\n        /**\r\n         * X coordinate of control point.\r\n         *\r\n         * @param value X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cpx\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuadraticCurve.prototype, \"cpy\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cpy\");\r\n        },\r\n        /**\r\n         * Y coordinate of control point.\r\n         *\r\n         * @param value Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cpy\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position along the line (0-1) into pixel coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinates\r\n     */\r\n    QuadraticCurve.prototype.positionToPoint = function (position) {\r\n        var p1 = { x: this.x1, y: this.y1 };\r\n        var cp = { x: this.cpx, y: this.cpy };\r\n        var p2 = { x: this.x2, y: this.y2 };\r\n        var point1 = _utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"getPointOnQuadraticCurve\"](p1, p2, cp, position);\r\n        var point2 = _utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"getPointOnQuadraticCurve\"](p1, p2, cp, position + 0.001);\r\n        return { x: point1.x, y: point1.y, angle: _utils_Math__WEBPACK_IMPORTED_MODULE_4__[\"getAngle\"](point1, point2) };\r\n    };\r\n    return QuadraticCurve;\r\n}(_Line__WEBPACK_IMPORTED_MODULE_1__[\"Line\"]));\r\n\r\n//# sourceMappingURL=QuadraticCurve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNC8uaW50ZXJuYWwvY29yZS9lbGVtZW50cy9RdWFkcmF0aWNDdXJ2ZS5qcz80ZmE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzhCO0FBQ1M7QUFDSTtBQUNKO0FBQ0E7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw0QkFBNEI7QUFDckMsU0FBUyw4QkFBOEI7QUFDdkM7QUFDQTtBQUNBLElBQUksdURBQVM7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBEQUFLO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBYztBQUMxQixzQkFBc0I7QUFDdEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0QixvQkFBb0Isc0RBQVksT0FBTyxnRUFBc0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQixxQkFBcUIsb0VBQThCO0FBQ25ELHFCQUFxQixvRUFBOEI7QUFDbkQsZ0JBQWdCLGtDQUFrQyxvREFBYztBQUNoRTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLDBDQUFJO0FBQ29CO0FBQzFCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czQvLmludGVybmFsL2NvcmUvZWxlbWVudHMvUXVhZHJhdGljQ3VydmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRnVuY3Rpb25hbGl0eSBmb3IgZHJhd2luZyBxdWFkcmF0aWMgY3VydmVzLlxyXG4gKi9cclxuaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XHJcbi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIElNUE9SVFNcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5pbXBvcnQgeyBMaW5lIH0gZnJvbSBcIi4vTGluZVwiO1xyXG5pbXBvcnQgeyBjb2xvciB9IGZyb20gXCIuLi91dGlscy9Db2xvclwiO1xyXG5pbXBvcnQgKiBhcyAkcGF0aCBmcm9tIFwiLi4vcmVuZGVyaW5nL1BhdGhcIjtcclxuaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uL3V0aWxzL01hdGhcIjtcclxuaW1wb3J0ICogYXMgJHR5cGUgZnJvbSBcIi4uL3V0aWxzL1R5cGVcIjtcclxuLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogTUFJTiBDTEFTU1xyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEBoaWRkZW5cclxuICovXHJcbi8qKlxyXG4gKiBEcmF3cyBhIHdhdmVkIGxpbmUuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIElRdWFkcmF0aWNDdXJ2ZUV2ZW50c30gZm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZXZlbnRzXHJcbiAqIEBzZWUge0BsaW5rIElRdWFkcmF0aWNDdXJ2ZUFkYXB0ZXJzfSBmb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBBZGFwdGVyc1xyXG4gKi9cclxudmFyIFF1YWRyYXRpY0N1cnZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKFF1YWRyYXRpY0N1cnZlLCBfc3VwZXIpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3RvclxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBRdWFkcmF0aWNDdXJ2ZSgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLmNsYXNzTmFtZSA9IFwiUXVhZHJhdGljQ3VydmVcIjtcclxuICAgICAgICBfdGhpcy5lbGVtZW50ID0gX3RoaXMucGFwZXIuYWRkKFwicGF0aFwiKTtcclxuICAgICAgICBfdGhpcy5waXhlbFBlcmZlY3QgPSBmYWxzZTtcclxuICAgICAgICBfdGhpcy5maWxsID0gY29sb3IoKTtcclxuICAgICAgICBfdGhpcy5hcHBseVRoZW1lKCk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBEcmF3cyB0aGUgd2F2ZWQgbGluZS5cclxuICAgICAqXHJcbiAgICAgKiBAaWdub3JlIEV4Y2x1ZGUgZnJvbSBkb2NzXHJcbiAgICAgKi9cclxuICAgIFF1YWRyYXRpY0N1cnZlLnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vc3VwZXIuZHJhdygpO1xyXG4gICAgICAgIGlmICgkdHlwZS5pc051bWJlcih0aGlzLngxICsgdGhpcy54MiArIHRoaXMueTEgKyB0aGlzLnkyICsgdGhpcy5jcHggKyB0aGlzLmNweSkpIHtcclxuICAgICAgICAgICAgdmFyIHAxID0geyB4OiB0aGlzLngxLCB5OiB0aGlzLnkxIH07XHJcbiAgICAgICAgICAgIHZhciBwMiA9IHsgeDogdGhpcy54MiwgeTogdGhpcy55MiB9O1xyXG4gICAgICAgICAgICB2YXIgY3AgPSB7IHg6IHRoaXMuY3B4LCB5OiB0aGlzLmNweSB9O1xyXG4gICAgICAgICAgICB2YXIgZCA9ICRwYXRoLm1vdmVUbyhwMSkgKyAkcGF0aC5xdWFkcmF0aWNDdXJ2ZVRvKHAyLCBjcCk7XHJcbiAgICAgICAgICAgIHRoaXMucGF0aCA9IGQ7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShRdWFkcmF0aWNDdXJ2ZS5wcm90b3R5cGUsIFwiY3B4XCIsIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcmV0dXJuIFhcclxuICAgICAgICAgKi9cclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJvcGVydHlWYWx1ZShcImNweFwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFggY29vcmRpbmF0ZSBvZiBjb250cm9sIHBvaW50LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIHZhbHVlIFhcclxuICAgICAgICAgKi9cclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFByb3BlcnR5VmFsdWUoXCJjcHhcIiwgdmFsdWUsIHRydWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFF1YWRyYXRpY0N1cnZlLnByb3RvdHlwZSwgXCJjcHlcIiwge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEByZXR1cm4gWVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eVZhbHVlKFwiY3B5XCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogWSBjb29yZGluYXRlIG9mIGNvbnRyb2wgcG9pbnQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgWVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0UHJvcGVydHlWYWx1ZShcImNweVwiLCB2YWx1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIHJlbGF0aXZlIHBvc2l0aW9uIGFsb25nIHRoZSBsaW5lICgwLTEpIGludG8gcGl4ZWwgY29vcmRpbmF0ZXMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHBvc2l0aW9uICBQb3NpdGlvbiAoMC0xKVxyXG4gICAgICogQHJldHVybiBDb29yZGluYXRlc1xyXG4gICAgICovXHJcbiAgICBRdWFkcmF0aWNDdXJ2ZS5wcm90b3R5cGUucG9zaXRpb25Ub1BvaW50ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgdmFyIHAxID0geyB4OiB0aGlzLngxLCB5OiB0aGlzLnkxIH07XHJcbiAgICAgICAgdmFyIGNwID0geyB4OiB0aGlzLmNweCwgeTogdGhpcy5jcHkgfTtcclxuICAgICAgICB2YXIgcDIgPSB7IHg6IHRoaXMueDIsIHk6IHRoaXMueTIgfTtcclxuICAgICAgICB2YXIgcG9pbnQxID0gJG1hdGguZ2V0UG9pbnRPblF1YWRyYXRpY0N1cnZlKHAxLCBwMiwgY3AsIHBvc2l0aW9uKTtcclxuICAgICAgICB2YXIgcG9pbnQyID0gJG1hdGguZ2V0UG9pbnRPblF1YWRyYXRpY0N1cnZlKHAxLCBwMiwgY3AsIHBvc2l0aW9uICsgMC4wMDEpO1xyXG4gICAgICAgIHJldHVybiB7IHg6IHBvaW50MS54LCB5OiBwb2ludDEueSwgYW5nbGU6ICRtYXRoLmdldEFuZ2xlKHBvaW50MSwgcG9pbnQyKSB9O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBRdWFkcmF0aWNDdXJ2ZTtcclxufShMaW5lKSk7XHJcbmV4cG9ydCB7IFF1YWRyYXRpY0N1cnZlIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1YWRyYXRpY0N1cnZlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js\n");

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/charts.js":
/*!****************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/charts.js ***!
  \****************************************************/
/*! exports provided: GaugeChartDataItem, GaugeChart, RadarChartDataItem, RadarChart, XYChartDataItem, XYChart, SerialChartDataItem, SerialChart, PieChart3DDataItem, PieChart3D, PieChartDataItem, PieChart, SlicedChart, SlicedChartDataItem, FlowDiagramDataItem, FlowDiagram, SankeyDiagramDataItem, SankeyDiagram, ChordDiagramDataItem, ChordDiagram, TreeMapDataItem, TreeMap, XYChart3DDataItem, XYChart3D, ChartDataItem, Chart, LegendDataItem, Legend, LegendSettings, HeatLegend, SeriesDataItem, Series, XYSeriesDataItem, XYSeries, LineSeriesDataItem, LineSeries, LineSeriesSegment, CandlestickSeriesDataItem, CandlestickSeries, OHLCSeriesDataItem, OHLCSeries, ColumnSeriesDataItem, ColumnSeries, StepLineSeriesDataItem, StepLineSeries, RadarSeriesDataItem, RadarSeries, RadarColumnSeriesDataItem, RadarColumnSeries, PieSeriesDataItem, PieSeries, FunnelSeries, FunnelSeriesDataItem, PyramidSeries, PyramidSeriesDataItem, PictorialStackedSeries, PictorialStackedSeriesDataItem, PieTick, FunnelSlice, PieSeries3DDataItem, PieSeries3D, TreeMapSeriesDataItem, TreeMapSeries, ColumnSeries3DDataItem, ColumnSeries3D, ConeSeriesDataItem, ConeSeries, CurvedColumnSeries, CurvedColumnSeriesDataItem, AxisDataItem, Axis, Grid, AxisTick, AxisLabel, AxisLine, AxisFill, AxisRenderer, AxisBreak, AxisBullet, ValueAxisDataItem, ValueAxis, CategoryAxisDataItem, CategoryAxis, CategoryAxisBreak, DateAxisDataItem, DateAxis, DurationAxisDataItem, DurationAxis, DateAxisBreak, ValueAxisBreak, AxisRendererX, AxisRendererY, AxisRendererRadial, AxisLabelCircular, AxisRendererCircular, AxisFillCircular, GridCircular, AxisRendererX3D, AxisRendererY3D, Tick, Bullet, LabelBullet, CircleBullet, ErrorBullet, XYChartScrollbar, ClockHand, FlowDiagramNode, FlowDiagramLink, SankeyNode, SankeyLink, ChordNode, ChordLink, NavigationBarDataItem, NavigationBar, Column, Candlestick, OHLC, RadarColumn, Column3D, ConeColumn, CurvedColumn, XYCursor, Cursor, RadarCursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _internal_charts_types_GaugeChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./.internal/charts/types/GaugeChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GaugeChartDataItem\", function() { return _internal_charts_types_GaugeChart__WEBPACK_IMPORTED_MODULE_0__[\"GaugeChartDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GaugeChart\", function() { return _internal_charts_types_GaugeChart__WEBPACK_IMPORTED_MODULE_0__[\"GaugeChart\"]; });\n\n/* harmony import */ var _internal_charts_types_RadarChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./.internal/charts/types/RadarChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarChartDataItem\", function() { return _internal_charts_types_RadarChart__WEBPACK_IMPORTED_MODULE_1__[\"RadarChartDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarChart\", function() { return _internal_charts_types_RadarChart__WEBPACK_IMPORTED_MODULE_1__[\"RadarChart\"]; });\n\n/* harmony import */ var _internal_charts_types_XYChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./.internal/charts/types/XYChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYChartDataItem\", function() { return _internal_charts_types_XYChart__WEBPACK_IMPORTED_MODULE_2__[\"XYChartDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYChart\", function() { return _internal_charts_types_XYChart__WEBPACK_IMPORTED_MODULE_2__[\"XYChart\"]; });\n\n/* harmony import */ var _internal_charts_types_SerialChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./.internal/charts/types/SerialChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SerialChartDataItem\", function() { return _internal_charts_types_SerialChart__WEBPACK_IMPORTED_MODULE_3__[\"SerialChartDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SerialChart\", function() { return _internal_charts_types_SerialChart__WEBPACK_IMPORTED_MODULE_3__[\"SerialChart\"]; });\n\n/* harmony import */ var _internal_charts_types_PieChart3D__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./.internal/charts/types/PieChart3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieChart3DDataItem\", function() { return _internal_charts_types_PieChart3D__WEBPACK_IMPORTED_MODULE_4__[\"PieChart3DDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieChart3D\", function() { return _internal_charts_types_PieChart3D__WEBPACK_IMPORTED_MODULE_4__[\"PieChart3D\"]; });\n\n/* harmony import */ var _internal_charts_types_PieChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./.internal/charts/types/PieChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieChartDataItem\", function() { return _internal_charts_types_PieChart__WEBPACK_IMPORTED_MODULE_5__[\"PieChartDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieChart\", function() { return _internal_charts_types_PieChart__WEBPACK_IMPORTED_MODULE_5__[\"PieChart\"]; });\n\n/* harmony import */ var _internal_charts_types_SlicedChart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./.internal/charts/types/SlicedChart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SlicedChart\", function() { return _internal_charts_types_SlicedChart__WEBPACK_IMPORTED_MODULE_6__[\"SlicedChart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SlicedChartDataItem\", function() { return _internal_charts_types_SlicedChart__WEBPACK_IMPORTED_MODULE_6__[\"SlicedChartDataItem\"]; });\n\n/* harmony import */ var _internal_charts_types_FlowDiagram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./.internal/charts/types/FlowDiagram */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagramDataItem\", function() { return _internal_charts_types_FlowDiagram__WEBPACK_IMPORTED_MODULE_7__[\"FlowDiagramDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagram\", function() { return _internal_charts_types_FlowDiagram__WEBPACK_IMPORTED_MODULE_7__[\"FlowDiagram\"]; });\n\n/* harmony import */ var _internal_charts_types_SankeyDiagram__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./.internal/charts/types/SankeyDiagram */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SankeyDiagramDataItem\", function() { return _internal_charts_types_SankeyDiagram__WEBPACK_IMPORTED_MODULE_8__[\"SankeyDiagramDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SankeyDiagram\", function() { return _internal_charts_types_SankeyDiagram__WEBPACK_IMPORTED_MODULE_8__[\"SankeyDiagram\"]; });\n\n/* harmony import */ var _internal_charts_types_ChordDiagram__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./.internal/charts/types/ChordDiagram */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChordDiagramDataItem\", function() { return _internal_charts_types_ChordDiagram__WEBPACK_IMPORTED_MODULE_9__[\"ChordDiagramDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChordDiagram\", function() { return _internal_charts_types_ChordDiagram__WEBPACK_IMPORTED_MODULE_9__[\"ChordDiagram\"]; });\n\n/* harmony import */ var _internal_charts_types_TreeMap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./.internal/charts/types/TreeMap */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TreeMapDataItem\", function() { return _internal_charts_types_TreeMap__WEBPACK_IMPORTED_MODULE_10__[\"TreeMapDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TreeMap\", function() { return _internal_charts_types_TreeMap__WEBPACK_IMPORTED_MODULE_10__[\"TreeMap\"]; });\n\n/* harmony import */ var _internal_charts_types_XYChart3D__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./.internal/charts/types/XYChart3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYChart3DDataItem\", function() { return _internal_charts_types_XYChart3D__WEBPACK_IMPORTED_MODULE_11__[\"XYChart3DDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYChart3D\", function() { return _internal_charts_types_XYChart3D__WEBPACK_IMPORTED_MODULE_11__[\"XYChart3D\"]; });\n\n/* harmony import */ var _internal_charts_Chart__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./.internal/charts/Chart */ \"./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChartDataItem\", function() { return _internal_charts_Chart__WEBPACK_IMPORTED_MODULE_12__[\"ChartDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Chart\", function() { return _internal_charts_Chart__WEBPACK_IMPORTED_MODULE_12__[\"Chart\"]; });\n\n/* harmony import */ var _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./.internal/charts/Legend */ \"./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LegendDataItem\", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__[\"LegendDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Legend\", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__[\"Legend\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LegendSettings\", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__[\"LegendSettings\"]; });\n\n/* harmony import */ var _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./.internal/charts/elements/HeatLegend */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HeatLegend\", function() { return _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_14__[\"HeatLegend\"]; });\n\n/* harmony import */ var _internal_charts_series_Series__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./.internal/charts/series/Series */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SeriesDataItem\", function() { return _internal_charts_series_Series__WEBPACK_IMPORTED_MODULE_15__[\"SeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Series\", function() { return _internal_charts_series_Series__WEBPACK_IMPORTED_MODULE_15__[\"Series\"]; });\n\n/* harmony import */ var _internal_charts_series_XYSeries__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./.internal/charts/series/XYSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYSeriesDataItem\", function() { return _internal_charts_series_XYSeries__WEBPACK_IMPORTED_MODULE_16__[\"XYSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYSeries\", function() { return _internal_charts_series_XYSeries__WEBPACK_IMPORTED_MODULE_16__[\"XYSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_LineSeries__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./.internal/charts/series/LineSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LineSeriesDataItem\", function() { return _internal_charts_series_LineSeries__WEBPACK_IMPORTED_MODULE_17__[\"LineSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LineSeries\", function() { return _internal_charts_series_LineSeries__WEBPACK_IMPORTED_MODULE_17__[\"LineSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_LineSeriesSegment__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./.internal/charts/series/LineSeriesSegment */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LineSeriesSegment\", function() { return _internal_charts_series_LineSeriesSegment__WEBPACK_IMPORTED_MODULE_18__[\"LineSeriesSegment\"]; });\n\n/* harmony import */ var _internal_charts_series_CandlestickSeries__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./.internal/charts/series/CandlestickSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CandlestickSeriesDataItem\", function() { return _internal_charts_series_CandlestickSeries__WEBPACK_IMPORTED_MODULE_19__[\"CandlestickSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CandlestickSeries\", function() { return _internal_charts_series_CandlestickSeries__WEBPACK_IMPORTED_MODULE_19__[\"CandlestickSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_OHLCSeries__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./.internal/charts/series/OHLCSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OHLCSeriesDataItem\", function() { return _internal_charts_series_OHLCSeries__WEBPACK_IMPORTED_MODULE_20__[\"OHLCSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OHLCSeries\", function() { return _internal_charts_series_OHLCSeries__WEBPACK_IMPORTED_MODULE_20__[\"OHLCSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./.internal/charts/series/ColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeriesDataItem\", function() { return _internal_charts_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_21__[\"ColumnSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeries\", function() { return _internal_charts_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_21__[\"ColumnSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_StepLineSeries__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./.internal/charts/series/StepLineSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StepLineSeriesDataItem\", function() { return _internal_charts_series_StepLineSeries__WEBPACK_IMPORTED_MODULE_22__[\"StepLineSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StepLineSeries\", function() { return _internal_charts_series_StepLineSeries__WEBPACK_IMPORTED_MODULE_22__[\"StepLineSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_RadarSeries__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./.internal/charts/series/RadarSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarSeriesDataItem\", function() { return _internal_charts_series_RadarSeries__WEBPACK_IMPORTED_MODULE_23__[\"RadarSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarSeries\", function() { return _internal_charts_series_RadarSeries__WEBPACK_IMPORTED_MODULE_23__[\"RadarSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_RadarColumnSeries__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./.internal/charts/series/RadarColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarColumnSeriesDataItem\", function() { return _internal_charts_series_RadarColumnSeries__WEBPACK_IMPORTED_MODULE_24__[\"RadarColumnSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarColumnSeries\", function() { return _internal_charts_series_RadarColumnSeries__WEBPACK_IMPORTED_MODULE_24__[\"RadarColumnSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_PieSeries__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./.internal/charts/series/PieSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieSeriesDataItem\", function() { return _internal_charts_series_PieSeries__WEBPACK_IMPORTED_MODULE_25__[\"PieSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieSeries\", function() { return _internal_charts_series_PieSeries__WEBPACK_IMPORTED_MODULE_25__[\"PieSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_FunnelSeries__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./.internal/charts/series/FunnelSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FunnelSeries\", function() { return _internal_charts_series_FunnelSeries__WEBPACK_IMPORTED_MODULE_26__[\"FunnelSeries\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FunnelSeriesDataItem\", function() { return _internal_charts_series_FunnelSeries__WEBPACK_IMPORTED_MODULE_26__[\"FunnelSeriesDataItem\"]; });\n\n/* harmony import */ var _internal_charts_series_PyramidSeries__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./.internal/charts/series/PyramidSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PyramidSeries\", function() { return _internal_charts_series_PyramidSeries__WEBPACK_IMPORTED_MODULE_27__[\"PyramidSeries\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PyramidSeriesDataItem\", function() { return _internal_charts_series_PyramidSeries__WEBPACK_IMPORTED_MODULE_27__[\"PyramidSeriesDataItem\"]; });\n\n/* harmony import */ var _internal_charts_series_PictorialStackedSeries__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./.internal/charts/series/PictorialStackedSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PictorialStackedSeries\", function() { return _internal_charts_series_PictorialStackedSeries__WEBPACK_IMPORTED_MODULE_28__[\"PictorialStackedSeries\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PictorialStackedSeriesDataItem\", function() { return _internal_charts_series_PictorialStackedSeries__WEBPACK_IMPORTED_MODULE_28__[\"PictorialStackedSeriesDataItem\"]; });\n\n/* harmony import */ var _internal_charts_elements_PieTick__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./.internal/charts/elements/PieTick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieTick\", function() { return _internal_charts_elements_PieTick__WEBPACK_IMPORTED_MODULE_29__[\"PieTick\"]; });\n\n/* harmony import */ var _internal_charts_elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./.internal/charts/elements/FunnelSlice */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FunnelSlice\", function() { return _internal_charts_elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_30__[\"FunnelSlice\"]; });\n\n/* harmony import */ var _internal_charts_series_PieSeries3D__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./.internal/charts/series/PieSeries3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieSeries3DDataItem\", function() { return _internal_charts_series_PieSeries3D__WEBPACK_IMPORTED_MODULE_31__[\"PieSeries3DDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PieSeries3D\", function() { return _internal_charts_series_PieSeries3D__WEBPACK_IMPORTED_MODULE_31__[\"PieSeries3D\"]; });\n\n/* harmony import */ var _internal_charts_series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./.internal/charts/series/TreeMapSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TreeMapSeriesDataItem\", function() { return _internal_charts_series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_32__[\"TreeMapSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TreeMapSeries\", function() { return _internal_charts_series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_32__[\"TreeMapSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./.internal/charts/series/ColumnSeries3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeries3DDataItem\", function() { return _internal_charts_series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_33__[\"ColumnSeries3DDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColumnSeries3D\", function() { return _internal_charts_series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_33__[\"ColumnSeries3D\"]; });\n\n/* harmony import */ var _internal_charts_series_ConeSeries__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./.internal/charts/series/ConeSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConeSeriesDataItem\", function() { return _internal_charts_series_ConeSeries__WEBPACK_IMPORTED_MODULE_34__[\"ConeSeriesDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConeSeries\", function() { return _internal_charts_series_ConeSeries__WEBPACK_IMPORTED_MODULE_34__[\"ConeSeries\"]; });\n\n/* harmony import */ var _internal_charts_series_CurvedColumnSeries__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./.internal/charts/series/CurvedColumnSeries */ \"./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CurvedColumnSeries\", function() { return _internal_charts_series_CurvedColumnSeries__WEBPACK_IMPORTED_MODULE_35__[\"CurvedColumnSeries\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CurvedColumnSeriesDataItem\", function() { return _internal_charts_series_CurvedColumnSeries__WEBPACK_IMPORTED_MODULE_35__[\"CurvedColumnSeriesDataItem\"]; });\n\n/* harmony import */ var _internal_charts_axes_Axis__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./.internal/charts/axes/Axis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisDataItem\", function() { return _internal_charts_axes_Axis__WEBPACK_IMPORTED_MODULE_36__[\"AxisDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Axis\", function() { return _internal_charts_axes_Axis__WEBPACK_IMPORTED_MODULE_36__[\"Axis\"]; });\n\n/* harmony import */ var _internal_charts_axes_Grid__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./.internal/charts/axes/Grid */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Grid\", function() { return _internal_charts_axes_Grid__WEBPACK_IMPORTED_MODULE_37__[\"Grid\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisTick__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./.internal/charts/axes/AxisTick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisTick\", function() { return _internal_charts_axes_AxisTick__WEBPACK_IMPORTED_MODULE_38__[\"AxisTick\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisLabel__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./.internal/charts/axes/AxisLabel */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisLabel\", function() { return _internal_charts_axes_AxisLabel__WEBPACK_IMPORTED_MODULE_39__[\"AxisLabel\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisLine__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./.internal/charts/axes/AxisLine */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisLine\", function() { return _internal_charts_axes_AxisLine__WEBPACK_IMPORTED_MODULE_40__[\"AxisLine\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisFill__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./.internal/charts/axes/AxisFill */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisFill\", function() { return _internal_charts_axes_AxisFill__WEBPACK_IMPORTED_MODULE_41__[\"AxisFill\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRenderer__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRenderer */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRenderer\", function() { return _internal_charts_axes_AxisRenderer__WEBPACK_IMPORTED_MODULE_42__[\"AxisRenderer\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisBreak__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./.internal/charts/axes/AxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisBreak\", function() { return _internal_charts_axes_AxisBreak__WEBPACK_IMPORTED_MODULE_43__[\"AxisBreak\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisBullet__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./.internal/charts/axes/AxisBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisBullet\", function() { return _internal_charts_axes_AxisBullet__WEBPACK_IMPORTED_MODULE_44__[\"AxisBullet\"]; });\n\n/* harmony import */ var _internal_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./.internal/charts/axes/ValueAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ValueAxisDataItem\", function() { return _internal_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_45__[\"ValueAxisDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ValueAxis\", function() { return _internal_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_45__[\"ValueAxis\"]; });\n\n/* harmony import */ var _internal_charts_axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./.internal/charts/axes/CategoryAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CategoryAxisDataItem\", function() { return _internal_charts_axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_46__[\"CategoryAxisDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CategoryAxis\", function() { return _internal_charts_axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_46__[\"CategoryAxis\"]; });\n\n/* harmony import */ var _internal_charts_axes_CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./.internal/charts/axes/CategoryAxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CategoryAxisBreak\", function() { return _internal_charts_axes_CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_47__[\"CategoryAxisBreak\"]; });\n\n/* harmony import */ var _internal_charts_axes_DateAxis__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./.internal/charts/axes/DateAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DateAxisDataItem\", function() { return _internal_charts_axes_DateAxis__WEBPACK_IMPORTED_MODULE_48__[\"DateAxisDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DateAxis\", function() { return _internal_charts_axes_DateAxis__WEBPACK_IMPORTED_MODULE_48__[\"DateAxis\"]; });\n\n/* harmony import */ var _internal_charts_axes_DurationAxis__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./.internal/charts/axes/DurationAxis */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DurationAxisDataItem\", function() { return _internal_charts_axes_DurationAxis__WEBPACK_IMPORTED_MODULE_49__[\"DurationAxisDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DurationAxis\", function() { return _internal_charts_axes_DurationAxis__WEBPACK_IMPORTED_MODULE_49__[\"DurationAxis\"]; });\n\n/* harmony import */ var _internal_charts_axes_DateAxisBreak__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./.internal/charts/axes/DateAxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DateAxisBreak\", function() { return _internal_charts_axes_DateAxisBreak__WEBPACK_IMPORTED_MODULE_50__[\"DateAxisBreak\"]; });\n\n/* harmony import */ var _internal_charts_axes_ValueAxisBreak__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./.internal/charts/axes/ValueAxisBreak */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ValueAxisBreak\", function() { return _internal_charts_axes_ValueAxisBreak__WEBPACK_IMPORTED_MODULE_51__[\"ValueAxisBreak\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererX */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererX\", function() { return _internal_charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_52__[\"AxisRendererX\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererY */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererY\", function() { return _internal_charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_53__[\"AxisRendererY\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererRadial */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererRadial\", function() { return _internal_charts_axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_54__[\"AxisRendererRadial\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./.internal/charts/axes/AxisLabelCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisLabelCircular\", function() { return _internal_charts_axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_55__[\"AxisLabelCircular\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererCircular\", function() { return _internal_charts_axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_56__[\"AxisRendererCircular\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisFillCircular__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./.internal/charts/axes/AxisFillCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisFillCircular\", function() { return _internal_charts_axes_AxisFillCircular__WEBPACK_IMPORTED_MODULE_57__[\"AxisFillCircular\"]; });\n\n/* harmony import */ var _internal_charts_axes_GridCircular__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./.internal/charts/axes/GridCircular */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GridCircular\", function() { return _internal_charts_axes_GridCircular__WEBPACK_IMPORTED_MODULE_58__[\"GridCircular\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererX3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererX3D\", function() { return _internal_charts_axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_59__[\"AxisRendererX3D\"]; });\n\n/* harmony import */ var _internal_charts_axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererY3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AxisRendererY3D\", function() { return _internal_charts_axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_60__[\"AxisRendererY3D\"]; });\n\n/* harmony import */ var _internal_charts_elements_Tick__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./.internal/charts/elements/Tick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Tick\", function() { return _internal_charts_elements_Tick__WEBPACK_IMPORTED_MODULE_61__[\"Tick\"]; });\n\n/* harmony import */ var _internal_charts_elements_Bullet__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./.internal/charts/elements/Bullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Bullet\", function() { return _internal_charts_elements_Bullet__WEBPACK_IMPORTED_MODULE_62__[\"Bullet\"]; });\n\n/* harmony import */ var _internal_charts_elements_LabelBullet__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./.internal/charts/elements/LabelBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LabelBullet\", function() { return _internal_charts_elements_LabelBullet__WEBPACK_IMPORTED_MODULE_63__[\"LabelBullet\"]; });\n\n/* harmony import */ var _internal_charts_elements_CircleBullet__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./.internal/charts/elements/CircleBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CircleBullet\", function() { return _internal_charts_elements_CircleBullet__WEBPACK_IMPORTED_MODULE_64__[\"CircleBullet\"]; });\n\n/* harmony import */ var _internal_charts_elements_ErrorBullet__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./.internal/charts/elements/ErrorBullet */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ErrorBullet\", function() { return _internal_charts_elements_ErrorBullet__WEBPACK_IMPORTED_MODULE_65__[\"ErrorBullet\"]; });\n\n/* harmony import */ var _internal_charts_elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./.internal/charts/elements/XYChartScrollbar */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYChartScrollbar\", function() { return _internal_charts_elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_66__[\"XYChartScrollbar\"]; });\n\n/* harmony import */ var _internal_charts_elements_ClockHand__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./.internal/charts/elements/ClockHand */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ClockHand\", function() { return _internal_charts_elements_ClockHand__WEBPACK_IMPORTED_MODULE_67__[\"ClockHand\"]; });\n\n/* harmony import */ var _internal_charts_elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./.internal/charts/elements/FlowDiagramNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagramNode\", function() { return _internal_charts_elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_68__[\"FlowDiagramNode\"]; });\n\n/* harmony import */ var _internal_charts_elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./.internal/charts/elements/FlowDiagramLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FlowDiagramLink\", function() { return _internal_charts_elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_69__[\"FlowDiagramLink\"]; });\n\n/* harmony import */ var _internal_charts_elements_SankeyNode__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./.internal/charts/elements/SankeyNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SankeyNode\", function() { return _internal_charts_elements_SankeyNode__WEBPACK_IMPORTED_MODULE_70__[\"SankeyNode\"]; });\n\n/* harmony import */ var _internal_charts_elements_SankeyLink__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./.internal/charts/elements/SankeyLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SankeyLink\", function() { return _internal_charts_elements_SankeyLink__WEBPACK_IMPORTED_MODULE_71__[\"SankeyLink\"]; });\n\n/* harmony import */ var _internal_charts_elements_ChordNode__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./.internal/charts/elements/ChordNode */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChordNode\", function() { return _internal_charts_elements_ChordNode__WEBPACK_IMPORTED_MODULE_72__[\"ChordNode\"]; });\n\n/* harmony import */ var _internal_charts_elements_ChordLink__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./.internal/charts/elements/ChordLink */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChordLink\", function() { return _internal_charts_elements_ChordLink__WEBPACK_IMPORTED_MODULE_73__[\"ChordLink\"]; });\n\n/* harmony import */ var _internal_charts_elements_NavigationBar__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./.internal/charts/elements/NavigationBar */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NavigationBarDataItem\", function() { return _internal_charts_elements_NavigationBar__WEBPACK_IMPORTED_MODULE_74__[\"NavigationBarDataItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NavigationBar\", function() { return _internal_charts_elements_NavigationBar__WEBPACK_IMPORTED_MODULE_74__[\"NavigationBar\"]; });\n\n/* harmony import */ var _internal_charts_elements_Column__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./.internal/charts/elements/Column */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Column\", function() { return _internal_charts_elements_Column__WEBPACK_IMPORTED_MODULE_75__[\"Column\"]; });\n\n/* harmony import */ var _internal_charts_elements_Candlestick__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./.internal/charts/elements/Candlestick */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Candlestick\", function() { return _internal_charts_elements_Candlestick__WEBPACK_IMPORTED_MODULE_76__[\"Candlestick\"]; });\n\n/* harmony import */ var _internal_charts_elements_OHLC__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./.internal/charts/elements/OHLC */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OHLC\", function() { return _internal_charts_elements_OHLC__WEBPACK_IMPORTED_MODULE_77__[\"OHLC\"]; });\n\n/* harmony import */ var _internal_charts_elements_RadarColumn__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./.internal/charts/elements/RadarColumn */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarColumn\", function() { return _internal_charts_elements_RadarColumn__WEBPACK_IMPORTED_MODULE_78__[\"RadarColumn\"]; });\n\n/* harmony import */ var _internal_charts_elements_Column3D__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./.internal/charts/elements/Column3D */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Column3D\", function() { return _internal_charts_elements_Column3D__WEBPACK_IMPORTED_MODULE_79__[\"Column3D\"]; });\n\n/* harmony import */ var _internal_charts_elements_ConeColumn__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./.internal/charts/elements/ConeColumn */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConeColumn\", function() { return _internal_charts_elements_ConeColumn__WEBPACK_IMPORTED_MODULE_80__[\"ConeColumn\"]; });\n\n/* harmony import */ var _internal_charts_elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./.internal/charts/elements/CurvedColumn */ \"./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CurvedColumn\", function() { return _internal_charts_elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_81__[\"CurvedColumn\"]; });\n\n/* harmony import */ var _internal_charts_cursors_XYCursor__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./.internal/charts/cursors/XYCursor */ \"./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"XYCursor\", function() { return _internal_charts_cursors_XYCursor__WEBPACK_IMPORTED_MODULE_82__[\"XYCursor\"]; });\n\n/* harmony import */ var _internal_charts_cursors_Cursor__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./.internal/charts/cursors/Cursor */ \"./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cursor\", function() { return _internal_charts_cursors_Cursor__WEBPACK_IMPORTED_MODULE_83__[\"Cursor\"]; });\n\n/* harmony import */ var _internal_charts_cursors_RadarCursor__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./.internal/charts/cursors/RadarCursor */ \"./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadarCursor\", function() { return _internal_charts_cursors_RadarCursor__WEBPACK_IMPORTED_MODULE_84__[\"RadarCursor\"]; });\n\n/**\r\n * Module: gauge\r\n */\r\n/**\r\n * Elements: types\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Elements: charts\r\n */\r\n\r\n\r\n\r\n/**\r\n * Elements: series\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Elements: axes\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Elements: elements\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Elements: cursors\r\n */\r\n\r\n\r\n\r\n//# sourceMappingURL=charts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@amcharts/amcharts4/charts.js\n");

/***/ })

}]);